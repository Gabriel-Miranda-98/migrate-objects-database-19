
  CREATE OR REPLACE EDITIONABLE TRIGGER "ARTERH"."TR_RHPONT_PL_SIT_OCOR" 
BEFORE INSERT OR UPDATE OR DELETE ON "ARTERH"."RHPONT_PL_SIT_OCOR"
FOR EACH ROW
 DECLARE
v_DML SUGESP_RHPONT_PLSITOCOR_AUDITO.TIPO_DML%TYPE;
  vID NUMBER;
	vTIPO_DML CHAR(1 BYTE);
	vCODIGO_EMPRESA VARCHAR2(4 BYTE);
	vTIPO_CONTRATO VARCHAR2(4 BYTE);
	vCODIGO_CONTRATO VARCHAR2(15 BYTE);
	vDATA DATE;
	vCODIGO_SITUACAO VARCHAR2(4 BYTE);
	vNEW_REF_HORAS NUMBER;
	vOLD_REF_HORAS NUMBER;
	vNEW_CTRL_SITUACAO VARCHAR2(1 BYTE);
	vOLD_CTRL_SITUACAO VARCHAR2(1 BYTE);
	vNEW_COD_NOVA_SITUACAO VARCHAR2(4 BYTE);
	vOLD_COD_NOVA_SITUACAO VARCHAR2(4 BYTE);
	vNEW_REF_HORAS_NOVA_SIT NUMBER;
	vOLD_REF_HORAS_NOVA_SIT NUMBER;
	vNEW_MOTIVO_HISTORICO VARCHAR2(4 BYTE);
	vOLD_MOTIVO_HISTORICO VARCHAR2(4 BYTE);
	vNEW_CTRL_OCORRENCIA VARCHAR2(1 BYTE);
	vOLD_CTRL_OCORRENCIA VARCHAR2(1 BYTE);
	vNEW_DATA_INICIO_OCORRE DATE;
	vOLD_DATA_INICIO_OCORRE DATE;
	vNEW_DATA_TERMINO_OCORR DATE;
	vOLD_DATA_TERMINO_OCORR DATE;
	vDT_ULT_ALTER_USUA DATE;

    vLOGIN_USUARIO_NEW VARCHAR2(40);
    vLOGIN_USUARIO_OLD VARCHAR2(40);
    vLOGIN_OS_NEW VARCHAR2(40);
    vLOGIN_OS_OLD VARCHAR2(40);
    vLOGIN_NEW VARCHAR2(40);
    vLOGIN_OLD VARCHAR2(40);

vULT_ID number;

BEGIN
--POPULA VARIAVEIS
vULT_ID := 0;

vID := 0;
	vTIPO_DML := null ;
	vCODIGO_EMPRESA := null ;
	vTIPO_CONTRATO := null ;
	vCODIGO_CONTRATO := null ;
	vDATA := null ;
	vCODIGO_SITUACAO := null ;
	vNEW_REF_HORAS := 0;
	vOLD_REF_HORAS := 0;
	vNEW_CTRL_SITUACAO := null ;
	vOLD_CTRL_SITUACAO := null ;
	vNEW_COD_NOVA_SITUACAO := null ;
	vOLD_COD_NOVA_SITUACAO := null ;
	vNEW_REF_HORAS_NOVA_SIT := 0;
	vOLD_REF_HORAS_NOVA_SIT := 0;
	vNEW_MOTIVO_HISTORICO := null ;
	vOLD_MOTIVO_HISTORICO := null ;
	vNEW_CTRL_OCORRENCIA := null ;
	vOLD_CTRL_OCORRENCIA := null ;
	vNEW_DATA_INICIO_OCORRE := null ;
	vOLD_DATA_INICIO_OCORRE := null ;
	vNEW_DATA_TERMINO_OCORR := null ;
	vOLD_DATA_TERMINO_OCORR := null ;
	vDT_ULT_ALTER_USUA := null ;

    vLOGIN_USUARIO_NEW := :NEW.LOGIN_USUARIO;
    vLOGIN_USUARIO_OLD := :OLD.LOGIN_USUARIO;
    vLOGIN_OS_NEW := SYS_CONTEXT ('USERENV', 'OS_USER');
    vLOGIN_OS_OLD := SYS_CONTEXT ('USERENV', 'OS_USER');
    vLOGIN_NEW := NULL;
    vLOGIN_OLD := NULL;

--definir login a usar NEW
    IF vLOGIN_USUARIO_NEW = 'ARTERH_UPBH' then
    vLOGIN_NEW := vLOGIN_OS_NEW;
    ELSE
    vLOGIN_NEW := vLOGIN_USUARIO_NEW;
    END IF;
--definir login a usar OLD
    IF vLOGIN_USUARIO_OLD = 'ARTERH_UPBH' then
    vLOGIN_NEW := vLOGIN_OS_OLD;
    ELSE
    vLOGIN_OLD := vLOGIN_USUARIO_OLD;
    END IF;

--------------------------------------------------------------------------INSERT-------------------------------------------------------------------------------------------------------------------------------------------
IF INSERTING THEN
v_DML := 'I';

INSERT INTO SUGESP_RHPONT_PLSITOCOR_AUDITO
(
ID,TIPO_DML, CODIGO_EMPRESA, TIPO_CONTRATO, CODIGO_CONTRATO, DATA, CODIGO_SITUACAO,
NEW_REF_HORAS, NEW_CTRL_SITUACAO,  NEW_COD_NOVA_SITUACAO,  NEW_REF_HORAS_NOVA_SIT, NEW_MOTIVO_HISTORICO,  NEW_CTRL_OCORRENCIA, NEW_DATA_INICIO_OCORRE,  NEW_DATA_TERMINO_OCORR,
LOGIN_USUARIO, DT_ULT_ALTER_USUA, LOGIN_OS
)
VALUES
(
SEQUENCE_PLSITOCOR.NEXTVAL,
v_DML,
:NEW.CODIGO_EMPRESA,
:NEW.TIPO_CONTRATO,
:NEW.CODIGO_CONTRATO,
:NEW.DATA,
:NEW.CODIGO_SITUACAO,

:NEW.REF_HORAS, :NEW.CTRL_SITUACAO, :NEW.COD_NOVA_SITUACAO,  :NEW.REF_HORAS_NOVA_SIT, :NEW.MOTIVO_HISTORICO, :NEW.CTRL_OCORRENCIA,  :NEW.DATA_INICIO_OCORRE, :NEW.DATA_TERMINO_OCORR,

:NEW.LOGIN_USUARIO,
SYSDATE,
SYS_CONTEXT ('USERENV', 'OS_USER')
);

--------------------------------------------------------------------------UPDATE-------------------------------------------------------------------------------------------------------------------------------------------
ELSIF UPDATING THEN
v_DML := 'U';

INSERT INTO SUGESP_RHPONT_PLSITOCOR_AUDITO
(
ID,TIPO_DML, CODIGO_EMPRESA, TIPO_CONTRATO, CODIGO_CONTRATO, DATA, CODIGO_SITUACAO,
NEW_REF_HORAS, OLD_REF_HORAS, NEW_CTRL_SITUACAO, OLD_CTRL_SITUACAO, NEW_COD_NOVA_SITUACAO, OLD_COD_NOVA_SITUACAO,
NEW_REF_HORAS_NOVA_SIT,OLD_REF_HORAS_NOVA_SIT, NEW_MOTIVO_HISTORICO, OLD_MOTIVO_HISTORICO, NEW_CTRL_OCORRENCIA, OLD_CTRL_OCORRENCIA,
NEW_DATA_INICIO_OCORRE, OLD_DATA_INICIO_OCORRE, NEW_DATA_TERMINO_OCORR, OLD_DATA_TERMINO_OCORR,
LOGIN_USUARIO, DT_ULT_ALTER_USUA, LOGIN_OS
)
VALUES
(
SEQUENCE_PLSITOCOR.NEXTVAL,
v_DML,
:NEW.CODIGO_EMPRESA,
:NEW.TIPO_CONTRATO,
:NEW.CODIGO_CONTRATO,
:NEW.DATA,
:NEW.CODIGO_SITUACAO,

:NEW.REF_HORAS, :OLD.REF_HORAS, :NEW.CTRL_SITUACAO, :OLD.CTRL_SITUACAO, :NEW.COD_NOVA_SITUACAO, :OLD.COD_NOVA_SITUACAO,
:NEW.REF_HORAS_NOVA_SIT, :OLD.REF_HORAS_NOVA_SIT, :NEW.MOTIVO_HISTORICO, :OLD.MOTIVO_HISTORICO, :NEW.CTRL_OCORRENCIA, :OLD.CTRL_OCORRENCIA,
:NEW.DATA_INICIO_OCORRE, :OLD.DATA_INICIO_OCORRE, :NEW.DATA_TERMINO_OCORR, :OLD.DATA_TERMINO_OCORR,

:NEW.LOGIN_USUARIO,
SYSDATE,
SYS_CONTEXT ('USERENV', 'OS_USER')
);

--------------------------------------------------------------------------DELETE-------------------------------------------------------------------------------------------------------------------------------------------
ELSIF DELETING THEN
v_DML := 'D';


INSERT INTO SUGESP_RHPONT_PLSITOCOR_AUDITO
(
ID, TIPO_DML, CODIGO_EMPRESA, TIPO_CONTRATO, CODIGO_CONTRATO, DATA, CODIGO_SITUACAO,
OLD_REF_HORAS, OLD_CTRL_SITUACAO, OLD_COD_NOVA_SITUACAO, OLD_REF_HORAS_NOVA_SIT, OLD_MOTIVO_HISTORICO, OLD_CTRL_OCORRENCIA, OLD_DATA_INICIO_OCORRE, OLD_DATA_TERMINO_OCORR,
LOGIN_USUARIO, DT_ULT_ALTER_USUA, LOGIN_OS
)
VALUES
(
SEQUENCE_PLSITOCOR.NEXTVAL,
v_DML,
:OLD.CODIGO_EMPRESA,
:OLD.TIPO_CONTRATO,
:OLD.CODIGO_CONTRATO,
:OLD.DATA,
:OLD.CODIGO_SITUACAO,

:OLD.REF_HORAS, :OLD.CTRL_SITUACAO, :OLD.COD_NOVA_SITUACAO, :OLD.REF_HORAS_NOVA_SIT, :OLD.MOTIVO_HISTORICO, :OLD.CTRL_OCORRENCIA, :OLD.DATA_INICIO_OCORRE, :OLD.DATA_TERMINO_OCORR,

USER,
SYSDATE,
SYS_CONTEXT ('USERENV', 'OS_USER')
);


END IF; --FIM IF PARA SABER SE Ã‰ INSERT, UPDATE ou DELETE



--------------------------------------------------------------------------------CHAMAR PROCEDURE
select ID into vULT_ID FROM ARTERH.SUGESP_RHPONT_PLSITOCOR_AUDITO WHERE ID =(SELECT MAX(ID) FROM ARTERH.SUGESP_RHPONT_PLSITOCOR_AUDITO);
PR_RHPONT_PL_SIT_OCOR( vULT_ID);
--------------------------------------------------------------------------------CHAMAR PROCEDURE



END; --FIM TRIGGER




ALTER TRIGGER "ARTERH"."TR_RHPONT_PL_SIT_OCOR" ENABLE