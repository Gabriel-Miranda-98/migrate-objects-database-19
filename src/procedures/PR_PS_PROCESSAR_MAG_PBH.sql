
  CREATE OR REPLACE EDITIONABLE PROCEDURE "ARTERH"."PR_PS_PROCESSAR_MAG_PBH" (
    PCODIGO_EMPRESA CHAR,
    PTIPO_CONTRATO  CHAR,
    PID_ARQUIVO     NUMBER,
    PACAO           NUMBER )
AS
  /*AUTOR MARCOS pb003529
  VERSÃO: 1.0
  DATA: 01/02/2023
  OBJETIVO: CARREGAR ARQUIVOS CONTENDO DADOS
  DE SERVIDORES QUE POSSUEM PREVIDÊNCIA
  COMPLEMENTAR, ATRAVEZ DO ARTERH PARA A TABELA DE CONCESSÃO.
  */
  vRETORNO RETORNO_PROCESSAMENTO := RETORNO_PROCESSAMENTO(NULL,NULL,NULL);
  REG_LOG LOG_PROCESSAMENTO;
  vLISTA_LOG LISTA_LOG := LISTA_LOG(NULL,NULL,NULL);
  REG_PBH_CS RHPBH_PS_MAG%ROWTYPE;
  vQTDE_LINHAS_AFETADAS               NUMBER;
  v_OBSERVACAO                        VARCHAR2(100);
  ARQUIVO_MAG_PBH                     CONSTANT CHAR(4) := '0006';
  STATUS_CARREGADO                    CONSTANT NUMBER  := 0;
  STATUS_VALIDADO                     CONSTANT NUMBER  := 1;
  STATUS_INVALIDADO                   CONSTANT NUMBER  := 2;
  STATUS_PROCESSADO                   CONSTANT NUMBER  := 3;
  STATUS_EFETIVADO                    CONSTANT NUMBER  := 4;
  TIPO_LOG_SUCESSO                    CONSTANT NUMBER  := 0;
  TIPO_LOG_INFO                       CONSTANT NUMBER  := 1;
  TIPO_LOG_ALERTA                     CONSTANT NUMBER  := 2;
  TIPO_LOG_ERRO                       CONSTANT NUMBER  := 99;
  TIPO_LOG_PROCESSAMENTO              CONSTANT NUMBER  := 50;
  CODIGO_LOG_PROCESSAMENTO_02         CONSTANT CHAR(4) := 'P002';
  CODIGO_LOG_PROCESSAMENTO_03         CONSTANT CHAR(4) := 'P003';
  CODIGO_LOG_PROCESSAMENTO_04         CONSTANT CHAR(4) := 'P004';
  CODIGO_LOG_PROCESSAMENTO_05         CONSTANT CHAR(4) := 'P005';
  CODIGO_LOG_PROCESSAMENTO_06         CONSTANT CHAR(4) := 'P006';
  CODIGO_LOG_PROCESSAMENTO_07         CONSTANT CHAR(4) := 'P007';
  CODIGO_LOG_PROCESSAMENTO_50         CONSTANT CHAR(4) := 'P050';
  CATEGORIA_LOG_VALIDACAO             CONSTANT NUMBER  := 0;
  CATEGORIA_LOG_EXECUCAO              CONSTANT NUMBER  := 1;
  CATEGORIA_LOG_LEIAUTE               CONSTANT NUMBER  := 2;
  CATEGORIA_LOG_REGRAS                CONSTANT NUMBER  := 3;
  CATEGORIA_LOG_EFETIVACAO            CONSTANT NUMBER  := 4;
  ERRO_AO_TENTAR_RECUPERAR_DADO       EXCEPTION;
  ERRO_GENERICO                       EXCEPTION;
  RET_ENCONTRADO                      CONSTANT NUMBER      := 0;
  RET_NAO_ENCONTRADO                  CONSTANT NUMBER      := 97;
  RET_MAIS_DE_UM_REGISTRO             CONSTANT NUMBER      := 98;
  RET_ERRO                            CONSTANT NUMBER      := 99;
  vCODIGO_FORNECEDOR                  CONSTANT CHAR(15)    := '000000000005224';
  vCODIGO_BENEFICIO                   CONSTANT CHAR(15)    :='000000000000050';
  vPERCENT_BASE_INICIAL               CONSTANT NUMBER(15,2):= 0.50;
  vPERCENT_BASE_FINAL                 CONSTANT NUMBER(15,2):= 8.50;
  vUSUARIO                            VARCHAR2(40)         := 'IMPORT_PC';
  vCONTADOR                           NUMBER;
  vTIPO_ARQUIVO                       CHAR(4);
  vDATA_CONCESSAO                     DATE;
  vIS_TESTE                           BOOLEAN;
  vSITUACAO_PROCESSAMENTO             CHAR(2);
  vCODIGO_EMPRESA                     CHAR(4);
  vID_ARQUIVO                         NUMBER;
  vSITUACAO_ARQUIVO                   CHAR(2);
  vANO_MES_REFERENCIA                 DATE;
  vCATEGORIA_LOG                      NUMBER;
  vTIPO_LOG                           NUMBER;
  vADE_NUMERO_MAP                     NUMBER;
  vCPF_VALIDO                         BOOLEAN;
  VCPF_EXISTENTE                      NUMBER;
  NENHUM_ARQUIVO_PROCESSAR            EXCEPTION;
  vCODIGO_PESSOA_BENEFICIARIO         CHAR(15);
  vCONTRATO_VINCULO                   CHAR(15);
  vTIPO_RELACIONAMENTO                CHAR(4);
  VCPF_TITULAR                        CHAR(11);
  vIDENTIFICADOR_REGRA                VARCHAR2(30);
  vCONC_CODIGO_BENEFICIARIO           CHAR(15);
  vCONC_CPF_BENEFICIARIO              CHAR(11);
  vPERCENT_FACULTATIVO                NUMBER(15,2);
  vPERCENT_PATROCINADO                NUMBER(15,2);
  vPERCENT_PATROCINADOR               NUMBER(15,2);
  vVALOR_APORTE_OPCIONAL              NUMBER(15,2);
  vPERCENT_PATROCINADOR               NUMBER(15,2);
  vCONC_DATA_NASC_BENEFICIARIO        DATE;
  vCONC_IDADE_BENEFICIARIO            NUMBER;
  vCONC_CODIGO_CONTRATO               CHAR(15);
  vCONC_CODIGO_BENEFICIO              CHAR(15);
  vCONC_DATA_CONCESSAO                DATE;
  vCONC_DATA_CANCELAMENTO             DATE;
  vCONC_CATEGORIA_BENEFICIARIO        CHAR(4);
  vJA_POSSUI_PREVIDENCIA_COMPLEMENTAR NUMBER;
  vJA_POSSUI_APORTE_OPCIONAL          NUMBER;
  vHOUVE_ALTERACAO_DADOS              BOOLEAN;
  /*
  123456789012345678901234567890
  */
  LOG_CODIGO_EMPRESA_INVALIDO    CONSTANT CHAR(4) := 'E001';
  LOG_CODIGO_CONTRATO_INVALIDO   CONSTANT CHAR(4) := 'E002';
  LOG_ANO_MES_REF_NAO_RELAC      CONSTANT CHAR(4) := 'E008';
  LOG_CPF_NAO_ENCONTRADO         CONSTANT CHAR(4) := 'E012';
  LOG_CPF_INVALIDO               CONSTANT CHAR(4) := 'E013';
  LOG_DUPLICIDADE_REGISTRO       CONSTANT CHAR(4) := 'E014';
  LOG_CONCESSAO_DUPLICADA        CONSTANT CHAR(4) := 'E023';
  LOG_CONCESSAO_ERRO_RECUPERACAO CONSTANT CHAR(4) := 'E024';
  LOG_REGISTRO_JA_EXISTENTE      CONSTANT CHAR(4) := 'E025';
  LOG_OPERACAO_INVALIDA          CONSTANT CHAR(4) := 'E033';
  LOG_PS_TITULAR_NAO_ENCONTRADO  CONSTANT CHAR(4) := 'E048';
  LOG_SUCESSO_INCLUSAO           CONSTANT CHAR(4) := 'S001';
  LOG_SUCESSO_ALTERACAO          CONSTANT CHAR(4) := 'S002';
  LOG_SUCESSO_EXCLUSAO           CONSTANT CHAR(4) := 'S003';
  LOG_CONC_VALOR_IGUAL           CONSTANT CHAR(4) := 'M001';
  LOG_CONC_VALOR_MAIOR           CONSTANT CHAR(4) := 'M002';
  LOG_CONC_VALOR_MENOR           CONSTANT CHAR(4) := 'M003';
  LOG_CONC_APORTE_OPCIONAL       CONSTANT CHAR(4) := 'M004';
  LOG_CONC_PERCENT_MENOR         CONSTANT CHAR(4) := 'M005';
  LOG_CONC_PERCENT_MAIOR         CONSTANT CHAR(4) := 'M006';
  LOG_CONC_SEM_ALTERACAO         CONSTANT CHAR(4) := 'M007';
  LOG_PERC_PATROCINADO_PERMITIDO CONSTANT CHAR(4) := 'M008';
  LOG_PERC_PATROCINADO_MAIOR     CONSTANT CHAR(4) := 'M009';
  LOG_PERC_PATROCINADO_MENOR     CONSTANT CHAR(4) := 'M010';
  LOG_PERC_FACULTATIVO_PERMITIDO CONSTANT CHAR(4) := 'M011';
  LOG_PERC_FACULTATIVO_MAIOR     CONSTANT CHAR(4) := 'M012';
  LOG_PERC_FACULTATIVO_MENOR     CONSTANT CHAR(4) := 'M013';
  LOG_DUPLA_INSERCAO             CONSTANT CHAR(4) := 'M014';
  LOG_TIPO_PATROCINADO           CONSTANT CHAR(4) := 'M015';
  LOG_TIPO_FACULTATIVO           CONSTANT CHAR(4) := 'M016';
  LOG_ANO_MES_VALIDADO           CONSTANT CHAR(4) := 'M017';
  LOG_CARGO_EFETIVO_VALIDO       CONSTANT CHAR(4) := 'M018';
  LOG_CARGO_EFETIVO_INVALIDO     CONSTANT CHAR(4) := 'M019';
  LOG_VALORES_ZERADOS            CONSTANT CHAR(4) := 'M020';

  PROCEDURE REGISTRA_LOG(
      TipoLog      IN NUMBER,
      Numero_linha IN NUMBER,
      DescricaoLog IN VARCHAR2,
      DetalheLog   IN VARCHAR2)
  AS
  BEGIN
    REG_LOG.TIPO_LOG      := TipoLog;
    REG_LOG.DESCRICAO_LOG := DescricaoLog;
    REG_LOG.DETALHE_LOG   := DetalheLog;
    vLISTA_LOG.Extend;
    vLISTA_LOG(vLISTA_LOG.count) := REG_LOG;
  END;
  PROCEDURE GRAVA_LOG(
      CodigoEmpresa IN CHAR,
      CategoriaLog  IN NUMBER,
      TipoLog       IN NUMBER,
      IdArquivo     IN NUMBER,
      Numero_linha  IN NUMBER,
      CodigoLog     IN CHAR,
      DetalheLog    IN VARCHAR2)
  AS
  BEGIN
    BEGIN
      INSERT
      INTO RHPBH_ARQUIVO_LOG
        (
          ID_LOG,
          DATA_LOG,
          CATEGORIA,
          TIPO,
          ID_ARQUIVO,
          NUMERO_LINHA,
          CODIGO_LOG,
          DETALHE,
          CODIGO_EMPRESA
        )
        VALUES
        (
          SQ_RHPBH_PS_IMPORTACAO_LOG.NEXTVAL,
          sysdate,
          CategoriaLog,
          TipoLog,
          IdArquivo,
          Numero_linha,
          CodigoLog,
          DetalheLog,
          CodigoEmpresa
        );
      COMMIT;
    EXCEPTION
    WHEN OTHERS THEN
      dbms_output.put_line('[VALIDACAO_REGRAS] - OCORREU UMA EXCECAO AO TENTAR GRAVAR LOG. ENTRE EM CONTATO COM A EQUIPE DE SUPORTE DA PBH.' || 'ENCONTRADO ERRO - '||SQLCODE||' -ERROR- '||SQLERRM);
    END;
  END;
  PROCEDURE PR_CONTROLE_PROCESSAMENTO
    (
      CODIGO_EMPRESA         IN CHAR,
      ID_ARQUIVO             IN NUMBER,
      SITUACAO_PROCESSAMENTO IN CHAR,
      POBSERVACAO            IN VARCHAR2 DEFAULT NULL
    )
  AS
  BEGIN
    PR_GRAVA_LOG_PROCESSA_ARQUIVO(CODIGO_EMPRESA, ID_ARQUIVO, SITUACAO_PROCESSAMENTO, POBSERVACAO);
  END;
  PROCEDURE PR_SET_SITUACAO_PROCESSAMENTO
    (
      PSITUACAO_PROCESSAMENTO IN CHAR
    )
  AS
  BEGIN
    IF PSITUACAO_PROCESSAMENTO IS NULL THEN
      raise_application_error (-20001,'ERRO NO CONTROLE DE PROCESSAMENTO. SITUACAO NULA.');
    END IF;
    IF PSITUACAO_PROCESSAMENTO NOT IN ('00','01','02','03','04','05','06','07') THEN
      raise_application_error (     -20001,'ERRO NO CONTROLE DE PROCESSAMENTO. SITUACAO INVALIDA.');
    END IF;
    vSITUACAO_PROCESSAMENTO := PSITUACAO_PROCESSAMENTO;
  END;
  PROCEDURE PR_ATUALIZAR_SITUACAO_REGISTR0
  AS
  BEGIN
    BEGIN
      UPDATE RHPBH_ARQUIVO_LINHA AL
      SET SITUACAO     = 99
      WHERE ID_ARQUIVO = PID_ARQUIVO
      AND EXISTS
        (SELECT *
        FROM RHPBH_ARQUIVO_LOG
        WHERE ID_ARQUIVO = AL.ID_ARQUIVO
        AND NUMERO_LINHA = AL.NUMERO_LINHA
        AND TIPO         = 99
        );
      COMMIT;
    EXCEPTION
    WHEN OTHERS THEN
      raise_application_error (-20002,'[VALIDACAO_REGRAS] - OCORREU UMA EXCECAO AO TENTAR ATUALIZAR A SITUACAO DOS REGISTROS VALIDADOS. ENTRE EM CONTATO COM A EQUIPE DE SUPORTE DA PBH.' || 'ENCONTRADO ERRO - '||SQLCODE||' -ERROR- '||SQLERRM);
    END;
  END;
  FUNCTION CANCELAR_CONCESSAO(
      vCODIGO_EMPRESA             IN CHAR,
      vTIPO_CONTRATO              IN CHAR,
      vCODIGO_CONTRATO            IN CHAR,
      vCODIGO_PESSOA_BENEFICIARIO IN CHAR,
      vCODIGO_BENEFICIO           IN CHAR,
      vCATEGORIA_BENEFICIO        IN CHAR,
      vDATA_CANCELAMENTO          IN DATE,
      vDATA_CONCESSAO             IN DATE,
      vOBSERVACAO                 IN VARCHAR2)
    RETURN NUMBER
  IS
    vQTDE_LINHAS_AFETADAS NUMBER;
  BEGIN
    vQTDE_LINHAS_AFETADAS := 0;
    BEGIN
      -- CANCELAMENTO DE BENEFICIO MAG
      UPDATE RHBENF_CONCESSOES
      SET --DATA_CANCELAMENTO  = LAST_DAY(TO_DATE(vDATA_CONCESSAO,'DD/MM/YYYY')),
        DATA_CANCELAMENTO    = vDATA_CANCELAMENTO,
        TEXTO_ASSOCIADO      = vOBSERVACAO,
        LOGIN_USUARIO        = vUSUARIO,
        DT_ULT_ALTER_USUA    = sysdate
      WHERE CODIGO_EMPRESA   = vCODIGO_EMPRESA
      AND TIPO_CONTRATO      = vTIPO_CONTRATO
      AND CODIGO_CONTRATO    = vCODIGO_CONTRATO
      AND CODIGO_BENEFIC     = vCODIGO_PESSOA_BENEFICIARIO
      AND CODIGO_BENEFICIO   = vCODIGO_BENEFICIO
      AND CATEGORIA_BENEF    = vCATEGORIA_BENEFICIO
      AND DATA_CONCESSAO     = vDATA_CONCESSAO
      AND DATA_CANCELAMENTO IS NULL;
      vQTDE_LINHAS_AFETADAS := sql%rowcount;
    EXCEPTION
    WHEN OTHERS THEN
      raise_application_error (-20002,'[VALIDACAO_REGRAS] - OCORREU UMA EXCECAO AO TENTAR ATUALIZAR A SITUACAO DOS REGISTROS VALIDADOS. ENTRE EM CONTATO COM A EQUIPE DE SUPORTE DA PBH.' || 'ENCONTRADO ERRO - '||SQLCODE||' -ERROR- '||SQLERRM || vCODIGO_EMPRESA || vTIPO_CONTRATO || vCODIGO_CONTRATO || vCODIGO_PESSOA_BENEFICIARIO || vCODIGO_BENEFICIO||vDATA_CONCESSAO);
    END;
    RETURN vQTDE_LINHAS_AFETADAS;
  END;
  FUNCTION INCLUIR_CONCESSAO(
      var RHPBH_PS_MAG%ROWTYPE)
    RETURN NUMBER
  IS
    reg_cs RHBENF_CONCESSOES%ROWTYPE;
    vQTDE_LINHAS_AFETADAS NUMBER;
  BEGIN
    vQTDE_LINHAS_AFETADAS     := 0;
    reg_cs.CODIGO_EMPRESA     := var.CODIGO_EMPRESA;
    reg_cs.TIPO_CONTRATO      := PTIPO_CONTRATO;
    reg_cs.CODIGO_CONTRATO    := var.CODIGO_CONTRATO;
    reg_cs.CODIGO_BENEFIC     := var.Codigo_Pessoa_Beneficiario;
    reg_cs.DATA_CONCESSAO     := var.data_concessao;
    reg_cs.OCORRENCIA         := '';
    reg_cs.CODIGO_BENEFICIO   := var.CODIGO_BENEFICIO;
    reg_cs.CATEGORIA_BENEF    := var.CATEGORIA_BENEFICIO;
    reg_cs.C_LIVRE_DESCR08    := NULL;
    reg_cs.MOTIVO_CONCESSAO   := NULL;
    reg_cs.DATA_CANCELAMENTO  := var.data_cancelamento;
    reg_cs.CODIGO_MOT_CANCEL  := NULL;
    reg_cs.TEXTO_ASSOCIADO    := NULL;
    reg_cs.C_LIVRE_SELEC01    := NULL;
    reg_cs.C_LIVRE_SELEC03    := NULL;
    reg_cs.C_LIVRE_DATA11     := NULL;
    reg_cs.LOGIN_USUARIO      := vUSUARIO;
    reg_cs.DT_ULT_ALTER_USUA  := sysdate;
    reg_cs.C_LIVRE_SELEC02    := 0;
    reg_cs.C_LIVRE_VALOR04    := NULL;
    reg_cs.C_LIVRE_VALOR05    := NULL;
    reg_cs.C_LIVRE_VALOR06    := NULL;
    reg_cs.C_LIVRE_DESCR07    := NULL;
    reg_cs.C_LIVRE_DESCR09    := NULL;
    reg_cs.C_LIVRE_DATA10     := NULL;
    reg_cs.C_LIVRE_DATA12     := NULL;
    reg_cs.PERCENT_PARTICIPAC := var.PERCENT_GRAVACAO;
    reg_cs.VALOR_BENEFICIO    := var.VALOR_GRAVACAO;
    reg_cs.DATA_PAGTO_FOLHA   := NULL;
    reg_cs.DATA_DEPOSITO      := NULL;
    reg_cs.ASSINATURA_01      := NULL;
    reg_cs.ASSINATURA_02      := NULL;
    reg_cs.ASSINATURA_03      := NULL;
    reg_cs.ASSINATURA_04      := NULL;
    reg_cs.C_LIVRE_OPCAO01    := 'N';
    reg_cs.C_LIVRE_OPCAO02    := 'N';
    reg_cs.C_LIVRE_OPCAO03    := 'N';
    reg_cs.NUMERO_PARCELA     := 0;
    reg_cs.CODIGO_DOENCA      := NULL;
    reg_cs.ID_AGRUP           := NULL;
    reg_cs.ID_DIMENSAO        := NULL;
    reg_cs.DT_REF_CONCEC_RETR := NULL;
    reg_cs.DT_REF_CANCEL_RETR := NULL;
    reg_cs.CODIGO_FORNECEDOR  := var.CODIGO_FORNECEDOR;
    reg_cs.MUNICIPIO_ORIGEM   := NULL;
    reg_cs.MUNICIPIO_DESTINO  := NULL;
    reg_cs.IND_SUSPENSAO      := 'N';
    reg_cs.IND_DECISAO_JUD    := 'N';
    BEGIN
      SELECT MAX(OCORRENCIA)
      INTO reg_cs.OCORRENCIA
      FROM RHBENF_CONCESSOES
      WHERE RHBENF_CONCESSOES.CODIGO_EMPRESA = reg_cs.CODIGO_EMPRESA
      AND RHBENF_CONCESSOES.TIPO_CONTRATO    = reg_cs.TIPO_CONTRATO
      AND RHBENF_CONCESSOES.CODIGO_CONTRATO  = reg_cs.CODIGO_CONTRATO
      AND RHBENF_CONCESSOES.CODIGO_BENEFIC   = reg_cs.CODIGO_BENEFIC
      AND RHBENF_CONCESSOES.DATA_CONCESSAO   = reg_cs.DATA_CONCESSAO;
      IF reg_cs.OCORRENCIA                  IS NOT NULL THEN
        reg_cs.OCORRENCIA                   := reg_cs.OCORRENCIA + 1;
      ELSE
        reg_cs.OCORRENCIA := 1;
      END IF;
    EXCEPTION
    WHEN OTHERS THEN
      reg_cs.OCORRENCIA := 1;
    END;
    BEGIN
      INSERT INTO RHBENF_CONCESSOES VALUES reg_cs;
      vQTDE_LINHAS_AFETADAS := sql%rowcount;
      COMMIT;
    EXCEPTION
    WHEN OTHERS THEN
      raise_application_error (-20002,'[VALIDACAO_REGRAS] - OCORREU UMA EXCECAO AO TENTAR ATUALIZAR A SITUACAO DOS REGISTROS VALIDADOS. ENTRE EM CONTATO COM A EQUIPE DE SUPORTE DA PBH.' || 'ENCONTRADO ERRO - '||SQLCODE||' -ERROR- '||SQLERRM);
    END;
    RETURN vQTDE_LINHAS_AFETADAS;
  END;

  /*INICIO*/
BEGIN

  IF PCODIGO_EMPRESA IS NULL THEN
    raise_application_error (-20001,'CODIGO_EMPRESA NAO INFORMADO.');
  END IF;
  BEGIN
    vCODIGO_EMPRESA := NULL;
    SELECT CODIGO
    INTO vCODIGO_EMPRESA
    FROM RHORGA_EMPRESA
    WHERE CODIGO        = PCODIGO_EMPRESA;
    IF vCODIGO_EMPRESA IS NULL THEN
      raise_application_error (-20001,'CODIGO_EMPRESA INVALIDO.');
    END IF;
  EXCEPTION
  WHEN OTHERS THEN
    raise_application_error (-20002,'NAO FOI POSSIVEL RECUPERAR O CODIGO_EMPRESA');
  END;
  BEGIN
    vID_ARQUIVO := NULL;
    SELECT ID_ARQUIVO,
      SITUACAO
    INTO vID_ARQUIVO,
      vSITUACAO_ARQUIVO
    FROM RHPBH_ARQUIVO
    WHERE ID_ARQUIVO = PID_ARQUIVO;
    IF vID_ARQUIVO  IS NULL THEN
      raise_application_error (-20001,'ID ARQUIVO INVALIDO.');
    END IF;
    IF vSITUACAO_ARQUIVO NOT  IN ('00','01','02','03','04','05','06','07') THEN
      raise_application_error (-20001,'O ARQUIVO INFORMADO ESTA COM SITUACAO INVALIDA. ENTRE EM CONTATO COM O SUPORTE TECNICO DA PBH.');
    END IF;
    CASE
    WHEN vSITUACAO_ARQUIVO = '07' THEN
      raise_application_error (-20002,'O ARQUIVO INFORMADO ESTA COM PROCESSAMENTO JÃ¿ CONCLUIDO E NAO PODE SER MAIS PROCESSADO.');
    WHEN vSITUACAO_ARQUIVO = '01' THEN
      raise_application_error (-20002,'O ARQUIVO INFORMADO ESTA CANCELADO E NAO PODE SER MAIS PROCESSADO.');
    WHEN vSITUACAO_ARQUIVO    IN ('02','04','06') THEN
      raise_application_error (-20002,'O ARQUIVO INFORMADO JÃ¿ ESTÃ¿ EM PROCESSAMENTO E NAO PODE HAVER PROCESSAMENTOS COMCOMITANTES PARA O MESMO ARQUIVO.');
    WHEN vSITUACAO_ARQUIVO = '00' THEN
      IF PACAO NOT              IN (1,10) THEN
        raise_application_error (-20002,'A ACAO INFORMADA NAO E COMPATIVEL COM A SITUACAO DO ARQUIVO. O ARQUIVO ESTÃ¿ COM A SITUACAO CARREGADO E AS ACOES PERMITIDA SAO 1 ou 10.');
      END IF;
    WHEN vSITUACAO_ARQUIVO = '03' THEN
      IF PACAO NOT              IN (2,10) THEN
        raise_application_error (-20002,'A ACAO INFORMADA NAO E COMPATIVEL COM A SITUACAO DO ARQUIVO. O ARQUIVO ESTÃ¿ COM A SITUACAO VALIDACAO DE LEIAUTE PROCESSADA E AS ACOES PERMITIDA SAO 2 ou 10.');
      END IF;
    WHEN vSITUACAO_ARQUIVO = '05' THEN
      IF PACAO NOT              IN (3,4,10) THEN
        raise_application_error (-20002,'A ACAO INFORMADA NAO E COMPATIVEL COM A SITUACAO DO ARQUIVO. O ARQUIVO ESTÃ¿ COM A SITUACAO PROCESSADO E AS ACOES PERMITIDA SAO 3 ou 10.');
      END IF;
    ELSE
      NULL;
    END CASE;
    PR_SET_SITUACAO_PROCESSAMENTO(vSITUACAO_ARQUIVO);
  EXCEPTION
  WHEN OTHERS THEN
    raise_application_error (-20002,'NAO FOI POSSIVEL RECUPERAR O ARQUIVO COM O ID_ARQUIVO INFORMADO.' || 'ENCONTRADO ERRO - '||SQLCODE||' -ERROR- '||SQLERRM);
  END;
  PR_CONTROLE_PROCESSAMENTO(PCODIGO_EMPRESA, PID_ARQUIVO, vSITUACAO_PROCESSAMENTO, '70');
  /*VERIFICA SE EXISTE ALGUM ARQUIVO_MAG_PBH A SER PROCESSADO */
  BEGIN
    IF PACAO     = 1 THEN
      VCONTADOR := NULL;
      SELECT COUNT(1)
      INTO VCONTADOR
      FROM RHPBH_ARQUIVO
      WHERE CODIGO_EMPRESA = PCODIGO_EMPRESA
      AND TIPO_ARQUIVO     = ARQUIVO_MAG_PBH
      AND ID_ARQUIVO       = PID_ARQUIVO
      AND SITUACAO        IN ('00');
      IF VCONTADOR         = 0 THEN
        raise_application_error (-20002,'NAO EXISTE ARQUIVO_MAG_PBH A SER PROCESSADO PARA OS PARAMETROS INFORMADOS.');
      END IF;
    END IF;
  EXCEPTION
  WHEN OTHERS THEN
    raise_application_error (-20002,'NAO EXISTE ARQUIVO ARQUIVO_MAG_PBH SER PROCESSADO PARA OS PARAMETROS INFORMADOS.');
  END;
  PR_CONTROLE_PROCESSAMENTO(PCODIGO_EMPRESA, PID_ARQUIVO, vSITUACAO_PROCESSAMENTO, '71');
  -- VALIDAR LEIAUTE ARQUIVO
  IF PACAO IN (1, 10) THEN
    BEGIN
      FOR C1 IN
      (SELECT *
      FROM RHPBH_ARQUIVO
      WHERE CODIGO_EMPRESA = PCODIGO_EMPRESA
      AND TIPO_ARQUIVO     = ARQUIVO_MAG_PBH
      AND ID_ARQUIVO       = PID_ARQUIVO
      AND SITUACAO        IN ('00')
      ORDER BY ID_ARQUIVO
      )
      LOOP
        PR_SET_SITUACAO_PROCESSAMENTO('02');
        PR_CONTROLE_PROCESSAMENTO(PCODIGO_EMPRESA, PID_ARQUIVO, vSITUACAO_PROCESSAMENTO);
        BEGIN
          PR_VALIDAR_LEIAUTE_ARQUIVO_MAG (C1.ID_ARQUIVO);
        EXCEPTION
        WHEN OTHERS THEN
          raise_application_error (-20002,'ERRO AO TENTAR VALIDAR O LEIAUTE DO ARQUIVO. ' || 'ENCONTRADO ERRO - '||SQLCODE||' -ERROR- '||SQLERRM);
        END;
      END LOOP;
      PR_SET_SITUACAO_PROCESSAMENTO('03');
      PR_CONTROLE_PROCESSAMENTO(PCODIGO_EMPRESA, PID_ARQUIVO, vSITUACAO_PROCESSAMENTO);
      PR_ATUALIZAR_SITUACAO_REGISTR0;
      COMMIT;
    EXCEPTION
    WHEN OTHERS THEN
      raise_application_error (-20002,'NAO FOI POSSIVEL REALIZAR O PROCESSAMENTO DE ARQUIVO_MAG_PBH. ENTRE EM CONTATO COM A EQUIPE DE SUPORTE DA PBH.' || 'ENCONTRADO ERRO - '||SQLCODE||' -ERROR- '||SQLERRM);
    END;
  END IF;
  PR_CONTROLE_PROCESSAMENTO(PCODIGO_EMPRESA, PID_ARQUIVO, vSITUACAO_PROCESSAMENTO, '72');
  IF PACAO IN (2, 10) THEN
    -- PROCESSAR ARQUIVO
    BEGIN
      FOR C1 IN
      (SELECT *
      FROM RHPBH_ARQUIVO
      WHERE CODIGO_EMPRESA = PCODIGO_EMPRESA
      AND TIPO_ARQUIVO     = ARQUIVO_MAG_PBH
      AND ID_ARQUIVO       = PID_ARQUIVO
      AND SITUACAO        IN ('03', '05')
      ORDER BY ID_ARQUIVO
      )
      LOOP
        BEGIN
          PR_SET_SITUACAO_PROCESSAMENTO('04');
          PR_CONTROLE_PROCESSAMENTO(C1.CODIGO_EMPRESA, C1.ID_ARQUIVO, vSITUACAO_PROCESSAMENTO);
          BEGIN
            DELETE FROM ARTERH.RHPBH_PS_MAG WHERE ID_ARQUIVO = C1.ID_ARQUIVO;
          EXCEPTION
          WHEN OTHERS THEN
            NULL;
          END;
          BEGIN
            INSERT
            INTO ARTERH.RHPBH_PS_MAG
              (
                ID_ARQUIVO ,
                NUMERO_LINHA ,
                TIPO_OPERACAO,
                ANO,
                MES_REFERENCIA,
                INDICADOR_EMPRESA,
                CODIGO_EMPRESA,
                CODIGO_CONTRATO,
                CPF,
                TIPO_PARTICIPANTE,
                PERCENT_FACULTATIVO,
                PERCENT_PATROCINADO,
                PERCENT_PATROCINADOR ,
                VALOR_APORTE_OPCIONAL
              )
              (SELECT ID_ARQUIVO,
                  NUMERO_LINHA,
                  '' TIPO_OPERACAO,
                  ANO,
                  MES_REFERENCIA,
                  INDICADOR_EMPRESA,
                  CODIGO_EMPRESA,
                  LPAD(TRIM(CODIGO_CONTRATO),15,'0') AS CODIGO_CONTRATO,
                  CPF_SERVIDOR,
                  TIPO_PARTICIPANTE,
                  PERCENT_FACULTATIVO,
                  PERCENT_PATROCINADO,
                  PERCENT_PATROCINADOR ,
                  VALOR_APORTE_OPCIONAL
                FROM VW_ARQUIVO_0006
                WHERE CODIGO_EMPRESA_ARQUIVO = PCODIGO_EMPRESA
                AND ID_ARQUIVO               = C1.ID_ARQUIVO
                AND SITUACAO_LINHA           = '00'
              );
            COMMIT;
            SELECT MAX(SITUACAO_ARQUIVO)
            INTO VCONTADOR
            FROM
              (SELECT * FROM VW_ARQUIVO_0006
              )
            WHERE CODIGO_EMPRESA_ARQUIVO = PCODIGO_EMPRESA
            AND ID_ARQUIVO               = C1.ID_ARQUIVO;
            SELECT COUNT(1)
            INTO VCONTADOR
            FROM ARTERH.RHPBH_PS_MAG
            WHERE CODIGO_EMPRESA = PCODIGO_EMPRESA
            AND ID_ARQUIVO       = C1.ID_ARQUIVO;
          EXCEPTION
          WHEN OTHERS THEN
            dbms_output.put_line('ERRO AO TENTAR INCLUIR RHPBH_PS_MAG. ' || 'ENCONTRADO ERRO - '||SQLCODE||' -ERROR- '||SQLERRM);
            NULL;
          END;
        EXCEPTION
        WHEN OTHERS THEN
          raise_application_error (-20002,'NAO FOI POSSIVEL REALIZAR O PROCESSAMENTO DE ARQUIVO_MAG_PBH. ENTRE EM CONTATO COM A EQUIPE DE SUPORTE DA PBH.' || 'ENCONTRADO ERRO - '||SQLCODE||' -ERROR- '||SQLERRM);
        END;
        -- Regra 1
        -- Valida codigo da empresa
        FOR R2 IN
        (SELECT *
        FROM ARTERH.RHPBH_PS_MAG CS
        WHERE ID_ARQUIVO = C1.ID_ARQUIVO
        AND NOT EXISTS
          ( SELECT CODIGO FROM RHORGA_EMPRESA WHERE CODIGO = CS.CODIGO_EMPRESA
          )
        )
        LOOP
          GRAVA_LOG(R2.CODIGO_EMPRESA, CATEGORIA_LOG_REGRAS, TIPO_LOG_ERRO, R2.ID_ARQUIVO, R2.NUMERO_LINHA, LOG_CODIGO_EMPRESA_INVALIDO, R2.CODIGO_EMPRESA);
        END LOOP;
        vIDENTIFICADOR_REGRA := '1';
        GRAVA_LOG(PCODIGO_EMPRESA, CATEGORIA_LOG_REGRAS, TIPO_LOG_PROCESSAMENTO, PID_ARQUIVO, 0, CODIGO_LOG_PROCESSAMENTO_50, 'APLICACAO REGRA ' || vIDENTIFICADOR_REGRA || '.');
        -- Regra 2
        -- Valida codigo do Contrato
        FOR R2 IN
        (SELECT *
        FROM ARTERH.RHPBH_PS_MAG CS
        WHERE CODIGO_EMPRESA = PCODIGO_EMPRESA
        AND ID_ARQUIVO       = C1.ID_ARQUIVO
        AND NOT EXISTS
          (SELECT CODIGO_CONTRATO
          FROM RHPESS_CONTR_MEST
          WHERE CODIGO_EMPRESA = CS.CODIGO_EMPRESA
          AND CODIGO_CONTRATO  = CS.CODIGO_CONTRATO
          AND TIPO_CONTRATO    = PTIPO_CONTRATO
          )
        )
        LOOP
          GRAVA_LOG(R2.CODIGO_EMPRESA, CATEGORIA_LOG_REGRAS, TIPO_LOG_ERRO, R2.ID_ARQUIVO, R2.NUMERO_LINHA, LOG_CODIGO_CONTRATO_INVALIDO, R2.CODIGO_CONTRATO);
        END LOOP;
        vIDENTIFICADOR_REGRA := '2';
        GRAVA_LOG(PCODIGO_EMPRESA, CATEGORIA_LOG_REGRAS, TIPO_LOG_PROCESSAMENTO, PID_ARQUIVO, 0, CODIGO_LOG_PROCESSAMENTO_50, 'APLICACAO REGRA ' || vIDENTIFICADOR_REGRA || '.');
        --REGRA 3
        --VALIDAR POSIÇOES PATROCINADO E FACULTATIVO, NÃO PODEM SER PREENCHIDAS SIMULTANEAMENTE
        FOR R2 IN
        (SELECT *
        FROM ARTERH.RHPBH_PS_MAG CS
        WHERE CS.CODIGO_EMPRESA = PCODIGO_EMPRESA
        AND CS.ID_ARQUIVO       = C1.ID_ARQUIVO
        )
        LOOP
          IF (R2.PERCENT_PATROCINADO <> 0 AND R2.PERCENT_FACULTATIVO <> 0) THEN
            GRAVA_LOG(R2.CODIGO_EMPRESA, CATEGORIA_LOG_REGRAS, TIPO_LOG_ERRO, R2.ID_ARQUIVO, R2.NUMERO_LINHA, LOG_DUPLA_INSERCAO, R2.CODIGO_CONTRATO);
          ELSIF (R2.PERCENT_PATROCINADO > 0 AND R2.PERCENT_FACULTATIVO = 0) THEN
            GRAVA_LOG(R2.CODIGO_EMPRESA, CATEGORIA_LOG_REGRAS, TIPO_LOG_INFO, R2.ID_ARQUIVO, R2.NUMERO_LINHA, LOG_TIPO_PATROCINADO, R2.CODIGO_CONTRATO);
          ELSE
            GRAVA_LOG(R2.CODIGO_EMPRESA, CATEGORIA_LOG_REGRAS, TIPO_LOG_INFO, R2.ID_ARQUIVO, R2.NUMERO_LINHA, LOG_TIPO_FACULTATIVO, R2.CODIGO_CONTRATO);
          END IF;
        END LOOP;
        vIDENTIFICADOR_REGRA := '3';
        GRAVA_LOG(PCODIGO_EMPRESA, CATEGORIA_LOG_REGRAS, TIPO_LOG_PROCESSAMENTO, PID_ARQUIVO, 0, CODIGO_LOG_PROCESSAMENTO_50, 'APLICACAO REGRA ' || vIDENTIFICADOR_REGRA || '.');
        --REGRA 4
        --VALIDAR SE PERCENTUAL PATROCINADO ESTÃO DENTRO DA FAIXA ESTABELECIDA
        FOR R2 IN
        (SELECT *
        FROM ARTERH.RHPBH_PS_MAG CS
        WHERE CS.CODIGO_EMPRESA = PCODIGO_EMPRESA
        AND CS.ID_ARQUIVO       = C1.ID_ARQUIVO
        )
        LOOP
          IF R2.PERCENT_PATROCINADO > 0 THEN
            IF TO_NUMBER(R2.PERCENT_PATROCINADO)/100 BETWEEN vPERCENT_BASE_INICIAL AND vPERCENT_BASE_FINAL THEN
              GRAVA_LOG(R2.CODIGO_EMPRESA, CATEGORIA_LOG_REGRAS, TIPO_LOG_INFO, R2.ID_ARQUIVO, R2.NUMERO_LINHA, LOG_PERC_PATROCINADO_PERMITIDO, R2.CODIGO_CONTRATO);
            ELSE
              IF TO_NUMBER(R2.PERCENT_PATROCINADO)/100 < vPERCENT_BASE_INICIAL THEN
                GRAVA_LOG(R2.CODIGO_EMPRESA, CATEGORIA_LOG_REGRAS, TIPO_LOG_ERRO, R2.ID_ARQUIVO, R2.NUMERO_LINHA, LOG_PERC_PATROCINADO_MENOR, R2.CODIGO_CONTRATO);
              ELSE
                GRAVA_LOG(R2.CODIGO_EMPRESA, CATEGORIA_LOG_REGRAS, TIPO_LOG_ERRO, R2.ID_ARQUIVO, R2.NUMERO_LINHA, LOG_PERC_PATROCINADO_MAIOR, R2.CODIGO_CONTRATO);
              END IF;
            END IF;
          END IF;
        END LOOP;
        vIDENTIFICADOR_REGRA := '4';
        GRAVA_LOG(PCODIGO_EMPRESA, CATEGORIA_LOG_REGRAS, TIPO_LOG_PROCESSAMENTO, PID_ARQUIVO, 0, CODIGO_LOG_PROCESSAMENTO_50, 'APLICACAO REGRA ' || vIDENTIFICADOR_REGRA || '.');
        --REGRA 5
        --VALIDAR SE PERCENTUAL FACULTATIVO ESTÃO DENTRO DA FAIXA ESTABELECIDA
        FOR R2 IN
        (SELECT *
        FROM ARTERH.RHPBH_PS_MAG CS
        WHERE CS.CODIGO_EMPRESA = PCODIGO_EMPRESA
        AND CS.ID_ARQUIVO       = C1.ID_ARQUIVO
        )
        LOOP
          IF R2.PERCENT_FACULTATIVO > 0 THEN
            IF TO_NUMBER(R2.PERCENT_FACULTATIVO)/100 BETWEEN vPERCENT_BASE_INICIAL AND vPERCENT_BASE_FINAL THEN
              GRAVA_LOG(R2.CODIGO_EMPRESA, CATEGORIA_LOG_REGRAS, TIPO_LOG_INFO, R2.ID_ARQUIVO, R2.NUMERO_LINHA, LOG_PERC_FACULTATIVO_PERMITIDO, R2.CODIGO_CONTRATO);
            ELSE
              IF TO_NUMBER(R2.PERCENT_PATROCINADO)/100 < vPERCENT_BASE_INICIAL THEN
                GRAVA_LOG(R2.CODIGO_EMPRESA, CATEGORIA_LOG_REGRAS, TIPO_LOG_ERRO, R2.ID_ARQUIVO, R2.NUMERO_LINHA, LOG_PERC_FACULTATIVO_MENOR, R2.CODIGO_CONTRATO);
              ELSE
                GRAVA_LOG(R2.CODIGO_EMPRESA, CATEGORIA_LOG_REGRAS, TIPO_LOG_ERRO, R2.ID_ARQUIVO, R2.NUMERO_LINHA, LOG_PERC_FACULTATIVO_MAIOR, R2.CODIGO_CONTRATO);
              END IF;
            END IF;
          END IF;
        END LOOP;
        vIDENTIFICADOR_REGRA := '5';
        GRAVA_LOG(PCODIGO_EMPRESA, CATEGORIA_LOG_REGRAS, TIPO_LOG_PROCESSAMENTO, PID_ARQUIVO, 0, CODIGO_LOG_PROCESSAMENTO_50, 'APLICACAO REGRA ' || vIDENTIFICADOR_REGRA || '.');

        --REGRA 6
        --VALIDAR MES REFERENCIA E ANO SE ESTÃO DENTRO DO MÊS CORRENTE
        FOR R2 IN
        (SELECT *
        FROM ARTERH.RHPBH_PS_MAG CS
        WHERE CS.CODIGO_EMPRESA = PCODIGO_EMPRESA
        AND CS.ID_ARQUIVO       = C1.ID_ARQUIVO
        )
        LOOP
        IF (TO_CHAR(SYSDATE, 'MM')   = R2.MES_REFERENCIA AND TO_CHAR(SYSDATE, 'YYYY') = R2.ANO )THEN
        GRAVA_LOG(R2.CODIGO_EMPRESA, CATEGORIA_LOG_REGRAS, TIPO_LOG_INFO, R2.ID_ARQUIVO, R2.NUMERO_LINHA, LOG_ANO_MES_VALIDADO, R2.CODIGO_CONTRATO);
        ELSE
        GRAVA_LOG(R2.CODIGO_EMPRESA, CATEGORIA_LOG_REGRAS, TIPO_LOG_ERRO, R2.ID_ARQUIVO, R2.NUMERO_LINHA, LOG_ANO_MES_REF_NAO_RELAC, R2.CODIGO_CONTRATO);
        END IF;
        END LOOP;
        vIDENTIFICADOR_REGRA := '6';
        GRAVA_LOG(PCODIGO_EMPRESA, CATEGORIA_LOG_REGRAS, TIPO_LOG_PROCESSAMENTO, PID_ARQUIVO, 0, CODIGO_LOG_PROCESSAMENTO_50, 'APLICACAO REGRA ' || vIDENTIFICADOR_REGRA || '.');

        --REGRA 7
        --VALIDAR SE CODIGO_CONTRATO ESTÁ DENDRO DAS REGRAS DE NEGÓCIO DESENHADAS PARA FACULTATIVO
        FOR R2 IN
        (SELECT *
        FROM ARTERH.RHPBH_PS_MAG CS
        WHERE CS.CODIGO_EMPRESA     = PCODIGO_EMPRESA
        AND CS.ID_ARQUIVO           = C1.ID_ARQUIVO
        AND CS.CODIGO_CONTRATO NOT IN
          (SELECT C.CODIGO
          FROM RHPESS_CONTRATO C
          LEFT JOIN RHMOVI_MOVIMENTO M
          ON M.CODIGO_CONTRATO      = C.CODIGO
          AND M.TIPO_CONTRATO       = C.TIPO_CONTRATO
          AND M.CODIGO_EMPRESA      = C.CODIGO_EMPRESA
          WHERE C.CODIGO_EMPRESA    ='0001'
          AND C.TIPO_CONTRATO       ='0001'
          AND (C.VINCULO            = '0002'
          OR C.VINCULO              = '0000')
          AND (C.SITUACAO_FUNCIONAL < '1700'
          AND C.SITUACAO_FUNCIONAL <> '1002')
          AND C.DATA_RESCISAO      IS NULL
          AND C.DATA_EFETIVO_EXERC  > to_date('30/09/2022','DD/MM/YYYY')
          AND C.COD_CARGO_EFETIVO  <> '000000000000000'
          AND C. ANO_MES_REFERENCIA =
            (SELECT MAX (a.ano_mes_referencia)
            FROM ARTERH.RHPESS_CONTRATO a
            WHERE a.codigo            = C.codigo
            AND a.codigo_empresa      = C.codigo_empresa
            AND a.tipo_contrato       = C.tipo_contrato
            AND a.ano_mes_referencia <= SYSDATE
            )
          AND M.TIPO_MOVIMENTO     = 'ME'
          AND M.MODO_OPERACAO      = 'R'
          AND M.FASE               = '0'
          AND M.VALOR_VERBA        > TO_NUMBER('7087,22','9999999D99','NLS_NUMERIC_CHARACTERS='',.''') 
          AND M.CODIGO_VERBA       = upper(trim('4431'))
          AND M.ANO_MES_REFERENCIA =
            (SELECT MAX(MOV.ANO_MES_REFERENCIA)
            FROM RHMOVI_MOVIMENTO MOV
            WHERE MOV.CODIGO_EMPRESA   = M.CODIGO_EMPRESA
            AND MOV.TIPO_CONTRATO      = M.TIPO_CONTRATO
            AND MOV.CODIGO_CONTRATO    = M.CODIGO_CONTRATO
            AND MOV.TIPO_MOVIMENTO     = M.TIPO_MOVIMENTO
            AND MOV.MODO_OPERACAO      = M.MODO_OPERACAO
            AND MOV.FASE               = M.FASE
            AND MOV.CODIGO_VERBA       = M.CODIGO_VERBA
            AND MOV.ANO_MES_REFERENCIA < sysdate
            )
          )
        )
        LOOP
          IF R2.TIPO_PARTICIPANTE ='P' THEN
            dbms_output.put_line('ERRO 1'||R2.CODIGO_CONTRATO );
            GRAVA_LOG(R2.CODIGO_EMPRESA, CATEGORIA_LOG_REGRAS, TIPO_LOG_ERRO, R2.ID_ARQUIVO, R2.NUMERO_LINHA, LOG_CARGO_EFETIVO_INVALIDO, R2.CODIGO_CONTRATO);
          END IF;
        END LOOP;
        vIDENTIFICADOR_REGRA := '7';
        dbms_output.put_line(PCODIGO_EMPRESA||' - '|| CATEGORIA_LOG_REGRAS||' - '||  TIPO_LOG_PROCESSAMENTO||' - '|| PID_ARQUIVO||' - '|| '0'||' - '|| CODIGO_LOG_PROCESSAMENTO_50||' - '|| 'APLICACAO REGRA ' ||' - '|| vIDENTIFICADOR_REGRA ||' - '|| '.');
        GRAVA_LOG(PCODIGO_EMPRESA, CATEGORIA_LOG_REGRAS, TIPO_LOG_PROCESSAMENTO, PID_ARQUIVO, 0, CODIGO_LOG_PROCESSAMENTO_50, 'APLICACAO REGRA ' || vIDENTIFICADOR_REGRA || '.');

        --REGRA 8
        --VALIDAR SE PERCENTUAL FACULTATIVO E PATROCINADO ESTÃO PREENCHIDOS OU NÃO 
        FOR R2 IN
        (SELECT *
        FROM ARTERH.RHPBH_PS_MAG CS
        WHERE CS.CODIGO_EMPRESA = PCODIGO_EMPRESA
        AND CS.ID_ARQUIVO       = C1.ID_ARQUIVO
        )
        LOOP
          IF (R2.PERCENT_FACULTATIVO = 0 AND R2.PERCENT_PATROCINADO = 0) THEN
             GRAVA_LOG(R2.CODIGO_EMPRESA, CATEGORIA_LOG_REGRAS, TIPO_LOG_ERRO, R2.ID_ARQUIVO, R2.NUMERO_LINHA, LOG_VALORES_ZERADOS, R2.CODIGO_CONTRATO);

           ELSIF (R2.PERCENT_FACULTATIVO > 0 AND R2.PERCENT_PATROCINADO > 0) THEN
             GRAVA_LOG(R2.CODIGO_EMPRESA, CATEGORIA_LOG_REGRAS, TIPO_LOG_ERRO, R2.ID_ARQUIVO, R2.NUMERO_LINHA, LOG_DUPLA_INSERCAO, R2.CODIGO_CONTRATO);

          END IF;
        END LOOP;
        vIDENTIFICADOR_REGRA := '8';
        GRAVA_LOG(PCODIGO_EMPRESA, CATEGORIA_LOG_REGRAS, TIPO_LOG_PROCESSAMENTO, PID_ARQUIVO, 0, CODIGO_LOG_PROCESSAMENTO_50, 'APLICACAO REGRA ' || vIDENTIFICADOR_REGRA || '.');


        PR_SET_SITUACAO_PROCESSAMENTO('05');
        PR_CONTROLE_PROCESSAMENTO(C1.CODIGO_EMPRESA, C1.ID_ARQUIVO, vSITUACAO_PROCESSAMENTO);
      END LOOP;
      COMMIT;
      -- Atualizar a situacao dos registros
      PR_ATUALIZAR_SITUACAO_REGISTR0;
    EXCEPTION
    WHEN OTHERS THEN
      ----dbms_output.put_line('ENCONTRADO ERRO - '||SQLCODE||' -ERROR- '||SQLERRM);
      raise_application_error (-20002,'NAO FOI POSSIVEL REALIZAR O PROCESSAMENTO DE ARQUIVO_MAG_PBH . ENTRE EM CONTATO COM A EQUIPE DE SUPORTE DA PBH.' || 'ENCONTRADO ERRO - '||SQLCODE||' -ERROR- '||SQLERRM);
    END;
  END IF; -- FIM PACAO = 2
  IF PACAO IN (2, 10) THEN
    vCONTADOR := 0;
    PR_SET_SITUACAO_PROCESSAMENTO('04');
    PR_CONTROLE_PROCESSAMENTO(PCODIGO_EMPRESA, PID_ARQUIVO, vSITUACAO_PROCESSAMENTO);
    FOR C_INC IN
    (SELECT CS.*
    FROM ARTERH.RHPBH_PS_MAG CS,
      RHPBH_ARQUIVO_LINHA AL
    WHERE CS.ID_ARQUIVO   = AL.ID_ARQUIVO
    AND CS.NUMERO_LINHA   = AL.NUMERO_LINHA
    AND CS.CODIGO_EMPRESA = PCODIGO_EMPRESA
    AND CS.ID_ARQUIVO     = PID_ARQUIVO
    AND AL.SITUACAO       = '00'
    ORDER BY CS.NUMERO_LINHA
    )
    LOOP
      -- CPF do Servidor deve ser valido
      vCPF_VALIDO:= VALIDA_CPF_CNPJ(C_INC.CPF);
      IF NOT vCPF_VALIDO THEN
        GRAVA_LOG(C_INC.CODIGO_EMPRESA, CATEGORIA_LOG_REGRAS, TIPO_LOG_ERRO, C_INC.ID_ARQUIVO, C_INC.NUMERO_LINHA, LOG_CPF_INVALIDO, C_INC.CPF);
      ELSE
        BEGIN
          SELECT P.CODIGO,
            P.DATA_NASCIMENTO,
            TRUNC(months_between(sysdate, P.DATA_NASCIMENTO)/12)
          INTO vCODIGO_PESSOA_BENEFICIARIO,
            vCONC_DATA_NASC_BENEFICIARIO,
            vCONC_IDADE_BENEFICIARIO
          FROM RHPESS_PESSOA P,
            RHPESS_CONTRATO C
          WHERE P.CODIGO_EMPRESA   = C_INC.CODIGO_EMPRESA
          AND P.CPF                = C_INC.CPF
          AND P.CODIGO_EMPRESA     = C.CODIGO_EMPRESA
          AND P.CODIGO             = C.CODIGO_PESSOA
          AND C.TIPO_CONTRATO      = PTIPO_CONTRATO
          AND C.CODIGO             = C_INC.CODIGO_CONTRATO
          AND p.dt_termino        IS NULL
          AND C.ANO_MES_REFERENCIA =
            (SELECT MAX(ANO_MES_REFERENCIA)
            FROM RHPESS_CONTRATO AUX
            WHERE AUX.CODIGO_EMPRESA    = C.CODIGO_EMPRESA
            AND AUX.TIPO_CONTRATO       = C.TIPO_CONTRATO
            AND AUX.CODIGO              = C.CODIGO
            AND AUX.ANO_MES_REFERENCIA <= sysdate
            ) ;
        EXCEPTION
        WHEN NO_DATA_FOUND THEN
          GRAVA_LOG(C_INC.CODIGO_EMPRESA, CATEGORIA_LOG_REGRAS, TIPO_LOG_ERRO, C_INC.ID_ARQUIVO, C_INC.NUMERO_LINHA, LOG_CPF_NAO_ENCONTRADO ,C_INC.CPF || '|' || 'CPF = ' || C_INC.CPF || '|' || 'CODIGO_CONTRATO = ' || C_INC.CODIGO_CONTRATO);
        WHEN TOO_MANY_ROWS THEN
          BEGIN
            SELECT P.CODIGO,
              P.DATA_NASCIMENTO,
              TRUNC(months_between(sysdate, P.DATA_NASCIMENTO)/12)
            INTO vCODIGO_PESSOA_BENEFICIARIO,
              vCONC_DATA_NASC_BENEFICIARIO,
              vCONC_IDADE_BENEFICIARIO
            FROM RHPESS_PESSOA P,
              RHPESS_CONTRATO C
            WHERE P.CODIGO_EMPRESA   = C_INC.CODIGO_EMPRESA
            AND P.CPF                = C_INC.CPF
            AND P.CODIGO_EMPRESA     = C.CODIGO_EMPRESA
            AND P.CODIGO             = C.CODIGO_PESSOA
            AND C.TIPO_CONTRATO      = PTIPO_CONTRATO
            AND p.dt_termino        IS NULL
            AND C.ANO_MES_REFERENCIA =
              (SELECT MAX(ANO_MES_REFERENCIA)
              FROM RHPESS_CONTRATO AUX
              WHERE AUX.CODIGO_EMPRESA    = C.CODIGO_EMPRESA
              AND AUX.TIPO_CONTRATO       = C.TIPO_CONTRATO
              AND AUX.CODIGO              = C.CODIGO
              AND AUX.ANO_MES_REFERENCIA <= sysdate
              );
          EXCEPTION
          WHEN NO_DATA_FOUND THEN
            GRAVA_LOG(C_INC.CODIGO_EMPRESA, CATEGORIA_LOG_REGRAS, TIPO_LOG_ERRO, C_INC.ID_ARQUIVO, C_INC.NUMERO_LINHA, LOG_CPF_NAO_ENCONTRADO, C_INC.CPF || '|' || 'CATEGORIA DE BEENFICIARIO = ' || C_INC.CATEGORIA_BENEFICIO || '|' || 'CODIGO_CONTRATO = ' || C_INC.CODIGO_CONTRATO || '|' || 'REGISTROS DUPLICADOS');
          WHEN OTHERS THEN
            GRAVA_LOG(C_INC.CODIGO_EMPRESA, CATEGORIA_LOG_REGRAS, TIPO_LOG_ERRO, C_INC.ID_ARQUIVO, C_INC.NUMERO_LINHA, LOG_CONCESSAO_ERRO_RECUPERACAO, C_INC.CPF);
          END;
        WHEN OTHERS THEN
          GRAVA_LOG(C_INC.CODIGO_EMPRESA, CATEGORIA_LOG_REGRAS, TIPO_LOG_ERRO, C_INC.ID_ARQUIVO, C_INC.NUMERO_LINHA, LOG_DUPLICIDADE_REGISTRO, C_INC.CPF);
        END;
      END IF;
      UPDATE ARTERH.RHPBH_PS_MAG
      SET CODIGO_PESSOA_BENEFICIARIO = vCODIGO_PESSOA_BENEFICIARIO
      WHERE ID_ARQUIVO               = C_INC.ID_ARQUIVO
      AND NUMERO_LINHA               = C_INC.NUMERO_LINHA;
      IF MOD(vCONTADOR,1000)         = 0 THEN
        COMMIT;
      END IF;
      vCONTADOR := vCONTADOR + 1;
    END LOOP;
    COMMIT;
    vCONTADOR := 0;
    PR_ATUALIZAR_SITUACAO_REGISTR0;
    PR_SET_SITUACAO_PROCESSAMENTO('05');
    PR_CONTROLE_PROCESSAMENTO(PCODIGO_EMPRESA, PID_ARQUIVO, vSITUACAO_PROCESSAMENTO);
  END IF;
  IF PACAO IN (3, 10) THEN -- #### INICIO PACAO in (3, 10) ####
    vCONTADOR := 0;
    PR_SET_SITUACAO_PROCESSAMENTO('06');
    PR_CONTROLE_PROCESSAMENTO(PCODIGO_EMPRESA, PID_ARQUIVO, vSITUACAO_PROCESSAMENTO);
    -- #### INICIO OPERACAO INCLUSAO ####
    FOR C_INC IN
    (SELECT CS.*
    FROM ARTERH.RHPBH_PS_MAG CS,
      RHPBH_ARQUIVO_LINHA AL
    WHERE CS.ID_ARQUIVO   = AL.ID_ARQUIVO
    AND CS.NUMERO_LINHA   = AL.NUMERO_LINHA
    AND CS.CODIGO_EMPRESA = PCODIGO_EMPRESA
    AND CS.ID_ARQUIVO     = PID_ARQUIVO
    AND AL.SITUACAO       = 00
    ORDER BY CS.NUMERO_LINHA
    )
    LOOP
      BEGIN
        IF (TO_CHAR(SYSDATE, 'MM') = C_INC.MES_REFERENCIA AND
        TO_CHAR(SYSDATE, 'YYYY') = C_INC.ANO) THEN
        SELECT COUNT(1)
        INTO vJA_POSSUI_PREVIDENCIA_COMPLEMENTAR
        FROM RHBENF_CONCESSOES
        WHERE RHBENF_CONCESSOES.CODIGO_EMPRESA   = C_INC.CODIGO_EMPRESA
        AND RHBENF_CONCESSOES.TIPO_CONTRATO      = PTIPO_CONTRATO
        AND RHBENF_CONCESSOES.CODIGO_CONTRATO    = C_INC.CODIGO_CONTRATO
        AND RHBENF_CONCESSOES.CODIGO_BENEFICIO   = vCODIGO_BENEFICIO
        AND RHBENF_CONCESSOES.categoria_benef   IN('0050','0051')
        AND RHBENF_CONCESSOES.data_cancelamento IS NULL;
        IF vJA_POSSUI_PREVIDENCIA_COMPLEMENTAR   > 0 THEN
          /*INICIO VALIDAÇÃO LIMITE INICIAL FINAL*/
          IF (C_INC.PERCENT_PATROCINADO > 0 AND C_INC.PERCENT_FACULTATIVO = 0) THEN
            BEGIN
              IF TO_NUMBER(C_INC.PERCENT_PATROCINADO)/100 BETWEEN vPERCENT_BASE_INICIAL AND vPERCENT_BASE_FINAL THEN
                /*INCLUSÃO PATROCINADO */
                SELECT RHBENF_CONCESSOES.percent_participac
                INTO vPERCENT_PATROCINADO
                FROM RHBENF_CONCESSOES
                WHERE RHBENF_CONCESSOES.CODIGO_EMPRESA             = C_INC.CODIGO_EMPRESA
                AND RHBENF_CONCESSOES.TIPO_CONTRATO                = PTIPO_CONTRATO
                AND RHBENF_CONCESSOES.CODIGO_CONTRATO              = C_INC.CODIGO_CONTRATO
                AND RHBENF_CONCESSOES.CODIGO_BENEFICIO             = vCODIGO_BENEFICIO
                AND RHBENF_CONCESSOES.categoria_benef              = '0051'
                AND RHBENF_CONCESSOES.data_cancelamento           IS NULL;
                IF NVL(TO_NUMBER(C_INC.PERCENT_PATROCINADO)/100,0) = vPERCENT_PATROCINADO THEN
                  -- dbms_output.put_line('VALOR IGUAL PATROCINADO' ||NVL(C_INC.PERCENT_PATROCINADO/100,0)||' - '|| vPERCENT_PATROCINADO );
                  GRAVA_LOG(C_INC.CODIGO_EMPRESA, CATEGORIA_LOG_EFETIVACAO, TIPO_LOG_SUCESSO, C_INC.ID_ARQUIVO, C_INC.NUMERO_LINHA, LOG_CONC_SEM_ALTERACAO, NULL);
                ELSIF NVL(TO_NUMBER(C_INC.PERCENT_PATROCINADO)/100,0) <> vPERCENT_PATROCINADO THEN
                  /*UPDATE PERCENT PATROCINADO*/
                  IF NVL(TO_NUMBER(C_INC.PERCENT_PATROCINADO)/100,0) > vPERCENT_PATROCINADO THEN
                    v_OBSERVACAO                                    :='ALTERAÇÃO PARA PERCENT MAIOR';
                    SELECT RHBENF_CONCESSOES.DATA_CONCESSAO
                    INTO vDATA_CONCESSAO
                    FROM RHBENF_CONCESSOES
                    WHERE RHBENF_CONCESSOES.CODIGO_EMPRESA   = C_INC.CODIGO_EMPRESA
                    AND RHBENF_CONCESSOES.TIPO_CONTRATO      = PTIPO_CONTRATO
                    AND RHBENF_CONCESSOES.CODIGO_CONTRATO    = C_INC.CODIGO_CONTRATO
                    AND RHBENF_CONCESSOES.CODIGO_BENEFICIO   = vCODIGO_BENEFICIO
                    AND RHBENF_CONCESSOES.categoria_benef    = '0051'
                    AND RHBENF_CONCESSOES.data_cancelamento IS NULL;
                    vQTDE_LINHAS_AFETADAS                   := CANCELAR_CONCESSAO(C_INC.CODIGO_EMPRESA, PTIPO_CONTRATO, C_INC.CODIGO_CONTRATO, C_INC.CODIGO_PESSOA_BENEFICIARIO, '000000000000050', '0051', C_INC.DATA_CANCELAMENTO,vDATA_CONCESSAO, v_OBSERVACAO);
                    --dbms_output.put_line('VALOR MAIOR PATROCINADO'|| NVL(C_INC.PERCENT_PATROCINADO/100,0)||' - '|| vPERCENT_PATROCINADO );
                    -- dbms_output.put_line( 'QTD_LINHAS AFETADAS '||vQTDE_LINHAS_AFETADAS ||' - '|| C_INC.CODIGO_EMPRESA ||' - '||PTIPO_CONTRATO ||' - '|| C_INC.CODIGO_CONTRATO||' - '|| C_INC.CODIGO_PESSOA_BENEFICIARIO||' - '|| '000000000000050'||' - '|| '0051'||' - '|| C_INC.DATA_CANCELAMENTO||' - '||vDATA_CONCESSAO||' - '|| v_OBSERVACAO);
                    IF vQTDE_LINHAS_AFETADAS > 0 THEN
                      BEGIN
                        GRAVA_LOG(C_INC.CODIGO_EMPRESA, CATEGORIA_LOG_EFETIVACAO, TIPO_LOG_SUCESSO, C_INC.ID_ARQUIVO, C_INC.NUMERO_LINHA, LOG_SUCESSO_EXCLUSAO, NULL);
                        REG_PBH_CS.ID_ARQUIVO                 := C_INC.ID_ARQUIVO;
                        REG_PBH_CS.NUMERO_LINHA               := C_INC.NUMERO_LINHA;
                        REG_PBH_CS.TIPO_OPERACAO              := C_INC.TIPO_OPERACAO;
                        REG_PBH_CS.TIPO_PARTICIPANTE          := C_INC.TIPO_PARTICIPANTE;
                        REG_PBH_CS.ANO                        := C_INC.ANO;
                        REG_PBH_CS.MES_REFERENCIA             := C_INC.MES_REFERENCIA;
                        REG_PBH_CS.CODIGO_EMPRESA             := C_INC.CODIGO_EMPRESA;
                        REG_PBH_CS.CODIGO_CONTRATO            := C_INC.CODIGO_CONTRATO;
                        REG_PBH_CS.CODIGO_PESSOA_BENEFICIARIO := C_INC.CODIGO_PESSOA_BENEFICIARIO;
                        REG_PBH_CS.CPF                        := C_INC.CPF;
                        REG_PBH_CS.CODIGO_BENEFICIO           := vCODIGO_BENEFICIO;
                        REG_PBH_CS.CATEGORIA_BENEFICIO        := '0051';
                        REG_PBH_CS.DATA_CONCESSAO             := TO_DATE('01/'||C_INC.MES_REFERENCIA||'/'||C_INC.ANO,'DD/MM/YYYY');
                        REG_PBH_CS.DATA_CANCELAMENTO          := NULL;
                        REG_PBH_CS.PERCENT_FACULTATIVO        := TO_NUMBER(C_INC.PERCENT_FACULTATIVO)  /100;
                        REG_PBH_CS.PERCENT_PATROCINADO        := TO_NUMBER(C_INC.PERCENT_PATROCINADO)  /100;
                        REG_PBH_CS.PERCENT_PATROCINADOR       := TO_NUMBER(C_INC.PERCENT_PATROCINADOR) /100;
                        REG_PBH_CS.VALOR_APORTE_OPCIONAL      := TO_NUMBER(C_INC.VALOR_APORTE_OPCIONAL)/100;
                        REG_PBH_CS.CODIGO_FORNECEDOR          := vCODIGO_FORNECEDOR;
                        REG_PBH_CS.VALOR_GRAVACAO             := 0;
                        REG_PBH_CS.PERCENT_GRAVACAO           := TO_NUMBER(C_INC.PERCENT_PATROCINADO)/100;
                        vQTDE_LINHAS_AFETADAS                 := INCLUIR_CONCESSAO(REG_PBH_CS);
                        dbms_output.put_line(vCODIGO_FORNECEDOR);
                        IF vQTDE_LINHAS_AFETADAS > 0 THEN
                          BEGIN
                            GRAVA_LOG(C_INC.CODIGO_EMPRESA, CATEGORIA_LOG_EFETIVACAO, TIPO_LOG_SUCESSO, C_INC.ID_ARQUIVO, C_INC.NUMERO_LINHA, LOG_SUCESSO_INCLUSAO, NULL);
                          END;
                        END IF;
                      END;
                    END IF;
                  ELSE
                    v_OBSERVACAO :='ALTERAÇÃO PARA PERCENT MENOR';
                    SELECT RHBENF_CONCESSOES.DATA_CONCESSAO
                    INTO vDATA_CONCESSAO
                    FROM RHBENF_CONCESSOES
                    WHERE RHBENF_CONCESSOES.CODIGO_EMPRESA   = C_INC.CODIGO_EMPRESA
                    AND RHBENF_CONCESSOES.TIPO_CONTRATO      = PTIPO_CONTRATO
                    AND RHBENF_CONCESSOES.CODIGO_CONTRATO    = C_INC.CODIGO_CONTRATO
                    AND RHBENF_CONCESSOES.CODIGO_BENEFICIO   = vCODIGO_BENEFICIO
                    AND RHBENF_CONCESSOES.categoria_benef    = '0051'
                    AND RHBENF_CONCESSOES.data_cancelamento IS NULL;
                    vQTDE_LINHAS_AFETADAS                   := CANCELAR_CONCESSAO(C_INC.CODIGO_EMPRESA, PTIPO_CONTRATO, C_INC.CODIGO_CONTRATO, C_INC.CODIGO_PESSOA_BENEFICIARIO, '000000000000050', '0051', LAST_DAY(TO_DATE('01/'||C_INC.MES_REFERENCIA||'/'||C_INC.ANO,'DD/MM/YYYY')-1), vDATA_CONCESSAO, v_OBSERVACAO);
                    --dbms_output.put_line('VALOR MENOR PATROCINADO'|| NVL(C_INC.PERCENT_PATROCINADO/100,0)||' - '|| vPERCENT_PATROCINADO );
                    --dbms_output.put_line( 'QTD_LINHAS AFETADAS '||vQTDE_LINHAS_AFETADAS ||' - '|| C_INC.CODIGO_EMPRESA ||' - '||PTIPO_CONTRATO ||' - '|| C_INC.CODIGO_CONTRATO||' - '|| C_INC.CODIGO_PESSOA_BENEFICIARIO||' - '|| '000000000000050'||' - '|| '0051'||' - '|| C_INC.DATA_CANCELAMENTO||' - '||vDATA_CONCESSAO||' - '|| v_OBSERVACAO);
                    IF vQTDE_LINHAS_AFETADAS > 0 THEN
                      BEGIN
                        GRAVA_LOG(C_INC.CODIGO_EMPRESA, CATEGORIA_LOG_EFETIVACAO, TIPO_LOG_SUCESSO, C_INC.ID_ARQUIVO, C_INC.NUMERO_LINHA, LOG_SUCESSO_EXCLUSAO, NULL);
                        REG_PBH_CS.ID_ARQUIVO                 := C_INC.ID_ARQUIVO;
                        REG_PBH_CS.NUMERO_LINHA               := C_INC.NUMERO_LINHA;
                        REG_PBH_CS.TIPO_OPERACAO              := C_INC.TIPO_OPERACAO;
                        REG_PBH_CS.TIPO_PARTICIPANTE          := C_INC.TIPO_PARTICIPANTE;
                        REG_PBH_CS.ANO                        := C_INC.ANO;
                        REG_PBH_CS.MES_REFERENCIA             := C_INC.MES_REFERENCIA;
                        REG_PBH_CS.CODIGO_EMPRESA             := C_INC.CODIGO_EMPRESA;
                        REG_PBH_CS.CODIGO_CONTRATO            := C_INC.CODIGO_CONTRATO;
                        REG_PBH_CS.CODIGO_PESSOA_BENEFICIARIO := C_INC.CODIGO_PESSOA_BENEFICIARIO;
                        REG_PBH_CS.CPF                        := C_INC.CPF;
                        REG_PBH_CS.CODIGO_BENEFICIO           := vCODIGO_BENEFICIO;
                        REG_PBH_CS.CATEGORIA_BENEFICIO        := '0051';
                        REG_PBH_CS.DATA_CONCESSAO             := TO_DATE('01/'||C_INC.MES_REFERENCIA||'/'||C_INC.ANO,'DD/MM/YYYY');
                        REG_PBH_CS.DATA_CANCELAMENTO          := NULL;
                        REG_PBH_CS.PERCENT_FACULTATIVO        := TO_NUMBER(C_INC.PERCENT_FACULTATIVO)  /100;
                        REG_PBH_CS.PERCENT_PATROCINADO        := TO_NUMBER(C_INC.PERCENT_PATROCINADO)  /100;
                        REG_PBH_CS.PERCENT_PATROCINADOR       := TO_NUMBER(C_INC.PERCENT_PATROCINADOR) /100;
                        REG_PBH_CS.VALOR_APORTE_OPCIONAL      := TO_NUMBER(C_INC.VALOR_APORTE_OPCIONAL)/100;
                        REG_PBH_CS.CODIGO_FORNECEDOR          := vCODIGO_FORNECEDOR;
                        REG_PBH_CS.VALOR_GRAVACAO             := 0;
                        REG_PBH_CS.PERCENT_GRAVACAO           := TO_NUMBER(C_INC.PERCENT_PATROCINADO)/100;
                        vQTDE_LINHAS_AFETADAS                 := INCLUIR_CONCESSAO(REG_PBH_CS);
                        IF vQTDE_LINHAS_AFETADAS               > 0 THEN
                          BEGIN
                            GRAVA_LOG(C_INC.CODIGO_EMPRESA, CATEGORIA_LOG_EFETIVACAO, TIPO_LOG_SUCESSO, C_INC.ID_ARQUIVO, C_INC.NUMERO_LINHA, LOG_SUCESSO_INCLUSAO, NULL);
                          END;
                        END IF;
                      END;
                    END IF;
                  END IF;
                END IF;
              ELSE
                IF TO_NUMBER(C_INC.PERCENT_PATROCINADO)                                                                                                                                                                                    /100 < vPERCENT_BASE_INICIAL THEN
                  GRAVA_LOG(C_INC.CODIGO_EMPRESA, CATEGORIA_LOG_EFETIVACAO, TIPO_LOG_ERRO, C_INC.ID_ARQUIVO, C_INC.NUMERO_LINHA, LOG_CONC_PERCENT_MENOR ,C_INC.CPF || '|' || 'PERCENT_INFORMADO = ' || TO_NUMBER(C_INC.PERCENT_PATROCINADO)/100 || '|' || 'CODIGO_CONTRATO = ' || C_INC.CODIGO_CONTRATO);
                ELSE
                  GRAVA_LOG(C_INC.CODIGO_EMPRESA, CATEGORIA_LOG_EFETIVACAO, TIPO_LOG_ERRO, C_INC.ID_ARQUIVO, C_INC.NUMERO_LINHA, LOG_CONC_PERCENT_MAIOR ,C_INC.CPF || '|' || 'PERCENT_INFORMADO = ' || TO_NUMBER(C_INC.PERCENT_PATROCINADO)/100 || '|' || 'CODIGO_CONTRATO = ' || C_INC.CODIGO_CONTRATO);
                END IF;
              END IF;
            END;
          ELSIF (C_INC.PERCENT_FACULTATIVO > 0 AND C_INC.PERCENT_PATROCINADO = 0 ) THEN
            BEGIN
              IF TO_NUMBER(C_INC.PERCENT_FACULTATIVO)/100 BETWEEN vPERCENT_BASE_INICIAL AND vPERCENT_BASE_FINAL THEN
                SELECT RHBENF_CONCESSOES.percent_participac
                INTO vPERCENT_FACULTATIVO
                FROM RHBENF_CONCESSOES
                WHERE RHBENF_CONCESSOES.CODIGO_EMPRESA             = C_INC.CODIGO_EMPRESA
                AND RHBENF_CONCESSOES.TIPO_CONTRATO                = PTIPO_CONTRATO
                AND RHBENF_CONCESSOES.CODIGO_CONTRATO              = C_INC.CODIGO_CONTRATO
                AND RHBENF_CONCESSOES.CODIGO_BENEFICIO             = vCODIGO_BENEFICIO
                AND RHBENF_CONCESSOES.categoria_benef              = '0050'
                AND RHBENF_CONCESSOES.data_cancelamento           IS NULL;
                IF NVL(TO_NUMBER(C_INC.PERCENT_FACULTATIVO)/100,0) = vPERCENT_FACULTATIVO THEN
                  --dbms_output.put_line('VALOR IGUAL FACULTAVIO' ||NVL(C_INC.PERCENT_PATROCINADO/100,0)||' - '|| vPERCENT_FACULTATIVO );
                  vIDENTIFICADOR_REGRA := 'VALOR IGUAL FACULTAVIO';
                  GRAVA_LOG(PCODIGO_EMPRESA, CATEGORIA_LOG_EFETIVACAO, TIPO_LOG_PROCESSAMENTO, PID_ARQUIVO, 0, CODIGO_LOG_PROCESSAMENTO_50, 'APLICACAO REGRA ' || vIDENTIFICADOR_REGRA || '.');
                ELSIF NVL(TO_NUMBER(C_INC.PERCENT_FACULTATIVO)/100,0) <> vPERCENT_FACULTATIVO THEN
                  /*UPDATE PERCENT FACULTAVIO*/
                  IF NVL(TO_NUMBER(C_INC.PERCENT_FACULTATIVO)/100,0) > vPERCENT_FACULTATIVO THEN
                    v_OBSERVACAO                                    :='ALTERAÇÃO PARA PERCENT MAIOR';
                    SELECT RHBENF_CONCESSOES.DATA_CONCESSAO
                    INTO vDATA_CONCESSAO
                    FROM RHBENF_CONCESSOES
                    WHERE RHBENF_CONCESSOES.CODIGO_EMPRESA   = C_INC.CODIGO_EMPRESA
                    AND RHBENF_CONCESSOES.TIPO_CONTRATO      = PTIPO_CONTRATO
                    AND RHBENF_CONCESSOES.CODIGO_CONTRATO    = C_INC.CODIGO_CONTRATO
                    AND RHBENF_CONCESSOES.CODIGO_BENEFICIO   = vCODIGO_BENEFICIO
                    AND RHBENF_CONCESSOES.categoria_benef    = '0050'
                    AND RHBENF_CONCESSOES.data_cancelamento IS NULL;
                    vQTDE_LINHAS_AFETADAS                   := CANCELAR_CONCESSAO(C_INC.CODIGO_EMPRESA, PTIPO_CONTRATO, C_INC.CODIGO_CONTRATO, C_INC.CODIGO_PESSOA_BENEFICIARIO, '000000000000050', '0050', LAST_DAY(TO_DATE('01/'||C_INC.MES_REFERENCIA||'/'||C_INC.ANO,'DD/MM/YYYY')-1),vDATA_CONCESSAO, v_OBSERVACAO);
                    -- dbms_output.put_line('VALOR MAIOR FACULTATIVO'|| NVL(C_INC.PERCENT_PATROCINADO/100,0)||' - '|| vPERCENT_PATROCINADO );
                    --dbms_output.put_line( 'QTD_LINHAS AFETADAS '||vQTDE_LINHAS_AFETADAS ||' - '|| C_INC.CODIGO_EMPRESA ||' - '||PTIPO_CONTRATO ||' - '|| C_INC.CODIGO_CONTRATO||' - '|| C_INC.CODIGO_PESSOA_BENEFICIARIO||' - '|| '000000000000050'||' - '|| '0051'||' - '|| C_INC.DATA_CANCELAMENTO||' - '||vDATA_CONCESSAO||' - '|| v_OBSERVACAO);
                    IF vQTDE_LINHAS_AFETADAS > 0 THEN
                      BEGIN
                        REG_PBH_CS.ID_ARQUIVO                 := C_INC.ID_ARQUIVO;
                        REG_PBH_CS.NUMERO_LINHA               := C_INC.NUMERO_LINHA;
                        REG_PBH_CS.TIPO_OPERACAO              := C_INC.TIPO_OPERACAO;
                        REG_PBH_CS.TIPO_PARTICIPANTE          := C_INC.TIPO_PARTICIPANTE;
                        REG_PBH_CS.ANO                        := C_INC.ANO;
                        REG_PBH_CS.MES_REFERENCIA             := C_INC.MES_REFERENCIA;
                        REG_PBH_CS.CODIGO_EMPRESA             := C_INC.CODIGO_EMPRESA;
                        REG_PBH_CS.CODIGO_CONTRATO            := C_INC.CODIGO_CONTRATO;
                        REG_PBH_CS.CODIGO_PESSOA_BENEFICIARIO := C_INC.CODIGO_PESSOA_BENEFICIARIO;
                        REG_PBH_CS.CPF                        := C_INC.CPF;
                        REG_PBH_CS.CODIGO_BENEFICIO           := vCODIGO_BENEFICIO;
                        REG_PBH_CS.CATEGORIA_BENEFICIO        := '0050';
                        REG_PBH_CS.DATA_CONCESSAO             := TO_DATE('01/'||C_INC.MES_REFERENCIA||'/'||C_INC.ANO,'DD/MM/YYYY');
                        REG_PBH_CS.DATA_CANCELAMENTO          := NULL;
                        REG_PBH_CS.PERCENT_FACULTATIVO        := TO_NUMBER(C_INC.PERCENT_FACULTATIVO)  /100;
                        REG_PBH_CS.PERCENT_PATROCINADO        := TO_NUMBER(C_INC.PERCENT_PATROCINADO)  /100;
                        REG_PBH_CS.PERCENT_PATROCINADOR       := TO_NUMBER(C_INC.PERCENT_PATROCINADOR) /100;
                        REG_PBH_CS.VALOR_APORTE_OPCIONAL      := TO_NUMBER(C_INC.VALOR_APORTE_OPCIONAL)/100;
                        REG_PBH_CS.CODIGO_FORNECEDOR          := vCODIGO_FORNECEDOR;
                        REG_PBH_CS.VALOR_GRAVACAO             := 0;
                        REG_PBH_CS.PERCENT_GRAVACAO           := TO_NUMBER(C_INC.PERCENT_FACULTATIVO)/100;
                        vQTDE_LINHAS_AFETADAS                 := INCLUIR_CONCESSAO(REG_PBH_CS);
                        IF vQTDE_LINHAS_AFETADAS               > 0 THEN
                          BEGIN
                            GRAVA_LOG(C_INC.CODIGO_EMPRESA, CATEGORIA_LOG_EFETIVACAO, TIPO_LOG_SUCESSO, C_INC.ID_ARQUIVO, C_INC.NUMERO_LINHA, LOG_SUCESSO_INCLUSAO, NULL);
                          END;
                        END IF;
                      END;
                    END IF;
                  ELSE
                    v_OBSERVACAO :='ALTERAÇÃO PARA PERCENT MENOR';
                    SELECT RHBENF_CONCESSOES.DATA_CONCESSAO
                    INTO vDATA_CONCESSAO
                    FROM RHBENF_CONCESSOES
                    WHERE RHBENF_CONCESSOES.CODIGO_EMPRESA   = C_INC.CODIGO_EMPRESA
                    AND RHBENF_CONCESSOES.TIPO_CONTRATO      = PTIPO_CONTRATO
                    AND RHBENF_CONCESSOES.CODIGO_CONTRATO    = C_INC.CODIGO_CONTRATO
                    AND RHBENF_CONCESSOES.CODIGO_BENEFICIO   = vCODIGO_BENEFICIO
                    AND RHBENF_CONCESSOES.categoria_benef    = '0050'
                    AND RHBENF_CONCESSOES.data_cancelamento IS NULL;
                    vQTDE_LINHAS_AFETADAS                   := CANCELAR_CONCESSAO(C_INC.CODIGO_EMPRESA, PTIPO_CONTRATO, C_INC.CODIGO_CONTRATO, C_INC.CODIGO_PESSOA_BENEFICIARIO, '000000000000050', '0050', LAST_DAY(TO_DATE('01/'||C_INC.MES_REFERENCIA||'/'||C_INC.ANO,'DD/MM/YYYY')-1), vDATA_CONCESSAO, v_OBSERVACAO);
                    --dbms_output.put_line('VALOR MENOR PATROCINADO'|| NVL(C_INC.PERCENT_FACULTATIVO/100,0)||' - '|| vPERCENT_PATROCINADO );
                    --dbms_output.put_line( 'QTD_LINHAS AFETADAS '||vQTDE_LINHAS_AFETADAS ||' - '|| C_INC.CODIGO_EMPRESA ||' - '||PTIPO_CONTRATO ||' - '|| C_INC.CODIGO_CONTRATO||' - '|| C_INC.CODIGO_PESSOA_BENEFICIARIO||' - '|| '000000000000050'||' - '|| '0051'||' - '|| C_INC.DATA_CANCELAMENTO||' - '||vDATA_CONCESSAO||' - '|| v_OBSERVACAO);
                    IF vQTDE_LINHAS_AFETADAS > 0 THEN
                      BEGIN
                        REG_PBH_CS.ID_ARQUIVO                 := C_INC.ID_ARQUIVO;
                        REG_PBH_CS.NUMERO_LINHA               := C_INC.NUMERO_LINHA;
                        REG_PBH_CS.TIPO_OPERACAO              := C_INC.TIPO_OPERACAO;
                        REG_PBH_CS.TIPO_PARTICIPANTE          := C_INC.TIPO_PARTICIPANTE;
                        REG_PBH_CS.ANO                        := C_INC.ANO;
                        REG_PBH_CS.MES_REFERENCIA             := C_INC.MES_REFERENCIA;
                        REG_PBH_CS.CODIGO_EMPRESA             := C_INC.CODIGO_EMPRESA;
                        REG_PBH_CS.CODIGO_CONTRATO            := C_INC.CODIGO_CONTRATO;
                        REG_PBH_CS.CODIGO_PESSOA_BENEFICIARIO := C_INC.CODIGO_PESSOA_BENEFICIARIO;
                        REG_PBH_CS.CPF                        := C_INC.CPF;
                        REG_PBH_CS.CODIGO_BENEFICIO           := vCODIGO_BENEFICIO;
                        REG_PBH_CS.CATEGORIA_BENEFICIO        := '0050';
                        REG_PBH_CS.DATA_CONCESSAO             := TO_DATE('01/'||C_INC.MES_REFERENCIA||'/'||C_INC.ANO,'DD/MM/YYYY');
                        REG_PBH_CS.DATA_CANCELAMENTO          := NULL;
                        REG_PBH_CS.PERCENT_FACULTATIVO        := TO_NUMBER(C_INC.PERCENT_FACULTATIVO)  /100;
                        REG_PBH_CS.PERCENT_PATROCINADO        := TO_NUMBER(C_INC.PERCENT_PATROCINADO)  /100;
                        REG_PBH_CS.PERCENT_PATROCINADOR       := TO_NUMBER(C_INC.PERCENT_PATROCINADOR) /100;
                        REG_PBH_CS.VALOR_APORTE_OPCIONAL      := TO_NUMBER(C_INC.VALOR_APORTE_OPCIONAL)/100;
                        REG_PBH_CS.CODIGO_FORNECEDOR          := vCODIGO_FORNECEDOR;
                        REG_PBH_CS.VALOR_GRAVACAO             := 0;
                        REG_PBH_CS.PERCENT_GRAVACAO           := TO_NUMBER(C_INC.PERCENT_FACULTATIVO)/100;
                        vQTDE_LINHAS_AFETADAS                 := INCLUIR_CONCESSAO(REG_PBH_CS);
                        IF vQTDE_LINHAS_AFETADAS               > 0 THEN
                          BEGIN
                            GRAVA_LOG(C_INC.CODIGO_EMPRESA, CATEGORIA_LOG_EFETIVACAO, TIPO_LOG_SUCESSO, C_INC.ID_ARQUIVO, C_INC.NUMERO_LINHA, LOG_SUCESSO_INCLUSAO, NULL);
                          END;
                        END IF;
                      END;
                    END IF;
                  END IF;
                  --dbms_output.put_line('VALOR MAIOR FACULTAVIO'|| NVL(C_INC.PERCENT_PATROCINADO/100,0)||' - '|| vPERCENT_FACULTATIVO );
                END IF;
              ELSE
                --
                IF TO_NUMBER(C_INC.PERCENT_FACULTATIVO)                                                                                                                                                                                          /100 < vPERCENT_BASE_INICIAL THEN
                  GRAVA_LOG(C_INC.CODIGO_EMPRESA, CATEGORIA_LOG_EFETIVACAO, TIPO_LOG_ERRO, C_INC.ID_ARQUIVO, C_INC.NUMERO_LINHA, LOG_CONC_PERCENT_MENOR ,C_INC.CPF || '|' || 'PERCENT_FACUL_INFORMADO = ' || TO_NUMBER(C_INC.PERCENT_FACULTATIVO)/100 || '|' || 'CODIGO_CONTRATO = ' || C_INC.CODIGO_CONTRATO);
                ELSE
                  GRAVA_LOG(C_INC.CODIGO_EMPRESA, CATEGORIA_LOG_EFETIVACAO, TIPO_LOG_ERRO, C_INC.ID_ARQUIVO, C_INC.NUMERO_LINHA, LOG_CONC_PERCENT_MAIOR ,C_INC.CPF || '|' || 'PERCENT_FACUL_INFORMADO = ' || TO_NUMBER(C_INC.PERCENT_FACULTATIVO)/100 || '|' || 'CODIGO_CONTRATO = ' || C_INC.CODIGO_CONTRATO);
                END IF;
              END IF;
            END;
          ELSE
            BEGIN
              --dbms_output.put_line('DUPLA INSERÇÃO' ||NVL(C_INC.PERCENT_PATROCINADO/100,0)||' - '|| vPERCENT_PATROCINADO );
              vIDENTIFICADOR_REGRA := 'DUPLA INSERÇÃO';
              GRAVA_LOG(PCODIGO_EMPRESA, CATEGORIA_LOG_EFETIVACAO, TIPO_LOG_PROCESSAMENTO, PID_ARQUIVO, 0, CODIGO_LOG_PROCESSAMENTO_50, 'APLICACAO REGRA ' || vIDENTIFICADOR_REGRA || '.');
            END;
          END IF;
          IF ((C_INC.PERCENT_PATROCINADO > 0 AND C_INC.PERCENT_FACULTATIVO = 0) OR (C_INC.PERCENT_FACULTATIVO > 0 AND C_INC.PERCENT_PATROCINADO = 0)) AND C_INC.VALOR_APORTE_OPCIONAL > 0 THEN
            BEGIN
              SELECT COUNT(1)
              INTO vJA_POSSUI_APORTE_OPCIONAL
              FROM RHBENF_CONCESSOES
              WHERE RHBENF_CONCESSOES.CODIGO_EMPRESA   = C_INC.CODIGO_EMPRESA
              AND RHBENF_CONCESSOES.TIPO_CONTRATO      = PTIPO_CONTRATO
              AND RHBENF_CONCESSOES.CODIGO_CONTRATO    = C_INC.CODIGO_CONTRATO
              AND RHBENF_CONCESSOES.CODIGO_BENEFICIO   = vCODIGO_BENEFICIO
              AND RHBENF_CONCESSOES.categoria_benef    = '0052'
              AND RHBENF_CONCESSOES.data_cancelamento >= LAST_DAY(TO_DATE('01/'
                ||C_INC.MES_REFERENCIA
                ||'/'
                ||C_INC.ANO,'DD/MM/YYYY'));
              IF vJA_POSSUI_APORTE_OPCIONAL > 0 THEN
                BEGIN
                  --dbms_output.put_line('POSSUI APORTE OPCIONAL NO MÊS' ||NVL(C_INC.PERCENT_PATROCINADO/100,0)||' - '|| vPERCENT_PATROCINADO );
                  vIDENTIFICADOR_REGRA := 'POSSUI APORTE OPCIONAL NO MÊS';
                  GRAVA_LOG(PCODIGO_EMPRESA, CATEGORIA_LOG_EFETIVACAO, TIPO_LOG_PROCESSAMENTO, PID_ARQUIVO, 0, CODIGO_LOG_PROCESSAMENTO_50, 'APLICACAO REGRA ' || vIDENTIFICADOR_REGRA || '.');
                END;
              ELSE
                BEGIN
                  REG_PBH_CS.ID_ARQUIVO                 := C_INC.ID_ARQUIVO;
                  REG_PBH_CS.NUMERO_LINHA               := C_INC.NUMERO_LINHA;
                  REG_PBH_CS.TIPO_OPERACAO              := C_INC.TIPO_OPERACAO;
                  REG_PBH_CS.TIPO_PARTICIPANTE          := C_INC.TIPO_PARTICIPANTE;
                  REG_PBH_CS.ANO                        := C_INC.ANO;
                  REG_PBH_CS.MES_REFERENCIA             := C_INC.MES_REFERENCIA;
                  REG_PBH_CS.CODIGO_EMPRESA             := C_INC.CODIGO_EMPRESA;
                  REG_PBH_CS.CODIGO_CONTRATO            := C_INC.CODIGO_CONTRATO;
                  REG_PBH_CS.CODIGO_PESSOA_BENEFICIARIO := C_INC.CODIGO_PESSOA_BENEFICIARIO;
                  REG_PBH_CS.CPF                        := C_INC.CPF;
                  REG_PBH_CS.CODIGO_BENEFICIO           := vCODIGO_BENEFICIO;
                  REG_PBH_CS.CATEGORIA_BENEFICIO        := '0052';
                  REG_PBH_CS.DATA_CONCESSAO             := TO_DATE('01/'||C_INC.MES_REFERENCIA||'/'||C_INC.ANO,'DD/MM/YYYY');
                  REG_PBH_CS.DATA_CANCELAMENTO          := LAST_DAY(TO_DATE('01/'||C_INC.MES_REFERENCIA||'/'||C_INC.ANO,'DD/MM/YYYY'));
                  REG_PBH_CS.PERCENT_FACULTATIVO        := C_INC.PERCENT_FACULTATIVO;
                  REG_PBH_CS.PERCENT_PATROCINADO        := C_INC.PERCENT_PATROCINADO;
                  REG_PBH_CS.PERCENT_PATROCINADOR       := C_INC.PERCENT_PATROCINADOR;
                  REG_PBH_CS.VALOR_APORTE_OPCIONAL      := C_INC.VALOR_APORTE_OPCIONAL;
                  REG_PBH_CS.CODIGO_FORNECEDOR          := vCODIGO_FORNECEDOR;
                  REG_PBH_CS.VALOR_GRAVACAO             := TO_NUMBER(C_INC.VALOR_APORTE_OPCIONAL)/100;
                  REG_PBH_CS.PERCENT_GRAVACAO           := 0;
                  vQTDE_LINHAS_AFETADAS                 := INCLUIR_CONCESSAO(REG_PBH_CS);
                  IF vQTDE_LINHAS_AFETADAS               > 0 THEN
                    BEGIN
                      GRAVA_LOG(C_INC.CODIGO_EMPRESA, CATEGORIA_LOG_EFETIVACAO, TIPO_LOG_SUCESSO, C_INC.ID_ARQUIVO, C_INC.NUMERO_LINHA, LOG_SUCESSO_INCLUSAO, NULL);
                    END;
                  END IF;
                END;
              END IF;
            END;
          END IF;
        ELSE
          /*NÃO POSSUI PREVIDENCIA*/
          --dbms_output.put_line('NÃO POSSUI PREVIDENCIA '|| C_INC.CODIGO_CONTRATO );
          IF (C_INC.PERCENT_PATROCINADO > 0 AND C_INC.PERCENT_FACULTATIVO = 0)THEN
            BEGIN
              IF TO_NUMBER(C_INC.PERCENT_PATROCINADO)/100 BETWEEN vPERCENT_BASE_INICIAL AND vPERCENT_BASE_FINAL THEN
                REG_PBH_CS.ID_ARQUIVO                 := C_INC.ID_ARQUIVO;
                REG_PBH_CS.NUMERO_LINHA               := C_INC.NUMERO_LINHA;
                REG_PBH_CS.TIPO_OPERACAO              := C_INC.TIPO_OPERACAO;
                REG_PBH_CS.TIPO_PARTICIPANTE          := C_INC.TIPO_PARTICIPANTE;
                REG_PBH_CS.ANO                        := C_INC.ANO;
                REG_PBH_CS.MES_REFERENCIA             := C_INC.MES_REFERENCIA;
                REG_PBH_CS.CODIGO_EMPRESA             := C_INC.CODIGO_EMPRESA;
                REG_PBH_CS.CODIGO_CONTRATO            := C_INC.CODIGO_CONTRATO;
                REG_PBH_CS.CODIGO_PESSOA_BENEFICIARIO := C_INC.CODIGO_PESSOA_BENEFICIARIO;
                REG_PBH_CS.CPF                        := C_INC.CPF;
                REG_PBH_CS.CODIGO_BENEFICIO           := vCODIGO_BENEFICIO;
                REG_PBH_CS.CATEGORIA_BENEFICIO        := '0051';
                REG_PBH_CS.DATA_CONCESSAO             := TO_DATE('01/'||C_INC.MES_REFERENCIA||'/'||C_INC.ANO,'DD/MM/YYYY');
                REG_PBH_CS.DATA_CANCELAMENTO          := C_INC.DATA_CANCELAMENTO;
                REG_PBH_CS.PERCENT_FACULTATIVO        := TO_NUMBER(C_INC.PERCENT_FACULTATIVO)  /100;
                REG_PBH_CS.PERCENT_PATROCINADO        := TO_NUMBER(C_INC.PERCENT_PATROCINADO)  /100;
                REG_PBH_CS.PERCENT_PATROCINADOR       := TO_NUMBER(C_INC.PERCENT_PATROCINADOR) /100;
                REG_PBH_CS.VALOR_APORTE_OPCIONAL      := TO_NUMBER(C_INC.VALOR_APORTE_OPCIONAL)/100;
                REG_PBH_CS.CODIGO_FORNECEDOR          := vCODIGO_FORNECEDOR;
                REG_PBH_CS.VALOR_GRAVACAO             := 0;
                REG_PBH_CS.PERCENT_GRAVACAO           := TO_NUMBER(C_INC.PERCENT_PATROCINADO)/100;
                vQTDE_LINHAS_AFETADAS                 := INCLUIR_CONCESSAO(REG_PBH_CS);
                IF vQTDE_LINHAS_AFETADAS               > 0 THEN
                  BEGIN
                    GRAVA_LOG(C_INC.CODIGO_EMPRESA, CATEGORIA_LOG_EFETIVACAO, TIPO_LOG_SUCESSO, C_INC.ID_ARQUIVO, C_INC.NUMERO_LINHA, LOG_SUCESSO_INCLUSAO, NULL);
                  END;
                END IF;
              ELSE
                --
                IF TO_NUMBER(C_INC.PERCENT_PATROCINADO)                                                                                                                                                                                            /100 < vPERCENT_BASE_INICIAL THEN
                  GRAVA_LOG(C_INC.CODIGO_EMPRESA, CATEGORIA_LOG_EFETIVACAO, TIPO_LOG_ERRO, C_INC.ID_ARQUIVO, C_INC.NUMERO_LINHA, LOG_CONC_PERCENT_MENOR ,C_INC.CPF || '|' || 'PERCENT_PATROCI_INFORMADO = ' || TO_NUMBER(C_INC.PERCENT_PATROCINADO)/100 || '|' || 'CODIGO_CONTRATO = ' || C_INC.CODIGO_CONTRATO);
                ELSE
                  GRAVA_LOG(C_INC.CODIGO_EMPRESA, CATEGORIA_LOG_EFETIVACAO, TIPO_LOG_ERRO, C_INC.ID_ARQUIVO, C_INC.NUMERO_LINHA, LOG_CONC_PERCENT_MAIOR ,C_INC.CPF || '|' || 'PERCENT_PATROCI_INFORMADO = ' || TO_NUMBER(C_INC.PERCENT_PATROCINADO)/100 || '|' || 'CODIGO_CONTRATO = ' || C_INC.CODIGO_CONTRATO);
                END IF;
              END IF;
            END;
          ELSIF ( C_INC.PERCENT_FACULTATIVO > 0 AND C_INC.PERCENT_PATROCINADO = 0 ) THEN
            BEGIN
              IF TO_NUMBER(C_INC.PERCENT_FACULTATIVO)/100 BETWEEN vPERCENT_BASE_INICIAL AND vPERCENT_BASE_FINAL THEN
                REG_PBH_CS.ID_ARQUIVO                 := C_INC.ID_ARQUIVO;
                REG_PBH_CS.NUMERO_LINHA               := C_INC.NUMERO_LINHA;
                REG_PBH_CS.TIPO_OPERACAO              := C_INC.TIPO_OPERACAO;
                REG_PBH_CS.TIPO_PARTICIPANTE          := C_INC.TIPO_PARTICIPANTE;
                REG_PBH_CS.ANO                        := C_INC.ANO;
                REG_PBH_CS.MES_REFERENCIA             := C_INC.MES_REFERENCIA;
                REG_PBH_CS.CODIGO_EMPRESA             := C_INC.CODIGO_EMPRESA;
                REG_PBH_CS.CODIGO_CONTRATO            := C_INC.CODIGO_CONTRATO;
                REG_PBH_CS.CODIGO_PESSOA_BENEFICIARIO := C_INC.CODIGO_PESSOA_BENEFICIARIO;
                REG_PBH_CS.CPF                        := C_INC.CPF;
                REG_PBH_CS.CODIGO_BENEFICIO           := vCODIGO_BENEFICIO;
                REG_PBH_CS.CATEGORIA_BENEFICIO        := '0050';
                REG_PBH_CS.DATA_CONCESSAO             := TO_DATE('01/'||C_INC.MES_REFERENCIA||'/'||C_INC.ANO,'DD/MM/YYYY');
                REG_PBH_CS.DATA_CANCELAMENTO          := C_INC.DATA_CANCELAMENTO;
                REG_PBH_CS.PERCENT_FACULTATIVO        := TO_NUMBER(C_INC.PERCENT_FACULTATIVO)  /100;
                REG_PBH_CS.PERCENT_PATROCINADO        := TO_NUMBER(C_INC.PERCENT_PATROCINADO)  /100;
                REG_PBH_CS.PERCENT_PATROCINADOR       := TO_NUMBER(C_INC.PERCENT_PATROCINADOR) /100;
                REG_PBH_CS.VALOR_APORTE_OPCIONAL      := TO_NUMBER(C_INC.VALOR_APORTE_OPCIONAL)/100;
                REG_PBH_CS.CODIGO_FORNECEDOR          := vCODIGO_FORNECEDOR;
                REG_PBH_CS.VALOR_GRAVACAO             := 0;
                REG_PBH_CS.PERCENT_GRAVACAO           := TO_NUMBER(C_INC.PERCENT_FACULTATIVO)/100;
                vQTDE_LINHAS_AFETADAS                 := INCLUIR_CONCESSAO(REG_PBH_CS);
                IF vQTDE_LINHAS_AFETADAS               > 0 THEN
                  BEGIN
                    GRAVA_LOG(C_INC.CODIGO_EMPRESA, CATEGORIA_LOG_EFETIVACAO, TIPO_LOG_SUCESSO, C_INC.ID_ARQUIVO, C_INC.NUMERO_LINHA, LOG_SUCESSO_INCLUSAO, NULL);
                  END;
                END IF;
              ELSE
                --
                IF TO_NUMBER(C_INC.PERCENT_FACULTATIVO)                                                                                                                                                                                          /100 < vPERCENT_BASE_INICIAL THEN
                  GRAVA_LOG(C_INC.CODIGO_EMPRESA, CATEGORIA_LOG_EFETIVACAO, TIPO_LOG_ERRO, C_INC.ID_ARQUIVO, C_INC.NUMERO_LINHA, LOG_CONC_PERCENT_MENOR ,C_INC.CPF || '|' || 'PERCENT_FACUL_INFORMADO = ' || TO_NUMBER(C_INC.PERCENT_FACULTATIVO)/100 || '|' || 'CODIGO_CONTRATO = ' || C_INC.CODIGO_CONTRATO);
                ELSE
                  GRAVA_LOG(C_INC.CODIGO_EMPRESA, CATEGORIA_LOG_EFETIVACAO, TIPO_LOG_ERRO, C_INC.ID_ARQUIVO, C_INC.NUMERO_LINHA, LOG_CONC_PERCENT_MAIOR ,C_INC.CPF || '|' || 'PERCENT_FACUL_INFORMADO = ' || TO_NUMBER(C_INC.PERCENT_FACULTATIVO)/100 || '|' || 'CODIGO_CONTRATO = ' || C_INC.CODIGO_CONTRATO);
                END IF;
              END IF;
            END;
          ELSE
            -- dbms_output.put_line('DUPLA INSERÇÃO' ||NVL(C_INC.PERCENT_PATROCINADO/100,0)||' - '|| vPERCENT_PATROCINADO );
            vIDENTIFICADOR_REGRA := 'DUPLA INSERÇÃO';
            GRAVA_LOG(PCODIGO_EMPRESA, CATEGORIA_LOG_EFETIVACAO, TIPO_LOG_ERRO, PID_ARQUIVO, 0, CODIGO_LOG_PROCESSAMENTO_50, 'APLICACAO REGRA ' || vIDENTIFICADOR_REGRA || '.');
          END IF;
          IF ((C_INC.PERCENT_PATROCINADO > 0 AND C_INC.PERCENT_FACULTATIVO = 0) OR (C_INC.PERCENT_FACULTATIVO > 0 AND C_INC.PERCENT_PATROCINADO = 0)) AND C_INC.VALOR_APORTE_OPCIONAL > 0 THEN
            BEGIN
              REG_PBH_CS.ID_ARQUIVO                 := C_INC.ID_ARQUIVO;
              REG_PBH_CS.NUMERO_LINHA               := C_INC.NUMERO_LINHA;
              REG_PBH_CS.TIPO_OPERACAO              := C_INC.TIPO_OPERACAO;
              REG_PBH_CS.TIPO_PARTICIPANTE          := C_INC.TIPO_PARTICIPANTE;
              REG_PBH_CS.ANO                        := C_INC.ANO;
              REG_PBH_CS.MES_REFERENCIA             := C_INC.MES_REFERENCIA;
              REG_PBH_CS.CODIGO_EMPRESA             := C_INC.CODIGO_EMPRESA;
              REG_PBH_CS.CODIGO_CONTRATO            := C_INC.CODIGO_CONTRATO;
              REG_PBH_CS.CODIGO_PESSOA_BENEFICIARIO := C_INC.CODIGO_PESSOA_BENEFICIARIO;
              REG_PBH_CS.CPF                        := C_INC.CPF;
              REG_PBH_CS.CODIGO_BENEFICIO           := vCODIGO_BENEFICIO;
              REG_PBH_CS.CATEGORIA_BENEFICIO        := '0052';
              REG_PBH_CS.DATA_CONCESSAO             := TO_DATE('01/'||C_INC.MES_REFERENCIA||'/'||C_INC.ANO,'DD/MM/YYYY');
              REG_PBH_CS.DATA_CANCELAMENTO          := LAST_DAY(TO_DATE('01/'||C_INC.MES_REFERENCIA||'/'||C_INC.ANO,'DD/MM/YYYY'));
              REG_PBH_CS.PERCENT_FACULTATIVO        := C_INC.PERCENT_FACULTATIVO;
              REG_PBH_CS.PERCENT_PATROCINADO        := C_INC.PERCENT_PATROCINADO;
              REG_PBH_CS.PERCENT_PATROCINADOR       := C_INC.PERCENT_PATROCINADOR;
              REG_PBH_CS.VALOR_APORTE_OPCIONAL      := C_INC.VALOR_APORTE_OPCIONAL;
              REG_PBH_CS.CODIGO_FORNECEDOR          := vCODIGO_FORNECEDOR;
              REG_PBH_CS.VALOR_GRAVACAO             := TO_NUMBER(C_INC.VALOR_APORTE_OPCIONAL)/100;
              REG_PBH_CS.PERCENT_GRAVACAO           := 0;
              vQTDE_LINHAS_AFETADAS                 := INCLUIR_CONCESSAO(REG_PBH_CS);
              IF vQTDE_LINHAS_AFETADAS               > 0 THEN
                BEGIN
                  GRAVA_LOG(C_INC.CODIGO_EMPRESA, CATEGORIA_LOG_EFETIVACAO, TIPO_LOG_SUCESSO, C_INC.ID_ARQUIVO, C_INC.NUMERO_LINHA, LOG_SUCESSO_INCLUSAO, NULL);
                END;
              END IF;
            END;
          END IF;
        END IF;
        ELSE
        GRAVA_LOG(C_INC.CODIGO_EMPRESA, CATEGORIA_LOG_EFETIVACAO, TIPO_LOG_ERRO, C_INC.ID_ARQUIVO, C_INC.NUMERO_LINHA, LOG_ANO_MES_REF_NAO_RELAC, NULL);
        END IF;
      EXCEPTION
      WHEN DUP_VAL_ON_INDEX THEN
        --dbms_output.put_line('ENCONTRADO ERRO - '||SQLCODE||' -ERROR- '||SQLERRM);
        raise_application_error (-20001,'TENTATIVA DE INCLUSÃ¿O DE REGITROS JÃ¿ CADASTRADOS');
        GRAVA_LOG(C_INC.CODIGO_EMPRESA, CATEGORIA_LOG_EFETIVACAO, TIPO_LOG_ERRO, C_INC.ID_ARQUIVO, C_INC.NUMERO_LINHA, LOG_REGISTRO_JA_EXISTENTE, NULL);
      WHEN OTHERS THEN
        --dbms_output.put_line('ENCONTRADO ERRO - '||SQLCODE||' -ERROR- '||SQLERRM);
        raise_application_error (-20002,'OCORREU UM ERRO AO TENTAR INCLUIR REGISTRO');
        GRAVA_LOG(C_INC.CODIGO_EMPRESA, CATEGORIA_LOG_EFETIVACAO, TIPO_LOG_ERRO, C_INC.ID_ARQUIVO, C_INC.NUMERO_LINHA, LOG_REGISTRO_JA_EXISTENTE, 'OCORREU UM ERRO AO TENTAR INCLUIR REGISTRO. '||'ENCONTRADO ERRO - '||SQLCODE||' -ERROR- '||SQLERRM);
      END;
      IF MOD(vCONTADOR,1000) = 0 THEN
        COMMIT;
      END IF;
      vPERCENT_PATROCINADO :=0;
      vCONTADOR            := vCONTADOR + 1;
    END LOOP;
    COMMIT;
    -- #### FIM OPERACAO INCLUSAO ####
    PR_SET_SITUACAO_PROCESSAMENTO('07');
    PR_CONTROLE_PROCESSAMENTO(PCODIGO_EMPRESA, PID_ARQUIVO, vSITUACAO_PROCESSAMENTO);
  END IF;-- #### FIM PACAO in (3, 10) ####
END;