
  CREATE OR REPLACE EDITIONABLE PROCEDURE "ARTERH"."IMPORTACAO_ADM_RET_TRABALHO" ( rtCODIGO_EMPRESA IN VARCHAR2, rtCPF IN VARCHAR2, rtDT_REG_OCORRENCIA IN DATE, rtDATA_CARGA IN DATE, 
                                                       rtNATUREZA_EXAME IN VARCHAR2, rtCODIGO_ATENDENTE IN VARCHAR2, rtNOME_ATENDENTE_ATENDENTE IN VARCHAR2, rtINSCRICAO_CONSELHO_ATENDENTE IN VARCHAR2, 
                                                       rtUF_CONSELHO_ATENDENTE IN VARCHAR2, rtCONSELHO_REGIONAL_ATENDENTE IN VARCHAR2) AS 

/*Quando for importar o 204 - Retorno ao trabalho é preciso comparar a data de ocorrência (exemplo 09/04) com a data fim do afastamento da ficha 104 conduta 38), 
pois é preciso ser maior que a fim, se der inapto no retorno ao trabalho é enviado uma nova ficha com uma nova data de ocorrência. Se for pendente é gerado uma 
nova ficha com a nova data de ocorrência.*/
/*IMPORTAÇÃO DO RETORNO AO TRABALHO*/
BEGIN
EXECUTE IMMEDIATE 'ALTER SESSION SET NLS_DATE_FORMAT = ''DD/MM/YYYY'''; 
DECLARE
ANALISAR_FICHA TP_IMPORT_ADM_PER;
--REC_PROC_CONDUTA VARCHAR(20);
REC_PROC_CONDUTA LISTA_PCSMO;
LINHA NUMBER;

/*VERIFICA SE A FICHA JA EXISTE OU SE IRÁ INSERIR*/
FUNCTION PR_VERIFICA_FICHA (vEMPRESA_FICHA IN CHAR, vCPF_FICHA IN VARCHAR, vDT_REG_FICHA IN DATE, vCARGA_FICHA IN DATE, vNATUREZA_EXAME_FICHA IN VARCHAR, vCONTRATO_FICHA IN VARCHAR, 
                              vTP_CONTRATO_FICHA IN CHAR, vCODIGO_ATENDENTE IN VARCHAR, vNOME_ATENDENTE_ATENDENTE IN VARCHAR, vINSCRICAO_CONSELHO_ATENDENTE IN VARCHAR, 
                              vUF_CONSELHO_ATENDENTE IN VARCHAR, vCONSELHO_REGIONAL_ATENDENTE IN VARCHAR, vCOD_PESS_ENCON IN VARCHAR )
RETURN TP_IMPORT_ADM_PER IS
DADOS_CAND TP_IMPORT_ADM_PER;

BEGIN 
DADOS_CAND := TP_IMPORT_ADM_PER (0,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);

FOR A5 IN (
SELECT SUGESP_IMPORTACAO_ADM_PER.C_LIVRE_VALOR01,SUGESP_IMPORTACAO_ADM_PER.CODIGO_EMPRESA,SUGESP_IMPORTACAO_ADM_PER.TIPO_CONTRATO,SUGESP_IMPORTACAO_ADM_PER.CODIGO_CONTRATO,
SUGESP_IMPORTACAO_ADM_PER.CPF,SUGESP_IMPORTACAO_ADM_PER.DT_REG_OCORRENCIA,SUGESP_IMPORTACAO_ADM_PER.NATUREZA_EXAME,SUGESP_IMPORTACAO_ADM_PER.CODIGO_ATENDENTE,
SUGESP_IMPORTACAO_ADM_PER.PESO,SUGESP_IMPORTACAO_ADM_PER.ALTURA,SUGESP_IMPORTACAO_ADM_PER.TEMPERATURA,SUGESP_IMPORTACAO_ADM_PER.PULSO,SUGESP_IMPORTACAO_ADM_PER.PRESSAO,
SUGESP_IMPORTACAO_ADM_PER.INDICE_MASSA_CORP,SUGESP_IMPORTACAO_ADM_PER.TEXTO02,SUGESP_IMPORTACAO_ADM_PER.TEXTO03,SUGESP_IMPORTACAO_ADM_PER.TEXTO05,
SUGESP_IMPORTACAO_ADM_PER.CTRL_APTIDAO,SUGESP_IMPORTACAO_ADM_PER.DATA_ASO,SUGESP_IMPORTACAO_ADM_PER.TEXTO_ASSOCIADO,SUGESP_IMPORTACAO_ADM_PER.CODIGO_CANDIDATO,
SUGESP_IMPORTACAO_ADM_PER.CODIGO_EVENTO_SEL,SUGESP_IMPORTACAO_ADM_PER.CODIGO_SEQUENCIAL,SUGESP_IMPORTACAO_ADM_PER.DATA_CARGA,SUGESP_IMPORTACAO_ADM_PER.LOGIN_CARGA, 
RHPESS_PESSOA.CODIGO COD_PESS, RHPESS_PESSOA.CPF AS CPF_PESS, RHPESS_CONTR_MEST.CODIGO_CONTRATO AS BM, RHPESS_CONTR_MEST.TIPO_CONTRATO AS TP_BM,
RHMEDI_FICHA_MED.CODIGO_PESSOA PESSOA_FICHA, RHMEDI_FICHA_MED.DT_REG_OCORRENCIA DT_OCORRECIA_FICHA, 
CASE WHEN RHMEDI_FICHA_MED.OCORRENCIA IS NULL AND MAX_OCORR.OCORR IS NULL THEN NVL(RHMEDI_FICHA_MED.OCORRENCIA,0)+1
     WHEN RHMEDI_FICHA_MED.OCORRENCIA IS NULL AND MAX_OCORR.OCORR IS NOT NULL THEN MAX_OCORR.OCORR + 1
     WHEN RHMEDI_FICHA_MED.OCORRENCIA IS NOT NULL AND MAX_OCORR.OCORR IS NOT NULL THEN MAX_OCORR.OCORR + 1
     WHEN RHMEDI_FICHA_MED.OCORRENCIA IS NOT NULL AND MAX_OCORR.OCORR IS NULL THEN NVL(RHMEDI_FICHA_MED.OCORRENCIA,0)+1 END AS OCORRENCIA_FICHA,
--NVL(RHMEDI_FICHA_MED.OCORRENCIA,0)+1 OCORRENCIA_FICHA, MAX_OCORR.OCORR OCORR_EXIST,
RHMEDI_FICHA_MED.CODIGO_EMPRESA EMPRESA_FICHA, SUGESP_IMPORTACAO_ADM_PER.ANALISA_FICHA, SUGESP_IMPORTACAO_ADM_PER.CODIGO_PESSOA_ENCONTRADO,
CASE WHEN RHMEDI_FICHA_MED.NATUREZA_EXAME = SUGESP_IMPORTACAO_ADM_PER.NATUREZA_EXAME THEN 'FICHA EXISTENTE' ELSE 'IMPORTAR' END AS ANALISE 
FROM SUGESP_IMPORTACAO_ADM_PER
LEFT JOIN RHPESS_CONTR_MEST
ON SUGESP_IMPORTACAO_ADM_PER.CODIGO_CONTRATO    = RHPESS_CONTR_MEST.CODIGO_CONTRATO
AND SUGESP_IMPORTACAO_ADM_PER.TIPO_CONTRATO     = RHPESS_CONTR_MEST.TIPO_CONTRATO 
AND SUGESP_IMPORTACAO_ADM_PER.CODIGO_EMPRESA    = RHPESS_CONTR_MEST.CODIGO_EMPRESA
LEFT JOIN RHPESS_PESSOA
ON RHPESS_PESSOA.CPF                            = LPAD(SUGESP_IMPORTACAO_ADM_PER.CPF,11,0)
AND RHPESS_PESSOA.CODIGO_EMPRESA                = SUGESP_IMPORTACAO_ADM_PER.CODIGO_EMPRESA
AND RHPESS_CONTR_MEST.CODIGO_EMPRESA            = RHPESS_PESSOA.CODIGO_EMPRESA
AND RHPESS_CONTR_MEST.CODIGO_PESSOA             = RHPESS_PESSOA.CODIGO
LEFT JOIN RHMEDI_FICHA_MED
ON /*SUGESP_IMPORTACAO_ADM_PER.CODIGO_CONTRATO  = RHMEDI_FICHA_MED.CODIGO_CONTRATO AND SUGESP_IMPORTACAO_ADM_PER.TIPO_CONTRATO = RHMEDI_FICHA_MED.TIPO_CONTRATO AND*/
SUGESP_IMPORTACAO_ADM_PER.CODIGO_EMPRESA        = RHMEDI_FICHA_MED.CODIGO_EMPRESA
AND SUGESP_IMPORTACAO_ADM_PER.DT_REG_OCORRENCIA = TRUNC(RHMEDI_FICHA_MED.DT_REG_OCORRENCIA)
AND RHMEDI_FICHA_MED.CODIGO_PESSOA              = RHPESS_PESSOA.CODIGO
AND RHMEDI_FICHA_MED.CODIGO_EMPRESA             = RHPESS_PESSOA.CODIGO_EMPRESA
AND SUGESP_IMPORTACAO_ADM_PER.NATUREZA_EXAME    = RHMEDI_FICHA_MED.NATUREZA_EXAME
LEFT JOIN (SELECT MAX(OCORRENCIA) AS OCORR, CODIGO_PESSOA, DT_REG_OCORRENCIA, CODIGO_EMPRESA
FROM RHMEDI_FICHA_MED M WHERE CODIGO_PESSOA = vCOD_PESS_ENCON AND DT_REG_OCORRENCIA = TRUNC(vDT_REG_FICHA) AND CODIGO_EMPRESA = vEMPRESA_FICHA
GROUP BY CODIGO_PESSOA, DT_REG_OCORRENCIA, CODIGO_EMPRESA) MAX_OCORR
ON SUGESP_IMPORTACAO_ADM_PER.CODIGO_EMPRESA        = MAX_OCORR.CODIGO_EMPRESA
AND SUGESP_IMPORTACAO_ADM_PER.DT_REG_OCORRENCIA = TRUNC(MAX_OCORR.DT_REG_OCORRENCIA)
AND MAX_OCORR.CODIGO_PESSOA              = RHPESS_PESSOA.CODIGO
AND MAX_OCORR.CODIGO_EMPRESA             = RHPESS_PESSOA.CODIGO_EMPRESA
WHERE SUGESP_IMPORTACAO_ADM_PER.NATUREZA_EXAME  = vNATUREZA_EXAME_FICHA
AND SUGESP_IMPORTACAO_ADM_PER.CODIGO_CONTRATO   = vCONTRATO_FICHA
AND SUGESP_IMPORTACAO_ADM_PER.CODIGO_EMPRESA    = vEMPRESA_FICHA
AND SUGESP_IMPORTACAO_ADM_PER.TIPO_CONTRATO     = vTP_CONTRATO_FICHA
AND SUGESP_IMPORTACAO_ADM_PER.CPF               = LPAD(vCPF_FICHA,11,0)
AND SUGESP_IMPORTACAO_ADM_PER.DT_REG_OCORRENCIA = TRUNC(vDT_REG_FICHA)
AND SUGESP_IMPORTACAO_ADM_PER.DATA_CARGA        = TRUNC(vCARGA_FICHA)
GROUP BY SUGESP_IMPORTACAO_ADM_PER.C_LIVRE_VALOR01,SUGESP_IMPORTACAO_ADM_PER.CODIGO_EMPRESA,SUGESP_IMPORTACAO_ADM_PER.TIPO_CONTRATO,SUGESP_IMPORTACAO_ADM_PER.CODIGO_CONTRATO,
SUGESP_IMPORTACAO_ADM_PER.CPF,SUGESP_IMPORTACAO_ADM_PER.DT_REG_OCORRENCIA,SUGESP_IMPORTACAO_ADM_PER.NATUREZA_EXAME,SUGESP_IMPORTACAO_ADM_PER.CODIGO_ATENDENTE,
SUGESP_IMPORTACAO_ADM_PER.PESO,SUGESP_IMPORTACAO_ADM_PER.ALTURA,SUGESP_IMPORTACAO_ADM_PER.TEMPERATURA,SUGESP_IMPORTACAO_ADM_PER.PULSO,SUGESP_IMPORTACAO_ADM_PER.PRESSAO,
SUGESP_IMPORTACAO_ADM_PER.INDICE_MASSA_CORP,SUGESP_IMPORTACAO_ADM_PER.TEXTO02,SUGESP_IMPORTACAO_ADM_PER.TEXTO03,SUGESP_IMPORTACAO_ADM_PER.TEXTO05,
SUGESP_IMPORTACAO_ADM_PER.CTRL_APTIDAO,SUGESP_IMPORTACAO_ADM_PER.DATA_ASO,SUGESP_IMPORTACAO_ADM_PER.TEXTO_ASSOCIADO,SUGESP_IMPORTACAO_ADM_PER.CODIGO_CANDIDATO,
SUGESP_IMPORTACAO_ADM_PER.CODIGO_EVENTO_SEL,SUGESP_IMPORTACAO_ADM_PER.CODIGO_SEQUENCIAL,SUGESP_IMPORTACAO_ADM_PER.DATA_CARGA,SUGESP_IMPORTACAO_ADM_PER.LOGIN_CARGA, 
RHPESS_PESSOA.CODIGO , RHPESS_PESSOA.CPF, RHPESS_CONTR_MEST.CODIGO_CONTRATO , RHPESS_CONTR_MEST.TIPO_CONTRATO ,
RHMEDI_FICHA_MED.CODIGO_PESSOA , RHMEDI_FICHA_MED.DT_REG_OCORRENCIA , 
CASE WHEN RHMEDI_FICHA_MED.OCORRENCIA IS NULL AND MAX_OCORR.OCORR IS NULL THEN NVL(RHMEDI_FICHA_MED.OCORRENCIA,0)+1
     WHEN RHMEDI_FICHA_MED.OCORRENCIA IS NULL AND MAX_OCORR.OCORR IS NOT NULL THEN MAX_OCORR.OCORR + 1
     WHEN RHMEDI_FICHA_MED.OCORRENCIA IS NOT NULL AND MAX_OCORR.OCORR IS NOT NULL THEN MAX_OCORR.OCORR + 1
     WHEN RHMEDI_FICHA_MED.OCORRENCIA IS NOT NULL AND MAX_OCORR.OCORR IS NULL THEN NVL(RHMEDI_FICHA_MED.OCORRENCIA,0)+1 END ,
--NVL(RHMEDI_FICHA_MED.OCORRENCIA,0)+1 OCORRENCIA_FICHA, MAX_OCORR.OCORR OCORR_EXIST,
RHMEDI_FICHA_MED.CODIGO_EMPRESA , SUGESP_IMPORTACAO_ADM_PER.ANALISA_FICHA, SUGESP_IMPORTACAO_ADM_PER.CODIGO_PESSOA_ENCONTRADO,
CASE WHEN RHMEDI_FICHA_MED.NATUREZA_EXAME = SUGESP_IMPORTACAO_ADM_PER.NATUREZA_EXAME THEN 'FICHA EXISTENTE' ELSE 'IMPORTAR' END 

)LOOP
dbms_output.put_line('ANALISE: '||A5.ANALISE||' A5.DT_OCORRECIA_FICHA: '||A5.DT_OCORRECIA_FICHA||' A5.ANALISA_FICHA '||A5.ANALISA_FICHA);
IF A5.DT_OCORRECIA_FICHA IS NOT NULL AND A5.ANALISA_FICHA IS NULL AND A5.ANALISE = 'FICHA EXISTENTE' THEN 

DADOS_CAND.VERIFICA:= 0;
DADOS_CAND.CODIGO_EMPRESA := NULL;
DADOS_CAND.CODIGO_PESSOA := NULL;
DADOS_CAND.APTIDAO := NULL;
DADOS_CAND.OCORRENCIA:= NULL;
DADOS_CAND.NOME_ATENDENTE_ATENDENTE := NULL;
DADOS_CAND.INSCRICAO_CONSELHO_ATENDENTE := NULL;
DADOS_CAND.UF_CONSELHO_ATENDENTE := NULL;
DADOS_CAND.CODIGO_ATENDENTE := NULL;
DADOS_CAND.NATUREZA_EXAME := NULL;
DADOS_CAND.PROCEDIMENTO_CONDUTA := NULL;
DADOS_CAND.CONSELHO_REGIONAL_ATENDENTE := NULL;
DADOS_CAND.ACAO := NULL;

dbms_output.put_line('ENTROU EM FICHA EXISTENTE');
UPDATE SUGESP_IMPORTACAO_ADM_PER SET ANALISA_FICHA = 'FICHA EXISTENTE'
WHERE CODIGO_EMPRESA = A5.EMPRESA_FICHA AND CPF  = A5.CPF_PESS AND DATA_PROCESSAMENTO IS NULL AND STATUS_PROCESSAMENTO IS NULL AND DATA_CARGA = TRUNC(vCARGA_FICHA) AND DT_REG_OCORRENCIA = TRUNC(A5.DT_OCORRECIA_FICHA); COMMIT WORK;

END IF;

IF (A5.DT_OCORRECIA_FICHA IS NULL AND A5.ANALISA_FICHA IS NULL AND A5.ANALISE = 'IMPORTAR') OR (A5.DT_OCORRECIA_FICHA IS NOT NULL AND A5.ANALISA_FICHA IS NULL AND A5.ANALISE = 'IMPORTAR') THEN  
dbms_output.put_line('ENTROU EM IMPORTAR');
DADOS_CAND.VERIFICA:= 1;
DADOS_CAND.CODIGO_EMPRESA := A5.CODIGO_EMPRESA;
DADOS_CAND.CODIGO_PESSOA := A5.COD_PESS;
DADOS_CAND.APTIDAO := NULL;
DADOS_CAND.OCORRENCIA := A5.OCORRENCIA_FICHA;
DADOS_CAND.NOME_ATENDENTE_ATENDENTE := NULL;
DADOS_CAND.INSCRICAO_CONSELHO_ATENDENTE := NULL;
DADOS_CAND.UF_CONSELHO_ATENDENTE := NULL;
DADOS_CAND.CODIGO_ATENDENTE := NULL;
DADOS_CAND.NATUREZA_EXAME := NULL;
DADOS_CAND.PROCEDIMENTO_CONDUTA := NULL;
DADOS_CAND.CONSELHO_REGIONAL_ATENDENTE := NULL;
DADOS_CAND.ACAO := NULL;

UPDATE SUGESP_IMPORTACAO_ADM_PER SET ANALISA_FICHA = 'FICHA INSERIDA'
WHERE CODIGO_EMPRESA = A5.CODIGO_EMPRESA AND CPF  = A5.CPF_PESS AND DATA_PROCESSAMENTO IS NULL AND STATUS_PROCESSAMENTO IS NULL AND DATA_CARGA = TRUNC(vCARGA_FICHA) AND DT_REG_OCORRENCIA = TRUNC(vDT_REG_FICHA); COMMIT WORK;

Insert into RHMEDI_FICHA_MED (CODIGO_EMPRESA,TIPO_CONTRATO,CODIGO_CONTRATO,CODIGO_PESSOA,DT_REG_OCORRENCIA,OCORRENCIA,NATUREZA_EXAME,EMPRESA_ATENDENTE,CODIGO_ATENDENTE,NOME_ATENDENTE,UF_INSCRICAO,INSCRICAO_CONSELHO,PARECER_MEDICO,DATA_ASO,PESO,ALTURA,PRESSAO,TEMPERATURA,PULSO,INDICE_MASSA_CORP,LOGIN_USUARIO,DT_ULT_ALTER_USUA, TEXTO02,TEXTO03,TEXTO05,ORIGEM_ASO, CONSELHO_REGIONAL,COD_MUNICIPIO_ASO ) 
values (vEMPRESA_FICHA,vTP_CONTRATO_FICHA,vCONTRATO_FICHA,A5.CODIGO_PESSOA_ENCONTRADO,vDT_REG_FICHA,A5.OCORRENCIA_FICHA,vNATUREZA_EXAME_FICHA,vEMPRESA_FICHA,vCODIGO_ATENDENTE,vNOME_ATENDENTE_ATENDENTE,vUF_CONSELHO_ATENDENTE,vINSCRICAO_CONSELHO_ATENDENTE,A5.CTRL_APTIDAO,A5.DATA_ASO,A5.PESO,A5.ALTURA,A5.PRESSAO,A5.TEMPERATURA,A5.PULSO,A5.INDICE_MASSA_CORP,A5.LOGIN_CARGA,SYSDATE,A5.TEXTO02,A5.TEXTO03,A5.TEXTO05,'E', vCONSELHO_REGIONAL_ATENDENTE, '000000000000010'); 
COMMIT WORK;

END IF;
END LOOP;
RETURN DADOS_CAND; 
END;

/*VERIFICA SE O EXAME EXISTE*/
PROCEDURE PR_IMPORTA_EXAME (VCOD_EMPRESA_EXAME CHAR, VCPF_EXAME VARCHAR, VNUMERO_L_EXAME NUMBER, VDT_REG_EXAME DATE, VDATA_C_EXAME DATE, VCOD_PESS_EXAME VARCHAR, VCOD_EXAME VARCHAR, VOCORRENCIA_EXAME NUMBER,
VCODIGO_ATENDENTE CHAR, VNOME_ATENDENTE_ATENDENTE CHAR, VINSCRICAO_CONSELHO_ATENDENTE CHAR, VUF_CONSELHO_ATENDENTE CHAR) AS
CONT NUMBER;
BEGIN
FOR A1 IN (
SELECT rank() over (PARTITION BY RHMEDI_EXAME.CODIGO ORDER BY SUGESP_IMPORTACAO_ADM_PER.NUMERO_LINHA) rank,SUGESP_IMPORTACAO_ADM_PER.CPF, RHMEDI_RL_FICH_EXA.DT_REG_OCORRENCIA, 
RHMEDI_RL_FICH_EXA.CODIGO_EMPRESA, SUGESP_IMPORTACAO_ADM_PER.COD_EXAME, SUGESP_IMPORTACAO_ADM_PER.NUMERO_LINHA,
RHMEDI_EXAME.CODIGO  AS CAD_EXAME, SUGESP_IMPORTACAO_ADM_PER.ANALISE_DADOS, SUGESP_IMPORTACAO_ADM_PER.C_LIVRE_VALOR01, SUGESP_IMPORTACAO_ADM_PER.DATA_REALIZACAO, 
SUGESP_IMPORTACAO_ADM_PER.RESULT_REFERENCIA, SUGESP_IMPORTACAO_ADM_PER.CODIGO_SEQUENCIAL, SUGESP_IMPORTACAO_ADM_PER.LOGIN_CARGA, RHMEDI_RL_FICH_EXA.OCORRENCIA,
SUGESP_IMPORTACAO_ADM_PER.CODIGO_CANDIDATO, SUGESP_IMPORTACAO_ADM_PER.NATUREZA_EXAME, SUGESP_IMPORTACAO_ADM_PER.CODIGO_EVENTO_SEL, RHMEDI_ITEM_EXAME.COD_ITEM_EXAME
FROM SUGESP_IMPORTACAO_ADM_PER
LEFT JOIN RHMEDI_RL_FICH_EXA
ON SUGESP_IMPORTACAO_ADM_PER.CODIGO_EMPRESA            = RHMEDI_RL_FICH_EXA.CODIGO_EMPRESA
AND SUGESP_IMPORTACAO_ADM_PER.DT_REG_OCORRENCIA        = TRUNC(RHMEDI_RL_FICH_EXA.DT_REG_OCORRENCIA)
AND SUGESP_IMPORTACAO_ADM_PER.COD_EXAME                = RHMEDI_RL_FICH_EXA.COD_EXAME
AND RHMEDI_RL_FICH_EXA.CODIGO_PESSOA                   = VCOD_PESS_EXAME
AND RHMEDI_RL_FICH_EXA.OCORRENCIA                      = VOCORRENCIA_EXAME
LEFT JOIN RHMEDI_EXAME
ON RHMEDI_EXAME.CODIGO                              = SUGESP_IMPORTACAO_ADM_PER.COD_EXAME
LEFT JOIN RHMEDI_ITEM_EXAME ON 
RHMEDI_ITEM_EXAME.COD_EXAME                         = RHMEDI_EXAME.CODIGO   
WHERE SUGESP_IMPORTACAO_ADM_PER.CODIGO_EMPRESA      = VCOD_EMPRESA_EXAME
AND SUGESP_IMPORTACAO_ADM_PER.CPF                   = VCPF_EXAME
AND SUGESP_IMPORTACAO_ADM_PER.NUMERO_LINHA          = VNUMERO_L_EXAME
AND SUGESP_IMPORTACAO_ADM_PER.DT_REG_OCORRENCIA     = TRUNC(VDT_REG_EXAME) --TO_DATE(VDT_REG_EXAME,'DD/MM/YYYY')
AND SUGESP_IMPORTACAO_ADM_PER.DATA_CARGA            = TRUNC(VDATA_C_EXAME)
AND SUGESP_IMPORTACAO_ADM_PER.COD_EXAME             = VCOD_EXAME
AND SUGESP_IMPORTACAO_ADM_PER.STATUS_PROCESSAMENTO IS NULL
AND SUGESP_IMPORTACAO_ADM_PER.DATA_PROCESSAMENTO   IS NULL
GROUP BY SUGESP_IMPORTACAO_ADM_PER.CPF, RHMEDI_RL_FICH_EXA.DT_REG_OCORRENCIA, RHMEDI_RL_FICH_EXA.CODIGO_EMPRESA, SUGESP_IMPORTACAO_ADM_PER.COD_EXAME, SUGESP_IMPORTACAO_ADM_PER.NUMERO_LINHA,
RHMEDI_EXAME.CODIGO, SUGESP_IMPORTACAO_ADM_PER.ANALISE_DADOS, SUGESP_IMPORTACAO_ADM_PER.C_LIVRE_VALOR01, SUGESP_IMPORTACAO_ADM_PER.DATA_REALIZACAO, 
SUGESP_IMPORTACAO_ADM_PER.RESULT_REFERENCIA, SUGESP_IMPORTACAO_ADM_PER.CODIGO_SEQUENCIAL, SUGESP_IMPORTACAO_ADM_PER.LOGIN_CARGA, RHMEDI_RL_FICH_EXA.OCORRENCIA,
SUGESP_IMPORTACAO_ADM_PER.CODIGO_CANDIDATO, SUGESP_IMPORTACAO_ADM_PER.NATUREZA_EXAME, SUGESP_IMPORTACAO_ADM_PER.CODIGO_EVENTO_SEL, RHMEDI_ITEM_EXAME.COD_ITEM_EXAME
)LOOP

IF  A1.CAD_EXAME IS NULL THEN

UPDATE SUGESP_IMPORTACAO_ADM_PER SET ANALISE_DADOS = A1.ANALISE_DADOS||'- EXAME NÃO ENCONTRADO'
WHERE CODIGO_EMPRESA = VCOD_EMPRESA_EXAME AND CPF = VCPF_EXAME AND NUMERO_LINHA = VNUMERO_L_EXAME AND DT_REG_OCORRENCIA = TRUNC(VDT_REG_EXAME) AND DATA_CARGA = TRUNC(VDATA_C_EXAME); COMMIT WORK;

END IF;

IF A1.DT_REG_OCORRENCIA IS NULL AND A1.CAD_EXAME IS NOT NULL THEN

INSERT INTO RHMEDI_RL_FICH_EXA (CODIGO_PESSOA,DT_REG_OCORRENCIA,OCORRENCIA,COD_EXAME,CODIGO_EMPRESA,C_LIVRE_VALOR01, DATA_REALIZACAO,COD_CLASSIFICACAO ,C_LIVRE_VALOR02,CODIGO_ATENDENTE,EMPRESA_ATENDENTE,INDIC_REFERENCIA,INDIC_OCUPACIONAL,AUTORIZA_INDRESUL,OBRIGATORIO_PCMSO,C_LIVRE_OPCAO01,C_LIVRE_OPCAO02,C_LIVRE_OPCAO03, LOGIN_USUARIO, DT_ULT_ALTER_USUA, NOME_DO_MEDICO, CRM, UF_CRM) 
VALUES (VCOD_PESS_EXAME, VDT_REG_EXAME, VOCORRENCIA_EXAME, VCOD_EXAME, VCOD_EMPRESA_EXAME, A1.C_LIVRE_VALOR01, A1.DATA_REALIZACAO, LPAD(A1.RESULT_REFERENCIA,4,0), A1.CODIGO_SEQUENCIAL, VCODIGO_ATENDENTE ,VCOD_EMPRESA_EXAME, 'N','N','N','N','N','N','N', A1.LOGIN_CARGA, SYSDATE, VNOME_ATENDENTE_ATENDENTE, VINSCRICAO_CONSELHO_ATENDENTE, VUF_CONSELHO_ATENDENTE );
COMMIT WORK; 

IF VCOD_EXAME = '0023' THEN
UPDATE RHMEDI_RL_FICH_EXA SET OBRIGATORIO_PCMSO = 'S' WHERE 
CODIGO_PESSOA = VCOD_PESS_EXAME AND DT_REG_OCORRENCIA = TRUNC(VDT_REG_EXAME) AND OCORRENCIA = VOCORRENCIA_EXAME AND COD_EXAME = VCOD_EXAME AND CODIGO_EMPRESA = VCOD_EMPRESA_EXAME;
END IF;

IF A1.COD_ITEM_EXAME IS NOT NULL THEN 

INSERT INTO RHMEDI_RL_FI_IT_EX (CODIGO_EMPRESA, CODIGO_PESSOA, DT_REG_OCORRENCIA, OCORRENCIA, COD_EXAME, COD_ITEM_EXAME, COD_CLASSIFICACAO, LOGIN_USUARIO, DT_ULT_ALTER_USUA, ORDEM, AUTORIZA_INDRESUL )  
VALUES  ( VCOD_EMPRESA_EXAME, VCOD_PESS_EXAME, VDT_REG_EXAME, VOCORRENCIA_EXAME , VCOD_EXAME, A1.COD_ITEM_EXAME, LPAD(A1.RESULT_REFERENCIA,4,0),  A1.LOGIN_CARGA, SYSDATE, '2', 'N');
COMMIT WORK;
END IF;
END IF;

END LOOP;
END;

/*A PROCEDURE PR_IMPORTA_DOENCA ATUALIZA OU INSERE INFORMACOES NA TABELA RHMEDI_RL_FICH_DOE DE DOENCA NO MODULO DE MEDICINA*/
PROCEDURE PR_IMPORTA_DOENCA (VCOD_EMPRESA_DOENCA CHAR, VCPF_DOENCA VARCHAR, VNUMERO_L_DOENCA NUMBER, VDT_REG_DOENCA DATE, VDATA_C_DOENCA DATE, VCOD_PESS_DOENCA VARCHAR, VCOD_DOENCA VARCHAR,
VOCORRENCIA_DOENCA NUMBER) AS
CONT NUMBER;
BEGIN
FOR A3 IN (
SELECT SUGESP_IMPORTACAO_ADM_PER.CPF, RHMEDI_RL_FICH_DOE.DT_REG_OCORRENCIA, RHMEDI_RL_FICH_DOE.CODIGO_EMPRESA, SUGESP_IMPORTACAO_ADM_PER.COD_DOENCA AS DOENCA_IMP, SUGESP_IMPORTACAO_ADM_PER.NUMERO_LINHA,
RHMEDI_DOENCA.CODIGO AS CAD_DOENCA, SUGESP_IMPORTACAO_ADM_PER.ANALISE_DADOS, SUGESP_IMPORTACAO_ADM_PER.LOGIN_CARGA, SUGESP_IMPORTACAO_ADM_PER.DOENCA_TRABALHO, RHMEDI_FICHA_MED.OCORRENCIA OCORRENCIA_FICHA,
RHMEDI_RL_FICH_DOE.COD_DOENCA AS DOENCA_FICHA
FROM SUGESP_IMPORTACAO_ADM_PER
LEFT JOIN RHMEDI_FICHA_MED ON 
RHMEDI_FICHA_MED.CODIGO_EMPRESA                        = SUGESP_IMPORTACAO_ADM_PER.CODIGO_EMPRESA AND
RHMEDI_FICHA_MED.CODIGO_PESSOA                         = SUGESP_IMPORTACAO_ADM_PER.CODIGO_PESSOA_ENCONTRADO AND 
RHMEDI_FICHA_MED.DT_REG_OCORRENCIA                     = TRUNC(SUGESP_IMPORTACAO_ADM_PER.DT_REG_OCORRENCIA) AND
RHMEDI_FICHA_MED.OCORRENCIA                            = VOCORRENCIA_DOENCA
LEFT JOIN RHMEDI_RL_FICH_DOE
ON SUGESP_IMPORTACAO_ADM_PER.CODIGO_EMPRESA            = RHMEDI_RL_FICH_DOE.CODIGO_EMPRESA
AND SUGESP_IMPORTACAO_ADM_PER.DT_REG_OCORRENCIA        = TRUNC(RHMEDI_RL_FICH_DOE.DT_REG_OCORRENCIA)
--AND SUGESP_IMPORTACAO_ADM_PER.COD_DOENCA               = RHMEDI_RL_FICH_DOE.COD_DOENCA
AND RHMEDI_RL_FICH_DOE.CODIGO_PESSOA                   = VCOD_PESS_DOENCA AND
RHMEDI_FICHA_MED.CODIGO_EMPRESA                        = RHMEDI_RL_FICH_DOE.CODIGO_EMPRESA AND
RHMEDI_FICHA_MED.CODIGO_PESSOA                         = RHMEDI_RL_FICH_DOE.CODIGO_PESSOA AND 
RHMEDI_FICHA_MED.DT_REG_OCORRENCIA                     = TRUNC(RHMEDI_RL_FICH_DOE.DT_REG_OCORRENCIA)AND 
RHMEDI_FICHA_MED.OCORRENCIA                            = RHMEDI_RL_FICH_DOE.OCORRENCIA
AND RHMEDI_RL_FICH_DOE.OCORRENCIA                      = VOCORRENCIA_DOENCA
LEFT JOIN RHMEDI_DOENCA
ON SUGESP_IMPORTACAO_ADM_PER.COD_DOENCA                = RHMEDI_DOENCA.CODIGO
WHERE SUGESP_IMPORTACAO_ADM_PER.CODIGO_EMPRESA         = VCOD_EMPRESA_DOENCA
AND SUGESP_IMPORTACAO_ADM_PER.CPF                      = VCPF_DOENCA
AND SUGESP_IMPORTACAO_ADM_PER.NUMERO_LINHA             = VNUMERO_L_DOENCA
AND SUGESP_IMPORTACAO_ADM_PER.DT_REG_OCORRENCIA        = TRUNC(VDT_REG_DOENCA) --TO_DATE(VDT_REG_DOENCA,'DD/MM/YYYY')
AND TRUNC(SUGESP_IMPORTACAO_ADM_PER.DATA_CARGA)        = TRUNC(VDATA_C_DOENCA)
AND SUGESP_IMPORTACAO_ADM_PER.COD_DOENCA               = VCOD_DOENCA
AND SUGESP_IMPORTACAO_ADM_PER.STATUS_PROCESSAMENTO IS NULL
AND SUGESP_IMPORTACAO_ADM_PER.DATA_PROCESSAMENTO   IS NULL

)LOOP

IF A3.CAD_DOENCA IS NULL THEN 

UPDATE SUGESP_IMPORTACAO_ADM_PER SET ANALISE_DADOS = A3.ANALISE_DADOS||'- DOENÇA NÃO ENCONTRADA'
WHERE CODIGO_EMPRESA = VCOD_EMPRESA_DOENCA AND CPF = VCPF_DOENCA AND NUMERO_LINHA = VNUMERO_L_DOENCA AND DT_REG_OCORRENCIA = TRUNC(VDT_REG_DOENCA) AND DATA_CARGA = TRUNC(VDATA_C_DOENCA);
COMMIT WORK;

END IF;

IF A3.CAD_DOENCA IS NOT NULL AND (A3.DOENCA_FICHA IS NULL OR (A3.DOENCA_FICHA IS NOT NULL AND A3.DOENCA_FICHA <> A3.DOENCA_IMP)) THEN

INSERT INTO RHMEDI_RL_FICH_DOE (CODIGO_EMPRESA,CODIGO_PESSOA,DT_REG_OCORRENCIA,OCORRENCIA,LOGIN_USUARIO,COD_DOENCA,DT_ULT_ALTER_USUA,OCOR_DOENCA,C_LIVRE_OPCAO01,C_LIVRE_OPCAO02,C_LIVRE_OPCAO03,DOENCA_TRABALHO)
VALUES (VCOD_EMPRESA_DOENCA, VCOD_PESS_DOENCA,TRUNC(VDT_REG_DOENCA),VOCORRENCIA_DOENCA, A3.LOGIN_CARGA, VCOD_DOENCA, SYSDATE, (SELECT NVL(MAX(OCOR_DOENCA),0)+1 FROM RHMEDI_RL_FICH_DOE WHERE CODIGO_EMPRESA = VCOD_EMPRESA_DOENCA AND CODIGO_PESSOA = VCOD_PESS_DOENCA AND DT_REG_OCORRENCIA = TRUNC(VDT_REG_DOENCA) AND OCORRENCIA = VOCORRENCIA_DOENCA /*AND COD_DOENCA = VCOD_DOENCA*/),'N','N','N',A3.DOENCA_TRABALHO);
COMMIT WORK;

END IF;

END LOOP;

END;

/*VERIFICA SE A CONDUTA ESTA DE ACORDO*/
PROCEDURE PR_IMPORTA_CONDUTA (VCOD_EMPRESA_CONDUTA CHAR, VCPF_CONDUTA VARCHAR, VNUMERO_L_CONDUTA NUMBER, VDT_REG_CONDUTA DATE, VDATA_C_CONDUTA DATE, VCOD_PESS_CONDUTA VARCHAR, VCODIGO_PROC_MED VARCHAR,
VOCORRENCIA_FICHA NUMBER) AS
CONT NUMBER;
BEGIN
FOR A2 IN (
SELECT SUGESP_IMPORTACAO_ADM_PER.CPF, RHMEDI_RL_FICH_PRO.DT_REG_OCORRENCIA, RHMEDI_RL_FICH_PRO.CODIGO_EMPRESA, RHMEDI_RL_FICH_PRO.CODIGO_PROC_MED PROC_MED_ARTE, 
SUGESP_IMPORTACAO_ADM_PER.CODIGO_PROC_MED, RHMEDI_PROC_MED.CODIGO_PROC_MED AS CAD_CONDUTA, SUGESP_IMPORTACAO_ADM_PER.ANALISE_DADOS, SUGESP_IMPORTACAO_ADM_PER.C_LIVRE_VALOR01, SUGESP_IMPORTACAO_ADM_PER.CODIGO_SEQUENCIAL, 
SUGESP_IMPORTACAO_ADM_PER.LOGIN_CARGA, SUGESP_IMPORTACAO_ADM_PER.NATUREZA_EXAME,
regexp_substr(RHINTE_ED_IT_CONV.DADO_ORIGEM, '[^;]+',1, 1) AS  ID, 
regexp_substr(RHINTE_ED_IT_CONV.DADO_ORIGEM, '[^;]+',1, 2) AS  NATUREZA_EXAME_CONVERSAO, 
regexp_substr(RHINTE_ED_IT_CONV.DADO_ORIGEM, '[^;]+',1, 3) AS  CONDUTA ,
regexp_substr(RHINTE_ED_IT_CONV.DADO_ORIGEM, '[^;]+',1, 4) AS  EMPRESA, RHMEDI_FICHA_MED.OCORRENCIA OCORRENCIA_FICHA
FROM SUGESP_IMPORTACAO_ADM_PER
LEFT JOIN RHMEDI_FICHA_MED ON 
RHMEDI_FICHA_MED.CODIGO_EMPRESA                        = SUGESP_IMPORTACAO_ADM_PER.CODIGO_EMPRESA AND
RHMEDI_FICHA_MED.CODIGO_PESSOA                         = SUGESP_IMPORTACAO_ADM_PER.CODIGO_PESSOA_ENCONTRADO AND 
RHMEDI_FICHA_MED.DT_REG_OCORRENCIA                     = TRUNC(SUGESP_IMPORTACAO_ADM_PER.DT_REG_OCORRENCIA) AND
RHMEDI_FICHA_MED.OCORRENCIA                            = VOCORRENCIA_FICHA
LEFT JOIN RHMEDI_RL_FICH_PRO
ON SUGESP_IMPORTACAO_ADM_PER.CODIGO_EMPRESA            = RHMEDI_RL_FICH_PRO.CODIGO_EMPRESA
AND SUGESP_IMPORTACAO_ADM_PER.DT_REG_OCORRENCIA        = TRUNC(RHMEDI_RL_FICH_PRO.DT_REG_OCORRENCIA)
AND SUGESP_IMPORTACAO_ADM_PER.CODIGO_PROC_MED          = RHMEDI_RL_FICH_PRO.CODIGO_PROC_MED
AND RHMEDI_RL_FICH_PRO.CODIGO_PESSOA                   = VCOD_PESS_CONDUTA
AND RHMEDI_RL_FICH_PRO.OCORRENCIA                      = VOCORRENCIA_FICHA
LEFT JOIN RHMEDI_PROC_MED
ON SUGESP_IMPORTACAO_ADM_PER.CODIGO_PROC_MED        = RHMEDI_PROC_MED.CODIGO_PROC_MED
LEFT JOIN RHINTE_ED_IT_CONV ON 
RHINTE_ED_IT_CONV.CODIGO_CONVERSAO = 'TEG8' AND
SUGESP_IMPORTACAO_ADM_PER.CODIGO_PROC_MED = RHINTE_ED_IT_CONV.DADO_DESTINO AND 
SUBSTR(DADO_ORIGEM,INSTR (DADO_ORIGEM, ';') +1,4)   = SUGESP_IMPORTACAO_ADM_PER.NATUREZA_EXAME AND 
RHMEDI_RL_FICH_PRO.CODIGO_PROC_MED                  = regexp_substr(RHINTE_ED_IT_CONV.DADO_ORIGEM, '[^;]+',1, 3)
WHERE SUGESP_IMPORTACAO_ADM_PER.CODIGO_EMPRESA      = VCOD_EMPRESA_CONDUTA
AND SUGESP_IMPORTACAO_ADM_PER.CPF                   = VCPF_CONDUTA
AND SUGESP_IMPORTACAO_ADM_PER.DT_REG_OCORRENCIA     = TRUNC(VDT_REG_CONDUTA) --TO_DATE(VDT_REG_CONDUTA,'DD/MM/YYYY')
AND SUGESP_IMPORTACAO_ADM_PER.DATA_CARGA            = TRUNC(VDATA_C_CONDUTA)
AND SUGESP_IMPORTACAO_ADM_PER.CODIGO_PROC_MED       = VCODIGO_PROC_MED
AND SUGESP_IMPORTACAO_ADM_PER.STATUS_PROCESSAMENTO IS NULL
AND SUGESP_IMPORTACAO_ADM_PER.DATA_PROCESSAMENTO   IS NULL
GROUP BY SUGESP_IMPORTACAO_ADM_PER.CPF, RHMEDI_RL_FICH_PRO.DT_REG_OCORRENCIA, RHMEDI_RL_FICH_PRO.CODIGO_EMPRESA, RHMEDI_RL_FICH_PRO.CODIGO_PROC_MED , 
SUGESP_IMPORTACAO_ADM_PER.CODIGO_PROC_MED, RHMEDI_PROC_MED.CODIGO_PROC_MED, SUGESP_IMPORTACAO_ADM_PER.ANALISE_DADOS, SUGESP_IMPORTACAO_ADM_PER.C_LIVRE_VALOR01, SUGESP_IMPORTACAO_ADM_PER.CODIGO_SEQUENCIAL, 
SUGESP_IMPORTACAO_ADM_PER.LOGIN_CARGA, SUGESP_IMPORTACAO_ADM_PER.NATUREZA_EXAME,
regexp_substr(RHINTE_ED_IT_CONV.DADO_ORIGEM, '[^;]+',1, 1) , 
regexp_substr(RHINTE_ED_IT_CONV.DADO_ORIGEM, '[^;]+',1, 2) , 
regexp_substr(RHINTE_ED_IT_CONV.DADO_ORIGEM, '[^;]+',1, 3) ,
regexp_substr(RHINTE_ED_IT_CONV.DADO_ORIGEM, '[^;]+',1, 4) , RHMEDI_FICHA_MED.OCORRENCIA 

)LOOP

IF A2.CAD_CONDUTA IS NULL THEN

UPDATE SUGESP_IMPORTACAO_ADM_PER SET ANALISE_DADOS = A2.ANALISE_DADOS||'- CONDUTA NÃO ENCONTRADA'
WHERE CODIGO_EMPRESA = VCOD_EMPRESA_CONDUTA AND CPF = VCPF_CONDUTA AND NUMERO_LINHA = VNUMERO_L_CONDUTA AND DT_REG_OCORRENCIA = TRUNC(VDT_REG_CONDUTA) AND DATA_CARGA = TRUNC(VDATA_C_CONDUTA); COMMIT WORK;

END IF;

IF A2.DT_REG_OCORRENCIA IS NULL AND A2.CAD_CONDUTA IS NOT NULL THEN

INSERT INTO RHMEDI_RL_FICH_PRO (C_LIVRE_VALOR01,CODIGO_EMPRESA,CODIGO_PESSOA,DT_REG_OCORRENCIA,CODIGO_PROC_MED,OCORRENCIA,OCOR_PROC_MED,LOGIN_USUARIO,DT_ULT_ALTER_USUA,C_LIVRE_OPCAO01,C_LIVRE_VALOR02,C_LIVRE_OPCAO02,C_LIVRE_OPCAO03) 
VALUES(A2.C_LIVRE_VALOR01, VCOD_EMPRESA_CONDUTA, VCOD_PESS_CONDUTA, TRUNC(VDT_REG_CONDUTA) ,A2.CODIGO_PROC_MED, VOCORRENCIA_FICHA,(SELECT NVL(MAX(OCOR_PROC_MED),0)+1  FROM RHMEDI_RL_FICH_PRO WHERE CODIGO_PESSOA = VCOD_PESS_CONDUTA AND CODIGO_EMPRESA = VCOD_EMPRESA_CONDUTA AND DT_REG_OCORRENCIA = TRUNC(VDT_REG_CONDUTA) AND OCORRENCIA = VOCORRENCIA_FICHA AND CODIGO_PROC_MED = A2.CODIGO_PROC_MED), A2.LOGIN_CARGA, SYSDATE,'N', A2.CODIGO_SEQUENCIAL,'N','N');
COMMIT WORK;

END IF;

IF A2.DT_REG_OCORRENCIA IS NOT NULL AND A2.PROC_MED_ARTE IS NOT NULL AND A2.PROC_MED_ARTE <> A2.CONDUTA  THEN

INSERT INTO RHMEDI_RL_FICH_PRO (C_LIVRE_VALOR01,CODIGO_EMPRESA,CODIGO_PESSOA,DT_REG_OCORRENCIA,CODIGO_PROC_MED,OCORRENCIA,OCOR_PROC_MED,LOGIN_USUARIO,DT_ULT_ALTER_USUA,C_LIVRE_OPCAO01,C_LIVRE_VALOR02,C_LIVRE_OPCAO02,C_LIVRE_OPCAO03) 
VALUES(A2.C_LIVRE_VALOR01, VCOD_EMPRESA_CONDUTA, VCOD_PESS_CONDUTA, TRUNC(VDT_REG_CONDUTA), A2.CODIGO_PROC_MED, VOCORRENCIA_FICHA,(SELECT NVL(MAX(OCOR_PROC_MED),0)+1  FROM RHMEDI_RL_FICH_PRO WHERE CODIGO_PESSOA = VCOD_PESS_CONDUTA AND CODIGO_EMPRESA = VCOD_EMPRESA_CONDUTA AND DT_REG_OCORRENCIA = TRUNC(VDT_REG_CONDUTA)  AND OCORRENCIA = VOCORRENCIA_FICHA AND CODIGO_PROC_MED = A2.CODIGO_PROC_MED), A2.LOGIN_CARGA, SYSDATE,'N', A2.CODIGO_SEQUENCIAL,'N','N');
COMMIT WORK;

END IF;
END LOOP;
END;

/*VERIFICA SE A DEFICIENCIA EXISTE E ANALISA TODO O CADASTRO DA PESSOA E ASSOCIACAO DA PESSOA - DEFICIENCIA*/
PROCEDURE PR_IMPORTA_DEFICIENCIA (VCOD_EMPRESA_DEF CHAR, VCPF_DEF VARCHAR, VNUMERO_L_DEF NUMBER, VDT_REG_DEF DATE, VDATA_C_DEF DATE, VCOD_PESSOA VARCHAR) AS
CONT NUMBER;
BEGIN
FOR A4 IN (
SELECT SUGESP_IMPORTACAO_ADM_PER.CPF, SUGESP_IMPORTACAO_ADM_PER.DT_REG_OCORRENCIA, SUGESP_IMPORTACAO_ADM_PER.COD_DEFICIENCIA_1,SUGESP_IMPORTACAO_ADM_PER.COD_DEFICIENCIA_PRINCIPAL, 
RHPESS_PESSOA.CODIGO_EMPRESA, RHPESS_PESSOA.COD_DEFICIENCIA, RHPESS_PESSOA_DEFICIENCIA.COD_DEFICIENCIA AS DEFICIENCIA, 
SUGESP_IMPORTACAO_ADM_PER.LOGIN_CARGA, SUGESP_IMPORTACAO_ADM_PER.DATA_ASO, SUGESP_IMPORTACAO_ADM_PER.ANALISE_DADOS, SUGESP_IMPORTACAO_ADM_PER.ANALISE_DEFICIENCIA,
CASE WHEN SUGESP_IMPORTACAO_ADM_PER.COD_DEFICIENCIA_PRINCIPAL IS NOT NULL AND RHPESS_PESSOA.COD_DEFICIENCIA  IS NOT NULL AND
          SUGESP_IMPORTACAO_ADM_PER.COD_DEFICIENCIA_PRINCIPAL = RHPESS_PESSOA.COD_DEFICIENCIA THEN 'DEFICIENCIA PRINCIPAL IGUAL A DEFICIENCIA DE PESSOA'
     WHEN SUGESP_IMPORTACAO_ADM_PER.COD_DEFICIENCIA_PRINCIPAL IS NOT NULL AND RHPESS_PESSOA.COD_DEFICIENCIA  IS NOT NULL AND
          SUGESP_IMPORTACAO_ADM_PER.COD_DEFICIENCIA_PRINCIPAL <> RHPESS_PESSOA.COD_DEFICIENCIA THEN 'DEFICIENCIA PRINCIPAL DIFERENTE A DEFICIENCIA DE PESSOA'
     WHEN SUGESP_IMPORTACAO_ADM_PER.COD_DEFICIENCIA_PRINCIPAL IS NOT NULL AND RHPESS_PESSOA.COD_DEFICIENCIA  IS NULL THEN 'INSERIR DEFICIENCIA PRINCIPAL NO CADASTRO DE PESSOA'
     WHEN SUGESP_IMPORTACAO_ADM_PER.COD_DEFICIENCIA_PRINCIPAL IS NULL THEN 'N/A' END AS ANALISE_DEF_PRINCIPAL,
CASE WHEN SUGESP_IMPORTACAO_ADM_PER.COD_DEFICIENCIA_1 IS NOT NULL AND RHPESS_PESSOA_DEFICIENCIA.COD_DEFICIENCIA IS NOT NULL AND
          SUGESP_IMPORTACAO_ADM_PER.COD_DEFICIENCIA_1 = RHPESS_PESSOA_DEFICIENCIA.COD_DEFICIENCIA THEN 'JA EXISTE A ASSOCIAÇÃO DA DEFICIENCIA' 
     WHEN SUGESP_IMPORTACAO_ADM_PER.COD_DEFICIENCIA_1 IS NOT NULL AND RHPESS_PESSOA_DEFICIENCIA.COD_DEFICIENCIA IS NULL THEN 'ASSOCIAR A DEFICIENCIA'
     WHEN SUGESP_IMPORTACAO_ADM_PER.COD_DEFICIENCIA_1 IS NULL THEN 'N/A' END AS ANALISE_ASSO_DEF
FROM SUGESP_IMPORTACAO_ADM_PER
LEFT JOIN RHPESS_PESSOA
ON SUGESP_IMPORTACAO_ADM_PER.CODIGO_EMPRESA         = RHPESS_PESSOA.CODIGO_EMPRESA
AND LPAD(SUGESP_IMPORTACAO_ADM_PER.CPF,11,0)        = RHPESS_PESSOA.CPF
AND RHPESS_PESSOA.CODIGO                            = VCOD_PESSOA
LEFT JOIN RHPESS_PESSOA_DEFICIENCIA
ON SUGESP_IMPORTACAO_ADM_PER.CODIGO_EMPRESA         = RHPESS_PESSOA_DEFICIENCIA.CODIGO_EMPRESA
AND RHPESS_PESSOA.CODIGO                            = RHPESS_PESSOA_DEFICIENCIA.CODIGO_PESSOA
AND RHPESS_PESSOA_DEFICIENCIA.COD_DEFICIENCIA       = SUGESP_IMPORTACAO_ADM_PER.COD_DEFICIENCIA_1
WHERE SUGESP_IMPORTACAO_ADM_PER.CODIGO_EMPRESA      = VCOD_EMPRESA_DEF
AND SUGESP_IMPORTACAO_ADM_PER.CPF                   = VCPF_DEF
AND SUGESP_IMPORTACAO_ADM_PER.NUMERO_LINHA          = VNUMERO_L_DEF
AND SUGESP_IMPORTACAO_ADM_PER.DT_REG_OCORRENCIA     = TRUNC(VDT_REG_DEF) --TO_DATE(VDT_REG_DEF,'DD/MM/YYYY')
AND TRUNC(SUGESP_IMPORTACAO_ADM_PER.DATA_CARGA)     = TRUNC(VDATA_C_DEF)
AND SUGESP_IMPORTACAO_ADM_PER.STATUS_PROCESSAMENTO IS NULL
AND SUGESP_IMPORTACAO_ADM_PER.DATA_PROCESSAMENTO   IS NULL
GROUP BY SUGESP_IMPORTACAO_ADM_PER.CPF, SUGESP_IMPORTACAO_ADM_PER.DT_REG_OCORRENCIA, SUGESP_IMPORTACAO_ADM_PER.COD_DEFICIENCIA_1,SUGESP_IMPORTACAO_ADM_PER.COD_DEFICIENCIA_PRINCIPAL, 
RHPESS_PESSOA.CODIGO_EMPRESA, RHPESS_PESSOA.COD_DEFICIENCIA, RHPESS_PESSOA_DEFICIENCIA.COD_DEFICIENCIA , 
SUGESP_IMPORTACAO_ADM_PER.LOGIN_CARGA, SUGESP_IMPORTACAO_ADM_PER.DATA_ASO, SUGESP_IMPORTACAO_ADM_PER.ANALISE_DADOS, SUGESP_IMPORTACAO_ADM_PER.ANALISE_DEFICIENCIA,
CASE WHEN SUGESP_IMPORTACAO_ADM_PER.COD_DEFICIENCIA_PRINCIPAL IS NOT NULL AND RHPESS_PESSOA.COD_DEFICIENCIA  IS NOT NULL AND
          SUGESP_IMPORTACAO_ADM_PER.COD_DEFICIENCIA_PRINCIPAL = RHPESS_PESSOA.COD_DEFICIENCIA THEN 'DEFICIENCIA PRINCIPAL IGUAL A DEFICIENCIA DE PESSOA'
     WHEN SUGESP_IMPORTACAO_ADM_PER.COD_DEFICIENCIA_PRINCIPAL IS NOT NULL AND RHPESS_PESSOA.COD_DEFICIENCIA  IS NOT NULL AND
          SUGESP_IMPORTACAO_ADM_PER.COD_DEFICIENCIA_PRINCIPAL <> RHPESS_PESSOA.COD_DEFICIENCIA THEN 'DEFICIENCIA PRINCIPAL DIFERENTE A DEFICIENCIA DE PESSOA'
     WHEN SUGESP_IMPORTACAO_ADM_PER.COD_DEFICIENCIA_PRINCIPAL IS NOT NULL AND RHPESS_PESSOA.COD_DEFICIENCIA  IS NULL THEN 'INSERIR DEFICIENCIA PRINCIPAL NO CADASTRO DE PESSOA'
     WHEN SUGESP_IMPORTACAO_ADM_PER.COD_DEFICIENCIA_PRINCIPAL IS NULL THEN 'N/A' END ,
CASE WHEN SUGESP_IMPORTACAO_ADM_PER.COD_DEFICIENCIA_1 IS NOT NULL AND RHPESS_PESSOA_DEFICIENCIA.COD_DEFICIENCIA IS NOT NULL AND
          SUGESP_IMPORTACAO_ADM_PER.COD_DEFICIENCIA_1 = RHPESS_PESSOA_DEFICIENCIA.COD_DEFICIENCIA THEN 'JA EXISTE A ASSOCIAÇÃO DA DEFICIENCIA' 
     WHEN SUGESP_IMPORTACAO_ADM_PER.COD_DEFICIENCIA_1 IS NOT NULL AND RHPESS_PESSOA_DEFICIENCIA.COD_DEFICIENCIA IS NULL THEN 'ASSOCIAR A DEFICIENCIA'
     WHEN SUGESP_IMPORTACAO_ADM_PER.COD_DEFICIENCIA_1 IS NULL THEN 'N/A' END 
)LOOP

IF A4.ANALISE_DEF_PRINCIPAL = 'INSERIR DEFICIENCIA PRINCIPAL NO CADASTRO DE PESSOA'  THEN

UPDATE RHPESS_PESSOA SET COD_DEFICIENCIA = A4.COD_DEFICIENCIA_PRINCIPAL, LOGIN_USUARIO = A4.LOGIN_CARGA, DT_ULT_ALTER_USUA = SYSDATE WHERE CODIGO = VCOD_PESSOA AND CODIGO_EMPRESA = VCOD_EMPRESA_DEF;
COMMIT WORK;

UPDATE SUGESP_IMPORTACAO_ADM_PER SET ANALISE_DEFICIENCIA = A4.ANALISE_DEFICIENCIA||' - DEFICIENCIA NO CADASTRO DE PESSOA OK'
WHERE DATA_PROCESSAMENTO IS NULL AND STATUS_PROCESSAMENTO IS NULL AND CODIGO_EMPRESA = VCOD_EMPRESA_DEF AND CPF  = VCPF_DEF AND DATA_CARGA = TRUNC(VDATA_C_DEF) AND DT_REG_OCORRENCIA = TRUNC(VDT_REG_DEF) AND NUMERO_LINHA = VNUMERO_L_DEF;
COMMIT WORK;
END IF ;


IF A4.ANALISE_DEF_PRINCIPAL = 'DEFICIENCIA PRINCIPAL DIFERENTE A DEFICIENCIA DE PESSOA'  THEN

UPDATE SUGESP_IMPORTACAO_ADM_PER SET ANALISE_DEFICIENCIA = A4.ANALISE_DEFICIENCIA||' - DEFICIENCIA PRINCIPAL DIFERENTE A DEFICIENCIA DE PESSOA'
WHERE DATA_PROCESSAMENTO IS NULL AND STATUS_PROCESSAMENTO IS NULL AND CODIGO_EMPRESA = VCOD_EMPRESA_DEF AND CPF  = VCPF_DEF AND DATA_CARGA = TRUNC(VDATA_C_DEF) AND DT_REG_OCORRENCIA = TRUNC(VDT_REG_DEF) AND NUMERO_LINHA = VNUMERO_L_DEF;
COMMIT WORK;
END IF ;

IF A4.ANALISE_ASSO_DEF = 'ASSOCIAR A DEFICIENCIA' THEN

INSERT INTO RHPESS_PESSOA_DEFICIENCIA (COD_DEFICIENCIA,CODIGO_EMPRESA,CODIGO_PESSOA,DATA_INICIO,DT_ULT_ALTER_USUA,ID,LOGIN_USUARIO) VALUES (A4.COD_DEFICIENCIA_1, VCOD_EMPRESA_DEF, VCOD_PESSOA, A4.DATA_ASO, SYSDATE, (SELECT NVL(MAX(ID),0)+1 AS ID FROM RHPESS_PESSOA_DEFICIENCIA),A4.LOGIN_CARGA);
COMMIT WORK;
UPDATE SUGESP_IMPORTACAO_ADM_PER SET ANALISE_DEFICIENCIA = A4.ANALISE_DEFICIENCIA||' - DEFICIENCIA OK NO MODULO'
WHERE DATA_PROCESSAMENTO IS NULL AND STATUS_PROCESSAMENTO IS NULL AND CODIGO_EMPRESA = VCOD_EMPRESA_DEF AND CPF  = VCPF_DEF AND DATA_CARGA = TRUNC(VDATA_C_DEF) AND DT_REG_OCORRENCIA = TRUNC(VDT_REG_DEF) AND NUMERO_LINHA = VNUMERO_L_DEF; COMMIT WORK;
END IF;

END LOOP;

END;

/*VERIFICA QUAL NATUREZA E CONDUTA IRA ENCERRAR DE ACORDO COM CADA EMPRESA*/
FUNCTION PROCEDIMENTO_CONDUTA_ENCERRAR (vCPF_ENCERRAR IN CHAR, vCOD_EMP_ENCERRAR IN CHAR, vDT_OCORR_ENCERRAR IN DATE,vDT_CARGA_ENCERRAR IN DATE, vANALISE_DADOS_REC IN VARCHAR)
    RETURN LISTA_PCSMO
  IS
    CURSOR PROC_COND
    IS
SELECT Z.* FROM (
SELECT Y.NATUREZA_EXAME PROCEDIMENTO, Y.CODIGO_PROC_MED CONDUTA, Y.CODIGO_EMPRESA,
(SELECT COUNT(1) FROM 
    RHMEDI_FICHA_MED
      LEFT JOIN RHMEDI_RL_FICH_PRO ON RHMEDI_FICHA_MED.CODIGO_EMPRESA = RHMEDI_RL_FICH_PRO.CODIGO_EMPRESA
       AND RHMEDI_FICHA_MED.CODIGO_PESSOA = RHMEDI_RL_FICH_PRO.CODIGO_PESSOA
       AND TO_DATE(RHMEDI_FICHA_MED.DT_REG_OCORRENCIA, 'DD/MM/YYYY') = TO_DATE(RHMEDI_RL_FICH_PRO.DT_REG_OCORRENCIA, 'DD/MM/YYYY')
       AND RHMEDI_FICHA_MED.OCORRENCIA = RHMEDI_RL_FICH_PRO.OCORRENCIA
        LEFT JOIN RHINTE_ED_IT_CONV TEG11 ON RHMEDI_FICHA_MED.CODIGO_EMPRESA = REGEXP_SUBSTR(TEG11.DADO_ORIGEM, '[^;]+', 1, 2) -- TEG11.DADO_ORIGEM
       AND TEG11.CODIGO_CONVERSAO IN ( 'TG11' )
       AND RHMEDI_RL_FICH_PRO.CODIGO_PROC_MED IN (REGEXP_SUBSTR(TEG11.DADO_DESTINO, '[^;]+', 1, 2))
       AND RHMEDI_FICHA_MED.NATUREZA_EXAME  IN (REGEXP_SUBSTR(TEG11.DADO_DESTINO, '[^;]+', 1, 1))
 WHERE
        RHMEDI_FICHA_MED.DATA_INI_AFAST = (
            SELECT MAX(M.DATA_INI_AFAST)
              FROM RHMEDI_FICHA_MED M
             WHERE M.CODIGO_PESSOA = RHMEDI_FICHA_MED.CODIGO_PESSOA
                   AND M.CODIGO_EMPRESA  = RHMEDI_FICHA_MED.CODIGO_EMPRESA
                   AND M.CODIGO_CONTRATO = RHMEDI_FICHA_MED.CODIGO_CONTRATO
                   AND M.CODIGO_EMPRESA  = RHMEDI_FICHA_MED.CODIGO_EMPRESA
                   AND M.TIPO_CONTRATO   = RHMEDI_FICHA_MED.TIPO_CONTRATO
        )
       AND RHMEDI_FICHA_MED.CODIGO_EMPRESA  = Y.CODIGO_EMPRESA
       AND RHMEDI_FICHA_MED.TIPO_CONTRATO   = Y.TIPO_CONTRATO
     --AND RHMEDI_FICHA_MED.CODIGO_PESSOA = X.CODIGO_PESSOA_ENCONTRADO
       AND RHMEDI_FICHA_MED.CODIGO_CONTRATO = Y.CODIGO_CONTRATO
) QTD 
FROM (
SELECT x.*, RHMEDI_FICHA_MED.NATUREZA_EXAME, RHMEDI_RL_FICH_PRO.CODIGO_PROC_MED
FROM (
SELECT 
    SUGESP_IMPORTACAO_ADM_PER.CODIGO_EMPRESA,
    SUGESP_IMPORTACAO_ADM_PER.CPF,
    SUGESP_IMPORTACAO_ADM_PER.TIPO_CONTRATO,
    SUGESP_IMPORTACAO_ADM_PER.CODIGO_PESSOA_ENCONTRADO,
    SUGESP_IMPORTACAO_ADM_PER.CODIGO_CONTRATO,
    SUGESP_IMPORTACAO_ADM_PER.DT_REG_OCORRENCIA,
    REGEXP_SUBSTR(TEG11.DADO_DESTINO, '[^;]+', 1, 1) PROCEDIMENTO,
    REGEXP_SUBSTR(TEG11.DADO_DESTINO, '[^;]+', 1, 2) CONDUTA
  FROM
    SUGESP_IMPORTACAO_ADM_PER
      LEFT JOIN RHINTE_ED_IT_CONV TEG11 ON SUGESP_IMPORTACAO_ADM_PER.CODIGO_EMPRESA = REGEXP_SUBSTR(TEG11.DADO_ORIGEM, '[^;]+', 1, 2) -- TEG11.DADO_ORIGEM
       AND TEG11.CODIGO_CONVERSAO IN ( 'TG11' )
 WHERE
        SUGESP_IMPORTACAO_ADM_PER.CODIGO_EMPRESA       = vCOD_EMP_ENCERRAR
       AND SUGESP_IMPORTACAO_ADM_PER.CPF               = vCPF_ENCERRAR
       AND SUGESP_IMPORTACAO_ADM_PER.DT_REG_OCORRENCIA = TRUNC(vDT_OCORR_ENCERRAR)
       AND SUGESP_IMPORTACAO_ADM_PER.DATA_CARGA        = TRUNC(vDT_CARGA_ENCERRAR)
) X
LEFT JOIN RHMEDI_FICHA_MED ON RHMEDI_FICHA_MED.CODIGO_EMPRESA = X.CODIGO_EMPRESA
   AND RHMEDI_FICHA_MED.TIPO_CONTRATO = X.TIPO_CONTRATO
  -- AND RHMEDI_FICHA_MED.CODIGO_PESSOA = X.CODIGO_PESSOA_ENCONTRADO
   AND RHMEDI_FICHA_MED.CODIGO_CONTRATO = X.CODIGO_CONTRATO
   AND RHMEDI_FICHA_MED.NATUREZA_EXAME = x.PROCEDIMENTO
   AND RHMEDI_FICHA_MED.DATA_INI_AFAST = (
    SELECT MAX(M.DATA_INI_AFAST)
      FROM RHMEDI_FICHA_MED M
     WHERE M.CODIGO_PESSOA = RHMEDI_FICHA_MED.CODIGO_PESSOA
       AND M.CODIGO_EMPRESA  = RHMEDI_FICHA_MED.CODIGO_EMPRESA
       AND M.CODIGO_CONTRATO = RHMEDI_FICHA_MED.CODIGO_CONTRATO
       AND M.CODIGO_EMPRESA  = RHMEDI_FICHA_MED.CODIGO_EMPRESA
       AND M.TIPO_CONTRATO   = RHMEDI_FICHA_MED.TIPO_CONTRATO
       AND M.DT_REG_OCORRENCIA <= TRUNC(vDT_OCORR_ENCERRAR)
)
 LEFT JOIN RHMEDI_RL_FICH_PRO ON RHMEDI_FICHA_MED.CODIGO_EMPRESA = RHMEDI_RL_FICH_PRO.CODIGO_EMPRESA
   AND RHMEDI_FICHA_MED.CODIGO_PESSOA = RHMEDI_RL_FICH_PRO.CODIGO_PESSOA
   AND TO_DATE(RHMEDI_FICHA_MED.DT_REG_OCORRENCIA,'DD/MM/YYYY') = TO_DATE(RHMEDI_RL_FICH_PRO.DT_REG_OCORRENCIA,'DD/MM/YYYY')
   AND RHMEDI_FICHA_MED.OCORRENCIA = RHMEDI_RL_FICH_PRO.OCORRENCIA
   AND RHMEDI_RL_FICH_PRO.CODIGO_PROC_MED = x.CONDUTA
   ORDER BY x.cpf, RHMEDI_FICHA_MED.NATUREZA_EXAME, RHMEDI_RL_FICH_PRO.CODIGO_PROC_MED, X.CODIGO_EMPRESA
)Y
) Z
GROUP BY Z.PROCEDIMENTO, Z.CONDUTA, Z.CODIGO_EMPRESA, Z.QTD
ORDER BY Z.PROCEDIMENTO, Z.CONDUTA;
      vDADO LISTA_TP_IMPORT_ADM_PER;
      PROC_CONDUTA LISTA_PCSMO;
    BEGIN
      vDADO :=LISTA_TP_IMPORT_ADM_PER(null,null,null,null);
      PROC_CONDUTA:=LISTA_PCSMO();

      BEGIN
        OPEN PROC_COND;
        LOOP
          FETCH PROC_COND INTO vDADO.PROCEDIMENTO,vDADO.CONDUTA, vDADO.EMPRESA, vDADO.QTD;
          EXIT
        WHEN PROC_COND%notfound;
         --  dbms_output.put_line('LISTA '||vDADO.EMPRESA||'-'||vDADO.PROCEDIMENTO||'-'||vDADO.CONDUTA);
          PROC_CONDUTA.EXTEND;
          PROC_CONDUTA(PROC_CONDUTA.LAST):= vDADO;
        END LOOP;
        CLOSE PROC_COND;
      END;
      RETURN PROC_CONDUTA;
    END;


/*VERIFICA SE ENCONTRA A FICHA DE ACORDO COM NATUREZA E CONDUTA QUE ESTAO NA TG11*/
PROCEDURE VALIDA_FICHA_IMPORT (VCOD_EMPRESA_VALIDA CHAR, VDT_REG_VALIDA DATE, VCOD_PESS_VALIDA VARCHAR, VCOD_PROCMED_VALIDA VARCHAR, vANALISE_DADOS VARCHAR, vDATA_CARGA_FI DATE, 
                                vCPF_FIC VARCHAR, vTP_CONTRATO VARCHAR, vCONTRATO VARCHAR, vPROCEDIMENTO VARCHAR, VCONDUTA VARCHAR) AS 
CONT NUMBER;

BEGIN
FOR A3 IN (
SELECT X.*,
CASE WHEN IMPORT_TEG.VINCULO IS NOT NULL THEN IMPORT_TEG.VINCULO ELSE IMPORT_TEG1.VINCULO END AS VINCULO,
CASE WHEN IMPORT_TEG.SIT IS NOT NULL THEN IMPORT_TEG.SIT ELSE IMPORT_TEG1.SIT END AS SIT_FUNCIONAL, 
S.COD_SIT_FUNCIONAL, S.DATA_INIC_SITUACAO, S.DATA_FIM_SITUACAO
 FROM (
SELECT SUGESP_IMPORTACAO_ADM_PER.CPF,
       SUGESP_IMPORTACAO_ADM_PER.DT_REG_OCORRENCIA AS DATA_OCOR_IMPORT,
       SUGESP_IMPORTACAO_ADM_PER.DATA_CARGA,
       RHMEDI_FICHA_MED.CODIGO_EMPRESA,
       RHMEDI_FICHA_MED.CODIGO_PESSOA,
       RHMEDI_FICHA_MED.DT_REG_OCORRENCIA,
       RHMEDI_FICHA_MED.OCORRENCIA,
       RHMEDI_FICHA_MED.NATUREZA_EXAME,
       RHMEDI_FICHA_MED.TIPO_CONTRATO,
       RHMEDI_FICHA_MED.CODIGO_CONTRATO,
       RHMEDI_FICHA_MED.DATA_INI_AFAST,
       RHMEDI_FICHA_MED.DATA_FIM_AFAST,
       RHMEDI_RL_FICH_PRO.CODIGO_PROC_MED,
       C.VINCULO VINCULO_CONTRATO,
       SUGESP_IMPORTACAO_ADM_PER.CTRL_APTIDAO,
       AP.tp_result_aso_esocial RESULTADO_ASO
  FROM SUGESP_IMPORTACAO_ADM_PER
  LEFT JOIN RHMEDI_FICHA_MED ON RHMEDI_FICHA_MED.CODIGO_EMPRESA = SUGESP_IMPORTACAO_ADM_PER.CODIGO_EMPRESA
   AND RHMEDI_FICHA_MED.TIPO_CONTRATO = SUGESP_IMPORTACAO_ADM_PER.TIPO_CONTRATO
   AND RHMEDI_FICHA_MED.CODIGO_PESSOA = SUGESP_IMPORTACAO_ADM_PER.CODIGO_PESSOA_ENCONTRADO
   AND RHMEDI_FICHA_MED.CODIGO_CONTRATO = SUGESP_IMPORTACAO_ADM_PER.CODIGO_CONTRATO
   AND RHMEDI_FICHA_MED.NATUREZA_EXAME = vPROCEDIMENTO 
   AND RHMEDI_FICHA_MED.DATA_INI_AFAST = (
    SELECT MAX(M.DATA_INI_AFAST)
      FROM RHMEDI_FICHA_MED M
     WHERE M.CODIGO_PESSOA = RHMEDI_FICHA_MED.CODIGO_PESSOA
       AND M.CODIGO_EMPRESA  = RHMEDI_FICHA_MED.CODIGO_EMPRESA
       AND M.CODIGO_CONTRATO = RHMEDI_FICHA_MED.CODIGO_CONTRATO
       AND M.CODIGO_EMPRESA  = RHMEDI_FICHA_MED.CODIGO_EMPRESA
       AND M.TIPO_CONTRATO   = RHMEDI_FICHA_MED.TIPO_CONTRATO
       AND M.DT_REG_OCORRENCIA <= TRUNC(VDT_REG_VALIDA)
)
  LEFT JOIN RHMEDI_RL_FICH_PRO ON RHMEDI_FICHA_MED.CODIGO_EMPRESA = RHMEDI_RL_FICH_PRO.CODIGO_EMPRESA
   AND RHMEDI_FICHA_MED.CODIGO_PESSOA = RHMEDI_RL_FICH_PRO.CODIGO_PESSOA
   AND TO_DATE(RHMEDI_FICHA_MED.DT_REG_OCORRENCIA,'DD/MM/YYYY') = TO_DATE(RHMEDI_RL_FICH_PRO.DT_REG_OCORRENCIA,'DD/MM/YYYY')
   AND RHMEDI_FICHA_MED.OCORRENCIA = RHMEDI_RL_FICH_PRO.OCORRENCIA
   AND RHMEDI_RL_FICH_PRO.CODIGO_PROC_MED = VCONDUTA
   LEFT JOIN RHPESS_CONTRATO C ON 
      RHMEDI_FICHA_MED.CODIGO_PESSOA = C.CODIGO_PESSOA
       AND RHMEDI_FICHA_MED.CODIGO_EMPRESA  = C.CODIGO_EMPRESA
       AND RHMEDI_FICHA_MED.CODIGO_CONTRATO = C.CODIGO
       AND RHMEDI_FICHA_MED.CODIGO_EMPRESA  = C.CODIGO_EMPRESA
       AND RHMEDI_FICHA_MED.TIPO_CONTRATO   = C.TIPO_CONTRATO AND 
       C.ANO_MES_REFERENCIA =
  (SELECT MAX (a.ano_mes_referencia)
  FROM rhpess_contrato a
  WHERE a.codigo       = c.codigo
  AND a.codigo_empresa = c.codigo_empresa
  AND a.tipo_contrato  = c.tipo_contrato
  and a.ano_mes_referencia <= (select data_do_sistema from rhparm_p_sist)
  )
 LEFT JOIN RHMEDI_CTRL_APTID AP ON 
 SUGESP_IMPORTACAO_ADM_PER.CTRL_APTIDAO = AP.CODIGO
 WHERE SUGESP_IMPORTACAO_ADM_PER.CODIGO_EMPRESA           = VCOD_EMPRESA_VALIDA
   AND SUGESP_IMPORTACAO_ADM_PER.CODIGO_PESSOA_ENCONTRADO = VCOD_PESS_VALIDA
   AND SUGESP_IMPORTACAO_ADM_PER.CODIGO_CONTRATO          = VCONTRATO
   AND SUGESP_IMPORTACAO_ADM_PER.TIPO_CONTRATO            = VTP_CONTRATO
   AND SUGESP_IMPORTACAO_ADM_PER.CPF                      = VCPF_FIC
   AND SUGESP_IMPORTACAO_ADM_PER.DT_REG_OCORRENCIA        = TRUNC(VDT_REG_VALIDA)
   AND SUGESP_IMPORTACAO_ADM_PER.DATA_CARGA               = TRUNC(VDATA_CARGA_FI)
    ORDER BY 1,2,3
    ) X 

LEFT JOIN 
(SELECT X.*, CASE WHEN X.SF_ESPECIFICA IS NOT NULL THEN X.SF_ESPECIFICA ELSE SF_GERAL END AS SIT 
    FROM ( SELECT SUBSTR(TEG.DADO_ORIGEM, 1, 4)  PROCEDIMENTO, SUBSTR(TEG.DADO_ORIGEM, 5, 15) CONDUTA, SUBSTR(TEG.DADO_ORIGEM, 20, 4) VINCULO,
           SUBSTR(TEG.DADO_ORIGEM, 24, 4) EMPRESA, SUBSTR(TEG.DADO_DESTINO, 1, 4) SF_GERAL, NULL SF_ESPECIFICA
           FROM RHINTE_ED_IT_CONV TEG WHERE TEG.CODIGO_CONVERSAO IN ( 'TEG1' )
           AND SUBSTR(TEG.DADO_ORIGEM, 1, 4) || SUBSTR(TEG.DADO_ORIGEM, 5, 15) IN ( SELECT REGEXP_SUBSTR(TEG11.DADO_DESTINO, '[^;]+', 1, 1) || REGEXP_SUBSTR(TEG11.DADO_DESTINO, '[^;]+', 1, 2) PROC_CONDUTA
                      FROM RHINTE_ED_IT_CONV TEG11 WHERE TEG11.CODIGO_CONVERSAO IN ( 'TG11' ))
UNION
SELECT SUBSTR(X.DADO_ORIGEM,1,4)PROCEDIMENTO, SUBSTR(X.DADO_ORIGEM,5,15)CONDUTA, SUBSTR(X.DADO_ORIGEM,20,4)  VINCULO,SUBSTR(X.DADO_ORIGEM,24,4)EMPRESA,
SUBSTR(X.DADO_DESTINO,1,4)SF_GERAL, SUBSTR(X.DADO_DESTINO,5,4)SF_ESPECIFICA 
FROM RHINTE_ED_IT_CONV X 
where X.codigo_CONVERSAO ='TG10' AND 
SUBSTR(X.DADO_ORIGEM,1,4) ||SUBSTR(X.DADO_ORIGEM,5,15) IN (  SELECT REGEXP_SUBSTR(TEG11.DADO_DESTINO, '[^;]+', 1, 1) || REGEXP_SUBSTR(TEG11.DADO_DESTINO, '[^;]+', 1, 2) PROC_CONDUTA
                                                              FROM RHINTE_ED_IT_CONV TEG11 WHERE TEG11.CODIGO_CONVERSAO IN ( 'TG11' ))

)X) IMPORT_TEG ON
       X.NATUREZA_EXAME = IMPORT_TEG.PROCEDIMENTO AND 
       X.CODIGO_PROC_MED = IMPORT_TEG.CONDUTA AND 
       X.VINCULO_CONTRATO = IMPORT_TEG.VINCULO AND
       X.CODIGO_EMPRESA = IMPORT_TEG.EMPRESA

LEFT JOIN (SELECT X.*, CASE WHEN X.SF_ESPECIFICA IS NOT NULL THEN X.SF_ESPECIFICA ELSE SF_GERAL END AS SIT 
    FROM ( SELECT SUBSTR(TEG.DADO_ORIGEM, 1, 4)  PROCEDIMENTO, SUBSTR(TEG.DADO_ORIGEM, 5, 15) CONDUTA, SUBSTR(TEG.DADO_ORIGEM, 20, 4) VINCULO,
           SUBSTR(TEG.DADO_ORIGEM, 24, 4) EMPRESA, SUBSTR(TEG.DADO_DESTINO, 1, 4) SF_GERAL, NULL SF_ESPECIFICA
           FROM RHINTE_ED_IT_CONV TEG WHERE TEG.CODIGO_CONVERSAO IN ( 'TEG1' )
           AND SUBSTR(TEG.DADO_ORIGEM, 1, 4) || SUBSTR(TEG.DADO_ORIGEM, 5, 15) IN ( SELECT REGEXP_SUBSTR(TEG11.DADO_DESTINO, '[^;]+', 1, 1) || REGEXP_SUBSTR(TEG11.DADO_DESTINO, '[^;]+', 1, 2) PROC_CONDUTA
                      FROM RHINTE_ED_IT_CONV TEG11 WHERE TEG11.CODIGO_CONVERSAO IN ( 'TG11' ))
UNION
SELECT SUBSTR(X.DADO_ORIGEM,1,4)PROCEDIMENTO, SUBSTR(X.DADO_ORIGEM,5,15)CONDUTA, SUBSTR(X.DADO_ORIGEM,20,4)  VINCULO,SUBSTR(X.DADO_ORIGEM,24,4)EMPRESA,
SUBSTR(X.DADO_DESTINO,1,4)SF_GERAL, SUBSTR(X.DADO_DESTINO,5,4)SF_ESPECIFICA 
FROM RHINTE_ED_IT_CONV X 
where X.codigo_CONVERSAO ='TG10' AND 
SUBSTR(X.DADO_ORIGEM,1,4) ||SUBSTR(X.DADO_ORIGEM,5,15) IN (  SELECT REGEXP_SUBSTR(TEG11.DADO_DESTINO, '[^;]+', 1, 1) || REGEXP_SUBSTR(TEG11.DADO_DESTINO, '[^;]+', 1, 2) PROC_CONDUTA
                                                              FROM RHINTE_ED_IT_CONV TEG11 WHERE TEG11.CODIGO_CONVERSAO IN ( 'TG11' ))

)X) IMPORT_TEG1 ON
       X.NATUREZA_EXAME = IMPORT_TEG1.PROCEDIMENTO AND 
       X.CODIGO_PROC_MED = IMPORT_TEG1.CONDUTA AND 
       X.VINCULO_CONTRATO = IMPORT_TEG1.VINCULO 

LEFT JOIN RHCGED_ALT_SIT_FUN S ON
S.DATA_INIC_SITUACAO = ( SELECT MAX(SS.DATA_INIC_SITUACAO) FROM RHCGED_ALT_SIT_FUN SS 
WHERE S.CODIGO = SS.CODIGO AND S.CODIGO_EMPRESA = SS.CODIGO_EMPRESA  AND S.TIPO_CONTRATO = SS.TIPO_CONTRATO ) 
AND X.CODIGO_CONTRATO = S.CODIGO AND X.CODIGO_EMPRESA = S.CODIGO_EMPRESA  AND X.TIPO_CONTRATO = S.TIPO_CONTRATO 

)LOOP
dbms_output.put_line('vREC_PROC_CONDUTA '||SUBSTR(VCONDUTA,5,15)||'-'||vPROCEDIMENTO);
IF (A3.NATUREZA_EXAME IS NULL AND A3.CODIGO_PROC_MED IS NULL) OR (A3.NATUREZA_EXAME = vPROCEDIMENTO AND A3.CODIGO_PROC_MED IS NULL) THEN 

UPDATE SUGESP_IMPORTACAO_ADM_PER SET ANALISE_DADOS = vANALISE_DADOS||' - A FICHA '||vPROCEDIMENTO||', NÃO FOI ENCONTRADA'
WHERE DATA_PROCESSAMENTO IS NULL AND STATUS_PROCESSAMENTO IS NULL AND CODIGO_EMPRESA = VCOD_EMPRESA_VALIDA AND CPF  = vCPF_FIC AND DATA_CARGA = TRUNC(vDATA_CARGA_FI) AND DT_REG_OCORRENCIA = TRUNC(VDT_REG_VALIDA); COMMIT WORK;
END IF;

IF A3.DATA_INI_AFAST IS NULL AND A3.DATA_FIM_AFAST IS NULL AND A3.CODIGO_PROC_MED IS NOT NULL AND A3.OCORRENCIA IS NOT NULL THEN

UPDATE SUGESP_IMPORTACAO_ADM_PER SET ANALISE_DADOS = vANALISE_DADOS||'- A FICHA '||vPROCEDIMENTO||' CONDUTA '||VCONDUTA||', NÃO POSSUI DATA INICIO E DATA FIM'
WHERE CODIGO_EMPRESA = VCOD_EMPRESA_VALIDA AND CPF  = vCPF_FIC AND DATA_CARGA = TRUNC(vDATA_CARGA_FI) AND DT_REG_OCORRENCIA = TRUNC(VDT_REG_VALIDA); COMMIT WORK;
END IF;

IF TO_DATE(VDT_REG_VALIDA,'DD/MM/YYYY') < TO_DATE(A3.DATA_INI_AFAST,'DD/MM/YYYY') AND A3.CODIGO_PROC_MED IS NOT NULL AND A3.NATUREZA_EXAME IS NOT NULL THEN

UPDATE SUGESP_IMPORTACAO_ADM_PER SET ANALISE_DADOS = vANALISE_DADOS||' - POSSUI A DATA DE OCORRENCIA MENOR QUE DATA INICIO DE AFASTAMENTO'
WHERE DATA_PROCESSAMENTO IS NULL AND STATUS_PROCESSAMENTO IS NULL AND CODIGO_EMPRESA = VCOD_EMPRESA_VALIDA AND CPF  = vCPF_FIC AND DATA_CARGA = TRUNC(vDATA_CARGA_FI) AND DT_REG_OCORRENCIA = TRUNC(VDT_REG_VALIDA); COMMIT WORK;
END IF;

IF TO_DATE(VDT_REG_VALIDA,'DD/MM/YYYY') > TO_DATE(A3.DATA_INI_AFAST,'DD/MM/YYYY') AND TO_DATE(VDT_REG_VALIDA,'DD/MM/YYYY') < TO_DATE(A3.DATA_FIM_AFAST,'DD/MM/YYYY') AND A3.CODIGO_PROC_MED IS NOT NULL AND A3.NATUREZA_EXAME IS NOT NULL THEN

UPDATE SUGESP_IMPORTACAO_ADM_PER SET ANALISE_DADOS = vANALISE_DADOS||' - A DATA DE OCORRENCIA ESTA ENTRE A DATA INICIO E FIM DE AFASTAMENTO'
WHERE DATA_PROCESSAMENTO IS NULL AND STATUS_PROCESSAMENTO IS NULL AND CODIGO_EMPRESA = VCOD_EMPRESA_VALIDA AND CPF  = vCPF_FIC AND DATA_CARGA = TRUNC(vDATA_CARGA_FI) AND DT_REG_OCORRENCIA = TRUNC(VDT_REG_VALIDA); COMMIT WORK;
END IF;

IF A3.DATA_INI_AFAST IS NOT NULL AND A3.DATA_FIM_AFAST IS NOT NULL AND A3.CODIGO_PROC_MED IS NOT NULL  AND A3.NATUREZA_EXAME IS NOT NULL  THEN

UPDATE SUGESP_IMPORTACAO_ADM_PER SET ANALISE_DADOS = vANALISE_DADOS||'- A FICHA '||vPROCEDIMENTO||' CONDUTA '||VCONDUTA||', POSSUI DATA INICIO E DATA FIM'
WHERE CODIGO_EMPRESA = VCOD_EMPRESA_VALIDA AND CPF  = vCPF_FIC AND DATA_CARGA = TRUNC(vDATA_CARGA_FI) AND DT_REG_OCORRENCIA = TRUNC(VDT_REG_VALIDA); COMMIT WORK;
END IF;

/*EM 10-08, RAFAELLA, IRÁ ENCERRAR A FICHA MEDICA E ALTERAR A SITUACAO FUNCIONAL, APENAS QUANDO O RETORNO AO TRABALHO ESTIVER APTO*/
IF TO_DATE(VDT_REG_VALIDA,'DD/MM/YYYY') > TO_DATE(A3.DATA_INI_AFAST,'DD/MM/YYYY') AND A3.DATA_INI_AFAST IS NOT NULL AND A3.DATA_FIM_AFAST IS NULL AND A3.CODIGO_PROC_MED = VCONDUTA AND A3.NATUREZA_EXAME = vPROCEDIMENTO AND A3.RESULTADO_ASO IN ('1') THEN

UPDATE SUGESP_IMPORTACAO_ADM_PER SET ANALISE_DADOS = vANALISE_DADOS||' - IMPORTA COM A DATA FIM COM '|| TO_DATE(A3.DATA_OCOR_IMPORT -1,'DD/MM/YYYY')
WHERE CODIGO_EMPRESA = VCOD_EMPRESA_VALIDA AND CPF  = vCPF_FIC AND DATA_CARGA = TRUNC(vDATA_CARGA_FI) AND DT_REG_OCORRENCIA = TRUNC(VDT_REG_VALIDA); COMMIT WORK;

UPDATE RHMEDI_FICHA_MED SET DATA_FIM_AFAST = TO_DATE(A3.DATA_OCOR_IMPORT -1,'DD/MM/YYYY'), LOGIN_USUARIO = 'IMPORTACAO_ADM_RET_TRABALHO', DT_ULT_ALTER_USUA = SYSDATE
WHERE CODIGO_EMPRESA = A3.CODIGO_EMPRESA AND CODIGO_PESSOA = A3.CODIGO_PESSOA AND DT_REG_OCORRENCIA = TRUNC(A3.DT_REG_OCORRENCIA) AND OCORRENCIA = A3.OCORRENCIA AND NATUREZA_EXAME = A3.NATUREZA_EXAME;
COMMIT WORK;

IF A3.COD_SIT_FUNCIONAL = A3.SIT_FUNCIONAL AND A3.VINCULO = A3.VINCULO_CONTRATO AND A3.DATA_FIM_SITUACAO IS NULL THEN
PR_RHMEDI_FICHA_MED_MANUAL( 'RHMEDI_FICHA_MED', A3.CODIGO_EMPRESA, A3.CODIGO_PESSOA, TO_CHAR(TO_DATE(A3.DT_REG_OCORRENCIA,'DD/MM/YYYY'),'YYYYMMDD'), A3.OCORRENCIA , 'M', '0');
END IF;

IF A3.VINCULO <> A3.VINCULO_CONTRATO THEN 

UPDATE SUGESP_IMPORTACAO_ADM_PER SET ANALISE_DADOS = vANALISE_DADOS||' - VINCULO NÃO CONTEMPLADO PARA AS FICHAS'
WHERE DATA_PROCESSAMENTO IS NULL AND STATUS_PROCESSAMENTO IS NULL AND CODIGO_EMPRESA = VCOD_EMPRESA_VALIDA AND CPF  = vCPF_FIC AND DATA_CARGA = TRUNC(vDATA_CARGA_FI) AND DT_REG_OCORRENCIA = TRUNC(VDT_REG_VALIDA);COMMIT WORK;
END IF;

IF A3.COD_SIT_FUNCIONAL IS NULL OR A3.COD_SIT_FUNCIONAL <> A3.SIT_FUNCIONAL THEN 

UPDATE SUGESP_IMPORTACAO_ADM_PER SET ANALISE_DADOS = vANALISE_DADOS||' - ANALISAR O HISTORICO DA SITUACAO FUNCIONAL'
WHERE DATA_PROCESSAMENTO IS NULL AND STATUS_PROCESSAMENTO IS NULL AND CODIGO_EMPRESA = VCOD_EMPRESA_VALIDA AND CPF  = vCPF_FIC AND DATA_CARGA = TRUNC(vDATA_CARGA_FI) AND DT_REG_OCORRENCIA = TRUNC(VDT_REG_VALIDA);COMMIT WORK;
END IF;

END IF;

/*EM 10-08, RAFAELLA, IRÁ APENAS SINALIZAR NA TABELA DE IMPORTAÇÃO QUE NÃO FOI REALIZADA AÇÃO DE ENCERRAR A FICHA POIS NÃO ESTAVA APTO*/
IF TO_DATE(VDT_REG_VALIDA,'DD/MM/YYYY') > TO_DATE(A3.DATA_INI_AFAST,'DD/MM/YYYY') AND A3.DATA_INI_AFAST IS NOT NULL AND A3.DATA_FIM_AFAST IS NULL AND A3.CODIGO_PROC_MED = VCONDUTA AND A3.NATUREZA_EXAME = vPROCEDIMENTO AND A3.RESULTADO_ASO NOT IN ('1') THEN

UPDATE SUGESP_IMPORTACAO_ADM_PER SET ANALISE_DADOS = vANALISE_DADOS||' - NÃO IRÁ PREENCHER A DATA FIM, POIS NÃO ESTA APTO'
WHERE CODIGO_EMPRESA = VCOD_EMPRESA_VALIDA AND CPF  = vCPF_FIC AND DATA_CARGA = TRUNC(vDATA_CARGA_FI) AND DT_REG_OCORRENCIA = TRUNC(VDT_REG_VALIDA); COMMIT WORK;

END IF;
END LOOP;  

END;

/*IMPRIMIR OS VALORES DA LISTA DA FUNCAO PROCEDIMENTO_CONDUTA_ENCERRAR */
PROCEDURE IMPRIMIR_VALORES_PROC_CONDU( descricao_lista LISTA_PCSMO )   AS
  BEGIN
   -- DBMS_Output.PUT_LINE('IMPRIMINDO LISTA MAPEADA' || ' - ' || descricao_lista);
    FOR i IN 1..descricao_lista.count ( )
    LOOP
      DBMS_Output.PUT_LINE ( RPAD('descricao_lista('||i||')',10,' ') || ' = ' || descricao_lista(i).PROCEDIMENTO||descricao_lista(i).CONDUTA||descricao_lista(i).EMPRESA  ) ;
    END LOOP;
  END;

BEGIN
--DBMS_OUTPUT.ENABLE (buffer_size => NULL);
select MIN(NUMERO_LINHA) INTO LINHA from SUGESP_IMPORTACAO_ADM_PER 
WHERE CPF = rtCPF AND DATA_CARGA = TRUNC(rtDATA_CARGA) AND DT_REG_OCORRENCIA = TRUNC(rtDT_REG_OCORRENCIA) AND CODIGO_EMPRESA = rtCODIGO_EMPRESA AND NATUREZA_EXAME = rtNATUREZA_EXAME AND STATUS_PROCESSAMENTO IS NULL AND DATA_PROCESSAMENTO IS NULL;

FOR C1 IN (
SELECT 
C_LIVRE_VALOR01,
CODIGO_EMPRESA,
TIPO_CONTRATO,
CODIGO_CONTRATO,
CPF,
DT_REG_OCORRENCIA,
NATUREZA_EXAME,
CODIGO_ATENDENTE,
PESO,
ALTURA,
TEMPERATURA,
PULSO,
PRESSAO,
INDICE_MASSA_CORP,
TEXTO02,
TEXTO03,
TEXTO05,
COD_DOENCA,
DOENCA_TRABALHO,
CODIGO_PROC_MED,
COD_EXAME,
DATA_REALIZACAO,
RESULT_REFERENCIA,
CTRL_APTIDAO,
COD_DEFICIENCIA_1,
COD_DEFICIENCIA_PRINCIPAL,
DATA_ASO,
TEXTO_ASSOCIADO,
CODIGO_CANDIDATO,
CODIGO_EVENTO_SEL,
CODIGO_SEQUENCIAL,
STATUS_PROCESSAMENTO,
DATA_PROCESSAMENTO,
DATA_CARGA,
LOGIN_CARGA,
ANALISE_DADOS,
VERIFICA_PESSOA,
NUMERO_LINHA,
CODIGO_PESSOA_ENCONTRADO,
ANALISA_FICHA
FROM SUGESP_IMPORTACAO_ADM_PER
WHERE STATUS_PROCESSAMENTO IS NULL AND DATA_PROCESSAMENTO IS NULL
                                   AND DATA_CARGA = (SELECT MAX (A.DATA_CARGA)
                                                     FROM SUGESP_IMPORTACAO_ADM_PER A
                                                     WHERE A.CPF = SUGESP_IMPORTACAO_ADM_PER.CPF AND
                                                           A.CODIGO_EMPRESA = SUGESP_IMPORTACAO_ADM_PER.CODIGO_EMPRESA AND
                                                           A.DT_REG_OCORRENCIA = SUGESP_IMPORTACAO_ADM_PER.DT_REG_OCORRENCIA )
AND NATUREZA_EXAME    = rtNATUREZA_EXAME 
AND CODIGO_EMPRESA    = rtCODIGO_EMPRESA 
AND CPF               = rtCPF
AND DT_REG_OCORRENCIA = TRUNC(rtDT_REG_OCORRENCIA) 
AND DATA_CARGA        = TRUNC(rtDATA_CARGA)
ORDER BY NATUREZA_EXAME, CPF, DATA_CARGA, NUMERO_LINHA
)

LOOP

IF C1.NUMERO_LINHA = LINHA THEN
ANALISAR_FICHA := PR_VERIFICA_FICHA (C1.CODIGO_EMPRESA, C1.CPF, C1.DT_REG_OCORRENCIA, C1.DATA_CARGA, C1.NATUREZA_EXAME, C1.CODIGO_CONTRATO,C1.TIPO_CONTRATO,rtCODIGO_ATENDENTE, rtNOME_ATENDENTE_ATENDENTE, rtINSCRICAO_CONSELHO_ATENDENTE, rtUF_CONSELHO_ATENDENTE, rtCONSELHO_REGIONAL_ATENDENTE,C1.CODIGO_PESSOA_ENCONTRADO);
END IF; 

IF (ANALISAR_FICHA.VERIFICA = 1 OR C1.ANALISA_FICHA = 'FICHA INSERIDA') AND rtCODIGO_ATENDENTE IS NOT NULL AND C1.DATA_PROCESSAMENTO IS NULL AND C1.STATUS_PROCESSAMENTO IS NULL THEN

REC_PROC_CONDUTA:=LISTA_PCSMO();

REC_PROC_CONDUTA := PROCEDIMENTO_CONDUTA_ENCERRAR(C1.CPF, C1.CODIGO_EMPRESA, C1.DT_REG_OCORRENCIA,C1.DATA_CARGA, C1.ANALISE_DADOS);

FOR i IN 1..REC_PROC_CONDUTA.count()
LOOP
    DBMS_Output.PUT_LINE('ANTES DE ENTRAR QTD: '||REC_PROC_CONDUTA(i).QTD||' CPF: '||C1.CPF);
    IF REC_PROC_CONDUTA(i).QTD = 1 THEN

    DBMS_Output.PUT_LINE('QTD: '||REC_PROC_CONDUTA(i).QTD||' CPF: '||C1.CPF||' PROCEDIMENTO: '||REC_PROC_CONDUTA(i).PROCEDIMENTO||' CONDUTA: '||REC_PROC_CONDUTA(i).CONDUTA);
    VALIDA_FICHA_IMPORT (C1.CODIGO_EMPRESA, C1.DT_REG_OCORRENCIA, C1.CODIGO_PESSOA_ENCONTRADO , C1.CODIGO_PROC_MED, C1.ANALISE_DADOS, C1.DATA_CARGA, C1.CPF, C1.TIPO_CONTRATO, C1.CODIGO_CONTRATO,
                                 REC_PROC_CONDUTA(i).PROCEDIMENTO,REC_PROC_CONDUTA(i).CONDUTA);
   EXIT;
   END IF;

    IF REC_PROC_CONDUTA(i).QTD = 0 THEN 
    DBMS_Output.PUT_LINE('QTD: '||REC_PROC_CONDUTA(i).QTD||' CPF: '||C1.CPF);
    UPDATE SUGESP_IMPORTACAO_ADM_PER SET ANALISE_DADOS = C1.ANALISE_DADOS||' - A FICHA NÃO FOI ENCONTRADA PARA ENCERRAR'
    WHERE DATA_PROCESSAMENTO IS NULL AND STATUS_PROCESSAMENTO IS NULL AND CODIGO_EMPRESA = C1.CODIGO_EMPRESA AND CPF  = C1.CPF AND DATA_CARGA = TRUNC(C1.DATA_CARGA) AND DT_REG_OCORRENCIA = TRUNC(C1.DT_REG_OCORRENCIA); COMMIT WORK;

    END IF;

    IF REC_PROC_CONDUTA(i).QTD > 1 THEN 
     DBMS_Output.PUT_LINE('QTD: '||REC_PROC_CONDUTA(i).QTD||' CPF: '||C1.CPF);
    UPDATE SUGESP_IMPORTACAO_ADM_PER SET ANALISE_DADOS = C1.ANALISE_DADOS||' - EXISTE MAIS DE UM FICHA PARA ENCERRAR'
    WHERE DATA_PROCESSAMENTO IS NULL AND STATUS_PROCESSAMENTO IS NULL AND CODIGO_EMPRESA = C1.CODIGO_EMPRESA AND CPF  = C1.CPF AND DATA_CARGA = TRUNC(C1.DATA_CARGA) AND DT_REG_OCORRENCIA = TRUNC(C1.DT_REG_OCORRENCIA); COMMIT WORK;

    EXIT;
    END IF;
END LOOP;

PR_IMPORTA_EXAME (C1.CODIGO_EMPRESA, C1.CPF, C1.NUMERO_LINHA, C1.DT_REG_OCORRENCIA, C1.DATA_CARGA, C1.CODIGO_PESSOA_ENCONTRADO, C1.COD_EXAME, ANALISAR_FICHA.OCORRENCIA, rtCODIGO_ATENDENTE, rtNOME_ATENDENTE_ATENDENTE, rtINSCRICAO_CONSELHO_ATENDENTE, rtUF_CONSELHO_ATENDENTE);
PR_IMPORTA_CONDUTA (C1.CODIGO_EMPRESA, C1.CPF, C1.NUMERO_LINHA , C1.DT_REG_OCORRENCIA, C1.DATA_CARGA, C1.CODIGO_PESSOA_ENCONTRADO, C1.CODIGO_PROC_MED,  ANALISAR_FICHA.OCORRENCIA);
PR_IMPORTA_DOENCA (C1.CODIGO_EMPRESA, C1.CPF, C1.NUMERO_LINHA, C1.DT_REG_OCORRENCIA, C1.DATA_CARGA, C1.CODIGO_PESSOA_ENCONTRADO, C1.COD_DOENCA, ANALISAR_FICHA.OCORRENCIA);
PR_IMPORTA_DEFICIENCIA (C1.CODIGO_EMPRESA, C1.CPF, C1.NUMERO_LINHA, C1.DT_REG_OCORRENCIA, C1.DATA_CARGA, C1.CODIGO_PESSOA_ENCONTRADO);

UPDATE SUGESP_IMPORTACAO_ADM_PER SET DATA_PROCESSAMENTO = SYSDATE, STATUS_PROCESSAMENTO = 'SIM' WHERE DATA_PROCESSAMENTO IS NULL AND STATUS_PROCESSAMENTO IS NULL AND 
CODIGO_EMPRESA = C1.CODIGO_EMPRESA AND CPF  = C1.CPF AND DATA_CARGA = TRUNC(C1.DATA_CARGA) AND NUMERO_LINHA = C1.NUMERO_LINHA AND DT_REG_OCORRENCIA = TRUNC(C1.DT_REG_OCORRENCIA); COMMIT WORK;

END IF;

IF ANALISAR_FICHA.VERIFICA = 0 OR C1.ANALISA_FICHA = 'FICHA EXISTENTE' THEN

UPDATE SUGESP_IMPORTACAO_ADM_PER SET DATA_PROCESSAMENTO = SYSDATE, STATUS_PROCESSAMENTO = 'NÃO' 
WHERE DATA_PROCESSAMENTO IS NULL AND STATUS_PROCESSAMENTO IS NULL AND CODIGO_EMPRESA = C1.CODIGO_EMPRESA AND CPF  = C1.CPF AND DATA_CARGA = TRUNC(C1.DATA_CARGA) AND DT_REG_OCORRENCIA = TRUNC(C1.DT_REG_OCORRENCIA);
COMMIT WORK;

END IF;
END LOOP;

END;
/*BEGIN 
   EXECUTE IMMEDIATE 'ALTER SESSION SET NLS_DATE_FORMAT = ''YYYY/MM/DD'''; 
END;*/
END IMPORTACAO_ADM_RET_TRABALHO;