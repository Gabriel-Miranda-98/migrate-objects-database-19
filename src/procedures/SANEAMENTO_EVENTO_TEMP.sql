
  CREATE OR REPLACE EDITIONABLE PROCEDURE "ARTERH"."SANEAMENTO_EVENTO_TEMP" AS

BEGIN
DECLARE
CONT NUMBER;
QTD_LINHAS_AFETADAS NUMBER;
CONTRATO VARCHAR2(15 BYTE);
NOVA_OCORRENCIA NUMBER;
DATA_ORDEM DATE;
BEGIN

CONT:=0;
CONTRATO:=NULL;
NOVA_OCORRENCIA:=0;

dbms_output.enable(NULL);
/*QUANDO FOR UMA INSERCAO DO REGISTRO IRA ZERAR TODA A OCORRENCIA DOS BM'S QUE ESTAO NA TABELA SEM A DATA DO PROCESSAMENTO E O STATUS DE PROCESSAMENTO.
O CAMPO DE STATUS PROCESSAMENTO E DATA DO PROCESSAMENTO SERAO ATUALIZADOS QUANDO FOR EXECUTADO ESTA PROCEDURE*/
UPDATE SUGESP_SANEAMENTO_EVENTO_TEMP SET OCORRENCIA = 0 WHERE FAZER = 'I'  AND DATA_PROCESSAMENTO IS NULL AND STATUS_PROCESSAMENTO IS NULL;
COMMIT;

FOR C1 IN (
SELECT NUMERO_LINHA,
FAZER,
CODIGO_EMPRESA,
TIPO_CONTRATO,
CODIGO_CONTRATO,
COD_TIPO_APOS,
DT_APURACAO,
DT_DIREITO,
PERC_SALARIO,
C_LIVRE_SELEC01,
C_LIVRE_SELEC02,
C_LIVRE_VALOR01,
C_LIVRE_VALOR02,
C_LIVRE_DATA01,
C_LIVRE_DATA02,
C_LIVRE_OPCAO01,
C_LIVRE_OPCAO02,
C_LIVRE_DESCR01,
C_LIVRE_DESCR02,
LOGIN_USUARIO,
DT_ULT_ALTER_USUA,
STATUS_CONFIRMACAO,
SOMA_FERIAS_DOBRO,
CASE WHEN DT_FIM_AQUISICAO IS NOT NULL THEN
          1825 - ((CASE WHEN TEMPO_ANTER IS NULL THEN 0 ELSE TEMPO_ANTER END)+(CASE WHEN TEMPO_COMPUTO IS NULL THEN 0 ELSE TEMPO_COMPUTO END))
ELSE TEMPO_ATUAL END AS TEMPO_ATUAL,
TEMPO_ANTER,
TEMPO_COMPUTO,
TEMPO_BENEF,
TEMPO_TRANSICAO,
DIAS_FERIAS_DOBRO,
DIAS_FERIAS_VEND,
DIAS_FALTAS,
IND_CALCULO,
DT_REFERENCIA,
DT_PERMITIDA,
OCORRENCIA,
DT_INI_AQUISICAO,
DT_FIM_AQUISICAO,
ASSINATURA_01,
ASSINATURA_02,
DIAS_DIREITO,
CODIGO_MOTIVO_OCOR,
TEXTO_ASSOCIADO,
DATA_PROCESSAMENTO,
STATUS_PROCESSAMENTO,
DATA_CARGA,
LOGIN_IMPORTACAO_INTERFACE
FROM SUGESP_SANEAMENTO_EVENTO_TEMP
where DATA_CARGA = (select max (a.DATA_CARGA)
                            from SUGESP_SANEAMENTO_EVENTO_TEMP a
												    where a.CODIGO_CONTRATO = SUGESP_SANEAMENTO_EVENTO_TEMP.CODIGO_CONTRATO and
                                  a.codigo_empresa = SUGESP_SANEAMENTO_EVENTO_TEMP.codigo_empresa and
                                  a.tipo_contrato = SUGESP_SANEAMENTO_EVENTO_TEMP.tipo_contrato )
ORDER BY FAZER, DT_INI_AQUISICAO ASC, DT_FIM_AQUISICAO
)LOOP
CONT:=CONT+1;

/*QUANDO O CAMPO O QUE FAZER ESTIVER PREENCHIDO COMO D (DELETE) SERAO EXCLUIDOS TODOS OS REGISTROS DA TABELA RHTEMP_APOSENT (EVENTOS TEMPORAIS)*/
IF(C1.FAZER='D' AND C1.DATA_PROCESSAMENTO IS NULL AND C1.STATUS_PROCESSAMENTO IS NULL) THEN
QTD_LINHAS_AFETADAS:=0;

DELETE FROM RHTEMP_EVE_TMP_AP WHERE CODIGO_CONTRATO = ''||C1.CODIGO_CONTRATO||'' AND COD_TIPO_APOS = ''||C1.COD_TIPO_APOS||'' AND TIPO_CONTRATO = ''||C1.TIPO_CONTRATO||'' AND CODIGO_EMPRESA = ''||C1.CODIGO_EMPRESA||'' AND OCORRENCIA = ''||C1.OCORRENCIA||'' ;
COMMIT;

DELETE FROM RHTEMP_APOSENT WHERE CODIGO_EMPRESA = ''||C1.CODIGO_EMPRESA||'' AND TIPO_CONTRATO = ''||C1.TIPO_CONTRATO||'' AND CODIGO_CONTRATO = ''||C1.CODIGO_CONTRATO||'' AND COD_TIPO_APOS = ''||C1.COD_TIPO_APOS||'' AND OCORRENCIA = ''||C1.OCORRENCIA||'' AND DT_INI_AQUISICAO = ''||C1.DT_INI_AQUISICAO||'';
COMMIT;
update SUGESP_SANEAMENTO_EVENTO_TEMP set DATA_PROCESSAMENTO = sysdate, STATUS_PROCESSAMENTO = 'OK' WHERE FAZER='D' AND DATA_PROCESSAMENTO IS NULL AND STATUS_PROCESSAMENTO IS NULL and data_carga = ''||c1.DATA_CARGA||'' AND CODIGO_EMPRESA = ''||C1.CODIGO_EMPRESA||'' AND TIPO_CONTRATO = ''||C1.TIPO_CONTRATO||'' AND CODIGO_CONTRATO = ''||C1.CODIGO_CONTRATO||'' AND COD_TIPO_APOS = ''||C1.COD_TIPO_APOS||'' AND DT_INI_AQUISICAO = ''||C1.DT_INI_AQUISICAO||'';
COMMIT;
/*VERIFICA A QUANTIDADE DE LINHAS QUE FORAM EXCLUIDA*/
QTD_LINHAS_AFETADAS:=SQL%ROWCOUNT;


/*QUANDO FOR EXCLUIDO MAIS DE UMA LINHA, O CAMPO DATA PROCESSAMENTO E STATUS PROCESSAMENTO SERAO ATUALIZADO COM A DATA DA EXECUCAO E STATUS DE PROCESSAMENTO COMO OK*/
IF QTD_LINHAS_AFETADAS<>'0' THEN

update SUGESP_SANEAMENTO_EVENTO_TEMP set DATA_PROCESSAMENTO = sysdate, STATUS_PROCESSAMENTO = 'OK' WHERE FAZER='D' AND DATA_PROCESSAMENTO IS NULL AND STATUS_PROCESSAMENTO IS NULL and data_carga = ''||c1.DATA_CARGA||'' AND CODIGO_EMPRESA = ''||C1.CODIGO_EMPRESA||'' AND TIPO_CONTRATO = ''||C1.TIPO_CONTRATO||'' AND CODIGO_CONTRATO = ''||C1.CODIGO_CONTRATO||'' AND COD_TIPO_APOS = ''||C1.COD_TIPO_APOS||'' AND DT_INI_AQUISICAO = ''||C1.DT_INI_AQUISICAO||'';
COMMIT;
END IF;

END IF;

/*VERIFICA SE A DATA INICIO E FIM ESTA PREENCHIDA, SE TIVER O TEMPO ATUAL = 1825 - (TEMPO AVERBADO + TEMPO_COMPUTO)*/
IF ( C1.DT_FIM_AQUISICAO IS NOT NULL AND C1.FAZER = 'I' ) THEN

dbms_output.put_line('TEMPO_ANTER '||C1.TEMPO_ANTER|| 'TEMPO_COMPUTO '||C1.TEMPO_COMPUTO||' RESULTADO '|| C1.TEMPO_ATUAL);


UPDATE SUGESP_SANEAMENTO_EVENTO_TEMP SET TEMPO_ATUAL=''||C1.TEMPO_ATUAL||'' WHERE CODIGO_CONTRATO=''||C1.CODIGO_CONTRATO||''
AND CODIGO_EMPRESA=''||C1.CODIGO_EMPRESA||''AND TIPO_CONTRATO=''||C1.TIPO_CONTRATO||''AND COD_TIPO_APOS=''||C1.COD_TIPO_APOS||'' AND DATA_CARGA=''||C1.DATA_CARGA||'' AND
NUMERO_LINHA = ''||C1.NUMERO_LINHA||'';

END IF;

/*QUANDO O CAMPO O QUE FAZER ESTIVER PREENCHIDO COMO I (INSERT) SERA INSERIDO NA TABELA RHTEMP_APOSENT (EVENTOS TEMPORAIS) DOS REGISTROS QUE NAO FORAM EXECUTADOS*/
---- INSERT
IF (C1.FAZER='I' AND C1.DATA_PROCESSAMENTO IS NULL AND C1.STATUS_PROCESSAMENTO IS NULL) THEN

/*GERA UMA NOVA OCORRENCIA DE ACORDO COM A DATA INICIO DO REGISTRO E DE ACORDO COM O COD_TIPO_APOS*/
select xxx.* INTO NOVA_OCORRENCIA FROM (
SELECT XX.*  FROM (SELECT CASE WHEN X.OCORRENCIA IS NULL THEN 1
WHEN  X.OCORRENCIA=0 THEN 1 ELSE OCORRENCIA+1 END AS OCORRENCIA  FROM (SELECT MAX(OCORRENCIA) AS OCORRENCIA ,CODIGO_CONTRATO,CODIGO_EMPRESA,TIPO_CONTRATO,COD_TIPO_APOS
FROM SUGESP_SANEAMENTO_EVENTO_TEMP
WHERE CODIGO_CONTRATO = C1.CODIGO_CONTRATO AND
CODIGO_EMPRESA = C1.CODIGO_EMPRESA AND
TIPO_CONTRATO = C1.TIPO_CONTRATO AND
TRUNC(DATA_CARGA) = TRUNC(C1.DATA_CARGA) AND
COD_TIPO_APOS=C1.COD_TIPO_APOS
AND FAZER='I'
GROUP BY CODIGO_CONTRATO,CODIGO_EMPRESA,TIPO_CONTRATO,COD_TIPO_APOS
order by COD_TIPO_APOS
)X GROUP BY OCORRENCIA)XX
)xxx
;

/*RECUPERA A DATA DE ACORDO COM O COD_TIPO_APOS, O QUE FAZER IGUAL A I (INSERCAO) E DE ACORDO COM A OCORRENCIA ACIMA*/
SELECT to_date(XXX.DATA_INICIO,'DD/MM/YYYY') INTO DATA_ORDEM FROM (SELECT XX.*,ROWNUM  AS ORDEM  FROM (SELECT data_inicio  FROM (SELECT CODIGO_CONTRATO,CODIGO_EMPRESA,TIPO_CONTRATO,COD_TIPO_APOS,to_char(DT_INI_AQUISICAO,'dd/mm/yyyy') data_inicio
FROM SUGESP_SANEAMENTO_EVENTO_TEMP
WHERE CODIGO_CONTRATO = C1.CODIGO_CONTRATO AND
CODIGO_EMPRESA = C1.CODIGO_EMPRESA AND
TIPO_CONTRATO = C1.TIPO_CONTRATO AND
TRUNC(DATA_CARGA) = TRUNC(C1.DATA_CARGA) AND
COD_TIPO_APOS=C1.COD_TIPO_APOS
AND FAZER='I'
order by COD_TIPO_APOS,DT_INI_AQUISICAO, DT_FIM_AQUISICAO
)X
)XX
)XXX
WHERE XXX.ORDEM =NOVA_OCORRENCIA;

/*ATUALIZA A OCORRENCIA NA TABELA DE APOIO SUGESP_SANEAMENTO_EVENTO_TEMP DE ACORDO COM O CODIGO DE CONTRATO E COD_TIPO_APOS DE ACORDO COM A INFORMAÇÃO RECUPERADA ACIMA*/
EXECUTE IMMEDIATE ('UPDATE SUGESP_SANEAMENTO_EVENTO_TEMP SET OCORRENCIA='''||NOVA_OCORRENCIA||''' WHERE CODIGO_CONTRATO='''||C1.CODIGO_CONTRATO||'''AND CODIGO_EMPRESA='''||C1.CODIGO_EMPRESA||'''AND TIPO_CONTRATO='''||C1.TIPO_CONTRATO||'''AND COD_TIPO_APOS='''||C1.COD_TIPO_APOS||''' AND DATA_CARGA='''||C1.DATA_CARGA||'''');

QTD_LINHAS_AFETADAS:=SQL%ROWCOUNT;
COMMIT;

QTD_LINHAS_AFETADAS:=0;

/*REALIZA O INSERT NA TABELA OFICIAL DO ARTERH (RHTEMP_APOSENT, EVENTOS TEMPORAIS) DE ACORDO COM A OCORRENCIA QUE FOI GERADA ACIMA E A DATA INICIO*/
INSERT INTO RHTEMP_APOSENT (CODIGO_EMPRESA,TIPO_CONTRATO,CODIGO_CONTRATO,COD_TIPO_APOS,OCORRENCIA,DT_INI_AQUISICAO,DT_FIM_AQUISICAO,DT_APURACAO,DT_DIREITO,PERC_SALARIO,C_LIVRE_SELEC01,C_LIVRE_SELEC02,C_LIVRE_VALOR01,C_LIVRE_VALOR02,C_LIVRE_DATA01,C_LIVRE_DATA02,C_LIVRE_OPCAO01,C_LIVRE_OPCAO02,C_LIVRE_DESCR01,C_LIVRE_DESCR02,LOGIN_USUARIO,DT_ULT_ALTER_USUA,STATUS_CONFIRMACAO,SOMA_FERIAS_DOBRO,TEMPO_ATUAL,TEMPO_ANTER,TEMPO_COMPUTO,TEMPO_BENEF,TEMPO_TRANSICAO,DIAS_FERIAS_DOBRO,DIAS_FERIAS_VEND,DIAS_FALTAS,IND_CALCULO,DT_REFERENCIA,DT_PERMITIDA,ASSINATURA_01,ASSINATURA_02,DIAS_DIREITO,CODIGO_MOTIVO_OCOR,TEXTO_ASSOCIADO)
VALUES (''||C1.CODIGO_EMPRESA||'',''||C1.TIPO_CONTRATO||'',''||C1.CODIGO_CONTRATO||'',''||C1.COD_TIPO_APOS||'',''||NOVA_OCORRENCIA||'',''||DATA_ORDEM||'',''||C1.DT_FIM_AQUISICAO||'',''||C1.DT_APURACAO||'',''||C1.DT_DIREITO||'',''||C1.PERC_SALARIO||'',''||C1.C_LIVRE_SELEC01||'',''||C1.C_LIVRE_SELEC02||'',''||C1.C_LIVRE_VALOR01||'',''||C1.C_LIVRE_VALOR02||'',''||C1.C_LIVRE_DATA01||'',''||C1.C_LIVRE_DATA02||'',''||C1.C_LIVRE_OPCAO01||'',''||C1.C_LIVRE_OPCAO02||'',''||C1.C_LIVRE_DESCR01||'',''||C1.C_LIVRE_DESCR02||'',''||C1.LOGIN_USUARIO||'',sysdate,''||C1.STATUS_CONFIRMACAO||'',''||C1.SOMA_FERIAS_DOBRO||'',''||C1.TEMPO_ATUAL||'',''||C1.TEMPO_ANTER||'',''||C1.TEMPO_COMPUTO||'',''||C1.TEMPO_BENEF||'',''||C1.TEMPO_TRANSICAO||'',''||C1.DIAS_FERIAS_DOBRO||'',''||C1.DIAS_FERIAS_VEND||'',''||C1.DIAS_FALTAS||'',''||C1.IND_CALCULO||'',''||C1.DT_REFERENCIA||'',''||C1.DT_PERMITIDA||'',''||C1.ASSINATURA_01||'',''||C1.ASSINATURA_02||'',''||C1.DIAS_DIREITO||'',''||C1.CODIGO_MOTIVO_OCOR||'',''||C1.TEXTO_ASSOCIADO||'');

update SUGESP_SANEAMENTO_EVENTO_TEMP set DATA_PROCESSAMENTO = sysdate, STATUS_PROCESSAMENTO = 'OK' WHERE FAZER='I' AND DATA_PROCESSAMENTO IS NULL AND STATUS_PROCESSAMENTO IS NULL and data_carga = ''||c1.DATA_CARGA||'' AND CODIGO_EMPRESA = ''||C1.CODIGO_EMPRESA||'' AND TIPO_CONTRATO = ''||C1.TIPO_CONTRATO||'' AND CODIGO_CONTRATO = ''||C1.CODIGO_CONTRATO||'' AND COD_TIPO_APOS = ''||C1.COD_TIPO_APOS||'' AND DT_INI_AQUISICAO = ''||C1.DT_INI_AQUISICAO||'';

/* ATUALIZA O CAMPO IND_CALCULO COMO N (NAO) E APENAS O ULTIMO REGISTRO FICA COMO S (SIM)*/

update RHTEMP_APOSENT set IND_CALCULO = (select case when DT_FIM_AQUISICAO IS NULL THEN 'S' ELSE 'N' END AS IND_CALCULO
FROM RHTEMP_APOSENT WHERE CODIGO_CONTRATO =  ''||C1.CODIGO_CONTRATO||'' AND CODIGO_EMPRESA = ''||C1.CODIGO_EMPRESA||'' AND TIPO_CONTRATO = ''||C1.TIPO_CONTRATO||'' AND DT_INI_AQUISICAO = ''||DATA_ORDEM||'' AND COD_TIPO_APOS = ''||C1.COD_TIPO_APOS||'' AND OCORRENCIA = ''||NOVA_OCORRENCIA||''
) WHERE CODIGO_CONTRATO =  ''||C1.CODIGO_CONTRATO||'' AND CODIGO_EMPRESA = ''||C1.CODIGO_EMPRESA||'' AND TIPO_CONTRATO = ''||C1.TIPO_CONTRATO||'' AND DT_INI_AQUISICAO = ''||DATA_ORDEM||'' AND COD_TIPO_APOS = ''||C1.COD_TIPO_APOS||'' AND OCORRENCIA = ''||NOVA_OCORRENCIA||'';

QTD_LINHAS_AFETADAS:=SQL%ROWCOUNT;
COMMIT;

/*ENTAO ATUALIZA O CAMPO DATA PROCESSAMENTO E STATUS PROCESSAMENTO DE ACORDO COM A DATA DA EXECUCAO E STATUS DE PROCESSAMENTO COMO OK*/
IF QTD_LINHAS_AFETADAS<>'0' THEN

update SUGESP_SANEAMENTO_EVENTO_TEMP set DATA_PROCESSAMENTO = sysdate, STATUS_PROCESSAMENTO = 'OK' WHERE FAZER='I' AND DATA_PROCESSAMENTO IS NULL AND STATUS_PROCESSAMENTO IS NULL and
data_carga = ''||c1.DATA_CARGA||'' AND CODIGO_EMPRESA = ''||C1.CODIGO_EMPRESA||'' AND TIPO_CONTRATO = ''||C1.TIPO_CONTRATO||'' AND CODIGO_CONTRATO = ''||C1.CODIGO_CONTRATO||'' AND COD_TIPO_APOS = ''||C1.COD_TIPO_APOS||'' AND DT_INI_AQUISICAO = ''||C1.DT_INI_AQUISICAO||'';
COMMIT;
END IF;
END IF;

END LOOP;
/*CASO O REGISTRO NÃO ENTRE NA CONDICAO ACIMA, IRA ATUALIZAR OS CAMPOS STATUS DE PROCESSAMENTO COMO N(NAO) E A DATA COM O DIA QUE FOI EXECUTADO, PARA O QUE REGISTRO NAO ENTRE NA PROCEDURE DIVERSAS VEZES */
update SUGESP_SANEAMENTO_EVENTO_TEMP set DATA_PROCESSAMENTO = sysdate, STATUS_PROCESSAMENTO = 'N' WHERE DATA_PROCESSAMENTO IS NULL AND STATUS_PROCESSAMENTO IS NULL ;
END;
END SANEAMENTO_EVENTO_TEMP;