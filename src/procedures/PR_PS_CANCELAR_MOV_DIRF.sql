
  CREATE OR REPLACE EDITIONABLE PROCEDURE "ARTERH"."PR_PS_CANCELAR_MOV_DIRF" (PCODIGO_EMPRESA CHAR, PTIPO_CONTRATO CHAR, PANO_MES_REFERENCIA DATE ) as

vRETORNO RETORNO_PROCESSAMENTO := RETORNO_PROCESSAMENTO(null,null,null);
REG_LOG LOG_PROCESSAMENTO;
vLISTA_LOG LISTA_LOG := LISTA_LOG(null,null,null);

  TIPO_LOG_SUCESSO      CONSTANT NUMBER := 0;
  TIPO_LOG_INFO         CONSTANT NUMBER := 2;
  TIPO_LOG_ALERTA       CONSTANT NUMBER := 2;
  TIPO_LOG_ERRO         CONSTANT NUMBER := 99;

  CATEGORIA_LOG_VALIDACAO CONSTANT NUMBER := 0;
  CATEGORIA_LOG_EXECUCAO  CONSTANT NUMBER := 1;

  LISTA_VERBAS_DIRF  LISTA:=LISTA('24I8','24I9','16I8','16I5','24I5');

  vCONTADOR NUMBER;
  vTIPO_ARQUIVO CHAR(4);
  vDATA_PROCESSAMENTO DATE;
  vIS_TESTE BOOLEAN;
  vSITUACAO_PROCESSAMENTO NUMBER;
  vCODIGO_EMPRESA CHAR(4);
  vTIPO_CONTRATO CHAR(4);
  vANO_MES_REFERENCIA DATE;
  vCATEGORIA_LOG NUMBER;
  vTIPO_LOG NUMBER;
  vANO_CORRENTE NUMBER;
  vANO NUMBER;

PROCEDURE REGISTRA_LOG(TipoLog IN NUMBER, Numero_linha IN NUMBER, DescricaoLog IN VARCHAR2, DetalheLog IN VARCHAR2) AS
BEGIN

REG_LOG.TIPO_LOG := TipoLog;
REG_LOG.DESCRICAO_LOG := DescricaoLog;
REG_LOG.DETALHE_LOG := DetalheLog;

vLISTA_LOG.Extend;
vLISTA_LOG(vLISTA_LOG.count) := REG_LOG;
END;

PROCEDURE GRAVA_LOG(CodigoEmpresa IN CHAR, CategoriaLog IN NUMBER, TipoLog IN NUMBER, IdArquivo IN NUMBER, Numero_linha IN NUMBER, CodigoLog IN CHAR, DetalheLog IN VARCHAR2) AS
BEGIN
     INSERT INTO RHPBH_ARQUIVO_LOG(ID_LOG, DATA_LOG, CATEGORIA, TIPO, ID_ARQUIVO, NUMERO_LINHA, CODIGO_LOG, DETALHE, CODIGO_EMPRESA)
     values (SQ_RHPBH_PS_IMPORTACAO_LOG.NEXTVAL, sysdate, CategoriaLog, TipoLog, IdArquivo, Numero_linha, CodigoLog, DetalheLog, CodigoEmpresa);
     COMMIT;
END;

begin

    vLISTA_LOG := LISTA_LOG();
    REG_LOG := LOG_PROCESSAMENTO(null, null, null, null);
    vRETORNO := RETORNO_PROCESSAMENTO(null,null,null);

    -- Verifica se o código de empresa informado é válido
    IF PCODIGO_EMPRESA IS NULL THEN
       raise_application_error (-20001,'CODIGO_EMPRESA NAO INFORMADO.');
    END IF;

    BEGIN
         vCODIGO_EMPRESA := null;
         select CODIGO into vCODIGO_EMPRESA from RHORGA_EMPRESA where CODIGO = PCODIGO_EMPRESA;

         IF vCODIGO_EMPRESA IS NULL THEN
            raise_application_error (-20001,'CODIGO_EMPRESA INVALIDO.');
         END IF;
    EXCEPTION
    WHEN OTHERS THEN
       raise_application_error (-20002,'NAO FOI POSSIVEL RECUPERAR O CODIGO_EMPRESA' || 'ENCONTRADO ERRO - '||SQLCODE||' -ERROR- '||SQLERRM);
    END;
    
    -- Verifica se o tipo de contrato informado é válido
    IF PTIPO_CONTRATO IS NULL THEN
       raise_application_error (-20001,'TIPO DE CONTRATO NAO INFORMADO.');
    END IF;

    BEGIN
         vTIPO_CONTRATO := null;
         select CODIGO into vTIPO_CONTRATO from RHPESS_TP_CONTRATO where CODIGO = PTIPO_CONTRATO;

         IF vTIPO_CONTRATO IS NULL THEN
            raise_application_error (-20001,'TIPO_CONTRATO INVALIDO.');
         END IF;
    EXCEPTION
    WHEN OTHERS THEN
       raise_application_error (-20002,'NAO FOI POSSIVEL RECUPERAR O TIPO_CONTRATO.' || 'ENCONTRADO ERRO - '||SQLCODE||' -ERROR- '||SQLERRM);
    END;    

    -- Verifica se a data informada é válida
    IF PANO_MES_REFERENCIA IS NULL THEN
      raise_application_error (-20001,'ANO_MES_REFERENCIA NAO INFORMADO.');
    ELSE
       vANO_CORRENTE := TO_CHAR(sysdate,'YYYY');
       vANO := vANO_CORRENTE-2;
       /*
       IF PANO_MES_REFERENCIA not between TO_DATE('01/12/'|| vANO,'DD/MM/YYYY') and TO_DATE('01/02/'|| vANO_CORRENTE,'DD/MM/YYYY') THEN
          raise_application_error (-20002,'O CANCELAMENTO DE MOVIMENTO SO E PERMITIDO PARA ANO_MES_REFERENCIA A PARTIR DE DEZ/' || vANO || '.' );
       END IF;
       */
    END IF;

    BEGIN

      delete from RHBENF_MOV_BENEFIC
       where CODIGO_EMPRESA = PCODIGO_EMPRESA
         and TIPO_CONTR_TITULAR = PTIPO_CONTRATO
         and ANO_MES_REFERENCIA = PANO_MES_REFERENCIA
         and CODIGO_VERBA member (LISTA_VERBAS_DIRF);

      VCONTADOR := sql%rowcount;
                 
    EXCEPTION
    WHEN OTHERS THEN
       raise_application_error (-20002,'NAO FOI POSSIVEL REALIZAR O CANCELAMENTO DE MOVIMENTO DIRF. ENTRE EM CONTATO COM A EQUIPE DE SUPORTE DA PBH.');
    END;
    
    IF VCONTADOR = 0 THEN
       raise_application_error (-20002,'NAO EXISTE REGISTRO DE MOVIMENTO DE BENEFICIARIO A SER EXCLUIDO COM OS PARAMETROS INFORMADOS.');
    END IF;     

end;