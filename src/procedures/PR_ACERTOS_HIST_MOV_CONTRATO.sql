
  CREATE OR REPLACE EDITIONABLE PROCEDURE "ARTERH"."PR_ACERTOS_HIST_MOV_CONTRATO" (
mCODIGO_CONTRATO VARCHAR, mCOD_MOVIMENTACAO CHAR, mDT_ALT_UNID_CUSTO CHAR, 
mTIPO_CONTRATO CHAR, mCODIGO_EMPRESA CHAR, mACAO CHAR, mDATA_SISTEMA DATE, mCOD_USUARIO VARCHAR )
IS
--#VERSÃO: 2
--#AUTOR: ROBSON MATOS (ANALISTA ASTIN - SUGESP - PBH) --
--#AÇÕES DA PROCEDURE: AJUSTA ULTIMO CONTRATO ALTERADO EM FUNÇÃO DE MOVIMENTAÇÃO, SEJA AO ATUALIZAR OU EXCLUIR A MOVIMENTAÇÃO NA CGED.

--// NOTAS DE CODIFICAÇÃO //--
--tipos de variáveis: mXXXXX (valor que veio do Movimento - Tela do ArteRH ou Externa a procedure)]
--tipos de variáveis: vXXXXX (valor que veio da PROCEDURE - valor interno declarado na procedure)

--#TABELAS EM USO NO PROCESSO
--#RHPESS_ALT_CONTRAT, RHPESS_CONTRATO, RHCGED_MOVIMENTO

--DROP PROCEDURE ARTERH.PR_ACERTOS_HIST_MOV_CONTRATO;
-- --> DELCARAÇÃO DAS VARIÁVES -->
vEXCEPTION EXCEPTION;
CODIGO VARCHAR(15);
vDT_ALT_UNID_CUSTO DATE DEFAULT TO_DATE(mDT_ALT_UNID_CUSTO,'RRRRMMDD');
vDT_ULT_MOVIMENTO DATE;
vSTEP NUMBER DEFAULT 0;
vDATA_SISTEMA DATE DEFAULT mDATA_SISTEMA;
vULT_MOVIMENTO VARCHAR(255);
vULT_CONTRATO VARCHAR(255);
vATUAL_CONTRATO VARCHAR(255);
vATUAL_CONTR_COD_MOV CHAR(4);
vCONTR_ANO_MES_REF DATE;
vMOV_ATUAL arterh.RHCGED_TRANSFERENC%ROWTYPE;
vOCORRENCIA_MAX NUMBER;
vCODIGO_ALT_CONTRATO CHAR(4) DEFAULT 'M001';
vCGED_ROWID VARCHAR2(100);
vALT_CONTRAT_ROWID VARCHAR2(100);
vCONTRATO_ROWID VARCHAR2(100);
vULT_CGED_REG NUMBER(1) DEFAULT 0; --ULTIMO REGISTRO NA CGED
vREVERTER BOOLEAN;
vSTATUS_REGISTRO VARCHAR(50) DEFAULT 'HISTORICO';
vDIF_ULT_CONTR_ULT_MOV NUMBER(1) DEFAULT 0;
vCENARIO_UPDATE NUMBER DEFAULT 0;

--OUTRAS VARIAVEIS
err_msg varchar2 (32000) DEFAULT NULL;
vDEVMODE BOOLEAN DEFAULT TRUE; --SET FALSE QUANDO RODAR EM PRODUÇÃO
vACERTO_BASE_HIST NUMBER;


	--FUNÇÃO PARA GERAR LOGS NO BANCO EM TABELA TEMPORARIA -- OBS: SET vDEVMODE =TRUE PARA FUNCIONAR
	PROCEDURE GRAVA_LOG_BD (TEXTO IN VARCHAR2) AS 	
		BEGIN
		    IF vDEVMODE=TRUE THEN
		    	vSTEP := vSTEP+1;
	        	INSERT INTO "ARTERH"."DEBUG_SQL_VALID_APOIO_ROBSON" (DEBUG_MSG,DT_ULT_ALTER_USUA) VALUES (vSTEP ||'-' || TEXTO ,SYSDATE);
	        	dbms_output.put_line(vSTEP ||'-' ||  TEXTO  ||' - '|| SYSDATE);
	    	END IF;
	END GRAVA_LOG_BD;

	--FUNÇÃO PARA RETORNAR O MAX OCORRENCIA +1 DE ACORDO COM A AÇÃO CHAMADA.
	FUNCTION fn_MAX_OCORR (fCODIGO_EMPRESA CHAR , fTIPO_CONTRATO CHAR, fCODIGO_CONTRATO VARCHAR, fDATA_ALTERACAO DATE, fCODIGO_ALTERACAO CHAR ) RETURN NUMBER
	IS
	vOCORRENCIA_MAX NUMBER;
	BEGIN	  
	  	SELECT NVL(MAX(OCORRENCIA),0) INTO vOCORRENCIA_MAX FROM RHPESS_ALT_CONTRAT 
		WHERE CODIGO_CONTRATO = LPAD(fCODIGO_CONTRATO,15,0)
		AND CODIGO_EMPRESA = fCODIGO_EMPRESA
		AND TIPO_CONTRATO = fTIPO_CONTRATO
		AND DATA_ALTERACAO = fDATA_ALTERACAO
		AND CODIGO_ALTERACAO = fCODIGO_ALTERACAO;
		--GRAVA_LOG_BD ('MAX_OCORRENCIA: ' || fCODIGO_EMPRESA ||'-'|| fTIPO_CONTRATO  ||'-'|| fCODIGO_CONTRATO ||'-'|| fDATA_ALTERACAO ||'-'|| fCODIGO_ALTERACAO);
	  	
	   RETURN vOCORRENCIA_MAX;
	END;
     
BEGIN

dbms_output.enable(null);

-- VERIFICA LOCAL DO CONTRATO ANTES DE SALVAR
 	SELECT TO_CHAR(ANO_MES_REFERENCIA,'MMYYYY') || COD_MOVIMENTACAO || COD_LOCAL1 || COD_LOCAL2 || COD_LOCAL3 || COD_LOCAL4 || COD_LOCAL5 || COD_LOCAL6 || COD_UNIDADE1 || COD_UNIDADE2 || COD_UNIDADE3 || COD_UNIDADE4 || COD_UNIDADE5 || COD_UNIDADE6 || COD_CUSTO_CONTAB1 || COD_CUSTO_CONTAB2 || COD_CUSTO_CONTAB3 || COD_CUSTO_CONTAB4 || COD_CUSTO_CONTAB5 || COD_CUSTO_CONTAB6 || COD_CUSTO_GERENC1 || COD_CUSTO_GERENC2 || COD_CUSTO_GERENC3 || COD_CUSTO_GERENC4 || COD_CUSTO_GERENC5 || COD_CUSTO_GERENC6 || TO_CHAR(DATA_TRANSF_ENTRAD,'DDMMYYYY') || TO_CHAR(DT_ULT_ALT_LOC,'DDMMYYYY') || TO_CHAR(DT_ULT_ALT_UNID,'DDMMYYYY') || TO_CHAR(DT_ULT_ALT_CONT,'DDMMYYYY') || TO_CHAR(DT_ULT_ALT_GER,'DDMMYYYY') "CODIGO", COD_MOVIMENTACAO INTO vATUAL_CONTRATO, vATUAL_CONTR_COD_MOV FROM ARTERH.RHPESS_CONTRATO C 
 	WHERE codigo_empresa = mCODIGO_EMPRESA AND tipo_contrato=mTIPO_CONTRATO AND codigo = lpad(mCODIGO_CONTRATO,15,0) 
 	AND ANO_MES_REFERENCIA =(SELECT MAX(ANO_MES_REFERENCIA) FROM ARTERH.RHPESS_CONTRATO C1 
	WHERE CODIGO_EMPRESA = C.CODIGO_EMPRESA AND TIPO_CONTRATO = C.TIPO_CONTRATO AND CODIGO = C.CODIGO );


--PEGA ANO_MES_REF DO ULTIMO CONTRATO
	vCONTR_ANO_MES_REF:=TO_DATE('01/'|| SUBSTR(vATUAL_CONTRATO,0,2)|| '/' || SUBSTR(vATUAL_CONTRATO,3,4),'DD/MM/RRRR');
	
	GRAVA_LOG_BD(vATUAL_CONTRATO);

--	SELECT NVL(MAX(OCORRENCIA)+1,1) INTO vOCORRENCIA_MAX FROM RHPESS_ALT_CONTRAT 
--	WHERE CODIGO_CONTRATO = LPAD(mCODIGO_CONTRATO,15,0)
--	AND DATA_ALTERACAO = vCONTR_ANO_MES_REF
--	AND CODIGO_ALTERACAO = vCODIGO_ALT_CONTRATO
--	AND TIPO_CONTRATO = mTIPO_CONTRATO
--	AND CODIGO_EMPRESA = mCODIGO_EMPRESA;

	--GRAVA_LOG_BD('ACERTO_BASE_HIST: ' || ARTERH.PKG_TELA_MOVIMENTACOES.GET_USER_ACERTA_BASEH(mCOD_USUARIO));

--ATUALIZA VARIAVEL vACERTO_BASE_HIST
    vACERTO_BASE_HIST:= ARTERH.PKG_TELA_MOVIMENTACOES.GET_USER_ACERTA_BASEH(mCOD_USUARIO);
 	--SELECT CASE ACERTO_BASE_HIST WHEN 'N' THEN 0 ELSE 1 END "acerta_base" INTO vACERTO_BASE_HIST FROM arterh.rhuser_p_sist WHERE codigo_usuario=mCOD_USUARIO;
	GRAVA_LOG_BD('ACERTO_BASE_HIST: ' || vACERTO_BASE_HIST || '  |  ' || mCOD_USUARIO);
-- VERIFICA AÇÃO DO USUARIO B = ANTES DE SALVAR  E A  = DEPOIS DE SALVAR	

IF mACAO='B' THEN

BEGIN
-- GERA REGISTRO NA TABELA ALT_CONTRATO 

	GRAVA_LOG_BD('AÇÃO ' || mACAO || 'INICIADA' );

	--VERIFICA STATUS DO REGISTRO 	
	IF vACERTO_BASE_HIST=0  THEN vSTATUS_REGISTRO :='ABERTO';	END IF;

	--VERIFICA QUAL O MAX OCORRENCIA PARA ALT_CONTRATO
	vOCORRENCIA_MAX:=0;	
	vOCORRENCIA_MAX:= fn_MAX_OCORR (mCODIGO_EMPRESA, mTIPO_CONTRATO, mCODIGO_CONTRATO,vDATA_SISTEMA, vCODIGO_ALT_CONTRATO )+1;
	
	--GERA HISTORICO BASEADO NO ULTIMO CONTRATO
	INSERT INTO RHPESS_ALT_CONTRAT(CODIGO_EMPRESA, DATA_ALTERACAO, TIPO_CONTRATO, CODIGO_CONTRATO, CODIGO_ALTERACAO, CONTEUDO_ANTERIOR, CONTEUDO_NOVO, LOGIN_USUARIO, DT_ULT_ALTER_USUA, CONTEUDO_NOVO_DESC, TEXTO_ASSOCIADO, OCORRENCIA, GERADO_AUTO, OBS_GERACAO) VALUES(mCODIGO_EMPRESA, vDATA_SISTEMA, mTIPO_CONTRATO, LPAD(mCODIGO_CONTRATO,15,0), vCODIGO_ALT_CONTRATO, vATUAL_CONTR_COD_MOV,mCOD_MOVIMENTACAO, 'proc_ajuste_ult_contrato', sysdate, vSTATUS_REGISTRO, vATUAL_CONTRATO, vOCORRENCIA_MAX, 'N',null);
	--COMMIT;
	GRAVA_LOG_BD('INSERT TABELA RHPESS_ALT_CONTRAT -- SUCESSO' );

	 EXCEPTION
	      WHEN OTHERS THEN
	        -- my_code := SQLCODE;
	         err_msg := SQLERRM;
	         GRAVA_LOG_BD('AÇÃO: '|| mACAO|| 'Error code ' || SQLCODE || ': ' || err_msg);
END; 

END IF; --fim STEP B

-- EXECUÇÃO DEPOIS DE SALVAR OS DADOS DE MOVIMENTAÇÃO
IF mACAO='A' THEN

	GRAVA_LOG_BD('AÇÃO ' || mACAO || 'INICIADA' );

	-- CRIAÇÃO DE CENARIOS DE DECISÃO PARA REVERTER DADOS DO ULTMO CONTRATO
	vREVERTER:=FALSE;

	 GRAVA_LOG_BD('-- AJUSTA ULTIMO CONTRATO ALTERADO PELA ' ||  vDT_ALT_UNID_CUSTO || '-' || vDATA_SISTEMA);
	
	--DEFINE OS CENARIOS DE AJUSTE
	--DT_ALT_UNID_CUSTO:= '20230501';
	
	--ATUALIZA ROW ID NA TABELA DE REGISTRO
	SELECT rowid INTO vCGED_ROWID FROM RHCGED_TRANSFERENC
	WHERE CODIGO_EMPRESA = mCODIGO_EMPRESA AND CODIGO = LPAD(mCODIGO_CONTRATO,15,0) AND TIPO_CONTRATO = mTIPO_CONTRATO 
	AND DT_ALT_UNID_CUSTO = vDT_ALT_UNID_CUSTO AND COD_MOVIMENTACAO =mCOD_MOVIMENTACAO;
	
	GRAVA_LOG_BD('--> ATUALIZANDO ALT_CONTRATO COM ROWID CGED TRANSFERENC '|| vCGED_ROWID || '-' || vOCORRENCIA_MAX);
	
	--VERIFICA QUAL O MAX OCORRENCIA PARA ALT_CONTRATO
	vOCORRENCIA_MAX:=0;	
	vOCORRENCIA_MAX:= fn_MAX_OCORR (mCODIGO_EMPRESA, mTIPO_CONTRATO, mCODIGO_CONTRATO, 
	to_date(SUBSTR(ARTERH.PKG_TELA_MOVIMENTACOES.GET_ULTIMO_CONTRATO(mTIPO_CONTRATO,mCODIGO_EMPRESA,lpad(mCODIGO_CONTRATO,15,0)),0,8),'ddmmrrrr'), vCODIGO_ALT_CONTRATO)+1;
	
	-- ATUALIZA ULTIMAO OCORRENCIA DO HISTORICO COM O ROWID ATUA DO MOVIMNTO.
	--UPDATE ARTERH.RHPESS_ALT_CONTRAT SET OBS_GERACAO = vCGED_ROWID WHERE CODIGO_CONTRATO = LPAD(mCODIGO_CONTRATO,15,0) AND DATA_ALTERACAO = vCONTR_ANO_MES_REF AND CODIGO_ALTERACAO = vCODIGO_ALT_CONTRATO AND TIPO_CONTRATO = mTIPO_CONTRATO AND OCORRENCIA = vOCORRENCIA_MAX AND CODIGO_EMPRESA = mCODIGO_EMPRESA;

	-- PEGA DATA ULTIMO MOVIMENTO 
	SELECT MAX(DT_ALT_UNID_CUSTO) INTO vDT_ULT_MOVIMENTO FROM RHCGED_TRANSFERENC
	WHERE CODIGO_EMPRESA = mCODIGO_EMPRESA AND CODIGO = LPAD(mCODIGO_CONTRATO,15,0) AND TIPO_CONTRATO = mTIPO_CONTRATO  AND COD_MOVIMENTACAO =mCOD_MOVIMENTACAO;

	-- EXECUTA A LÓGICA DO AJUSTE DO CONTRATO BASEADO NO

	vCENARIO_UPDATE:=ARTERH.PKG_TELA_MOVIMENTACOES.GET_CENARIO_UPDATE (mCODIGO_EMPRESA, mTIPO_CONTRATO, LPAD(mCODIGO_CONTRATO,15,0), mCOD_MOVIMENTACAO, vDT_ALT_UNID_CUSTO);
	GRAVA_LOG_BD ('vCENARIO_UPDATE antes: ' || vCENARIO_UPDATE );

IF (vCENARIO_UPDATE=2) THEN
	

	GRAVA_LOG_BD ('vCENARIO_UPDATE depois: ' || vCENARIO_UPDATE );

	--ATUALIZA VARIAVEL  vATUAL_CONTRATO, vATUAL_CONTR_COD_MOV, vCONTRATO_ROWID
	--SELECT TO_CHAR(ANO_MES_REFERENCIA,'MMYYYY') || COD_MOVIMENTACAO || COD_LOCAL1 || COD_LOCAL2 || COD_LOCAL3 || COD_LOCAL4 || COD_LOCAL5 || COD_LOCAL6 || COD_UNIDADE1 || COD_UNIDADE2 || COD_UNIDADE3 || COD_UNIDADE4 || COD_UNIDADE5 || COD_UNIDADE6 || COD_CUSTO_CONTAB1 || COD_CUSTO_CONTAB2 || COD_CUSTO_CONTAB3 || COD_CUSTO_CONTAB4 || COD_CUSTO_CONTAB5 || COD_CUSTO_CONTAB6 || COD_CUSTO_GERENC1 || COD_CUSTO_GERENC2 || COD_CUSTO_GERENC3 || COD_CUSTO_GERENC4 || COD_CUSTO_GERENC5 || COD_CUSTO_GERENC6 || TO_CHAR(DATA_TRANSF_ENTRAD,'DDMMYYYY') CODIGO, COD_MOVIMENTACAO, ROWID INTO vATUAL_CONTRATO, vATUAL_CONTR_COD_MOV, vCONTRATO_ROWID
	--FROM ARTERH.RHPESS_CONTRATO C 
	--WHERE codigo_empresa = mCODIGO_EMPRESA AND tipo_contrato=mTIPO_CONTRATO AND codigo = lpad(mCODIGO_CONTRATO,15,0) AND ANO_MES_REFERENCIA =(SELECT MAX(ANO_MES_REFERENCIA) 
	--FROM RHPESS_CONTRATO C1 WHERE CODIGO_EMPRESA = C.CODIGO_EMPRESA AND TIPO_CONTRATO = C.TIPO_CONTRATO AND CODIGO = C.CODIGO);
	
	--ATUALIZA VARIAVEL   vULT_CONTRATO, vALT_CONTRAT_ROWID
	--SELECT TRIM(TEXTO_ASSOCIADO), ROWID INTO vULT_CONTRATO, vALT_CONTRAT_ROWID FROM RHPESS_ALT_CONTRAT AC
	--WHERE CODIGO_CONTRATO =lpad(mCODIGO_CONTRATO,15,0) AND CODIGO_ALTERACAO = vCODIGO_ALT_CONTRATO AND TIPO_CONTRATO = mTIPO_CONTRATO AND CODIGO_EMPRESA = mCODIGO_EMPRESA AND DATA_ALTERACAO = vCONTR_ANO_MES_REF 
	--AND OCORRENCIA =(SELECT MAX(OCORRENCIA) FROM ARTERH.RHPESS_ALT_CONTRAT 	WHERE CODIGO_EMPRESA = AC.CODIGO_EMPRESA AND CODIGO_CONTRATO = AC.CODIGO_CONTRATO AND TIPO_CONTRATO = AC.TIPO_CONTRATO AND CODIGO_ALTERACAO = AC.CODIGO_ALTERACAO AND DATA_ALTERACAO = AC.DATA_ALTERACAO);
		
		vULT_CONTRATO:= ARTERH.PKG_TELA_MOVIMENTACOES.GET_CONTR_MOV_ANTES (mCODIGO_EMPRESA, mTIPO_CONTRATO, mCODIGO_CONTRATO, vDT_ALT_UNID_CUSTO, vCODIGO_ALT_CONTRATO);
  	
		GRAVA_LOG_BD ('-- CONTRATO ANALISADO:' || vULT_CONTRATO || '-'|| mCODIGO_CONTRATO || vCODIGO_ALT_CONTRATO|| mTIPO_CONTRATO|| mCODIGO_EMPRESA );
		GRAVA_LOG_BD ('HOUVE ALTERAÇÃO DO CONTRATO -- NECESSÁRIO AJUSTE ' || lpad(mCODIGO_CONTRATO,15,0));
		
	
		vCONTR_ANO_MES_REF:= to_date(SUBSTR(ARTERH.PKG_TELA_MOVIMENTACOES.GET_ULTIMO_CONTRATO(mTIPO_CONTRATO,mCODIGO_EMPRESA,lpad(mCODIGO_CONTRATO,15,0)),0,8),'ddmmrrrr');
		BEGIN
			UPDATE  ARTERH.RHPESS_CONTRATO C
			SET COD_MOVIMENTACAO = SUBSTR(vULT_CONTRATO,7,4),
			COD_LOCAL1= SUBSTR(vULT_CONTRATO,11+(6*0),6), COD_LOCAL2= SUBSTR(vULT_CONTRATO,11+(6*1),6),COD_LOCAL3 = SUBSTR(vULT_CONTRATO,11+(6*2),6) , COD_LOCAL4 = SUBSTR(vULT_CONTRATO,11+(6*3),6) ,COD_LOCAL5 = SUBSTR(vULT_CONTRATO,11+(6*4),6) ,	COD_LOCAL6 = SUBSTR(vULT_CONTRATO,11+(6*5),6) ,
			COD_UNIDADE1 = SUBSTR(vULT_CONTRATO,11+(6*6),6) ,
			COD_UNIDADE2 =SUBSTR(vULT_CONTRATO,11+(6*7),6) ,COD_UNIDADE3 =SUBSTR(vULT_CONTRATO,11+(6*8),6),
			COD_UNIDADE4= SUBSTR(vULT_CONTRATO,11+(6*9),6) , COD_UNIDADE5 =SUBSTR(vULT_CONTRATO,11+(6*10),6),
			COD_UNIDADE6=SUBSTR(vULT_CONTRATO,11+(6*11),6) ,	
			COD_CUSTO_CONTAB1 = SUBSTR(vULT_CONTRATO,11+(6*12),6),
			COD_CUSTO_CONTAB2=SUBSTR(vULT_CONTRATO,11+(6*13),6) ,
			COD_CUSTO_CONTAB3= SUBSTR(vULT_CONTRATO,11+(6*14),6),
			COD_CUSTO_CONTAB4= SUBSTR(vULT_CONTRATO,11+(6*15),6),
			COD_CUSTO_CONTAB5 =SUBSTR(vULT_CONTRATO,11+(6*16),6),
			COD_CUSTO_CONTAB6 =SUBSTR(vULT_CONTRATO,11+(6*17),6),
			COD_CUSTO_GERENC1 =SUBSTR(vULT_CONTRATO,11+(6*18),6),
			COD_CUSTO_GERENC2 = SUBSTR(vULT_CONTRATO,11+(6*19),6),	COD_CUSTO_GERENC3 = SUBSTR(vULT_CONTRATO,11+(6*20),6),
			COD_CUSTO_GERENC4= SUBSTR(vULT_CONTRATO,11+(6*21),6),
			COD_CUSTO_GERENC5=SUBSTR(vULT_CONTRATO,11+(6*22),6),COD_CUSTO_GERENC6 =SUBSTR(vULT_CONTRATO,11+(6*23),6) ,	
			DATA_TRANSF_ENTRAD = to_date(SUBSTR(vULT_CONTRATO,11+(6*24),8),'ddmmrrrr'), 
			DT_ULT_ALT_LOC = to_date(SUBSTR(vULT_CONTRATO,11+(8*19),8),'ddmmrrrr'),
			DT_ULT_ALT_UNID = to_date(SUBSTR(vULT_CONTRATO,11+(8*20),8),'ddmmrrrr'), 
			DT_ULT_ALT_CONT = to_date(SUBSTR(vULT_CONTRATO,11+(8*21),8),'ddmmrrrr'),
			DT_ULT_ALT_GER = to_date(SUBSTR(vULT_CONTRATO,11+(8*22),8),'ddmmrrrr'),
			LOGIN_USUARIO = 'proc_cged_transf_corr'
			WHERE codigo_empresa = mCODIGO_EMPRESA
			AND tipo_contrato = mTIPO_CONTRATO
			AND codigo = lpad(mCODIGO_CONTRATO,15,0)
			AND ANO_MES_REFERENCIA  = vCONTR_ANO_MES_REF;
			
			--GERA UPDATE
			GRAVA_LOG_BD ('--AJUSTE REALIZADO PARA O CONTRATO: ' || lpad(mCODIGO_CONTRATO,15,0) || ' | vCONTRATO_ROWID: ' || vCONTRATO_ROWID  );
		
			
			EXCEPTION
		      WHEN OTHERS THEN
		        -- my_code := SQLCODE;
		         err_msg := SQLERRM;
		         dbms_output.put_line('Error code ' || SQLCODE || ': ' || err_msg);
			     GRAVA_LOG_BD('Error ao atualizar contrato: ' || SQLCODE || ': ' || err_msg);
		
		END;
		
	--GERA UPDATE RHPESS_ALT_CONTRAT 
	
		--UPDATE ARTERH.RHPESS_ALT_CONTRAT SET CONTEUDO_NOVO_DESC = 'TRATADO'	WHERE ROWID = vCGED_ROWID;
	
	ELSE 
		GRAVA_LOG_BD ('NÃO HOUVE ALTERAÇÃO DO CONTRATO');
		GRAVA_LOG_BD ('ULTIMO KEY CONTRATO: '|| vULT_CONTRATO);
		GRAVA_LOG_BD ('ULTIMO KEY CONTRATO: '|| vATUAL_CONTRATO);
	END IF;
	
ELSE
        /*DATA DA MOVIMENTA¿¿O >= DATA DO ULTIMO CONTRATO*/
        GRAVA_LOG_BD('AJUSTE NÃO REALIZADO - CENÁRIO AVALIADO:' || vCENARIO_UPDATE);
		--INSERT INTO "ARTERH"."DEBUG_SQL_VALID_APOIO_ROBSON" (DEBUG_MSG,DT_ULT_ALTER_USUA) VALUES ( 'AJUSTE N¿O REALIZADO - DATA MOVIMENTA¿¿O >=DATA_CONTRATO',SYSDATE);


END IF; -- FIM  STEP =A


-- VERIFICA AÇÃO DO USUARIO BD (BEFORE DELETE) = ANTES DE EXCLUIR  E AD (AFTER DELETE)  = DEPOIS DE EXCLUIR	
IF mACAO='BD' THEN

BEGIN
-- GERA REGISTRO NA TABELA ALT_CONTRATO 

	GRAVA_LOG_BD('AÇÃO ' || mACAO || 'INICIADA' );
	--INSERT INTO "ARTERH"."DEBUG_SQL_VALID_APOIO_ROBSON" (DEBUG_MSG,DT_ULT_ALTER_USUA) VALUES ('ANTES DE SALVAR COD_MOV:' || vMOV_ATUAL.COD_MOVIMENTACAO || '- OCO:'|| vOCORRENCIA_MAX ,SYSDATE);
	 --dbms_output.put_line('ANTES DE SALVAR COD_MOV:' || vMOV_ATUAL.COD_MOVIMENTACAO || '- OCO:'|| vOCORRENCIA_MAX || ' ANO_MES_REF:'|| vCONTR_ANO_MES_REF );
	
	--VERIFICA STATUS DO REGISTRO 
	
	IF vACERTO_BASE_HIST=0  THEN vSTATUS_REGISTRO :='HISTORICO_BD';	END IF;

	
	--PEGA O ULTIMO MOVIMENTO COM ROWID
	SELECT COD_MOVIMENTACAO || COD_LOTACAO_ATUAL1 || COD_LOTACAO_ATUAL2 || COD_LOTACAO_ATUAL3 || COD_LOTACAO_ATUAL4 || COD_LOTACAO_ATUAL5 || COD_LOTACAO_ATUAL6 || COD_UNIDADE_ATUAL1 || COD_UNIDADE_ATUAL2 || COD_UNIDADE_ATUAL3 || COD_UNIDADE_ATUAL4 || COD_UNIDADE_ATUAL5 || COD_UNIDADE_ATUAL6 || COD_CCONTAB_ATUAL1 || COD_CCONTAB_ATUAL2 || COD_CCONTAB_ATUAL3 || COD_CCONTAB_ATUAL4 || COD_CCONTAB_ATUAL5 || COD_CCONTAB_ATUAL6 || COD_CGERENC_ATUAL1 || COD_CGERENC_ATUAL2 || COD_CGERENC_ATUAL3|| COD_CGERENC_ATUAL4 || COD_CGERENC_ATUAL5 || COD_CGERENC_ATUAL6 || CODIGO "vULT_MOVIMENTO" ,ROWID INTO vULT_MOVIMENTO, vCGED_ROWID FROM ARTERH.RHCGED_TRANSFERENC RT WHERE codigo_empresa = mCODIGO_EMPRESA AND tipo_contrato=mTIPO_CONTRATO AND codigo = LPAD(mCODIGO_CONTRATO,15,0) AND DT_ALT_UNID_CUSTO = (SELECT MAX(RT1.DT_ALT_UNID_CUSTO)
	FROM RHCGED_TRANSFERENC RT1 WHERE RT1.CODIGO_EMPRESA = RT.CODIGO_EMPRESA AND RT1.TIPO_CONTRATO = RT.TIPO_CONTRATO AND RT1.CODIGO = RT.CODIGO);

	--VERIFICA QUAL O MAX OCORRENCIA PARA ALT_CONTRATO
	vOCORRENCIA_MAX:=0;
	vOCORRENCIA_MAX:=fn_MAX_OCORR(mCODIGO_EMPRESA, mTIPO_CONTRATO, mCODIGO_CONTRATO, vDT_ALT_UNID_CUSTO, vCODIGO_ALT_CONTRATO)+1;
	
	INSERT INTO RHPESS_ALT_CONTRAT
	(CODIGO_EMPRESA, DATA_ALTERACAO, TIPO_CONTRATO, CODIGO_CONTRATO, CODIGO_ALTERACAO, 
	CONTEUDO_ANTERIOR, CONTEUDO_NOVO, LOGIN_USUARIO, DT_ULT_ALTER_USUA, CONTEUDO_NOVO_DESC,
	TEXTO_ASSOCIADO, OCORRENCIA, GERADO_AUTO, OBS_GERACAO) 
	VALUES(mCODIGO_EMPRESA, vDT_ALT_UNID_CUSTO, mTIPO_CONTRATO, LPAD(mCODIGO_CONTRATO,15,0), 
	vCODIGO_ALT_CONTRATO, NULL, mCOD_MOVIMENTACAO,
	'proc_ajuste_ult_contrato_BD', sysdate, vSTATUS_REGISTRO, vULT_MOVIMENTO, vOCORRENCIA_MAX, 'N', vCGED_ROWID );

	--RETURN 1;	
	EXCEPTION
	      WHEN OTHERS THEN
	        err_msg := SQLERRM;
	        dbms_output.put_line('Error code LINHA 279' || SQLCODE || ': ' || err_msg);
	        GRAVA_LOG_BD('Error gerar hist_BD: ' || SQLCODE || ': ' || err_msg);
END; 

END IF; --fim STEP BD

IF mACAO='AD' THEN --TRATA EXCLUSÃO DA MOVIMENTAÇÃO 
		--AD = AFTER DELETE
		GRAVA_LOG_BD('AÇÃO ' || mACAO || 'INICIADA' );
		GRAVA_LOG_BD('--TRATANDO REGISTRO EXCLUÍDO --> ' || mCODIGO_EMPRESA || '|' || mTIPO_CONTRATO || '-' || mCODIGO_CONTRATO );
		
		-- PEGA ULTIMO MOVIMENTO APÓS DELETE
		SELECT 
		  COD_MOVIMENTACAO || COD_LOTACAO_ATUAL1 || COD_LOTACAO_ATUAL2 || COD_LOTACAO_ATUAL3 || COD_LOTACAO_ATUAL4 || COD_LOTACAO_ATUAL5 || COD_LOTACAO_ATUAL6 || COD_UNIDADE_ATUAL1 || COD_UNIDADE_ATUAL2 || COD_UNIDADE_ATUAL3 || COD_UNIDADE_ATUAL4 || COD_UNIDADE_ATUAL5 || COD_UNIDADE_ATUAL6 || COD_CCONTAB_ATUAL1 || COD_CCONTAB_ATUAL2 || COD_CCONTAB_ATUAL3 || COD_CCONTAB_ATUAL4 || COD_CCONTAB_ATUAL5 || COD_CCONTAB_ATUAL6 || COD_CGERENC_ATUAL1 || COD_CGERENC_ATUAL2 || COD_CGERENC_ATUAL3 || COD_CGERENC_ATUAL4 || COD_CGERENC_ATUAL5 || COD_CGERENC_ATUAL6 || to_char(DT_ALT_UNID_CUSTO,'DDMMRRRR')|| CODIGO "vULT_MOVIMENTO", 
		  ROWID INTO vULT_MOVIMENTO, vCGED_ROWID FROM ARTERH.RHCGED_TRANSFERENC RT 
		 WHERE codigo_empresa = mCODIGO_EMPRESA AND tipo_contrato = mTIPO_CONTRATO AND codigo = LPAD(mCODIGO_CONTRATO, 15, 0) AND DT_ALT_UNID_CUSTO = ( SELECT MAX(RT1.DT_ALT_UNID_CUSTO) FROM RHCGED_TRANSFERENC RT1 WHERE RT1.CODIGO_EMPRESA = RT.CODIGO_EMPRESA AND RT1.TIPO_CONTRATO = RT.TIPO_CONTRATO AND RT1.CODIGO = RT.CODIGO );

		-- PEGA ULTIMO CONTRATO APÓS DELETE
	    SELECT COD_MOVIMENTACAO || COD_LOCAL1 || COD_LOCAL2 || COD_LOCAL3 || COD_LOCAL4 || COD_LOCAL5 || COD_LOCAL6 || COD_UNIDADE1 || COD_UNIDADE2 || COD_UNIDADE3 || COD_UNIDADE4 || COD_UNIDADE5 || COD_UNIDADE6 || COD_CUSTO_CONTAB1 || COD_CUSTO_CONTAB2 || COD_CUSTO_CONTAB3 || COD_CUSTO_CONTAB4 || COD_CUSTO_CONTAB5 || COD_CUSTO_CONTAB6 || COD_CUSTO_GERENC1 || COD_CUSTO_GERENC2 || COD_CUSTO_GERENC3 || COD_CUSTO_GERENC4 || COD_CUSTO_GERENC5 || COD_CUSTO_GERENC6 || to_char(DATA_TRANSF_ENTRAD,'DDMMRRRR') || CODIGO, ROWID INTO vULT_CONTRATO, vCONTRATO_ROWID 
	    FROM ARTERH.RHPESS_CONTRATO C WHERE codigo_empresa = mCODIGO_EMPRESA AND tipo_contrato= mTIPO_CONTRATO AND codigo = LPAD(mCODIGO_CONTRATO,15,0) AND ANO_MES_REFERENCIA = (SELECT MAX(ANO_MES_REFERENCIA) 
	   	FROM RHPESS_CONTRATO C1 WHERE CODIGO_EMPRESA = C.CODIGO_EMPRESA AND TIPO_CONTRATO = C.TIPO_CONTRATO AND CODIGO = C.CODIGO);
	
	   --PEGA HISTORICO BD DE MOVIMENTO BASEANDO NO REGISTRO QUE SERÁ EXCLUIDO
	  	BEGIN
		    SELECT OBS_GERACAO "ROWID" INTO  vALT_CONTRAT_ROWID  FROM ARTERH.RHPESS_ALT_CONTRAT AC
			WHERE CODIGO_CONTRATO =mCODIGO_CONTRATO
			AND CODIGO_ALTERACAO = vCODIGO_ALT_CONTRATO
			AND TIPO_CONTRATO = mTIPO_CONTRATO
			AND CODIGO_EMPRESA = mCODIGO_EMPRESA
			AND DATA_ALTERACAO  = vDT_ALT_UNID_CUSTO
			AND OCORRENCIA  = 
			(SELECT MAX(OCORRENCIA) FROM ARTERH.RHPESS_ALT_CONTRAT
			WHERE CODIGO_CONTRATO =AC.CODIGO_CONTRATO
			AND CODIGO_ALTERACAO = AC.CODIGO_ALTERACAO 
			AND TIPO_CONTRATO = AC.TIPO_CONTRATO
			AND CODIGO_EMPRESA = AC.CODIGO_EMPRESA	
			AND DATA_ALTERACAO =AC.DATA_ALTERACAO);
		
			EXCEPTION
		      WHEN OTHERS THEN
		        -- my_code := SQLCODE;
		         err_msg := SQLERRM;
		         GRAVA_LOG_BD('Error ao pegar historico bd: ' || SQLCODE || ': ' || err_msg);			
		
		END;
	   -- VERIFICA SE ULTIMO REGISTRO DE MOVIMENTO  = MOVIMENTO EXCLUIDO
		SELECT  COUNT(*) INTO vULT_CGED_REG
		FROM ARTERH.RHCGED_TRANSFERENC RT
		WHERE codigo_empresa = mCODIGO_EMPRESA
		AND tipo_contrato=mTIPO_CONTRATO
		AND codigo = LPAD(mCODIGO_CONTRATO,15,0)
		AND ROWID = vALT_CONTRAT_ROWID;
	   
	    GRAVA_LOG_BD('ULT_MOV:' || vULT_MOVIMENTO);
   	    GRAVA_LOG_BD('ULT_MOV_ROWID:' || vCGED_ROWID);
   	   	GRAVA_LOG_BD('ULT_CONTRATO:' || vULT_CONTRATO);
   	    GRAVA_LOG_BD('ULT_CONTRATO_ROWID:' || vCONTRATO_ROWID);
   	  	GRAVA_LOG_BD('vULT_CGED_REG:' || vULT_CGED_REG);
   	   
   	   -- >>> LÓGICA DE AJUSTE INCIO
		SELECT COUNT(1) INTO vDIF_ULT_CONTR_ULT_MOV FROM 
		(SELECT vULT_MOVIMENTO FROM DUAL MINUS SELECT vULT_CONTRATO FROM DUAL );
   	   
   	 
		IF  vDIF_ULT_CONTR_ULT_MOV >0 AND vULT_CGED_REG = 0 THEN
		
			BEGIN
			--GERA UPDATE
				UPDATE  ARTERH.RHPESS_CONTRATO C
				SET COD_MOVIMENTACAO = SUBSTR(vULT_MOVIMENTO,0,4),
				COD_LOCAL1= SUBSTR(vULT_MOVIMENTO,5+(6*0),6),
				COD_LOCAL2= SUBSTR(vULT_MOVIMENTO,5+(6*1),6),
				COD_LOCAL3 = SUBSTR(vULT_MOVIMENTO,5+(6*2),6),
				COD_LOCAL4 = SUBSTR(vULT_MOVIMENTO,5+(6*3),6),
				COD_LOCAL5 = SUBSTR(vULT_MOVIMENTO,5+(6*4),6),
				COD_LOCAL6 = SUBSTR(vULT_MOVIMENTO,5+(6*5),6),
				COD_UNIDADE1 = SUBSTR(vULT_MOVIMENTO,5+(6*6),6),
				COD_UNIDADE2 =SUBSTR(vULT_MOVIMENTO,5+(6*7),6),
				COD_UNIDADE3 =SUBSTR(vULT_MOVIMENTO,5+(6*8),6),
				COD_UNIDADE4= SUBSTR(vULT_MOVIMENTO,5+(6*9),6) ,
				COD_UNIDADE5 =SUBSTR(vULT_MOVIMENTO,5+(6*10),6),
				COD_UNIDADE6=SUBSTR(vULT_MOVIMENTO,5+(6*11),6) ,	
				COD_CUSTO_CONTAB1 = SUBSTR(vULT_MOVIMENTO,5+(6*12),6),
				COD_CUSTO_CONTAB2=SUBSTR(vULT_MOVIMENTO,5+(6*13),6) ,
				COD_CUSTO_CONTAB3= SUBSTR(vULT_MOVIMENTO,5+(6*14),6),
				COD_CUSTO_CONTAB4= SUBSTR(vULT_MOVIMENTO,5+(6*15),6),
				COD_CUSTO_CONTAB5 =SUBSTR(vULT_MOVIMENTO,5+(6*16),6),
				COD_CUSTO_CONTAB6 =SUBSTR(vULT_MOVIMENTO,5+(6*17),6),
				COD_CUSTO_GERENC1 =SUBSTR(vULT_MOVIMENTO,5+(6*18),6),
				COD_CUSTO_GERENC2 = SUBSTR(vULT_MOVIMENTO,5+(6*19),6) ,
				COD_CUSTO_GERENC3 = SUBSTR(vULT_MOVIMENTO,5+(6*20),6),
				COD_CUSTO_GERENC4= SUBSTR(vULT_MOVIMENTO,5+(6*21),6),
				COD_CUSTO_GERENC5=SUBSTR(vULT_MOVIMENTO,5+(6*22),6),
				COD_CUSTO_GERENC6 =SUBSTR(vULT_MOVIMENTO,5+(6*23),6) ,	
				DATA_TRANSF_ENTRAD = to_date(SUBSTR(vULT_MOVIMENTO,5+(6*24),8),'ddmmrrrr'), 
				DT_ULT_ALT_LOC = to_date(SUBSTR(vULT_MOVIMENTO,5+(6*24),8),'ddmmrrrr'),
				DT_ULT_ALT_UNID = to_date(SUBSTR(vULT_MOVIMENTO,5+(6*24),8),'ddmmrrrr'), 
				DT_ULT_ALT_CONT = to_date(SUBSTR(vULT_MOVIMENTO,5+(6*24),8),'ddmmrrrr'),
				DT_ULT_ALT_GER = to_date(SUBSTR(vULT_MOVIMENTO,5+(6*24),8),'ddmmrrrr'),
				LOGIN_USUARIO = 'proc_cged_transf_corr'
				WHERE codigo_empresa = mCODIGO_EMPRESA
				AND tipo_contrato = mTIPO_CONTRATO
				AND codigo = lpad(mCODIGO_CONTRATO,15,0)
				AND ANO_MES_REFERENCIA  = vCONTR_ANO_MES_REF;			
				EXCEPTION
		    	  WHEN OTHERS THEN
		        -- my_code := SQLCODE;
		        	 err_msg := SQLERRM;
		        	 GRAVA_LOG_BD('Error ao atualizar contrato: ' || SQLCODE || ': ' || err_msg);
		
			GRAVA_LOG_BD('AÇÃO: ' || mACAO || ' | CONTRATO AJUSTADO DE ROWID_CONTRATO: ' || vCONTRATO_ROWID || ' PARA ROWID_MOV: ' || vCGED_ROWID  );
			END;   	  		
   	  		
   	  		  
		GRAVA_LOG_BD ('--AJUSTE REALIZADO PARA O CONTRATO: ' || lpad(mCODIGO_CONTRATO,15,0) || ' | vCONTRATO_ROWID: ' || vCONTRATO_ROWID  );
   	  	ELSE 
   	  		GRAVA_LOG_BD('AÇÃO: ' || mACAO || ' | CONTRATO --> NÃO <-- AJUSTADO  -  ROWID_CONTRATO: ' || vCONTRATO_ROWID);
   	  		IF vULT_CGED_REG >0 THEN 
   	  			GRAVA_LOG_BD('ULTIMO REGISTRO AINDA EXISTE NA BASE: ' || mACAO || ' | CONTRATO --> NÃO <-- AJUSTADO  -  ROWID_CONTRATO: ' || vCONTRATO_ROWID);
   	  		END IF;
	   	END IF;
	   	-- <<< LÓGICA DE AJUSTE FIM

	END IF;--FIM STEP=AD
	
	EXCEPTION
      WHEN OTHERS THEN
        -- my_code := SQLCODE;
        err_msg := SQLERRM;
		--dbms_output.put_line('fINAL - Error code ' || SQLCODE || ': ' || err_msg);
		-- Normally we would call another procedure, declared with PRAGMA
		-- AUTONOMOUS_TRANSACTION, to insert information about errors.
        GRAVA_LOG_BD('FINAL - Error code ' || SQLCODE || ': ' || err_msg);

END;

--CALL ARTERH.PR_ACERTOS_HIST_MOV_CONTRATO(LPAD('1329446',15,0), '0100', '20230701', '0098', '0001','D','01-JUL-2023');



/*recriar a validadação após contrato

** DATA DE ATUALIZAÇÃO QUANDO MENOR QUE ULTIMO MOVIMENTO
AVALIAR CONTRATO >= DATA DA MOVIMENTAÇÃO.

116914-7
106292x
*/