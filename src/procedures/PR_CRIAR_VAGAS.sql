
  CREATE OR REPLACE EDITIONABLE PROCEDURE "ARTERH"."PR_CRIAR_VAGAS" 
AS
  vDATA_SISTEMA date;
  vIsTrue VARCHAR2(2000);
  vERRO VARCHAR2(2000);


PROCEDURE PR_CRIAR_CONTRATO(
    pCOD_EMPRESA  IN CHAR,
    pTP_CONTRATO  IN CHAR,
    pCOD_CONTRATO IN VARCHAR2,
    pCODIGO_VAGA IN VARCHAR2,
    pDATA_INICIO IN DATE)
AS
BEGIN
 /*------------------------------------------- CONTRATO -------------------------------------------*/

                          FOR C2 IN
                          (SELECT B.codigo,
                            B.ano_mes_referencia,
                            B.TIPO_CONTRATO,
                            B.CODIGO_EMPRESA,
                            B.CODIGO_VAGA,
                            b.dt_ult_vaga
                          FROM rhpess_contrato B
                          WHERE B.ANO_MES_REFERENCIA =
                            (SELECT MAX(AUX.ANO_MES_REFERENCIA)
                            FROM RHPESS_CONTRATO AUX
                            WHERE AUX.CODIGO_EMPRESA  = B.CODIGO_EMPRESA
                            AND AUX.TIPO_CONTRATO     = B.TIPO_CONTRATO
                            AND AUX.CODIGO            = B.CODIGO
                            AND AUX.ANO_MES_REFERENCIA <= vDATA_SISTEMA
                            )
                          AND B.CODIGO_EMPRESA     = pCOD_EMPRESA
                          AND B.TIPO_CONTRATO      = pTP_CONTRATO
                          AND B.CODIGO = pCOD_CONTRATO
                          )
                          LOOP
                           DBMS_Output.PUT_LINE('ENTROU NO LOOP DO CONTRATO');
                            IF  (NVL(C2.CODIGO_VAGA,'Z') <> pCODIGO_VAGA OR NVL(C2.dt_ult_vaga,TO_DATE('01/01/1900','DD/MM/YYYY')) <> pDATA_INICIO ) THEN
                            DBMS_Output.PUT_LINE('ENTROU NO IF DO CONTRATO');
                                 IF (TRUNC(TO_DATE(C2.ANO_MES_REFERENCIA,'DD/MM/YYYY')) < TRUNC(TO_DATE(vDATA_SISTEMA,'DD/MM/YYYY'))) THEN
                                  /*------------------------------------------- CONTRATO INSERE VAGA -------------------------------------------*/
                                  INSERT INTO RHPESS_CONTRATO C SELECT CODIGO_EMPRESA,TIPO_CONTRATO,  CODIGO,  CODIGO_PESSOA,  NOME,  REGISTRO,  NUMERO_ARQUIVO,  SITUACAO_FUNCIONAL,  SITUACAO_CONTRATO,  STATUS_CONTRATO,  DATA_ADMISSAO, MOTIVO_ADMISSAO,  MOTIVO_DEMISSAO,  TIPO_PAGAMENTO,  TIPO_SALARIO,  VINCULO,  FORMA_PROVIMENTO,  COD_LOCAL1,  COD_LOCAL2,  COD_LOCAL3,  COD_LOCAL4,  COD_LOCAL5,  COD_LOCAL6,  DT_ULT_ALT_LOC,  COD_UNIDADE1,  COD_UNIDADE2,  COD_UNIDADE3,  COD_UNIDADE4,  COD_UNIDADE5,  COD_UNIDADE6,  DT_ULT_ALT_UNID,  COD_CUSTO_CONTAB1,  COD_CUSTO_CONTAB2,  COD_CUSTO_CONTAB3,  COD_CUSTO_CONTAB4,  COD_CUSTO_CONTAB5,  COD_CUSTO_CONTAB6,  DT_ULT_ALT_CONT,  COD_CUSTO_GERENC1,  COD_CUSTO_GERENC2,  COD_CUSTO_GERENC3,  COD_CUSTO_GERENC4,  COD_CUSTO_GERENC5,  COD_CUSTO_GERENC6,  DT_ULT_ALT_GER,  SALARIO_PAGTO,  COD_CARGO_PAGTO,  NIVEL_CARGO_PAGTO,  COD_CARGO_EFETIVO,  NIVEL_CARGO_EFETIV,  DT_ULT_CARGO_EFET,  COD_CARGO_COMISS,  NIVEL_CARGO_COMISS,  DT_ULT_CARGO_COM,  COD_CARGO_AMPAR,  NIVEL_CARGO_AMPAR,  DT_ULT_CARGO_AMPAR,  CODIGO_FUNCAO,  DT_ULT_FUNCAO,  COD_ESPECIALIDADE,  DT_ULT_ESPEC,  CODIGO_VAGA,  DT_ULT_VAGA,  AREA_ATUACAO,  CATEG_PROFISSIONAL,  CODIGO_ESCALA,  REGISTRO_PONTO,  DT_ULT_ESCALA,  CODIGO_BANCO_CC,  CONTA_CORRENTE,  CODIGO_BANCO_FGTS,  CONTA_FGTS,  DATA_OPCAO_FGTS,  DATA_RETROACAO,  DATA_RETRATACAO,  COD_SINDICATO,  NIVEL_SINDICATO,  DT_ULT_SINDICATO,  DESC_CONTRIB_SIND,  SINDICALIZADO,  INSCRICAO_INSS,  COD_MOVIMENTACAO,  DATA_TRANSF_ENTRAD,  DATA_PRI_ADMISSAO,  DATA_REINTEGRACAO,  DATA_EFETIVO_EXERC,  DATA_POSSE,  DATA_NOMEACAO,  DATA_INICIO_ESTAB,  DATA_FIM_ESTAB,  DT_FIM_CONTR_EXP,  DT_FIM_CONTR_DETER,  DATA_FIM_RENOV_EXP,  DATA_AV_PREVIO,  DATA_RESCISAO,  CAUSA_RESCISAO,  DATA_INIC_AFAST,  DATA_FIM_AFAST,  NRO_MESES_AFAST,  CTRL_VERBAS,  FORMA_PAGAMENTO,  DATA_BASE_FERIAS,  DATA_INIC_GOZO,  DATA_FIM_GOZO,  DEPENDENTES_SF,  DEPENDENTES_IRRF,  COD_PROCURADOR,  DATA_PAGTO_CALCULO,  DATA_PAGTO_ADIANT,  DATA_PAGTO_FERIAS,  DATA_PAGTO_13SAL,  DATA_PAGTO_RESCISA,  SAL_CONT_EFETIVO,  DT_ULT_SAL_C_EFET,  SAL_CONT_COMISSION,  DT_ULT_SAL_C_COM,  SAL_CONT_AMPAR,  DT_ULT_SAL_C_AMP,  SAL_AUX_EFETIVO,  DT_ULT_SAL_A_EFET,  SAL_AUX_COMISSION,  DT_ULT_SAL_A_COM,  SAL_AUX_AMPAR,  DT_ULT_SAL_A_AMP,  C_LIVRE_SELEC01,  C_LIVRE_SELEC02,  C_LIVRE_SELEC03,  C_LIVRE_SELEC04,  C_LIVRE_SELEC05,  C_LIVRE_SELEC06,  C_LIVRE_SELEC07,  C_LIVRE_SELEC08,  C_LIVRE_SELEC09,  C_LIVRE_SELEC10,  C_LIVRE_SELEC11,  C_LIVRE_SELEC12,  C_LIVRE_SELEC13,  C_LIVRE_SELEC14,  C_LIVRE_SELEC15,  C_LIVRE_SELEC36,  C_LIVRE_SELEC37,  C_LIVRE_SELEC38,  C_LIVRE_SELEC39,  C_LIVRE_SELEC40,  C_LIVRE_VALOR16,  C_LIVRE_VALOR17,  C_LIVRE_VALOR18,  C_LIVRE_VALOR19,  C_LIVRE_VALOR20,  C_LIVRE_VALOR21,  C_LIVRE_VALOR22,  C_LIVRE_VALOR23,  C_LIVRE_DESCR24,  C_LIVRE_DESCR25,  C_LIVRE_DESCR26,  C_LIVRE_DESCR27,  C_LIVRE_DATA28,  C_LIVRE_DATA29,  C_LIVRE_DATA30,  C_LIVRE_DATA31,  C_LIVRE_DATA32,  C_LIVRE_DATA33,  C_LIVRE_DATA34,  C_LIVRE_DATA35,  C_LIVRE_OPCAO41,  C_LIVRE_OPCAO42,  C_LIVRE_OPCAO43,  C_LIVRE_OPCAO44,  C_LIVRE_OPCAO45,  C_LIVRE_OPCAO46,  C_LIVRE_OPCAO47,  C_LIVRE_OPCAO48,  INDIC_ALTERAC1,  INDIC_ALTERAC2,  INDIC_ALTERAC3,  INDIC_ALTERAC4,  INDIC_ALTERAC5,  TEXTO_ASSOCIADO,  LOGIN_USUARIO,  DT_ULT_ALTER_USUA,  TELEFONE,  TO_DATE(vDATA_SISTEMA,'DD/MM/YYYY') ANO_MES_REFERENCIA,  DATA_APOSENTA_FGTS,  REABILITADO,  C_LIVRE_VALOR49,  C_LIVRE_VALOR50,  C_LIVRE_VALOR51,  C_LIVRE_VALOR52,  C_LIVRE_VALOR53,  C_LIVRE_VALOR54,  C_LIVRE_VALOR55,  C_LIVRE_VALOR56,  C_LIVRE_DATA57,  C_LIVRE_DATA58,  C_LIVRE_DATA59,  C_LIVRE_DATA60,  C_LIVRE_DATA61,  C_LIVRE_DATA62,  C_LIVRE_DATA63,  C_LIVRE_DATA64,  C_LIVRE_OPCAO65,  C_LIVRE_OPCAO66,  C_LIVRE_OPCAO67,  C_LIVRE_OPCAO68,  INDIC_ALTERAC6,  CLASSE_CONT_INSS,  E_MAIL,  USA_ASSOC_CONT_ESC,  CLASSIFICACAO_CAND,  NUMERO_EDITAL,  TIPO_AGRUP_UNID,  TIPO_AGRUP_CONT,  TIPO_AGRUP_CGER,  TIPO_AGRUP_LOTA,  NOME_ACESSO,  CODIGO_SOLICITACAO,  ID_CONTR_FORN,  FUNC_COMP_EMPR_AV,  DT_MOLESTIA_GRAVE,  SAL_CONT_FUNCAO,  DT_ULT_SAL_C_FUN,  SAL_AUX_FUNCAO,  DT_ULT_SAL_A_FUN,  DATA_PROJ_AV_PREV,  DT_PROJ_AFAST_ESOCIAL,  TP_AVISO_PREVIO_ESOCIAL,  TP_CONTA_BANCARIA,  DT_PROC_ESOCIAL,  DT_ALTER_ESOCIAL,  DT_CANC_AVISO_PREVIO,  MOT_CANC_AV_PREV_ESOCIAL,  DESC_SAL_VARIAVEL,  MOTIVO_CONTRATACAO,  CPF_TRAB_SUBSTITUIDO,  MATRIC_TRAB_SUBSTITUIDO,  IND_SEGURO_DESEMPREGO,  DT_GERACAO_CAGED,  OBS_RESCISAO,  DT_FIM_QUARENTENA,  CNPJ_EMPRESA_SUCESSORA,  JUST_CONTR_ESOCIAL,  TP_INCL_CONTR_ESOCIAL,  INFO_COTA_ESOCIAL,  CLAUSULA_ASSEC,  DT_ALTERACAO_CONTR,  DT_EFEITO_ALTER_CONTR,  DESC_ALTER_CONTR,  IND_CUMPR_PARC_AV,  CODIGO_CONTR_ANTERIOR,  CPF_ANTERIOR,  DATA_ALTER_CPF,  OBS_ALTER_CPF,  TEM_ALTER_CPF,  INFO_COTA_RACA,  MATRICULA_ESOCIAL, CONSELHO_REGIONAL, INSCRICAO_CONSELHO,  UF_CONSELHO , COD_CARREIRA, COD_EIXO, COD_NIVEL, IND_REMUN, IND_PDV FROM RHPESS_CONTRATO C WHERE C.codigo_empresa   = pCOD_EMPRESA AND C.tipo_contrato      = pTP_CONTRATO AND C.CODIGO = pCOD_CONTRATO AND C.ano_mes_referencia =  (SELECT MAX(AUX.ANO_MES_REFERENCIA) FROM RHPESS_CONTRATO AUX WHERE C.codigo_empresa = AUX.CODIGO_EMPRESA AND C.tipo_contrato = AUX.TIPO_CONTRATO AND C.CODIGO = AUX.CODIGO);
                                  UPDATE RHPESS_CONTR_MEST SET ULTIMA_DATA = TO_CHAR(vDATA_SISTEMA,'DD/MM/YYYY'), LOGIN_USUARIO = 'pr_criar_vagas', DT_ULT_ALTER_USUA = SYSDATE WHERE CODIGO_EMPRESA   = pCOD_EMPRESA AND TIPO_CONTRATO      = pTP_CONTRATO AND CODIGO_CONTRATO = pCOD_CONTRATO;      
                                END IF;

                                UPDATE RHPESS_CONTRATO SET CODIGO_VAGA = pCODIGO_VAGA, dt_ult_vaga = pDATA_INICIO, LOGIN_USUARIO = 'pr_criar_vagas', DT_ULT_ALTER_USUA = SYSDATE WHERE  CODIGO_EMPRESA   = pCOD_EMPRESA AND TIPO_CONTRATO      = pTP_CONTRATO AND CODIGO = pCOD_CONTRATO AND ANO_MES_REFERENCIA = TRUNC(TO_DATE(vDATA_SISTEMA,'DD/MM/YYYY'));

                            elsif (pCODIGO_VAGA is null and pDATA_INICIO is null )  then
                                    IF (TRUNC(TO_DATE(C2.ANO_MES_REFERENCIA,'DD/MM/YYYY')) < TRUNC(TO_DATE(vDATA_SISTEMA,'DD/MM/YYYY'))) THEN
                                      /*------------------------------------------- CONTRATO INSERE VAGA -------------------------------------------*/
                                      INSERT INTO RHPESS_CONTRATO C SELECT CODIGO_EMPRESA,TIPO_CONTRATO,  CODIGO,  CODIGO_PESSOA,  NOME,  REGISTRO,  NUMERO_ARQUIVO,  SITUACAO_FUNCIONAL,  SITUACAO_CONTRATO,  STATUS_CONTRATO,  DATA_ADMISSAO, MOTIVO_ADMISSAO,  MOTIVO_DEMISSAO,  TIPO_PAGAMENTO,  TIPO_SALARIO,  VINCULO,  FORMA_PROVIMENTO,  COD_LOCAL1,  COD_LOCAL2,  COD_LOCAL3,  COD_LOCAL4,  COD_LOCAL5,  COD_LOCAL6,  DT_ULT_ALT_LOC,  COD_UNIDADE1,  COD_UNIDADE2,  COD_UNIDADE3,  COD_UNIDADE4,  COD_UNIDADE5,  COD_UNIDADE6,  DT_ULT_ALT_UNID,  COD_CUSTO_CONTAB1,  COD_CUSTO_CONTAB2,  COD_CUSTO_CONTAB3,  COD_CUSTO_CONTAB4,  COD_CUSTO_CONTAB5,  COD_CUSTO_CONTAB6,  DT_ULT_ALT_CONT,  COD_CUSTO_GERENC1,  COD_CUSTO_GERENC2,  COD_CUSTO_GERENC3,  COD_CUSTO_GERENC4,  COD_CUSTO_GERENC5,  COD_CUSTO_GERENC6,  DT_ULT_ALT_GER,  SALARIO_PAGTO,  COD_CARGO_PAGTO,  NIVEL_CARGO_PAGTO,  COD_CARGO_EFETIVO,  NIVEL_CARGO_EFETIV,  DT_ULT_CARGO_EFET,  COD_CARGO_COMISS,  NIVEL_CARGO_COMISS,  DT_ULT_CARGO_COM,  COD_CARGO_AMPAR,  NIVEL_CARGO_AMPAR,  DT_ULT_CARGO_AMPAR,  CODIGO_FUNCAO,  DT_ULT_FUNCAO,  COD_ESPECIALIDADE,  DT_ULT_ESPEC,  CODIGO_VAGA,  DT_ULT_VAGA,  AREA_ATUACAO,  CATEG_PROFISSIONAL,  CODIGO_ESCALA,  REGISTRO_PONTO,  DT_ULT_ESCALA,  CODIGO_BANCO_CC,  CONTA_CORRENTE,  CODIGO_BANCO_FGTS,  CONTA_FGTS,  DATA_OPCAO_FGTS,  DATA_RETROACAO,  DATA_RETRATACAO,  COD_SINDICATO,  NIVEL_SINDICATO,  DT_ULT_SINDICATO,  DESC_CONTRIB_SIND,  SINDICALIZADO,  INSCRICAO_INSS,  COD_MOVIMENTACAO,  DATA_TRANSF_ENTRAD,  DATA_PRI_ADMISSAO,  DATA_REINTEGRACAO,  DATA_EFETIVO_EXERC,  DATA_POSSE,  DATA_NOMEACAO,  DATA_INICIO_ESTAB,  DATA_FIM_ESTAB,  DT_FIM_CONTR_EXP,  DT_FIM_CONTR_DETER,  DATA_FIM_RENOV_EXP,  DATA_AV_PREVIO,  DATA_RESCISAO,  CAUSA_RESCISAO,  DATA_INIC_AFAST,  DATA_FIM_AFAST,  NRO_MESES_AFAST,  CTRL_VERBAS,  FORMA_PAGAMENTO,  DATA_BASE_FERIAS,  DATA_INIC_GOZO,  DATA_FIM_GOZO,  DEPENDENTES_SF,  DEPENDENTES_IRRF,  COD_PROCURADOR,  DATA_PAGTO_CALCULO,  DATA_PAGTO_ADIANT,  DATA_PAGTO_FERIAS,  DATA_PAGTO_13SAL,  DATA_PAGTO_RESCISA,  SAL_CONT_EFETIVO,  DT_ULT_SAL_C_EFET,  SAL_CONT_COMISSION,  DT_ULT_SAL_C_COM,  SAL_CONT_AMPAR,  DT_ULT_SAL_C_AMP,  SAL_AUX_EFETIVO,  DT_ULT_SAL_A_EFET,  SAL_AUX_COMISSION,  DT_ULT_SAL_A_COM,  SAL_AUX_AMPAR,  DT_ULT_SAL_A_AMP,  C_LIVRE_SELEC01,  C_LIVRE_SELEC02,  C_LIVRE_SELEC03,  C_LIVRE_SELEC04,  C_LIVRE_SELEC05,  C_LIVRE_SELEC06,  C_LIVRE_SELEC07,  C_LIVRE_SELEC08,  C_LIVRE_SELEC09,  C_LIVRE_SELEC10,  C_LIVRE_SELEC11,  C_LIVRE_SELEC12,  C_LIVRE_SELEC13,  C_LIVRE_SELEC14,  C_LIVRE_SELEC15,  C_LIVRE_SELEC36,  C_LIVRE_SELEC37,  C_LIVRE_SELEC38,  C_LIVRE_SELEC39,  C_LIVRE_SELEC40,  C_LIVRE_VALOR16,  C_LIVRE_VALOR17,  C_LIVRE_VALOR18,  C_LIVRE_VALOR19,  C_LIVRE_VALOR20,  C_LIVRE_VALOR21,  C_LIVRE_VALOR22,  C_LIVRE_VALOR23,  C_LIVRE_DESCR24,  C_LIVRE_DESCR25,  C_LIVRE_DESCR26,  C_LIVRE_DESCR27,  C_LIVRE_DATA28,  C_LIVRE_DATA29,  C_LIVRE_DATA30,  C_LIVRE_DATA31,  C_LIVRE_DATA32,  C_LIVRE_DATA33,  C_LIVRE_DATA34,  C_LIVRE_DATA35,  C_LIVRE_OPCAO41,  C_LIVRE_OPCAO42,  C_LIVRE_OPCAO43,  C_LIVRE_OPCAO44,  C_LIVRE_OPCAO45,  C_LIVRE_OPCAO46,  C_LIVRE_OPCAO47,  C_LIVRE_OPCAO48,  INDIC_ALTERAC1,  INDIC_ALTERAC2,  INDIC_ALTERAC3,  INDIC_ALTERAC4,  INDIC_ALTERAC5,  TEXTO_ASSOCIADO,  LOGIN_USUARIO,  DT_ULT_ALTER_USUA,  TELEFONE,  TO_DATE(vDATA_SISTEMA,'DD/MM/YYYY') ANO_MES_REFERENCIA,  DATA_APOSENTA_FGTS,  REABILITADO,  C_LIVRE_VALOR49,  C_LIVRE_VALOR50,  C_LIVRE_VALOR51,  C_LIVRE_VALOR52,  C_LIVRE_VALOR53,  C_LIVRE_VALOR54,  C_LIVRE_VALOR55,  C_LIVRE_VALOR56,  C_LIVRE_DATA57,  C_LIVRE_DATA58,  C_LIVRE_DATA59,  C_LIVRE_DATA60,  C_LIVRE_DATA61,  C_LIVRE_DATA62,  C_LIVRE_DATA63,  C_LIVRE_DATA64,  C_LIVRE_OPCAO65,  C_LIVRE_OPCAO66,  C_LIVRE_OPCAO67,  C_LIVRE_OPCAO68,  INDIC_ALTERAC6,  CLASSE_CONT_INSS,  E_MAIL,  USA_ASSOC_CONT_ESC,  CLASSIFICACAO_CAND,  NUMERO_EDITAL,  TIPO_AGRUP_UNID,  TIPO_AGRUP_CONT,  TIPO_AGRUP_CGER,  TIPO_AGRUP_LOTA,  NOME_ACESSO,  CODIGO_SOLICITACAO,  ID_CONTR_FORN,  FUNC_COMP_EMPR_AV,  DT_MOLESTIA_GRAVE,  SAL_CONT_FUNCAO,  DT_ULT_SAL_C_FUN,  SAL_AUX_FUNCAO,  DT_ULT_SAL_A_FUN,  DATA_PROJ_AV_PREV,  DT_PROJ_AFAST_ESOCIAL,  TP_AVISO_PREVIO_ESOCIAL,  TP_CONTA_BANCARIA,  DT_PROC_ESOCIAL,  DT_ALTER_ESOCIAL,  DT_CANC_AVISO_PREVIO,  MOT_CANC_AV_PREV_ESOCIAL,  DESC_SAL_VARIAVEL,  MOTIVO_CONTRATACAO,  CPF_TRAB_SUBSTITUIDO,  MATRIC_TRAB_SUBSTITUIDO,  IND_SEGURO_DESEMPREGO,  DT_GERACAO_CAGED,  OBS_RESCISAO,  DT_FIM_QUARENTENA,  CNPJ_EMPRESA_SUCESSORA,  JUST_CONTR_ESOCIAL,  TP_INCL_CONTR_ESOCIAL,  INFO_COTA_ESOCIAL,  CLAUSULA_ASSEC,  DT_ALTERACAO_CONTR,  DT_EFEITO_ALTER_CONTR,  DESC_ALTER_CONTR,  IND_CUMPR_PARC_AV,  CODIGO_CONTR_ANTERIOR,  CPF_ANTERIOR,  DATA_ALTER_CPF,  OBS_ALTER_CPF,  TEM_ALTER_CPF,  INFO_COTA_RACA,  MATRICULA_ESOCIAL, CONSELHO_REGIONAL, INSCRICAO_CONSELHO,  UF_CONSELHO , COD_CARREIRA, COD_EIXO, COD_NIVEL, IND_REMUN,IND_PDV FROM RHPESS_CONTRATO C WHERE C.codigo_empresa   = pCOD_EMPRESA AND C.tipo_contrato      = pTP_CONTRATO AND C.CODIGO = pCOD_CONTRATO AND C.ano_mes_referencia =  (SELECT MAX(AUX.ANO_MES_REFERENCIA) FROM RHPESS_CONTRATO AUX WHERE C.codigo_empresa = AUX.CODIGO_EMPRESA AND C.tipo_contrato = AUX.TIPO_CONTRATO AND C.CODIGO = AUX.CODIGO);
                                      UPDATE RHPESS_CONTR_MEST SET ULTIMA_DATA = TO_CHAR(vDATA_SISTEMA,'DD/MM/YYYY'), LOGIN_USUARIO = 'pr_criar_vagas', DT_ULT_ALTER_USUA = SYSDATE WHERE CODIGO_EMPRESA   = pCOD_EMPRESA AND TIPO_CONTRATO      = pTP_CONTRATO AND CODIGO_CONTRATO = pCOD_CONTRATO;      
                                    END IF;

                                UPDATE RHPESS_CONTRATO SET CODIGO_VAGA = pCODIGO_VAGA, dt_ult_vaga = pDATA_INICIO, LOGIN_USUARIO = 'pr_criar_vagas', DT_ULT_ALTER_USUA = SYSDATE WHERE  CODIGO_EMPRESA   = pCOD_EMPRESA AND TIPO_CONTRATO      = pTP_CONTRATO AND CODIGO = pCOD_CONTRATO AND ANO_MES_REFERENCIA = TRUNC(TO_DATE(vDATA_SISTEMA,'DD/MM/YYYY'));

                            END IF;
                          END LOOP;  
END;



BEGIN 



  FOR C1 IN
  (
    SELECT ID,CODIGO_EMPRESA,TIPO_CONTRATO,LPAD(REPLACE(CODIGO_CONTRATO,' ',''),15,'0') CONTRATO, CODIGO_VAGA , DATA_INICIO,DATA_FIM,CODIGO_TIPO_VAGA,COD_LOTACAO_1,COD_LOTACAO_2,COD_LOTACAO_3,COD_LOTACAO_4,COD_LOTACAO_5,COD_LOTACAO_6,ID_LEI, LPAD(REPLACE(CODIGO_CARGO,' ',''),15,'0') CODIGO_CARGO,TIPO_CARGO,LPAD(REPLACE(CODIGO_FUNCAO,' ',''),15,'0') CODIGO_FUNCAO,C_LIVRE_OPCAO1_DAM,C_LIVRE_OPCAO2_DSM,C_LIVRE_OPCAO4_FCA,C_LIVRE_OPCAO5_PSS,
    SYS_CONTEXT('USERENV', 'OS_USER') AS LOGIN_OS_EXECUCAO,  SYS_CONTEXT('USERENV', 'SESSION_USER')  AS LOGIN_USUARIO_EXECUCAO,
    NOME,RECRUTAMENTO,DATA_NOMEACAO,ORGAO,TIPO
    FROM ARTERH.RHPBH_CRIAR_VAGAS_APOIO 
    WHERE PROCESSADO = 'N' 
    AND DATA_EXECUCAO IS NULL 
    ORDER BY ID
  )
  LOOP
  dbms_output.enable(NULL);
  EXECUTE immediate('UPDATE ARTERH.RHPBH_CRIAR_VAGAS_APOIO SET DATA_EXECUCAO = SYSDATE , LOGIN_OS_EXECUCAO = '''||C1.LOGIN_OS_EXECUCAO||''', LOGIN_USUARIO_EXECUCAO = '''||C1.LOGIN_USUARIO_EXECUCAO||''' WHERE PROCESSADO = ''N'' AND DATA_EXECUCAO IS NULL AND ID = '''||C1.ID||'''');


/*--------------------------------------------------------------------- AÇÕES DE ALTERAÇÃO NA BASE --------------------------------------------------------------------- */
BEGIN
    select DATA_DO_SISTEMA into vDATA_SISTEMA from RHPARM_P_SIST;   
    EXCEPTION
    WHEN NO_DATA_FOUND THEN
    vERRO := 'ERRO NO MOMENTO DE OBTER A DATA DO SISTEMA. ';
    EXECUTE immediate('UPDATE ARTERH.RHPBH_CRIAR_VAGAS_APOIO SET PROBLEMA = PROBLEMA ||'''||vERRO||''' WHERE ID = '''||C1.ID||'''');
   -- raise_application_error (-20003, vERRO || 'ENCONTRADO ERRO - '||SQLCODE||' -ERROR- '||SQLERRM );
    WHEN OTHERS THEN
    vERRO := 'ENCONTRADO ERRO - '||SQLCODE|| ' -ERROR- '||SQLERRM||'';
    -- DBMS_Output.PUT_LINE(vERRO);
    EXECUTE immediate('UPDATE ARTERH.RHPBH_CRIAR_VAGAS_APOIO SET PROBLEMA = PROBLEMA ||'''||vERRO||''' WHERE ID = '''||C1.ID||'''');
    END;
/*

ATENÇÃO: SOMENTE SERÃO EXECUTADAS SE NÃO TIVER OCORRIDO NENHUM PROBLEMA!!

*/

  SELECT PROBLEMA INTO vIsTrue FROM ARTERH.RHPBH_CRIAR_VAGAS_APOIO WHERE ID = C1.ID;


IF vIsTrue IS NULL THEN
/*------------------------------------------- VAGA -------------------------------------------*/
    BEGIN
    SELECT CODIGO INTO vIsTrue FROM RHPLCS_VAGA WHERE CODIGO = LPAD(C1.CODIGO_VAGA,15,0) AND CODIGO_EMPRESA = C1.CODIGO_EMPRESA;
    EXCEPTION
    WHEN NO_DATA_FOUND THEN
    DBMS_Output.PUT_LINE('A VAGA NÃO EXISTE');
      -- CRIAR VAGA
        INSERT INTO RHPLCS_VAGA (CODIGO_EMPRESA,tipo_contrato, CODIGO, DESCRICAO, STATUS_VAGA, DATA_INICIO, DATA_FIM, codigo_tipo_vaga, tipo_cargo, COD_LOTACAO_1, COD_LOTACAO_2, COD_LOTACAO_3, COD_LOTACAO_4, COD_LOTACAO_5,  COD_LOTACAO_6, CODIGO_CARGO, CODIGO_FUNCAO,ID_LEI, C_LIVRE_OPCAO1,C_LIVRE_OPCAO2,C_LIVRE_OPCAO3,C_LIVRE_OPCAO4,C_LIVRE_OPCAO5,C_LIVRE_OPCAO6,c_livre_data1,c_livre_data2,FIXO, VARIAVEL, PARTICIPACAO, PRODUTIVIDADE, ENCARGOS, BENEFICIOS,LOGIN_USUARIO, DT_ULT_ALTER_USUA) 
        VALUES (C1.CODIGO_EMPRESA,C1.TIPO_CONTRATO,LPAD(C1.CODIGO_VAGA,15,0), LPAD(C1.CODIGO_VAGA,15,0),'O',C1.DATA_INICIO,C1.DATA_FIM,C1.CODIGO_TIPO_VAGA,C1.TIPO_CARGO, C1.COD_LOTACAO_1, '000000','000000','000000','000000','000000',C1.CODIGO_CARGO, C1.CODIGO_FUNCAO,C1.ID_LEI,C1.C_LIVRE_OPCAO1_DAM,C1.C_LIVRE_OPCAO2_DSM,'N', C1.C_LIVRE_OPCAO4_FCA,C1.C_LIVRE_OPCAO5_PSS,'N',
        case when C1.ID_LEI is not null then (select data_ini_vigencia from RHLEGI_LEI where id_lei = C1.ID_LEI) else null end,case when C1.ID_LEI is not null then (select data_fim_vigencia from RHLEGI_LEI where id_lei = C1.ID_LEI) else null end,0,0,0,0,0,0,
        'pr_criar_vagas', SYSDATE);

    END;
    -- SE A VAGA EXISTE NA BASE DEVEMOS CORRIGIR
    IF vIsTrue IS NOT NULL THEN        
        UPDATE RHPLCS_VAGA SET STATUS_VAGA = 'O', DATA_INICIO = C1.DATA_INICIO, CODIGO_TIPO_VAGA = C1.CODIGO_TIPO_VAGA, TIPO_CARGO = C1.TIPO_CARGO, COD_LOTACAO_1 = C1.COD_LOTACAO_1, COD_LOTACAO_2 = '000000', COD_LOTACAO_3 = '000000', COD_LOTACAO_4 = '000000', COD_LOTACAO_5 = '000000',  COD_LOTACAO_6 = '000000', CODIGO_CARGO = C1.CODIGO_CARGO, CODIGO_FUNCAO = C1.CODIGO_FUNCAO,ID_LEI = C1.ID_LEI,C_LIVRE_OPCAO1 = C1.C_LIVRE_OPCAO1_DAM, C_LIVRE_OPCAO2 = C1.C_LIVRE_OPCAO2_DSM, C_LIVRE_OPCAO3 = 'N', C_LIVRE_OPCAO4 = C1.C_LIVRE_OPCAO4_FCA, C_LIVRE_OPCAO5 = C1.C_LIVRE_OPCAO5_PSS, C_LIVRE_OPCAO6 = 'N',
        c_livre_data1 =  case when C1.ID_LEI is not null then (select data_ini_vigencia from RHLEGI_LEI where id_lei = C1.ID_LEI) else null end, c_livre_data2 = case when C1.ID_LEI is not null then (select data_fim_vigencia from RHLEGI_LEI where id_lei = C1.ID_LEI) else null end, LOGIN_USUARIO = 'pr_criar_vagas', DT_ULT_ALTER_USUA =  SYSDATE
        WHERE CODIGO = LPAD(C1.CODIGO_VAGA,15,0) AND CODIGO_EMPRESA = C1.CODIGO_EMPRESA;  
    END IF;
/*------------------------------------------- FIM VAGA -------------------------------------------*/



  /*------------------------------------------- CONTRATO -------------------------------------------*/
   -- A VAGA SOMENTE SERÁ INSERIDA NO CONTRATO SE NÃO ESTIVER ASSOCIADA A NENHUM CONTRATO
                vIsTrue:=NULL;
                BEGIN
                  SELECT B.CODIGO INTO vIsTrue
                  FROM rhpess_contrato B
                  WHERE B.ANO_MES_REFERENCIA =
                    (SELECT MAX(AUX.ANO_MES_REFERENCIA)
                    FROM RHPESS_CONTRATO AUX
                    WHERE AUX.CODIGO_EMPRESA  = B.CODIGO_EMPRESA
                    AND AUX.TIPO_CONTRATO     = B.TIPO_CONTRATO
                    AND AUX.CODIGO            = B.CODIGO
                    AND AUX.ANO_MES_REFERENCIA <= vDATA_SISTEMA
                    )
                    AND B.CODIGO_EMPRESA     = C1.CODIGO_EMPRESA
                    AND B.CODIGO_VAGA = LPAD(C1.CODIGO_VAGA,15,0);



                    EXCEPTION
                    WHEN NO_DATA_FOUND THEN
                    DBMS_Output.PUT_LINE('ASSOCIA A VAGA AO CONTRATO');
                    PR_CRIAR_CONTRATO(C1.CODIGO_EMPRESA,C1.TIPO_CONTRATO,C1.CONTRATO,LPAD(C1.CODIGO_VAGA,15,0),C1.DATA_INICIO);
/*------------------------------------------- FIM CONTRATO -------------------------------------------*/       



                    WHEN OTHERS THEN
                        vERRO := 'ENCONTRADO ERRO - '||SQLCODE|| ' -ERROR- '||SQLERRM||'';
                        -- DBMS_Output.PUT_LINE(vERRO);
                        EXECUTE immediate('UPDATE ARTERH.RHPBH_CRIAR_VAGAS_APOIO SET PROBLEMA = PROBLEMA ||'''||vERRO||''' WHERE ID = '''||C1.ID||'''');

                END; 
                IF vIsTrue IS NOT NULL THEN 
                        IF vIsTrue <> C1.CONTRATO THEN
                            DBMS_Output.PUT_LINE('VAGA ESTÁ ASSOCIADA A OUTRO CONTRATO!!!');
                            -- FINDA O HISTÓRICO
                            UPDATE rhplcs_alt_posicao SET DT_FIM_TEMP = SYSDATE, LOGIN_USUARIO = 'pr_criar_vagas', DT_ULT_ALTER_USUA =  SYSDATE WHERE CODIGO_CONTRATO = vIsTrue AND CODIGO_EMPRESA = C1.CODIGO_EMPRESA AND TIPO_CONTRATO = C1.TIPO_CONTRATO AND CODIGO_VAGA = LPAD(C1.CODIGO_VAGA,15,0) AND DATA_FIM_VAGA IS NULL ;
                            -- REMOVE A VAGA DO CONTRATO 
                            PR_CRIAR_CONTRATO(C1.CODIGO_EMPRESA,C1.TIPO_CONTRATO,vIsTrue,NULL,NULL);
                            --ASSOCIA AO CONTRATO CORRETO
                            PR_CRIAR_CONTRATO(C1.CODIGO_EMPRESA,C1.TIPO_CONTRATO,C1.CONTRATO,LPAD(C1.CODIGO_VAGA,15,0),C1.DATA_INICIO);
                        END IF;
                END IF;


/*------------------------------------------- HISTÓRICO DAS VAGAS -------------------------------------------*/

vIsTrue:=NULL;

BEGIN
SELECT CODIGO_VAGA INTO vIsTrue FROM RHPLCS_ALT_POSICAO WHERE CODIGO_EMPRESA = C1.CODIGO_EMPRESA AND TIPO_CONTRATO = C1.TIPO_CONTRATO AND CODIGO_CONTRATO  = C1.CONTRATO AND DATA_FIM_VAGA IS NULL;
EXCEPTION
WHEN NO_DATA_FOUND THEN
INSERT INTO RHPLCS_ALT_POSICAO ( CODIGO_EMPRESA,TIPO_CONTRATO,OCORRENCIA,TEXTO_ASSOCIADO,LOGIN_USUARIO,DT_ULT_ALTER_USUA,CODIGO_CONTRATO,CODIGO_VAGA,DATA_INICIO_VAGA ) VALUES (C1.CODIGO_EMPRESA,C1.TIPO_CONTRATO ,
        (SELECT CASE WHEN MAX(ocorrencia) IS NULL THEN 1 ELSE MAX(ocorrencia)+1 END FROM RHPLCS_ALT_POSICAO WHERE CODIGO_EMPRESA = C1.CODIGO_EMPRESA AND TIPO_CONTRATO = C1.TIPO_CONTRATO AND CODIGO_CONTRATO  = C1.CONTRATO AND DATA_INICIO_VAGA = C1.DATA_INICIO)
        ,'INSERIDA VIA COMANDO','pr_criar_vagas',sysdate, C1.CONTRATO ,LPAD(C1.CODIGO_VAGA,15,0), C1.DATA_INICIO );

WHEN TOO_MANY_ROWS THEN
vIsTrue:=NULL;
        FOR C4 IN
        (
         SELECT CODIGO_VAGA, data_inicio_vaga FROM RHPLCS_ALT_POSICAO WHERE CODIGO_EMPRESA = C1.CODIGO_EMPRESA AND TIPO_CONTRATO = C1.TIPO_CONTRATO AND CODIGO_CONTRATO  = C1.CONTRATO AND DATA_FIM_VAGA IS NULL
        )
        LOOP
             IF (C4.CODIGO_VAGA <> LPAD(C1.CODIGO_VAGA,15,0) ) THEN
                UPDATE rhplcs_alt_posicao SET DT_FIM_TEMP = SYSDATE, LOGIN_USUARIO = 'pr_criar_vagas', DT_ULT_ALTER_USUA =  SYSDATE WHERE CODIGO_CONTRATO = C1.CONTRATO AND CODIGO_EMPRESA = C1.CODIGO_EMPRESA AND TIPO_CONTRATO = C1.TIPO_CONTRATO AND CODIGO_VAGA = C4.CODIGO_VAGA AND data_inicio_vaga = C4.data_inicio_vaga AND DATA_FIM_VAGA IS NULL;

             ELSE 

                 IF (C4.data_inicio_vaga <> C1.DATA_INICIO)   THEN
                    UPDATE rhplcs_alt_posicao SET DT_FIM_TEMP = SYSDATE, LOGIN_USUARIO = 'pr_criar_vagas', DT_ULT_ALTER_USUA =  SYSDATE WHERE CODIGO_CONTRATO = C1.CONTRATO AND CODIGO_EMPRESA = C1.CODIGO_EMPRESA AND TIPO_CONTRATO = C1.TIPO_CONTRATO AND CODIGO_VAGA = C4.CODIGO_VAGA AND data_inicio_vaga = C4.data_inicio_vaga AND DATA_FIM_VAGA IS NULL;
                  INSERT INTO RHPLCS_ALT_POSICAO ( CODIGO_EMPRESA,TIPO_CONTRATO,OCORRENCIA,TEXTO_ASSOCIADO,LOGIN_USUARIO,DT_ULT_ALTER_USUA,CODIGO_CONTRATO,CODIGO_VAGA,DATA_INICIO_VAGA ) VALUES (C1.CODIGO_EMPRESA,C1.TIPO_CONTRATO ,
                        (SELECT CASE WHEN MAX(ocorrencia) IS NULL THEN 1 ELSE MAX(ocorrencia)+1 END FROM RHPLCS_ALT_POSICAO WHERE CODIGO_EMPRESA = C1.CODIGO_EMPRESA AND TIPO_CONTRATO = C1.TIPO_CONTRATO AND CODIGO_CONTRATO  = C1.CONTRATO AND DATA_INICIO_VAGA = C1.DATA_INICIO)
                        ,'INSERIDA VIA COMANDO','pr_criar_vagas',sysdate, C1.CONTRATO ,LPAD(C1.CODIGO_VAGA,15,0), C1.DATA_INICIO );
                 END IF;

              END IF;  


        END LOOP; 

END;

IF vIsTrue IS NOT NULL THEN 
    IF vIsTrue = LPAD(C1.CODIGO_VAGA,15,0) THEN
         DBMS_Output.PUT_LINE('VAGA JÁ ESTÁ ASSOCIADA AO CONTRATO INFORMADO COM HISTÓRICO');
    ELSE  
        UPDATE rhplcs_alt_posicao SET DATA_FIM_VAGA = SYSDATE, LOGIN_USUARIO = 'pr_criar_vagas', DT_ULT_ALTER_USUA =  SYSDATE WHERE CODIGO_CONTRATO = C1.CONTRATO AND CODIGO_EMPRESA = C1.CODIGO_EMPRESA AND TIPO_CONTRATO = C1.TIPO_CONTRATO AND DATA_FIM_VAGA IS NULL;

        INSERT INTO RHPLCS_ALT_POSICAO ( CODIGO_EMPRESA,TIPO_CONTRATO,OCORRENCIA,TEXTO_ASSOCIADO,LOGIN_USUARIO,DT_ULT_ALTER_USUA,CODIGO_CONTRATO,CODIGO_VAGA,DATA_INICIO_VAGA ) VALUES (C1.CODIGO_EMPRESA,C1.TIPO_CONTRATO ,
        (SELECT CASE WHEN MAX(ocorrencia) IS NULL THEN 1 ELSE MAX(ocorrencia)+1 END FROM RHPLCS_ALT_POSICAO WHERE CODIGO_EMPRESA = C1.CODIGO_EMPRESA AND TIPO_CONTRATO = C1.TIPO_CONTRATO AND CODIGO_CONTRATO  = C1.CONTRATO AND DATA_INICIO_VAGA = C1.DATA_INICIO)
        ,'INSERIDA VIA COMANDO','pr_criar_vagas',sysdate, C1.CONTRATO ,LPAD(C1.CODIGO_VAGA,15,0), C1.DATA_INICIO );

    END IF;
END IF;


EXECUTE immediate('UPDATE ARTERH.RHPBH_CRIAR_VAGAS_APOIO SET PROCESSADO = ''S'' WHERE ID = '|| C1.ID);


/*------------------------------------------- FIM HISTÓRICO DAS VAGAS -------------------------------------------*/
END IF;

/*--------------------------------------------------------------------- FIM AÇÕES DE ALTERAÇÃO NA BASE --------------------------------------------------------------------- */

  END LOOP;



END;