
  CREATE OR REPLACE EDITIONABLE PROCEDURE "ARTERH"."PR_SMARH_ATUALIZA_AD_EMAIL" 
AS
  CONT NUMBER;
  DADOS CONTRATO_AD;
  vDADOS_EMAIL_TEL DADOS_EMAIL_TEL_P;
  emails LISTA;
  SUCESSO NUMBER;
  /*PROCEDURE PARA GRAVAR ERROS DA EXECUCAO DA PROCEDURE */
  PROCEDURE GRAVA_LOG(
      COD_EMPRESA  IN CHAR,
      TP_CONTRATO  IN CHAR,
      COD_CONTRATO IN VARCHAR2,
      USER         IN VARCHAR2,
      TP_ATUALIZOU IN VARCHAR2,
      VL_ANTIGO    IN VARCHAR2,
      VL_NOVO      IN VARCHAR2)
  AS
  BEGIN
    INSERT
    INTO SMARH_INT_AD_LOG
      (
        ID_LOG,
        CODIGO_EMPRESA,
        TIPO_CONTRATO,
        CODIGO_CONTRATO,
        LOGIN_USUARIO,
        TIPO_ATUALIZACAO,
        VALOR_ANTERIOR,
        VALOR_NOVO,
        DATA_ATUALIZOU,
        DATA_CADASTRO
      )
      VALUES
      (
        SMARH_INT_AD_LOG_ID.nextval,
        COD_EMPRESA,
        TP_CONTRATO,
        COD_CONTRATO,
        USER,
        TP_ATUALIZOU,
        VL_ANTIGO,
        VL_NOVO,
        SYSDATE,
        SYSDATE
      );
    COMMIT;
  END;
/**/
/*IMPRIMIR LISTA DE TELEFONES*/
  PROCEDURE IMPRIMIR_VALORES_MAPEADOS
    (
      descricao_lista VARCHAR2,
      lista lista
    )
  AS
  BEGIN
    DBMS_Output.PUT_LINE('IMPRIMINDO LISTA MAPEADA' || ' - ' || descricao_lista);
    FOR i IN 1..lista.count
    (
    )
    LOOP
      DBMS_Output.PUT_LINE
      (
        RPAD('lista('||i||')',10,' ') || ' = ' || lista(i)
      )
      ;
    END LOOP;
  END;
/*FIM*/
/*MONTAR LISTA DE EMAILS*/
  FUNCTION BUSCA_ULTIMO_EMAIL_AD
    (
      EMAILS IN VARCHAR2
    )
    RETURN LISTA
  IS
    CURSOR C_EMAIL
    IS
      SELECT x.lista
      FROM
        (SELECT rownum AS id,
          REGEXP_SUBSTR(x.str, x.exp, 1, level) lista,
          x.*
        FROM
          (SELECT EMAILS str, '[^,]+' exp FROM dual
          ) x
        CONNECT BY REGEXP_SUBSTR(str, exp, 1, level) IS NOT NULL
        )x;
      vdado VARCHAR2 (45);
      EMAIL LISTA;
    BEGIN
      EMAIL:=LISTA();
      BEGIN
        OPEN C_EMAIL;
        LOOP
          FETCH C_EMAIL INTO vdado;
          EXIT
        WHEN C_EMAIL%notfound;
          --    dbms_output.put_line('teste email '||vdado);
          EMAIL.EXTEND;
          EMAIL(EMAIL.LAST):= vdado;
        END LOOP;
        CLOSE C_EMAIL;
      END;
      RETURN EMAIL;
    END;
    /*FIM*/
    /*FUNCAO PARA BUSCAR DADOS DO CONTRATO E PESSOA*/
    FUNCTION BUSCA_CONTRATO_PESSOA(
        vLOGIN_USUARIO IN VARCHAR2 )
      RETURN CONTRATO_AD
    IS
      vDADOS CONTRATO_AD;
    BEGIN
      vDADOS:=CONTRATO_AD(NULL,NULL,NULL,NULL,NULL);
      BEGIN
        SELECT CONT.CODIGO_EMPRESA,
          CONT.TIPO_CONTRATO,
          CONT.CODIGO AS CODIGO_CONTRATO,
          P.CODIGO    AS CODIGO_PESSOA,
          P.CPF
        INTO vDADOS.CODIGO_EMPRESA,
          vDADOS.TIPO_CONTRATO,
          vDADOS.CODIGO_CONTRATO,
          vDADOS.CODIGO_PESSOA,
          vDADOS.CPF
        FROM RHUSER_P_SIST USR
        LEFT OUTER JOIN
          (SELECT *
          FROM ARTERH.RHPESS_CONTRATO C
          WHERE C.ANO_MES_REFERENCIA=
            (SELECT MAX (AUX.ANO_MES_REFERENCIA)
            FROM ARTERH.RHPESS_CONTRATO AUX
            WHERE AUX.CODIGO      =C.CODIGO
            AND AUX.TIPO_CONTRATO =C.TIPO_CONTRATO
            AND AUX.CODIGO_EMPRESA=C.CODIGO_EMPRESA
            )
          )CONT
        ON USR.EMPRESA_USUARIO  =CONT.CODIGO_EMPRESA
        AND USR.CONTRATO_USUARIO=CONT.CODIGO
        AND USR.TP_CONTR_USUARIO=CONT.TIPO_CONTRATO
        LEFT OUTER JOIN ARTERH.RHPESS_PESSOA P
        ON P.CODIGO_EMPRESA =CONT.CODIGO_EMPRESA
        AND P.CODIGO        =CONT.CODIGO_PESSOA
        WHERE CODIGO_USUARIO=vLOGIN_USUARIO;
      EXCEPTION
      WHEN OTHERS THEN
        vDADOS.CODIGO_EMPRESA :=NULL;
        vDADOS.TIPO_CONTRATO  :=NULL;
        vDADOS.CODIGO_CONTRATO:=NULL;
        vDADOS.CODIGO_PESSOA  :=NULL;
        vDADOS.CPF            :=NULL;
      END;
      RETURN vDADOS;
    END;
  /*FIM*/
  /*MONTAR LISTA DE TELEFONES DA PESSOA */
  FUNCTION MONTA_LISTA(
      PCOD_PESSOA IN VARCHAR2,
      COD_EMPRESA IN CHAR)
    RETURN LISTA_NUMEOS
  IS
    RETORNO LISTA_NUMEOS;
    CURSOR TELEFONE
    IS
      SELECT trim(REPLACE(TRANSLATE(TELEFONE,'-.',' '),' ','')) AS TELEFONE
      FROM RHPESS_TELEFONE_P
      WHERE CODIGO_PESSOA=PCOD_PESSOA
      AND CODIGO_EMPRESA =COD_EMPRESA;
    celular lista;
    fixo lista;
    vdado VARCHAR2 (45);
  BEGIN
    celular :=lista();
    fixo    :=lista();
    BEGIN
      OPEN TELEFONE;
      LOOP
        FETCH TELEFONE INTO vdado;
        EXIT
      WHEN TELEFONE%notfound;
        ---     dbms_output.put_line('teste'||vdado);
        -- dbms_output.put_line('TAMANHO DADOS'||LENGTH(vdado));
        IF LENGTH(vdado)>=8 THEN
          IF SUBSTR(vdado,0,1)BETWEEN '2' AND '5' THEN
            --   dbms_output.put_line('ENTR NO FIXXO ');
            FIXO.EXTEND;
            FIXO(FIXO.LAST):= vdado;
          ELSIF SUBSTR(vdado,0,1)BETWEEN '6' AND '9' THEN
            --    dbms_output.put_line('ENTR NO CEL ');
            CELULAR.EXTEND;
            CELULAR(CELULAR.LAST):= vdado;
            /*   CELULAR(I) := vdado;
            I          := I+1;*/
            --       dbms_output.put_line('CEL'||vdado);
          END IF;
        END IF;
      END LOOP;
      CLOSE TELEFONE;
      RETORNO:= LISTA_NUMEOS(NULL,NULL);
      --  dbms_output.put_line('celular DADOS'||LENGTH(CELULAR.first));
      IF CELULAR.first IS NOT NULL AND FIXO.first IS NOT NULL THEN
   ---     dbms_output.put_line(' EN1');
        RETORNO.CELULAR   :=CELULAR;
        RETORNO.FIXO      := FIXO;
      ELSIF CELULAR.first IS NULL AND FIXO.first IS NOT NULL THEN
    --    dbms_output.put_line(' EN2');
        RETORNO.CELULAR   :=NULL;
        RETORNO.FIXO      := FIXO;
      ELSIF CELULAR.first IS NOT NULL AND FIXO.first IS NULL THEN
      --  dbms_output.put_line(' EN3');
        RETORNO.CELULAR   :=CELULAR;
        RETORNO.FIXO      :=NULL;
      ELSIF CELULAR.first IS NULL AND FIXO.first IS NULL THEN
   --     dbms_output.put_line(' EN4');
        RETORNO.CELULAR:=NULL;
        RETORNO.FIXO   :=NULL;
      END IF;
    END;
    RETURN RETORNO;
  END;
/*FIM */
/*BUSCAR EMAIL DO CONTRATO, EMAIL DA PESSOA */
  FUNCTION DADOS_EMAIL_TEL(
      COD_EMPRESA  IN CHAR,
      TP_CONTRATO  IN CHAR,
      COD_CONTRATO IN VARCHAR2)
    RETURN DADOS_EMAIL_TEL_P
  IS
    VRETORNO LISTA_NUMEOS;
    vDADOS_EMAIL_TEL_V DADOS_EMAIL_TEL_P;
  BEGIN
    vDADOS_EMAIL_TEL_V:=DADOS_EMAIL_TEL_P(NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL) ;
    SELECT x.codigo_empresa,
      X.TIPO_CONTRATO,
      x.codigo_contrato,
      X.CODIGO_PESSOA,
      x.email_pbh,
      x.EMAIL_ALTERNATIVO_ARTE
    INTO vDADOS_EMAIL_TEL_V.CODIGO_EMPRESA,
      vDADOS_EMAIL_TEL_V.TIPO_CONTRATO,
      vDADOS_EMAIL_TEL_V.CODIGO_CONTRATO,
      vDADOS_EMAIL_TEL_V.CODIGO_PESSOA ,
      vDADOS_EMAIL_TEL_V.EMAIL_PBH,
      vDADOS_EMAIL_TEL_V.EMAIL_ALTER
    FROM
      (SELECT CONT.CODIGO_EMPRESA,
        CONT.TIPO_CONTRATO,
        CONT.CODIGO AS CODIGO_CONTRATO,
        P.CODIGO    AS CODIGO_PESSOA,
        CONT.e_mail AS EMAIL_PBH,
        CASE
          WHEN TP.CODIGO_PESSOA   IS NOT NULL
          AND TP.ender_eletronico IS NULL
          THEN NULL
          ELSE TP.ender_eletronico
        END AS EMAIL_ALTERNATIVO_ARTE
      FROM RHUSER_P_SIST USR
      LEFT OUTER JOIN
        (SELECT *
        FROM ARTERH.RHPESS_CONTRATO C
        WHERE C.ANO_MES_REFERENCIA=
          (SELECT MAX (AUX.ANO_MES_REFERENCIA)
          FROM ARTERH.RHPESS_CONTRATO AUX
          WHERE AUX.CODIGO      =C.CODIGO
          AND AUX.TIPO_CONTRATO =C.TIPO_CONTRATO
          AND AUX.CODIGO_EMPRESA=C.CODIGO_EMPRESA
          )
        )CONT
      ON USR.EMPRESA_USUARIO  =CONT.CODIGO_EMPRESA
      AND USR.CONTRATO_USUARIO=CONT.CODIGO
      AND USR.TP_CONTR_USUARIO=CONT.TIPO_CONTRATO
      LEFT OUTER JOIN ARTERH.RHPESS_PESSOA P
      ON P.CODIGO_EMPRESA=CONT.CODIGO_EMPRESA
      AND P.CODIGO       =CONT.CODIGO_PESSOA
      LEFT OUTER JOIN ARTERH.RHPESS_ENDERECO_P TP
      ON TP.CODIGO_EMPRESA   =P.CODIGO_EMPRESA
      AND TP.CODIGO_PESSOA   =P.CODIGO
      WHERE CONT.CODIGO      =COD_CONTRATO
      AND CONT.TIPO_CONTRATO =TP_CONTRATO
      AND CONT.CODIGO_EMPRESA= COD_EMPRESA
      )x;
    IF vDADOS_EMAIL_TEL_V.CODIGO_PESSOA IS NOT NULL THEN
      VRETORNO                          :=LISTA_NUMEOS(NULL,NULL);
      VRETORNO                          :=MONTA_LISTA(vDADOS_EMAIL_TEL_V.CODIGO_PESSOA,vDADOS_EMAIL_TEL_V.CODIGO_EMPRESA);
      IF VRETORNO.CELULAR               IS NULL AND VRETORNO.FIXO IS NOT NULL THEN
   --     dbms_output.put_line('E1');
        vDADOS_EMAIL_TEL_V.FIXO    :=VRETORNO.FIXO;
        vDADOS_EMAIL_TEL_V.CELULAR :=NULL;
      ELSIF VRETORNO.CELULAR       IS NOT NULL AND VRETORNO.FIXO IS NOT NULL THEN
    ---    dbms_output.put_line('E2');
        vDADOS_EMAIL_TEL_V.FIXO    :=VRETORNO.FIXO;
        vDADOS_EMAIL_TEL_V.CELULAR :=VRETORNO.CELULAR;
      ELSIF VRETORNO.CELULAR       IS NOT NULL AND VRETORNO.FIXO IS NULL THEN
  --      dbms_output.put_line('E3');
        vDADOS_EMAIL_TEL_V.FIXO    :=NULL;
        vDADOS_EMAIL_TEL_V.CELULAR :=VRETORNO.CELULAR;
      ELSE
   --     dbms_output.put_line('E4');
        vDADOS_EMAIL_TEL_V.FIXO    :=NULL;
        vDADOS_EMAIL_TEL_V.CELULAR :=NULL;
      END IF;
    END IF;
    RETURN vDADOS_EMAIL_TEL_V;
  END;
/**/
/*FUNCAO PARA INSERIR OS VALOES DE CADA ITEM NO ARTE*/
  FUNCTION GRAVA_ARTE(
      VEMPRESA     IN CHAR ,
      VTP_CONTRATO IN CHAR ,
      VCONTRATO    IN VARCHAR2,
      VPESSOA      IN VARCHAR2,
      VDDD         IN CHAR,
      VNUMERO      IN VARCHAR2,
      VEMAIL_PBH   IN VARCHAR2 ,
      VEMAIL_ALT   IN VARCHAR2 ,
      TP_TELEFONE  IN CHAR)
    RETURN NUMBER
  IS
    VQTD_LINHAS_AFETADAS NUMBER;
  BEGIN
    VQTD_LINHAS_AFETADAS:=0;
    IF VEMAIL_PBH       IS NULL THEN
      INSERT
      INTO RHPESS_TELEFONE_P
        (
          CODIGO_EMPRESA,
          CODIGO_PESSOA,
          COD_TIPO_TELEFONE,
          OCORRENCIA,
          DATA_INI_VIGENCIA,
          DDD,
          TELEFONE,
          LOGIN_USUARIO,
          DT_ULT_ALTER_USUA,
          codigo_pais,
          PREFERENCIAL
        )
        VALUES
        (
          VEMPRESA,
          VPESSOA,
          TP_TELEFONE,
          (SELECT NVL(MAX(ocorrencia)+1,1)
          FROM ARTERH.RHPESS_TELEFONE_P
          WHERE codigo_pessoa=VPESSOA
          AND codigo_empresa =VEMPRESA
          ),
          TRUNC(SYSDATE),
          VDDD,
          VNUMERO,
          'PR_SMARH_ATUALIZA_AD_EMAIL',
          sysdate,
          '000000000000001',
          'S'
        );
      VQTD_LINHAS_AFETADAS := sql%rowcount;
    END IF;
    IF VEMAIL_PBH IS NOT NULL AND VEMAIL_ALT IS NOT NULL THEN
      UPDATE ARTERH.RHPESS_CONTRATO C
      SET e_mail              =VEMAIL_PBH,
        LOGIN_USUARIO         ='PR_SMARH_ATUALIZA_AD_EMAIL',
        DT_ULT_ALTER_USUA     =SYSDATE
      WHERE CODIGO_EMPRESA    =VEMPRESA
      AND TIPO_CONTRATO       =VTP_CONTRATO
      AND CODIGO              =VCONTRATO
      AND C.ANO_MES_REFERENCIA=
        (SELECT MAX(AUX.ANO_MES_REFERENCIA)
        FROM ARTERH.RHPESS_CONTRATO aux
        WHERE AUX.CODIGO      =C.CODIGO
        AND AUX.CODIGO_EMPRESA=C.CODIGO_EMPRESA
        AND AUX.TIPO_CONTRATO =C.TIPO_CONTRATO
        );
      VQTD_LINHAS_AFETADAS := sql%rowcount;
      COMMIT;
      UPDATE ARTERH.RHPESS_ENDERECO_P
      SET ender_eletronico   =VEMAIL_ALT,
        LOGIN_USUARIO        ='PR_SMARH_ATUALIZA_AD_EMAIL',
        DT_ULT_ALTER_USUA    =SYSDATE
      WHERE CODIGO_EMPRESA   =VEMPRESA
      AND CODIGO_PESSOA      =VPESSOA;
      VQTD_LINHAS_AFETADAS := sql%rowcount;
      COMMIT;
    ELSIF VEMAIL_PBH IS NOT NULL AND VEMAIL_ALT IS NULL THEN
      UPDATE ARTERH.RHPESS_CONTRATO C
      SET e_mail              =VEMAIL_PBH,
        LOGIN_USUARIO         ='PR_SMARH_ATUALIZA_AD_EMAIL',
        DT_ULT_ALTER_USUA     =SYSDATE
      WHERE CODIGO_EMPRESA    =VEMPRESA
      AND TIPO_CONTRATO       =VTP_CONTRATO
      AND CODIGO              =VCONTRATO
      AND C.ANO_MES_REFERENCIA=
        (SELECT MAX(AUX.ANO_MES_REFERENCIA)
        FROM ARTERH.RHPESS_CONTRATO aux
        WHERE AUX.CODIGO      =C.CODIGO
        AND AUX.CODIGO_EMPRESA=C.CODIGO_EMPRESA
        AND AUX.TIPO_CONTRATO =C.TIPO_CONTRATO
        );
      VQTD_LINHAS_AFETADAS := sql%rowcount;
      COMMIT;
    ELSIF VEMAIL_PBH IS NULL AND VEMAIL_ALT IS NOT NULL THEN
      UPDATE ARTERH.RHPESS_ENDERECO_P
      SET ender_eletronico   =VEMAIL_ALT,
        LOGIN_USUARIO        ='PR_SMARH_ATUALIZA_AD_EMAIL',
        DT_ULT_ALTER_USUA    =SYSDATE
      WHERE CODIGO_EMPRESA   =VEMPRESA
      AND CODIGO_PESSOA      =VPESSOA;
      VQTD_LINHAS_AFETADAS := sql%rowcount;
      COMMIT;
    END IF;
    RETURN VQTD_LINHAS_AFETADAS;
  END;
/*FIM */
BEGIN
  CONT:=0;
  FOR c1 IN
  (SELECT X.CPF,
    X.LOGIN_USUARIO,
    X.NOVO,
    X.ALTEROU_EMAIL,
    X.ALTEROU_EMAIL_ALTERNATIVO,
    X.ALTEROU_TELEFONE,
    X.ALTEROU_TELEFONE_ALTERNATIVO,
    CASE
      WHEN X.NOVO='SIM'
      THEN X.EMAIL
      WHEN X.NOVO        ='NAO'
      AND X.ALTEROU_EMAIL='EMAIL_MUDOU'
      THEN X.EMAIL_SEGUINTE
      ELSE NULL
    END AS EMAIL,
    CASE
      WHEN X.NOVO='SIM'
      THEN EMAIL_ALTERNATIVO
      WHEN X.NOVO                    ='NAO'
      AND X.ALTEROU_EMAIL_ALTERNATIVO='EMAIL_ALTERNATIVO_MUDOU'
      THEN X.EMAIL_ALTERNATIVO_SEGUINTE
      ELSE NULL
    END AS EMAIL_ALTERNATIVO,
    CASE
      WHEN X.NOVO='SIM'
      THEN SUBSTR(TELEFONE,5,20)
      WHEN X.NOVO           ='NAO'
      AND X.ALTEROU_TELEFONE='EMAIL_ALTERNATIVO_MUDOU'
      THEN SUBSTR(X.TELEFONE_SEGUINTE,5,20)
      ELSE NULL
    END AS TELEFONE,
    CASE
      WHEN X.NOVO='SIM'
      THEN SUBSTR(TELEFONE,2,2)
      WHEN X.NOVO           ='NAO'
      AND X.ALTEROU_TELEFONE='EMAIL_ALTERNATIVO_MUDOU'
      THEN SUBSTR(X.TELEFONE_SEGUINTE,2,2)
      ELSE NULL
    END AS DDD_TELEFONE,
    CASE
      WHEN X.NOVO='SIM'
      THEN SUBSTR(TELEFONE_SEGUINTE,2,2)
      WHEN X.NOVO           ='NAO'
      AND X.ALTEROU_TELEFONE='EMAIL_ALTERNATIVO_MUDOU'
      THEN SUBSTR(X.TELEFONE_SEGUINTE,2,2)
      ELSE NULL
    END AS DDD_ALT,
    CASE
      WHEN X.NOVO='SIM'
      THEN SUBSTR(TELEFONE_ALTERNATIVO,5,20)
      WHEN X.NOVO                       ='NAO'
      AND X.ALTEROU_TELEFONE_ALTERNATIVO='TELEFONE_ALTERNATIVO_MUDOU'
      THEN SUBSTR(X.TELEFONE_ALTERNATIVO_SEGUINTE,5,20)
      ELSE NULL
    END AS TELEFONE_ALTERNATIVO
  FROM
    (SELECT XXX.*
    FROM
      (SELECT
        CASE
          WHEN XX.DIA  ='ULTIMO'
          AND INTEGRADO='N'
          THEN 'SIM'
          ELSE 'NAO'
        END AS NOVO,
        CASE
          WHEN ( (XX.EMAIL      != XX.EMAIL_SEGUINTE)
          OR (XX.EMAIL          IS NULL
          AND XX.EMAIL_SEGUINTE IS NOT NULL))
          THEN 'EMAIL_MUDOU'
          ELSE 'EMAIL_IGUAL'
        END AS ALTEROU_EMAIL,
        CASE
          WHEN ( (XX.EMAIL_ALTERNATIVO      != XX.EMAIL_ALTERNATIVO_SEGUINTE)
          OR (XX.EMAIL_ALTERNATIVO          IS NULL
          AND XX.EMAIL_ALTERNATIVO_SEGUINTE IS NOT NULL))
          THEN 'EMAIL_ALTERNATIVO_MUDOU'
          ELSE 'EMAIL_ALTERNATIVO_IGUAL'
        END AS ALTEROU_EMAIL_ALTERNATIVO,
        CASE
          WHEN ( (XX.TELEFONE_ALTERNATIVO      != XX.TELEFONE_ALTERNATIVO_SEGUINTE)
          OR (XX.TELEFONE_ALTERNATIVO          IS NULL
          AND XX.TELEFONE_ALTERNATIVO_SEGUINTE IS NOT NULL))
          THEN 'TELEFONE_MUDOU'
          ELSE 'TELEFONE_IGUAL'
        END AS ALTEROU_TELEFONE,
        CASE
          WHEN ( (XX.TELEFONE_ALTERNATIVO      != XX.TELEFONE_ALTERNATIVO_SEGUINTE)
          OR (XX.TELEFONE_ALTERNATIVO          IS NULL
          AND XX.TELEFONE_ALTERNATIVO_SEGUINTE IS NOT NULL))
          THEN 'TELEFONE_ALTERNATIVO_MUDOU'
          ELSE 'TELEFONE_IGUAL'
        END AS ALTEROU_TELEFONE_ALTERNATIVO,
        XX.*
      FROM
        (SELECT X.LOGIN_USUARIO,
          X.CPF,
          Row_Number () Over (Partition BY X.LOGIN_USUARIO,X.CPF ORDER By X.LOGIN_USUARIO,X.CPF,X.DIA) AS ORDEM,
          X.DIA,
          LEAD(X.DIA, 1, NULL) OVER(PARTITION BY X.LOGIN_USUARIO,X.CPF ORDER BY X.LOGIN_USUARIO,X.CPF,X.DIA)DIA_SEGUINTE,
          X.EMAIL,
          LEAD(X.EMAIL, 1, NULL) OVER(PARTITION BY X.LOGIN_USUARIO,X.CPF ORDER BY X.LOGIN_USUARIO,X.CPF,X.DIA)EMAIL_SEGUINTE,
          X.EMAIL_ALTERNATIVO,
          LEAD(X.EMAIL_ALTERNATIVO, 1, NULL) OVER(PARTITION BY X.LOGIN_USUARIO,X.CPF ORDER BY X.LOGIN_USUARIO,X.CPF,X.DIA)EMAIL_ALTERNATIVO_SEGUINTE,
          trim(REPLACE(TRANSLATE(X.TELEFONE,'-.',' '),' ','')) AS TELEFONE,
          LEAD(trim(REPLACE(TRANSLATE(X.TELEFONE,'-.',' '),' ','')), 1, NULL) OVER(PARTITION BY X.LOGIN_USUARIO,X.CPF ORDER BY X.LOGIN_USUARIO,X.CPF,X.DIA)TELEFONE_SEGUINTE,
          trim(REPLACE(TRANSLATE(X.TELEFONE_ALTERNATIVO,'-.',' '),' ','')) AS TELEFONE_ALTERNATIVO,
          LEAD(trim(REPLACE(TRANSLATE(X.TELEFONE_ALTERNATIVO,'-.',' '),' ','')), 1, NULL) OVER(PARTITION BY X.LOGIN_USUARIO,X.CPF ORDER BY X.LOGIN_USUARIO,X.CPF,X.DIA)TELEFONE_ALTERNATIVO_SEGUINTE,
          X.INTEGRADO,
          LEAD(X.INTEGRADO, 1, NULL) OVER(PARTITION BY X.LOGIN_USUARIO,X.CPF ORDER BY X.LOGIN_USUARIO,X.CPF,X.DIA)INTEGRADO_SEGUINTE
        FROM
          (SELECT 'ULTIMO' AS dia,
            AD.LOGIN_USUARIO,
            AD.CPF,
            AD.EMAIL,
            AD.EMAIL_ALTERNATIVO,
            AD.TELEFONE,
            AD.TELEFONE_ALTERNATIVO ,
            AD.INTEGRADO
          FROM ARTERH.SMARH_INT_ATUALIZA_AD AD
          WHERE TRUNC(AD.DATA_CARGA)=
            (SELECT MAX(TRUNC(AUX.DATA_CARGA)) FROM ARTERH.SMARH_INT_ATUALIZA_AD AUX
            )
          UNION
          SELECT 'PENULTIMO' AS dia,
            P.LOGIN_USUARIO,
            P.CPF,
            P.EMAIL,
            P.EMAIL_ALTERNATIVO,
            P.TELEFONE,
            P.TELEFONE_ALTERNATIVO ,
            P.INTEGRADO
          FROM ARTERH.SMARH_INT_ATUALIZA_AD P
          WHERE TRUNC(P.DATA_CARGA) =
            (SELECT X.DATA_CARGA
            FROM
              (SELECT K.DATA_CARGA,
                ROWNUM ORDEM_DATA
              FROM
                (SELECT Z.*
                FROM
                  (SELECT TRUNC(X.DATA_CARGA) AS DATA_CARGA
                  FROM ARTERH.SMARH_INT_ATUALIZA_AD x
                  )Z
                GROUP BY Z.DATA_CARGA
                ORDER BY Z.DATA_CARGA DESC
                )K
              )X
            WHERE X.ORDEM_DATA=2
            )
          )X
        ORDER BY X.LOGIN_USUARIO,
          X.CPF,
          X.DIA
        )XX
      WHERE (XX.ORDEM=1)
      )XXX
     WHERE ( (XXX.NOVO='SIM' AND XXX.INTEGRADO='N')
      OR (XXX.ALTEROU_EMAIL='EMAIL_MUDOU' AND XXX.INTEGRADO_SEGUINTE='S')
      OR (XXX.ALTEROU_EMAIL_ALTERNATIVO='EMAIL_ALTERNATIVO_MUDOU' AND XXX.INTEGRADO_SEGUINTE='S')
      OR (XXX.ALTEROU_TELEFONE='TELEFONE_MUDOU' AND XXX.INTEGRADO_SEGUINTE='S')
      OR (XXX.ALTEROU_TELEFONE_ALTERNATIVO='TELEFONE_ALTERNATIVO_MUDOU' AND XXX.INTEGRADO_SEGUINTE='S'))
  --  WHERE XXX.CPF IN ('07540940654','12477339630')
    )x
  )
  LOOP
    emails          :=LISTA();
    CONT            :=CONT+1;
    DADOS           :=CONTRATO_AD(NULL,NULL,NULL,NULL,NULL);
    vDADOS_EMAIL_TEL:=DADOS_EMAIL_TEL_P(NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL) ;
    BEGIN
      --dbms_output.put_line(C1.LOGIN_USUARIO);
      DADOS:=BUSCA_CONTRATO_PESSOA(C1.LOGIN_USUARIO);
      ---   dbms_output.put_line('retorno dados de pessoa e contrato'||'codigo_contrato'||DADOS.codigo_contrato||'CPF:'||DADOS.CPF||'CODIGO_PESSOA'||DADOS.CODIGO_PESSOA||'');
      IF DADOS.CODIGO_CONTRATO IS NOT NULL AND DADOS.TIPO_CONTRATO IS NOT NULL AND DADOS.CODIGO_EMPRESA IS NOT NULL AND DADOS.CPF IS NOT NULL AND DADOS.CODIGO_PESSOA IS NOT NULL THEN
        IF DADOS.CPF            =C1.CPF THEN
          vDADOS_EMAIL_TEL     :=DADOS_EMAIL_TEL (DADOS.CODIGO_EMPRESA, DADOS.TIPO_CONTRATO,DADOS.CODIGO_CONTRATO);
          dbms_output.put_line('DADOS GERAIS PESSOA '||'codigo_contrato'||vDADOS_EMAIL_TEL.codigo_contrato||'EMAIL_PBH:'||vDADOS_EMAIL_TEL.EMAIL_PBH||'EMAIL ALT'||vDADOS_EMAIL_TEL.EMAIL_ALTER||'');
          -- IMPRIMIR_VALORES_MAPEADOS('CELULAR', vDADOS_EMAIL_TEL.CELULAR);
          ---   dbms_output.put_line('DIGITO VERIFICADOR'||SUBSTR(C1.TELEFONE,0,1));
          -----   IMPRIMIR_VALORES_MAPEADOS('FIXO', vDADOS_EMAIL_TEL.FIXO);
          /*IF PARA VERIFICAR telefone titular */
          /*1°*/
          IF C1.TELEFONE                IS NOT NULL THEN
            IF vDADOS_EMAIL_TEL.CELULAR IS NULL THEN
              IF SUBSTR(C1.TELEFONE,0,1)NOT BETWEEN '2' AND '5' THEN
                --      dbms_output.put_line(' INSERIR  CELULAR PREFERENCIAL NOVO' );
                SUCESSO  :=GRAVA_ARTE(vDADOS_EMAIL_TEL.CODIGO_EMPRESA ,vDADOS_EMAIL_TEL.TIPO_CONTRATO ,vDADOS_EMAIL_TEL.CODIGO_CONTRATO, vDADOS_EMAIL_TEL.CODIGO_PESSOA,C1.DDD_TELEFONE,C1.TELEFONE,NULL ,NULL,'0002' );
                IF SUCESSO>0 THEN
                  GRAVA_LOG(vDADOS_EMAIL_TEL.CODIGO_EMPRESA,vDADOS_EMAIL_TEL.TIPO_CONTRATO,vDADOS_EMAIL_TEL.CODIGO_CONTRATO,C1.LOGIN_USUARIO,'SUCESSO INSERIR CELULAR ARTE','CELULAR ARTE :'||vDADOS_EMAIL_TEL.CELULAR(vDADOS_EMAIL_TEL.CELULAR.FIRST),'CELULAR AD :'||c1.TELEFONE);
                ELSE
                  GRAVA_LOG(vDADOS_EMAIL_TEL.CODIGO_EMPRESA,vDADOS_EMAIL_TEL.TIPO_CONTRATO,vDADOS_EMAIL_TEL.CODIGO_CONTRATO,C1.LOGIN_USUARIO,'ERRO INSERIR CELULAR ARTE','CELULAR ARTE :'||vDADOS_EMAIL_TEL.CELULAR(vDADOS_EMAIL_TEL.CELULAR.FIRST),'CELULAR AD :'||c1.TELEFONE);
                END IF;
              END IF;
            ELSIF vDADOS_EMAIL_TEL.CELULAR IS NOT NULL THEN
              IF SUBSTR(C1.TELEFONE,0,1)NOT BETWEEN '2' AND '5' AND C1.TELEFONE NOT MEMBER vDADOS_EMAIL_TEL.CELULAR THEN
                ---INSERRIR AQUI QUANDO AUTORIZADO A SOBREPOSSICAO DOS DADOS NO ARTE
                GRAVA_LOG(vDADOS_EMAIL_TEL.CODIGO_EMPRESA,vDADOS_EMAIL_TEL.TIPO_CONTRATO,vDADOS_EMAIL_TEL.CODIGO_CONTRATO,C1.LOGIN_USUARIO,'ERRO CELULAR DIFERENTE ','CELULAR ARTE :'||vDADOS_EMAIL_TEL.CELULAR(vDADOS_EMAIL_TEL.CELULAR.FIRST),'CELULAR AD :'||c1.TELEFONE);
                ---dbms_output.put_line('   CELULAR PREFERENCIAL AD DIFERENTE DO ARTE ');
              ELSIF SUBSTR(C1.TELEFONE,0,1)NOT BETWEEN '2' AND '5' AND C1.TELEFONE MEMBER vDADOS_EMAIL_TEL.CELULAR THEN
                GRAVA_LOG(vDADOS_EMAIL_TEL.CODIGO_EMPRESA,vDADOS_EMAIL_TEL.TIPO_CONTRATO,vDADOS_EMAIL_TEL.CODIGO_CONTRATO,C1.LOGIN_USUARIO,'SUCESSO CELULAR IGUAL (SERVIDOR PODE TER MAIS DE UM TELEFONE) ','CELULAR ARTE :'||vDADOS_EMAIL_TEL.CELULAR(vDADOS_EMAIL_TEL.CELULAR.FIRST),'CELULAR AD :'||c1.TELEFONE);
              END IF;
            END IF;
            IF vDADOS_EMAIL_TEL.FIXO IS NULL THEN
              IF SUBSTR(C1.TELEFONE,0,1) BETWEEN '2' AND '5' THEN
                SUCESSO  :=GRAVA_ARTE(vDADOS_EMAIL_TEL.CODIGO_EMPRESA ,vDADOS_EMAIL_TEL.TIPO_CONTRATO ,vDADOS_EMAIL_TEL.CODIGO_CONTRATO, vDADOS_EMAIL_TEL.CODIGO_PESSOA,C1.DDD_TELEFONE,C1.TELEFONE,NULL ,NULL,'0001' );
                IF SUCESSO>0 THEN
                  GRAVA_LOG(vDADOS_EMAIL_TEL.CODIGO_EMPRESA,vDADOS_EMAIL_TEL.TIPO_CONTRATO,vDADOS_EMAIL_TEL.CODIGO_CONTRATO,C1.LOGIN_USUARIO,'SUCESSO INSERIR FIXO ARTE','CELULAR ARTE :'||vDADOS_EMAIL_TEL.FIXO(vDADOS_EMAIL_TEL.FIXO.FIRST),'FIXO AD :'||c1.TELEFONE);
                ELSE
                  GRAVA_LOG(vDADOS_EMAIL_TEL.CODIGO_EMPRESA,vDADOS_EMAIL_TEL.TIPO_CONTRATO,vDADOS_EMAIL_TEL.CODIGO_CONTRATO,C1.LOGIN_USUARIO,'ERRO INSERIR FIXO  ARTE','CELULAR ARTE :'||vDADOS_EMAIL_TEL.FIXO(vDADOS_EMAIL_TEL.FIXO.FIRST),'FIXO AD :'||c1.TELEFONE);
                END IF;
              END IF;
            ELSIF vDADOS_EMAIL_TEL.FIXO IS NOT NULL THEN
              IF SUBSTR(C1.TELEFONE,0,1) BETWEEN '2' AND '5' AND C1.TELEFONE NOT MEMBER vDADOS_EMAIL_TEL.CELULAR THEN
                ---INSERRIR AQUI QUANDO AUTORIZADO A SOBREPOSSICAO DOS DADOS NO ARTE
                GRAVA_LOG(vDADOS_EMAIL_TEL.CODIGO_EMPRESA,vDADOS_EMAIL_TEL.TIPO_CONTRATO,vDADOS_EMAIL_TEL.CODIGO_CONTRATO,C1.LOGIN_USUARIO,'ERRO FIXO DIFERENTE DO AD (SERVIDOR PODE TER MAIS DE UM FIXO NO ARTE) ','FIXO  ARTE :'||vDADOS_EMAIL_TEL.FIXO(vDADOS_EMAIL_TEL.FIXO.FIRST),'FIXO AD :'||c1.TELEFONE);
              ELSIF SUBSTR(C1.TELEFONE,0,1) BETWEEN '2' AND '5' AND C1.TELEFONE MEMBER vDADOS_EMAIL_TEL.CELULAR THEN
                GRAVA_LOG(vDADOS_EMAIL_TEL.CODIGO_EMPRESA,vDADOS_EMAIL_TEL.TIPO_CONTRATO,vDADOS_EMAIL_TEL.CODIGO_CONTRATO,C1.LOGIN_USUARIO,'SUCESSO FIXO IGUAL DO AD (SERVIDOR PODE TER MAIS DE UM FIXO NO ARTE) ','FIXO  ARTE :'||vDADOS_EMAIL_TEL.FIXO(vDADOS_EMAIL_TEL.FIXO.FIRST),'FIXO AD :'||c1.TELEFONE);
              END IF;
            ELSE
              GRAVA_LOG(vDADOS_EMAIL_TEL.CODIGO_EMPRESA,vDADOS_EMAIL_TEL.TIPO_CONTRATO,vDADOS_EMAIL_TEL.CODIGO_CONTRATO,C1.LOGIN_USUARIO,'ERRO PESSOA SEM TELEFONE NO AD ',NULL,NULL);
            END IF;
          END IF;
          IF C1.TELEFONE_ALTERNATIVO    IS NOT NULL THEN
            IF vDADOS_EMAIL_TEL.CELULAR IS NULL THEN
              IF SUBSTR(C1.TELEFONE_ALTERNATIVO,0,1) NOT BETWEEN '2' AND '5' THEN
                SUCESSO  :=GRAVA_ARTE(vDADOS_EMAIL_TEL.CODIGO_EMPRESA ,vDADOS_EMAIL_TEL.TIPO_CONTRATO ,vDADOS_EMAIL_TEL.CODIGO_CONTRATO, vDADOS_EMAIL_TEL.CODIGO_PESSOA,C1.DDD_ALT,C1.TELEFONE_ALTERNATIVO,NULL ,NULL,'0008' );
                IF SUCESSO>0 THEN
                  GRAVA_LOG(vDADOS_EMAIL_TEL.CODIGO_EMPRESA,vDADOS_EMAIL_TEL.TIPO_CONTRATO,vDADOS_EMAIL_TEL.CODIGO_CONTRATO,C1.LOGIN_USUARIO,'SUCESSO INSERIR CELULAR ALTERNATIVO ARTE','CELULAR ARTE :'||vDADOS_EMAIL_TEL.CELULAR(vDADOS_EMAIL_TEL.CELULAR.FIRST),'CELULAR AD :'||c1.TELEFONE_ALTERNATIVO);
                ELSE
                  GRAVA_LOG(vDADOS_EMAIL_TEL.CODIGO_EMPRESA,vDADOS_EMAIL_TEL.TIPO_CONTRATO,vDADOS_EMAIL_TEL.CODIGO_CONTRATO,C1.LOGIN_USUARIO,'ERRO INSERIR CELULAR ALTERNATIVO','CELULAR ARTE :'||vDADOS_EMAIL_TEL.CELULAR(vDADOS_EMAIL_TEL.CELULAR.FIRST),'CELULAR AD :'||c1.TELEFONE_ALTERNATIVO);
                END IF;
              END IF;
            ELSIF vDADOS_EMAIL_TEL.CELULAR IS NOT NULL THEN
              IF SUBSTR(C1.TELEFONE_ALTERNATIVO,0,1)NOT BETWEEN '2' AND '5' AND C1.TELEFONE_ALTERNATIVO NOT MEMBER vDADOS_EMAIL_TEL.CELULAR THEN
                ---INSERRIR AQUI QUANDO AUTORIZADO A SOBREPOSSICAO DOS DADOS NO ARTE
                --   dbms_output.put_line('   CELULAR ALTERNATIVO  AD DIFERENTE DO ARTE ');
                GRAVA_LOG(vDADOS_EMAIL_TEL.CODIGO_EMPRESA,vDADOS_EMAIL_TEL.TIPO_CONTRATO,vDADOS_EMAIL_TEL.CODIGO_CONTRATO,C1.LOGIN_USUARIO,'ERRO CELULAR ALTERNATIVO DIFERENTE ','CELULAR ARTE :'||vDADOS_EMAIL_TEL.CELULAR(vDADOS_EMAIL_TEL.CELULAR.FIRST),'CELULAR AD :'||c1.TELEFONE_ALTERNATIVO);
              ELSIF SUBSTR(C1.TELEFONE_ALTERNATIVO,0,1)NOT BETWEEN '2' AND '5' AND C1.TELEFONE_ALTERNATIVO MEMBER vDADOS_EMAIL_TEL.CELULAR THEN
                --   dbms_output.put_line('   CELULAR PREFERENCIAL AD IGUAL  DO ARTE ');
                GRAVA_LOG(vDADOS_EMAIL_TEL.CODIGO_EMPRESA,vDADOS_EMAIL_TEL.TIPO_CONTRATO,vDADOS_EMAIL_TEL.CODIGO_CONTRATO,C1.LOGIN_USUARIO,'SUCESSO CELULAR ALTERNATIVO IGUAL ','CELULAR ARTE :'||vDADOS_EMAIL_TEL.CELULAR(vDADOS_EMAIL_TEL.CELULAR.FIRST),'CELULAR AD :'||c1.TELEFONE_ALTERNATIVO);
              END IF;
            ELSIF vDADOS_EMAIL_TEL.FIXO IS NULL THEN
              IF SUBSTR(C1.TELEFONE_ALTERNATIVO,0,1) BETWEEN '2' AND '5' THEN
                ---      dbms_output.put_line(' INSERIR FIXO  ALTERNATIVO AD' );
                SUCESSO  :=GRAVA_ARTE(vDADOS_EMAIL_TEL.CODIGO_EMPRESA ,vDADOS_EMAIL_TEL.TIPO_CONTRATO ,vDADOS_EMAIL_TEL.CODIGO_CONTRATO, vDADOS_EMAIL_TEL.CODIGO_PESSOA,C1.DDD_ALT,C1.TELEFONE_ALTERNATIVO,NULL ,NULL,'0008' );
                IF SUCESSO>0 THEN
                  GRAVA_LOG(vDADOS_EMAIL_TEL.CODIGO_EMPRESA,vDADOS_EMAIL_TEL.TIPO_CONTRATO,vDADOS_EMAIL_TEL.CODIGO_CONTRATO,C1.LOGIN_USUARIO,'SUCESSO INSERIR FIXO ALTERNATIVO ARTE','CELULAR ARTE :'||vDADOS_EMAIL_TEL.CELULAR(vDADOS_EMAIL_TEL.CELULAR.FIRST),'FIXO AD :'||c1.TELEFONE_ALTERNATIVO);
                ELSE
                  GRAVA_LOG(vDADOS_EMAIL_TEL.CODIGO_EMPRESA,vDADOS_EMAIL_TEL.TIPO_CONTRATO,vDADOS_EMAIL_TEL.CODIGO_CONTRATO,C1.LOGIN_USUARIO,'ERRO INSERIR FIXO ALTERNATIVO','CELULAR ARTE :'||vDADOS_EMAIL_TEL.CELULAR(vDADOS_EMAIL_TEL.CELULAR.FIRST),'FIXO AD :'||c1.TELEFONE_ALTERNATIVO);
                END IF;
              END IF;
            ELSIF vDADOS_EMAIL_TEL.FIXO IS NOT NULL THEN
              IF SUBSTR(C1.TELEFONE_ALTERNATIVO,0,1) BETWEEN '2' AND '5' AND C1.TELEFONE_ALTERNATIVO NOT MEMBER vDADOS_EMAIL_TEL.FIXO THEN
                ---INSERRIR AQUI QUANDO AUTORIZADO A SOBREPOSSICAO DOS DADOS NO ARTE
                --      dbms_output.put_line('   FIXO ALTERNATIVO  AD DIFERENTE DO ARTE ');
                GRAVA_LOG(vDADOS_EMAIL_TEL.CODIGO_EMPRESA,vDADOS_EMAIL_TEL.TIPO_CONTRATO,vDADOS_EMAIL_TEL.CODIGO_CONTRATO,C1.LOGIN_USUARIO,'ERRO FIXO ALTERNATIVO DIFERENTE (SERVIDOR PODE TER MAIS DE UM FIXO)','FIXO ARTE :'||vDADOS_EMAIL_TEL.CELULAR(vDADOS_EMAIL_TEL.CELULAR.FIRST),'FIXO AD :'||c1.TELEFONE_ALTERNATIVO);
              ELSIF SUBSTR(C1.TELEFONE_ALTERNATIVO,0,1) BETWEEN '2' AND '5' AND C1.TELEFONE_ALTERNATIVO MEMBER vDADOS_EMAIL_TEL.FIXO THEN
                --  dbms_output.put_line('   FIXO ALTERNATIVO AD IGUAL  DO ARTE ');
                GRAVA_LOG(vDADOS_EMAIL_TEL.CODIGO_EMPRESA,vDADOS_EMAIL_TEL.TIPO_CONTRATO,vDADOS_EMAIL_TEL.CODIGO_CONTRATO,C1.LOGIN_USUARIO,'SUCESSO FIXO ALTERNATIVO IGUAL (SERVIDOR PODE TER MAIS DE UM FIXO)','FIXO ARTE :'||vDADOS_EMAIL_TEL.CELULAR(vDADOS_EMAIL_TEL.CELULAR.FIRST),'FIXO AD :'||c1.TELEFONE_ALTERNATIVO);
              END IF;
            END IF;
          ELSE
            --        dbms_output.put_line(' NÃO MAPEADO 10 (PESSOA SEM TELEFONE ALTERNATIVO  AD' );
            GRAVA_LOG(vDADOS_EMAIL_TEL.CODIGO_EMPRESA,vDADOS_EMAIL_TEL.TIPO_CONTRATO,vDADOS_EMAIL_TEL.CODIGO_CONTRATO,C1.LOGIN_USUARIO,'ERRO SERVIDOR SEM TELEFONE ALTERANATIVO AD',NULL,NULL);
          END IF;
          /*VALIDAR EMAIL PBH E EMAIL ALTERNATIVO */
          IF c1.email IS NOT NULL THEN
            emails    :=BUSCA_ULTIMO_EMAIL_AD(c1.email);
         --   dbms_output.put_line(emails(emails.last));
            IF emails(emails.last) IS NOT NULL THEN
              IF UPPER(SUBSTR(emails(emails.last),INSTR(emails(emails.last), '@') +1,40)) IN ('EDU.PBH.GOV.BR','PBH.GOV.BR') THEN
                IF vDADOS_EMAIL_TEL.EMAIL_PBH IS NULL THEN
                  SUCESSO                     :=GRAVA_ARTE(vDADOS_EMAIL_TEL.CODIGO_EMPRESA ,vDADOS_EMAIL_TEL.TIPO_CONTRATO ,vDADOS_EMAIL_TEL.CODIGO_CONTRATO, vDADOS_EMAIL_TEL.CODIGO_PESSOA,NULL,NULL,emails(emails.last) ,NULL,NULL );
                  IF SUCESSO                   >0 THEN
                    GRAVA_LOG(vDADOS_EMAIL_TEL.CODIGO_EMPRESA,vDADOS_EMAIL_TEL.TIPO_CONTRATO,vDADOS_EMAIL_TEL.CODIGO_CONTRATO,C1.LOGIN_USUARIO,'SUCESSO INSERIR EMAIL PBH  ARTE','EMAIL ARTE :'||vDADOS_EMAIL_TEL.EMAIL_PBH,'EMAIL AD :'||emails(emails.last));
                  ELSE
                    GRAVA_LOG(vDADOS_EMAIL_TEL.CODIGO_EMPRESA,vDADOS_EMAIL_TEL.TIPO_CONTRATO,vDADOS_EMAIL_TEL.CODIGO_CONTRATO,C1.LOGIN_USUARIO,'ERRO INSERIR EMAIL PBH  ARTE','EMAIL ARTE :'||vDADOS_EMAIL_TEL.EMAIL_PBH,'EMAIL AD :'||emails(emails.last));
                  END IF;
                  --       dbms_output.put_line(' INSERIR EMAIL CONTRATO AD ' );
                ELSIF vDADOS_EMAIL_TEL.EMAIL_PBH IS NOT NULL THEN
                  IF UPPER(emails(emails.last))  !=UPPER(TRIM(REPLACE(vDADOS_EMAIL_TEL.EMAIL_PBH,' ',''))) AND UPPER(SUBSTR(vDADOS_EMAIL_TEL.EMAIL_PBH,INSTR(vDADOS_EMAIL_TEL.EMAIL_PBH, '@') +1,40)) NOT IN ('EDU.PBH.GOV.BR','PBH.GOV.BR') THEN
            ---        dbms_output.put_line(' INSERIR EMAIL CONTRATO AD ' );
                    SUCESSO                      :=GRAVA_ARTE(vDADOS_EMAIL_TEL.CODIGO_EMPRESA ,vDADOS_EMAIL_TEL.TIPO_CONTRATO ,vDADOS_EMAIL_TEL.CODIGO_CONTRATO, vDADOS_EMAIL_TEL.CODIGO_PESSOA,NULL,NULL,emails(emails.last) ,NULL,NULL );
                    IF SUCESSO                    >0 THEN
                      GRAVA_LOG(vDADOS_EMAIL_TEL.CODIGO_EMPRESA,vDADOS_EMAIL_TEL.TIPO_CONTRATO,vDADOS_EMAIL_TEL.CODIGO_CONTRATO,C1.LOGIN_USUARIO,'SUCESSO ATUALIZAR EMAIL NAO PBH CONTRATO ARTE','EMAIL ARTE :'||vDADOS_EMAIL_TEL.EMAIL_PBH,'EMAIL AD :'||emails(emails.last));
                    ELSE
                      GRAVA_LOG(vDADOS_EMAIL_TEL.CODIGO_EMPRESA,vDADOS_EMAIL_TEL.TIPO_CONTRATO,vDADOS_EMAIL_TEL.CODIGO_CONTRATO,C1.LOGIN_USUARIO,'ERRO ATUALIZAR EMAIL NAO PBH CONTRATO ARTE','EMAIL ARTE :'||vDADOS_EMAIL_TEL.EMAIL_PBH,'EMAIL AD :'||emails(emails.last));
                    END IF;
                  ELSIF UPPER(emails(emails.last)) !=UPPER(TRIM(REPLACE(vDADOS_EMAIL_TEL.EMAIL_PBH,' ',''))) AND UPPER(SUBSTR(vDADOS_EMAIL_TEL.EMAIL_PBH,INSTR(vDADOS_EMAIL_TEL.EMAIL_PBH, '@') +1,40)) IN ('EDU.PBH.GOV.BR','PBH.GOV.BR') THEN
                    --  dbms_output.put_line('  EMAIL CONTRATO E DIFERENTE DO  AD  ' );
                    GRAVA_LOG(vDADOS_EMAIL_TEL.CODIGO_EMPRESA,vDADOS_EMAIL_TEL.TIPO_CONTRATO,vDADOS_EMAIL_TEL.CODIGO_CONTRATO,C1.LOGIN_USUARIO,'ERRO EMAIL AD DIFERENTE DO CONTRATO','EMAIL ARTE :'||vDADOS_EMAIL_TEL.EMAIL_PBH,'EMAIL AD :'||emails(emails.last));
                  ELSIF UPPER(emails(emails.last)) =UPPER(TRIM(REPLACE(vDADOS_EMAIL_TEL.EMAIL_PBH,' ',''))) AND UPPER(SUBSTR(vDADOS_EMAIL_TEL.EMAIL_PBH,INSTR(vDADOS_EMAIL_TEL.EMAIL_PBH, '@') +1,40)) IN ('EDU.PBH.GOV.BR','PBH.GOV.BR') THEN
                    --dbms_output.put_line('  EMAIL CONTRATO E IGUAL  DO  AD  ' );
                    GRAVA_LOG(vDADOS_EMAIL_TEL.CODIGO_EMPRESA,vDADOS_EMAIL_TEL.TIPO_CONTRATO,vDADOS_EMAIL_TEL.CODIGO_CONTRATO,C1.LOGIN_USUARIO,'SUCESSO EMAIL AD IGUAL DO CONTRATO','EMAIL ARTE :'||vDADOS_EMAIL_TEL.EMAIL_PBH,'EMAIL AD :'||emails(emails.last));
                  END IF;
                END IF;
              ELSIF UPPER(SUBSTR(emails(emails.last),INSTR(emails(emails.last), '@') +1,40)) NOT IN ('EDU.PBH.GOV.BR','PBH.GOV.BR') THEN
                --  dbms_output.put_line(' EMAL AD NÃO E @PBH ' );
                GRAVA_LOG(vDADOS_EMAIL_TEL.CODIGO_EMPRESA,vDADOS_EMAIL_TEL.TIPO_CONTRATO,vDADOS_EMAIL_TEL.CODIGO_CONTRATO,C1.LOGIN_USUARIO,'ERRO EMAIL AD NÃO E PBH','EMAIL ARTE :'||vDADOS_EMAIL_TEL.EMAIL_PBH,'EMAIL AD :'||emails(emails.last));
              END IF ;
            END IF;
          ELSIF C1.email IS NULL THEN
            -- dbms_output.put_line(' NÃO MAPEADO 14 PESSOA (SEM EMAIL AD)' );
            GRAVA_LOG(vDADOS_EMAIL_TEL.CODIGO_EMPRESA,vDADOS_EMAIL_TEL.TIPO_CONTRATO,vDADOS_EMAIL_TEL.CODIGO_CONTRATO,C1.LOGIN_USUARIO,'ERRO AD SEM EMAIL ','EMAIL ARTE :'||vDADOS_EMAIL_TEL.EMAIL_PBH,'EMAIL AD :'||emails(emails.last));
            /*FIM*/
          END IF;
          /*INSERIR EMAILS ALTERNATIVOS*/
          IF c1.EMAIL_ALTERNATIVO IS NOT NULL THEN
            emails                :=BUSCA_ULTIMO_EMAIL_AD(c1.EMAIL_ALTERNATIVO);
        --    dbms_output.put_line(emails(emails.last));
            IF emails(emails.last)            IS NOT NULL THEN
              IF vDADOS_EMAIL_TEL.EMAIL_ALTER IS NULL THEN
                --  dbms_output.put_line(' INSERIR EMAIL ALTERNATIVO AD ' );
                IF SUCESSO>0 THEN
                  GRAVA_LOG(vDADOS_EMAIL_TEL.CODIGO_EMPRESA,vDADOS_EMAIL_TEL.TIPO_CONTRATO,vDADOS_EMAIL_TEL.CODIGO_CONTRATO,C1.LOGIN_USUARIO,'SUCESSO INSERIR  EMAIL ALTERNATIVO','EMAIL ARTE :'||vDADOS_EMAIL_TEL.EMAIL_PBH,'EMAIL AD :'||emails(emails.last));
                ELSE
                  GRAVA_LOG(vDADOS_EMAIL_TEL.CODIGO_EMPRESA,vDADOS_EMAIL_TEL.TIPO_CONTRATO,vDADOS_EMAIL_TEL.CODIGO_CONTRATO,C1.LOGIN_USUARIO,'ERRO INSERIR EMAIL ALTERNATIVO','EMAIL ARTE :'||vDADOS_EMAIL_TEL.EMAIL_PBH,'EMAIL AD :'||emails(emails.last));
                END IF;
              ELSIF vDADOS_EMAIL_TEL.EMAIL_ALTER      IS NOT NULL THEN
                IF UPPER(vDADOS_EMAIL_TEL.EMAIL_ALTER)!=UPPER(emails(emails.last)) THEN
                  --      dbms_output.put_line('  EMAIL ALTERNATIVO AD DIFERENTE ARTE' );
                  GRAVA_LOG(vDADOS_EMAIL_TEL.CODIGO_EMPRESA,vDADOS_EMAIL_TEL.TIPO_CONTRATO,vDADOS_EMAIL_TEL.CODIGO_CONTRATO,C1.LOGIN_USUARIO,'ERRO EMAIL ALTERNATIVO DIFERENTE AD','EMAIL ARTE :'||vDADOS_EMAIL_TEL.EMAIL_PBH,'EMAIL AD :'||emails(emails.last));
                ELSIF UPPER(vDADOS_EMAIL_TEL.EMAIL_ALTER)=UPPER(emails(emails.last)) THEN
                  ---    dbms_output.put_line('  EMAIL ALTERNATIVO AD IGUAL  ARTE' );
                  GRAVA_LOG(vDADOS_EMAIL_TEL.CODIGO_EMPRESA,vDADOS_EMAIL_TEL.TIPO_CONTRATO,vDADOS_EMAIL_TEL.CODIGO_CONTRATO,C1.LOGIN_USUARIO,'SUCESSO EMAIL ALTERNATIVO IGUAL AD','EMAIL ARTE :'||vDADOS_EMAIL_TEL.EMAIL_PBH,'EMAIL AD :'||emails(emails.last));
                END IF;
              END IF;
            END IF;
          ELSIF c1.EMAIL_ALTERNATIVO IS NULL THEN
            --    dbms_output.put_line(' NÃO MAPEADO 19 PESSOA (SEM EMAIL ALTERNATIVO AD)' );
            GRAVA_LOG(vDADOS_EMAIL_TEL.CODIGO_EMPRESA,vDADOS_EMAIL_TEL.TIPO_CONTRATO,vDADOS_EMAIL_TEL.CODIGO_CONTRATO,C1.LOGIN_USUARIO,'ERRO AD  EMAIL ALTERNATIVO VAZIO','EMAIL ARTE :'||vDADOS_EMAIL_TEL.EMAIL_PBH,'EMAIL AD :'||emails(emails.last));
          END IF;
          /**/
        ELSIF DADOS.CPF !=C1.CPF THEN
          GRAVA_LOG(DADOS.CODIGO_EMPRESA,DADOS.TIPO_CONTRATO,DADOS.CODIGO_CONTRATO,C1.LOGIN_USUARIO,'ERRO_USUARIO_COM_CPF_DIVERGENTE','CPF ARTE :'||DADOS.CPF,'CPF AD :'||c1.cpf);
        END IF;
      ELSIF DADOS.CODIGO_CONTRATO IS NULL AND DADOS.TIPO_CONTRATO IS NULL AND DADOS.CODIGO_EMPRESA IS NULL AND DADOS.CPF IS NULL AND DADOS.CODIGO_PESSOA IS NULL THEN
        ---  dbms_output.put_line('PESSOA NÃO ENCONTRADA' );
        GRAVA_LOG(vDADOS_EMAIL_TEL.CODIGO_EMPRESA,vDADOS_EMAIL_TEL.TIPO_CONTRATO,vDADOS_EMAIL_TEL.CODIGO_CONTRATO,C1.LOGIN_USUARIO,'PESSOA NÃO ENCONTRADA',NULL,NULL);
      END IF;
    EXCEPTION
    WHEN OTHERS THEN
      GRAVA_LOG(vDADOS_EMAIL_TEL.CODIGO_EMPRESA,vDADOS_EMAIL_TEL.TIPO_CONTRATO,vDADOS_EMAIL_TEL.CODIGO_CONTRATO,C1.LOGIN_USUARIO,'ERRO GENERICO',NULL,NULL);
    END;
  END LOOP;
END;