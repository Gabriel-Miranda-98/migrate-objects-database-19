
  CREATE OR REPLACE EDITIONABLE PROCEDURE "PONTO_ELETRONICO"."PR_SGE_DP12_AJUSTE_EXTRA_P2" 
AS 
BEGIN 

--Kellysson em 22/1/24 baseado (sql_ajuste_extraclasse_erro_DE_PARA_EXTENSOES_2024_p2_v1.sql)


--kellysson --em 10/1/24 --- criado o (sql_ajuste_extraclasse_erro_DE_PARA_EXTENSOES_2024_v1.sql)basedo no (sql_apoio_ajuste_extraclasse_erro_nov-23.sql) para ajustar ligacao das tabelas com campos DATA_PROCESSAMENTO e DT_RECEBEU_CADASTRO
--b3 para ajustes gerais direto dados SGE--12º PASSO  novo em 18/9/23 ---ajuste horas individuais na semana ---SEMPRE ACOMPANHAR SE NAO TERMINA OU POR QUE GERA NOVOS CASOS--sql_ajuste_horas_dia_DE_PARA_EXTENSOES_2023_b1.sql>sql_ajuste_horas_dia_DE_PARA_EXTENSOES_2023_b2.sql 
--X.TIPO_EXTENSAO <> 'EXTENSAO_SGE_PROFESSOR_SALA_DE_AULA' AND (X.HORAS_SEGUNDA > '+00 04:30:00' OR X.HORAS_TERCA > '+00 04:30:00' OR X.HORAS_QUARTA > '+00 04:30:00' OR X.HORAS_QUINTA > '+00 04:30:00' OR X.HORAS_SEXTA > '+00 04:30:00')

---b2 em 25/10/23 devido campo CANCELAMENTO_USAR
--Kellysson em 18/9/23 12º PASSO --novo em 18/9/23 ---ajuste horas individuais na semana (sql_ajuste_horas_dia_DE_PARA_EXTENSOES_2023_b1.sql)
--Kellysson em 5/9/23 b2 (sql_ajuste_DE_PARA_EXTENSOES_2023_b2.sql) para ajuste DATA_INICIO_U E DATA_FIM_U pARA INICIO_JORNADA_U e FIM_JORNADA_U
--Kellysson em 16/8/23 baseado (sql_relatorio_pos_passo8_DE-PARA.sql)
--9º PASSO TEMPORARIO OU NAO PARA O DE/PARA EM CASOS QUE NO FINAL DO PASSO 8 NAO BATEU A QUANTIDADE DE HORAS/MINUTOS NA SEMANA
--/*
DECLARE 
vCONTADOR NUMBER;
vB BOOLEAN := TRUE;

BEGIN
dbms_output.enable(null);
vCONTADOR :=0;

--/*------INICIO--NOVO EM 16/1/24-----------------------------------------------------------------------------------1º PASSO LOOP MELHOR_SEQ_DISTRIBUIR----------------------------------------------------------------------------------------------------

FOR C1 IN (

--EM 12/1/24 -----POSSIVEL NOVO SELECT OU LOGICA PARA REDISTRIBUIR EXTRACLASSE NO SQL (sql_ajuste_extraclasse_erro_DE_PARA_EXTENSOES_2024_p2_v1.sql)
--SELECT X2.SEGUNDA, X2.TEM_EXCESSO_SEG, X2.TEM_SOBRA_SEG, X2.TERCA, X2.TEM_EXCESSO_TER, X2.TEM_SOBRA_TER, X2.QUARTA, X2.TEM_EXCESSO_QUA, X2.TEM_SOBRA_QUA, X2.QUINTA, X2.TEM_EXCESSO_QUI, X2.TEM_SOBRA_QUI, X2.SEXTA, X2.TEM_EXCESSO_SEX, X2.TEM_SOBRA_SEX
SELECT 
--sintetico--X2.SEGUNDA, X2.TEM_EXCESSO_SEG, X2.TERCA, X2.TEM_EXCESSO_TER, X2.QUARTA, X2.TEM_EXCESSO_QUA, X2.QUINTA, X2.TEM_EXCESSO_QUI, X2.SEXTA, X2.TEM_EXCESSO_SEX ,COUNT(1)QTD 
X2.*--ANALITICO
,CASE 
WHEN X2.TEM_EXCESSO_SEG = 'SIM' AND X2.TEM_EXCESSO_QUA = 'SIM' THEN 'SEG_QUA_TER>QUI>SEX' 
WHEN X2.TEM_EXCESSO_SEG = 'SIM' AND X2.TEM_EXCESSO_QUI = 'SIM' THEN 'SEG_QUI_TER>SEX>QUA' 
WHEN X2.TEM_EXCESSO_SEG = 'SIM' AND X2.TEM_EXCESSO_SEX = 'SIM' THEN 'SEG_SEX_TER>QUI>QUA' 
WHEN X2.TEM_EXCESSO_TER = 'SIM' AND X2.TEM_EXCESSO_QUI = 'SIM' THEN 'TER_QUI_QUA>SEX>SEG' 
WHEN X2.TEM_EXCESSO_TER = 'SIM' AND X2.TEM_EXCESSO_SEX = 'SIM' THEN 'TER_SEX_QUA>QUI>SEG' 
WHEN X2.TEM_EXCESSO_QUA = 'SIM' AND X2.TEM_EXCESSO_SEX = 'SIM' THEN 'QUA_SEX_QUI>TER>SEG' 
WHEN X2.TEM_EXCESSO_SEX = 'SIM' THEN 'SEX_QUI>QUA>TER>SEG' 
WHEN X2.TEM_EXCESSO_QUI = 'SIM' THEN 'QUI_SEX>QUA>TER>SEG' 
WHEN X2.TEM_EXCESSO_QUA = 'SIM' THEN 'QUA_QUI>SEX>TER>SEG' 
WHEN X2.TEM_EXCESSO_TER = 'SIM' THEN 'TER_QUA>QUI>SEX>SEG'
WHEN X2.TEM_EXCESSO_SEG = 'SIM' THEN 'SEG_TER>QUA>QUI>SEX'
END MELHOR_SEQ_DISTRIBUIR
,CASE 
WHEN X2.TEM_EXCESSO_SEG = 'SIM' AND X2.TEM_EXCESSO_QUA = 'SIM' THEN '13245'--'SEG_QUA_TER>QUI>SEX' 
WHEN X2.TEM_EXCESSO_SEG = 'SIM' AND X2.TEM_EXCESSO_QUI = 'SIM' THEN '14253'--'SEG_QUI_TER>SEX>QUA' 
WHEN X2.TEM_EXCESSO_SEG = 'SIM' AND X2.TEM_EXCESSO_SEX = 'SIM' THEN '15243'--SEG_SEX_TER>QUI>QUA' 
WHEN X2.TEM_EXCESSO_TER = 'SIM' AND X2.TEM_EXCESSO_QUI = 'SIM' THEN '24351'--TER_QUI_QUA>SEX>SEG' 
WHEN X2.TEM_EXCESSO_TER = 'SIM' AND X2.TEM_EXCESSO_SEX = 'SIM' THEN '25341'--'TER_SEX_QUA>QUI>SEG' 
WHEN X2.TEM_EXCESSO_QUA = 'SIM' AND X2.TEM_EXCESSO_SEX = 'SIM' THEN '35421'--'QUA_SEX_QUI>TER>SEG' 
WHEN X2.TEM_EXCESSO_SEX = 'SIM'                                THEN '54321'--'SEX_QUI>QUA>TER>SEG' 
WHEN X2.TEM_EXCESSO_QUI = 'SIM'                                THEN '45321'--'QUI_SEX>QUA>TER>SEG' 
WHEN X2.TEM_EXCESSO_QUA = 'SIM'                                THEN '34521'--'QUA_QUI>SEX>TER>SEG' 
WHEN X2.TEM_EXCESSO_TER = 'SIM'                                THEN '23451'--'TER_QUA>QUI>SEX>SEG'
WHEN X2.TEM_EXCESSO_SEG = 'SIM'                                THEN '12345'--'SEG_TER>QUA>QUI>SEX'
END ORDEM_SEMANA_DISTRIBUIR
FROM(
SELECT X.ORDEM_ID, X.ID_JORNADA, X.TEMPO_EXCESSO_TOTAL, X.DIA_SEMANA, X.TEMPO_EXCESSO, X.TEM_EXCESSO, X.TEMPO_SOBRA, X.TEM_SOBRA, X.TEMPO_GRAVADO, X.INI_TURNO, X.PRIMEIRA_MARCACAO, 
'DADOS_SEMANA' DADOS_SEMANA, X.DIA_SEMANA SEGUNDA, X.TEM_EXCESSO TEM_EXCESSO_SEG, X.TEM_SOBRA TEM_SOBRA_SEG
,LEAD(X.DIA_SEMANA, 1,NULL) OVER (PARTITION BY X.ID_JORNADA ORDER BY X.ORDEM_ID)TERCA
,LEAD(X.TEM_EXCESSO, 1,NULL) OVER (PARTITION BY X.ID_JORNADA ORDER BY X.ORDEM_ID)TEM_EXCESSO_TER
,LEAD(X.TEM_SOBRA, 1,NULL) OVER (PARTITION BY X.ID_JORNADA ORDER BY X.ORDEM_ID)TEM_SOBRA_TER
,LEAD(X.DIA_SEMANA, 2,NULL) OVER (PARTITION BY X.ID_JORNADA ORDER BY X.ORDEM_ID)QUARTA
,LEAD(X.TEM_EXCESSO, 2,NULL) OVER (PARTITION BY X.ID_JORNADA ORDER BY X.ORDEM_ID)TEM_EXCESSO_QUA
,LEAD(X.TEM_SOBRA, 2,NULL) OVER (PARTITION BY X.ID_JORNADA ORDER BY X.ORDEM_ID)TEM_SOBRA_QUA
,LEAD(X.DIA_SEMANA, 3,NULL) OVER (PARTITION BY X.ID_JORNADA ORDER BY X.ORDEM_ID)QUINTA
,LEAD(X.TEM_EXCESSO, 3,NULL) OVER (PARTITION BY X.ID_JORNADA ORDER BY X.ORDEM_ID)TEM_EXCESSO_QUI
,LEAD(X.TEM_SOBRA, 3,NULL) OVER (PARTITION BY X.ID_JORNADA ORDER BY X.ORDEM_ID)TEM_SOBRA_QUI
,LEAD(X.DIA_SEMANA, 4,NULL) OVER (PARTITION BY X.ID_JORNADA ORDER BY X.ORDEM_ID)SEXTA
,LEAD(X.TEM_EXCESSO, 4,NULL) OVER (PARTITION BY X.ID_JORNADA ORDER BY X.ORDEM_ID)TEM_EXCESSO_SEX
,LEAD(X.TEM_SOBRA, 4,NULL) OVER (PARTITION BY X.ID_JORNADA ORDER BY X.ORDEM_ID)TEM_SOBRA_SEX
FROM(
SELECT
CASE WHEN CAMPO_3 <> 0 THEN 'SIM' ELSE 'NAO' END TEM_EXCESSO, 
CASE WHEN CAMPO_4 <> 0 THEN 'SIM' ELSE 'NAO' END TEM_SOBRA, 
--atualmente a ordem usada -- ROW_NUMBER() OVER(PARTITION BY CAMPO_1 ORDER BY CAMPO_1, TO_NUMBER(CAMPO_4), CAMPO_2) ORDEM_ID, 
ROW_NUMBER() OVER(PARTITION BY CAMPO_1 ORDER BY CAMPO_1, CAMPO_2) ORDEM_ID, 
CAMPO_1 ID_JORNADA, CAMPO_8 TEMPO_EXCESSO_TOTAL, CAMPO_2 DIA_SEMANA, CAMPO_3 TEMPO_EXCESSO, CAMPO_4 TEMPO_SOBRA, CAMPO_7 TEMPO_GRAVADO, CAMPO_6 INI_TURNO, CAMPO_5 PRIMEIRA_MARCACAO
FROM PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT 
WHERE CONSIDERACOES = 'AJUSTE_FINAL_DE-PARA_SMED_2023_ERRO_EXTRACLASSE_REGISTRO_DIA' AND TRUNC(DATA_DADOS) = TRUNC(SYSDATE) 
AND CAMPO_8 <> 0 
--atualmente a ordem usada -- ORDER BY ID_JORNADA, TO_NUMBER(TEMPO_SOBRA), DIA_SEMANA
ORDER BY ID_JORNADA, DIA_SEMANA
)X
)X2 WHERE X2.ORDEM_ID = 1
--sintetico--GROUP BY X2.SEGUNDA, X2.TEM_EXCESSO_SEG, X2.TERCA, X2.TEM_EXCESSO_TER, X2.QUARTA, X2.TEM_EXCESSO_QUA, X2.QUINTA, X2.TEM_EXCESSO_QUI, X2.SEXTA, X2.TEM_EXCESSO_SEX ORDER BY X2.SEGUNDA, X2.TEM_EXCESSO_SEG, X2.TERCA, X2.TEM_EXCESSO_TER, X2.QUARTA, X2.TEM_EXCESSO_QUA, X2.QUINTA, X2.TEM_EXCESSO_QUI, X2.SEXTA, X2.TEM_EXCESSO_SEX
--GROUP BY X2.SEGUNDA, X2.TEM_EXCESSO_SEG, X2.TEM_SOBRA_SEG, X2.TERCA, X2.TEM_EXCESSO_TER, X2.TEM_SOBRA_TER, X2.QUARTA, X2.TEM_EXCESSO_QUA, X2.TEM_SOBRA_QUA, X2.QUINTA, X2.TEM_EXCESSO_QUI, X2.TEM_SOBRA_QUI, X2.SEXTA, X2.TEM_EXCESSO_SEX, X2.TEM_SOBRA_SEX
--ORDER BY X2.SEGUNDA, X2.TEM_EXCESSO_SEG, X2.TEM_SOBRA_SEG, X2.TERCA, X2.TEM_EXCESSO_TER, X2.TEM_SOBRA_TER, X2.QUARTA, X2.TEM_EXCESSO_QUA, X2.TEM_SOBRA_QUA, X2.QUINTA, X2.TEM_EXCESSO_QUI, X2.TEM_SOBRA_QUI, X2.SEXTA, X2.TEM_EXCESSO_SEX, X2.TEM_SOBRA_SEX

)LOOP
vCONTADOR := vCONTADOR +1;
dbms_output.put_line('--vCONTADOR: '||vCONTADOR||' C1.ID_JORNADA: '||C1.ID_JORNADA);
UPDATE PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT SET CAMPO_13 = SUBSTR(C1.ORDEM_SEMANA_DISTRIBUIR,1,1) 
WHERE CONSIDERACOES = 'AJUSTE_FINAL_DE-PARA_SMED_2023_ERRO_EXTRACLASSE_REGISTRO_DIA' AND TRUNC(DATA_DADOS) = TRUNC(SYSDATE) AND CAMPO_1 = C1.ID_JORNADA AND CAMPO_2 = '2_SEG'; COMMIT;

UPDATE PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT SET CAMPO_13 = SUBSTR(C1.ORDEM_SEMANA_DISTRIBUIR,2,1) 
WHERE CONSIDERACOES = 'AJUSTE_FINAL_DE-PARA_SMED_2023_ERRO_EXTRACLASSE_REGISTRO_DIA' AND TRUNC(DATA_DADOS) = TRUNC(SYSDATE) AND CAMPO_1 = C1.ID_JORNADA AND CAMPO_2 = '3_TER'; COMMIT;

UPDATE PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT SET CAMPO_13 = SUBSTR(C1.ORDEM_SEMANA_DISTRIBUIR,3,1) 
WHERE CONSIDERACOES = 'AJUSTE_FINAL_DE-PARA_SMED_2023_ERRO_EXTRACLASSE_REGISTRO_DIA' AND TRUNC(DATA_DADOS) = TRUNC(SYSDATE) AND CAMPO_1 = C1.ID_JORNADA AND CAMPO_2 = '4_QUA'; COMMIT;

UPDATE PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT SET CAMPO_13 = SUBSTR(C1.ORDEM_SEMANA_DISTRIBUIR,4,1) 
WHERE CONSIDERACOES = 'AJUSTE_FINAL_DE-PARA_SMED_2023_ERRO_EXTRACLASSE_REGISTRO_DIA' AND TRUNC(DATA_DADOS) = TRUNC(SYSDATE) AND CAMPO_1 = C1.ID_JORNADA AND CAMPO_2 = '5_QUI'; COMMIT;

UPDATE PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT SET CAMPO_13 = SUBSTR(C1.ORDEM_SEMANA_DISTRIBUIR,5,1) 
WHERE CONSIDERACOES = 'AJUSTE_FINAL_DE-PARA_SMED_2023_ERRO_EXTRACLASSE_REGISTRO_DIA' AND TRUNC(DATA_DADOS) = TRUNC(SYSDATE) AND CAMPO_1 = C1.ID_JORNADA AND CAMPO_2 = '6_SEX'; COMMIT;


END LOOP;

--*/------FIM--NOVO EM 16/1/24-----------------------------------------------------------------------------------1º PASSO LOOP MELHOR_SEQ_DISTRIBUIR----------------------------------------------------------------------------------------------------



------INICIO-------------------------------------------------------------------------------------2º PASSO LOOP SIMULAR AJUSTES----------------------------------------------------------------------------------------------------
--/* ---inicio-- segunda parte para comentar parar rodar os blocos deste arquivo
---inicio---------------------------------------------------------------------------------------primeira parte faz os caluclos
DECLARE
vCONTADOR NUMBER;
vSALDO_EXCESSO NUMBER;

BEGIN
dbms_output.enable(null);
vCONTADOR :=0;
vSALDO_EXCESSO :=0;

FOR C1 IN (

SELECT 
--ROW_NUMBER() OVER(PARTITION BY CAMPO_1 ORDER BY CAMPO_1, TO_NUMBER(CAMPO_4), CAMPO_2) ORDEM_ID, --ANTIGO
--nova--ROW_NUMBER() OVER(PARTITION BY CAMPO_1 ORDER BY CAMPO_1, TO_NUMBER(CAMPO_13)) ORDEM_ID,
ROW_NUMBER() OVER(PARTITION BY CAMPO_1 ORDER BY CAMPO_1, TO_NUMBER(CAMPO_4), TO_NUMBER(CAMPO_13)) ORDEM_ID, --nova refinada (nova + antiga)17/1/24 13h
CAMPO_13 ORDEM_SEMANA_DISTRIBUIR,
CAMPO_1 ID_JORNADA, CAMPO_8 TEMPO_EXCESSO_TOTAL, CAMPO_2 DIA_SEMANA, CAMPO_3 TEMPO_EXCESSO, CAMPO_4 TEMPO_SOBRA, CAMPO_7 TEMPO_GRAVADO, CAMPO_6 INI_TURNO, CAMPO_5 PRIMEIRA_MARCACAO
FROM PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT 
WHERE CONSIDERACOES = 'AJUSTE_FINAL_DE-PARA_SMED_2023_ERRO_EXTRACLASSE_REGISTRO_DIA' AND TRUNC(DATA_DADOS) = TRUNC(SYSDATE) 
--AND CAMPO_8 <> 0
--ANTIGO--ORDER BY ID_JORNADA, TO_NUMBER(TEMPO_SOBRA), DIA_SEMANA
--nova--ORDER BY ID_JORNADA, TO_NUMBER(ORDEM_SEMANA_DISTRIBUIR) 
 ORDER BY ID_JORNADA, TO_NUMBER(TEMPO_SOBRA), TO_NUMBER(ORDEM_SEMANA_DISTRIBUIR) --nova refinada (nova + antiga)17/1/24 13h

)LOOP
vCONTADOR := vCONTADOR +1;
dbms_output.put_line('--vCONTADOR: '||vCONTADOR||' C1.ID_JORNADA: '||C1.ID_JORNADA);

--INICIA SALDO EXCESSO ID_JORNADA
IF C1.ORDEM_ID = 1 THEN
vSALDO_EXCESSO := C1.TEMPO_EXCESSO_TOTAL;
END IF;

--PERNA: EXCESSO
IF C1.TEMPO_EXCESSO > 0 THEN
UPDATE PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT SET CAMPO_10 = 270, CAMPO_11 = C1.INI_TURNO, CAMPO_12 = C1.INI_TURNO+270
WHERE CONSIDERACOES = 'AJUSTE_FINAL_DE-PARA_SMED_2023_ERRO_EXTRACLASSE_REGISTRO_DIA' AND TRUNC(DATA_DADOS) = TRUNC(SYSDATE) AND CAMPO_1 = C1.ID_JORNADA AND CAMPO_2 = C1.DIA_SEMANA;COMMIT;
END IF;

--PERNA: SOBRA
IF vSALDO_EXCESSO > 0 AND C1.TEMPO_SOBRA < vSALDO_EXCESSO THEN --SOBRA DIA MENOR SALDO_EXCESSO ATUALIZA O SALDO E SEGUE PARA OUTROS DIAS
vSALDO_EXCESSO := vSALDO_EXCESSO - C1.TEMPO_SOBRA;
UPDATE PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT SET CAMPO_10 = 270, CAMPO_11 = C1.INI_TURNO, CAMPO_12 = C1.INI_TURNO+270
WHERE CONSIDERACOES = 'AJUSTE_FINAL_DE-PARA_SMED_2023_ERRO_EXTRACLASSE_REGISTRO_DIA' AND TRUNC(DATA_DADOS) = TRUNC(SYSDATE) AND CAMPO_1 = C1.ID_JORNADA AND CAMPO_2 = C1.DIA_SEMANA;COMMIT;

ELSIF vSALDO_EXCESSO > 0 AND C1.TEMPO_SOBRA >= vSALDO_EXCESSO THEN --SOBRA DIA MAIOR OU IGUAL, FINALIZA O SALDO_EXCESSO
UPDATE PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT SET CAMPO_10 = C1.TEMPO_GRAVADO + vSALDO_EXCESSO, CAMPO_11 = C1.INI_TURNO, CAMPO_12 = C1.INI_TURNO+(C1.TEMPO_GRAVADO+vSALDO_EXCESSO)
WHERE CONSIDERACOES = 'AJUSTE_FINAL_DE-PARA_SMED_2023_ERRO_EXTRACLASSE_REGISTRO_DIA' AND TRUNC(DATA_DADOS) = TRUNC(SYSDATE) AND CAMPO_1 = C1.ID_JORNADA AND CAMPO_2 = C1.DIA_SEMANA;COMMIT;
vSALDO_EXCESSO := 0;
END IF;
END LOOP;
END;
---fim---------------------------------------------------------------------------------------primeira parte faz os caluclos


--inicio------------------------------------------------------------------------------------------------segunda parte grava os calculos
DECLARE
vCONTADOR NUMBER;
vHORARIO_INICIO_SEGUNDA VARCHAR2(20);
vHORARIO_FIM_SEGUNDA VARCHAR2(20);
vMINUTOS_AJUSTADOS_SEG VARCHAR2(20);
vHORARIO_INICIO_TERCA VARCHAR2(20);
vHORARIO_FIM_TERCA VARCHAR2(20);
vMINUTOS_AJUSTADOS_TER VARCHAR2(20);
vHORARIO_INICIO_QUARTA VARCHAR2(20);
vHORARIO_FIM_QUARTA VARCHAR2(20);
vMINUTOS_AJUSTADOS_QUA VARCHAR2(20);
vHORARIO_INICIO_QUINTA VARCHAR2(20);
vHORARIO_FIM_QUINTA VARCHAR2(20);
vMINUTOS_AJUSTADOS_QUI VARCHAR2(20);
vHORARIO_INICIO_SEXTA VARCHAR2(20);
vHORARIO_FIM_SEXTA VARCHAR2(20);
vMINUTOS_AJUSTADOS_SEX VARCHAR2(20);

BEGIN
dbms_output.enable(null);
vCONTADOR :=0;
vHORARIO_INICIO_SEGUNDA := NULL;
vHORARIO_FIM_SEGUNDA := NULL;
vMINUTOS_AJUSTADOS_SEG := NULL;
vHORARIO_INICIO_TERCA := NULL;
vHORARIO_FIM_TERCA  := NULL;
vMINUTOS_AJUSTADOS_TER := NULL;
vHORARIO_INICIO_QUARTA := NULL;
vHORARIO_FIM_QUARTA := NULL;
vMINUTOS_AJUSTADOS_QUA := NULL;
vHORARIO_INICIO_QUINTA := NULL;
vHORARIO_FIM_QUINTA := NULL;
vMINUTOS_AJUSTADOS_QUI := NULL;
vHORARIO_INICIO_SEXTA := NULL;
vHORARIO_FIM_SEXTA := NULL;
vMINUTOS_AJUSTADOS_SEX := NULL;

FOR C1 IN (

SELECT 
CAMPO_1 ID_JORNADA,
ROW_NUMBER() OVER(PARTITION BY CAMPO_1 ORDER BY CAMPO_1, CAMPO_2) ORDEM_ID, 
CAMPO_7 TEMPO_GRAVADO, CAMPO_10 TEMPO_GRAVADO_NOVO, CAMPO_10-CAMPO_7 MINUTOS_AJUSTADOS_DIA,
CAMPO_8 TEMPO_EXCESSO_TOTAL, CAMPO_2 DIA_SEMANA, CAMPO_3 TEMPO_EXCESSO, CAMPO_4 TEMPO_SOBRA, 
CAMPO_6 INI_TURNO, 
CAMPO_5 INICIO_MARCACAO_ERRADA, CAMPO_5+CAMPO_7 FIM_MARCACAO_ERRADA,
CASE WHEN CAMPO_5 IS NOT NULL AND CAMPO_5 <> '0' THEN TO_CHAR(TO_DATE('01/01/2001 ' ||TO_CHAR(LPAD(TRUNC(TO_NUMBER(CAMPO_5)/60),2,0))||':'||TO_CHAR(LPAD(MOD(TO_NUMBER(CAMPO_5),60),2,0))|| ':00','DD/MM/YYYY HH24:MI:SS'),'DD/MM/YYYY HH24:MI:SS') ELSE ' ' END HM_INICIO_MARCACAO_ERRADA, 
CASE WHEN CAMPO_5 IS NOT NULL AND CAMPO_5 <> '0' THEN TO_CHAR(TO_DATE('01/01/2001 ' ||TO_CHAR(LPAD(TRUNC(TO_NUMBER(CAMPO_5+CAMPO_7)/60),2,0))||':'||TO_CHAR(LPAD(MOD(TO_NUMBER(CAMPO_5+CAMPO_7),60),2,0))|| ':00','DD/MM/YYYY HH24:MI:SS'),'DD/MM/YYYY HH24:MI:SS') ELSE ' ' END HM_FIM_MARCACAO_ERRADA, 
CAMPO_11 INICIO_MARCACAO_NOVA, CAMPO_12 FIM_MARCACAO_NOVA,
CASE WHEN CAMPO_11 IS NOT NULL AND CAMPO_11 <> '0' THEN TO_CHAR(TO_DATE('01/01/2001 ' ||TO_CHAR(LPAD(TRUNC(TO_NUMBER(CAMPO_11)/60),2,0))||':'||TO_CHAR(LPAD(MOD(TO_NUMBER(CAMPO_11),60),2,0))|| ':00','DD/MM/YYYY HH24:MI:SS'),'DD/MM/YYYY HH24:MI:SS') ELSE ' ' END HM_INICIO_MARCACAO_NOVA, 
CASE WHEN CAMPO_12 IS NOT NULL AND CAMPO_12 <> '0' THEN TO_CHAR(TO_DATE('01/01/2001 ' ||TO_CHAR(LPAD(TRUNC(TO_NUMBER(CAMPO_12)/60),2,0))||':'||TO_CHAR(LPAD(MOD(TO_NUMBER(CAMPO_12),60),2,0))|| ':00','DD/MM/YYYY HH24:MI:SS'),'DD/MM/YYYY HH24:MI:SS') ELSE ' ' END HM_FIM_MARCACAO_NOVA
FROM PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT 
WHERE CONSIDERACOES = 'AJUSTE_FINAL_DE-PARA_SMED_2023_ERRO_EXTRACLASSE_REGISTRO_DIA' AND TRUNC(DATA_DADOS) = TRUNC(SYSDATE) 
ORDER BY ID_JORNADA,  DIA_SEMANA

)LOOP
vCONTADOR := vCONTADOR +1;
dbms_output.put_line('--vCONTADOR: '||vCONTADOR||' C1.ID_JORNADA: '||C1.ID_JORNADA);

---LIMPA VARIAVES E COMECA VALORES DE CADA DIA DA SEMANA
IF C1.ORDEM_ID = 1 THEN
vHORARIO_INICIO_SEGUNDA := C1.HM_INICIO_MARCACAO_NOVA;  
vHORARIO_FIM_SEGUNDA := C1.HM_FIM_MARCACAO_NOVA;
vMINUTOS_AJUSTADOS_SEG := C1.MINUTOS_AJUSTADOS_DIA;
vHORARIO_INICIO_TERCA := NULL;
vHORARIO_FIM_TERCA  := NULL;
vMINUTOS_AJUSTADOS_TER := NULL;
vHORARIO_INICIO_QUARTA := NULL;
vHORARIO_FIM_QUARTA := NULL;
vMINUTOS_AJUSTADOS_QUA := NULL;
vHORARIO_INICIO_QUINTA := NULL;
vHORARIO_FIM_QUINTA := NULL;
vMINUTOS_AJUSTADOS_QUI := NULL;
vHORARIO_INICIO_SEXTA := NULL;
vHORARIO_FIM_SEXTA := NULL;
vMINUTOS_AJUSTADOS_SEX := NULL;


ELSIF C1.ORDEM_ID = 2 THEN 
vHORARIO_INICIO_TERCA :=  C1.HM_INICIO_MARCACAO_NOVA;
vHORARIO_FIM_TERCA  :=  C1.HM_FIM_MARCACAO_NOVA;
vMINUTOS_AJUSTADOS_TER := C1.MINUTOS_AJUSTADOS_DIA;

ELSIF C1.ORDEM_ID = 3 THEN 
vHORARIO_INICIO_QUARTA := C1.HM_INICIO_MARCACAO_NOVA;
vHORARIO_FIM_QUARTA := C1.HM_FIM_MARCACAO_NOVA;
vMINUTOS_AJUSTADOS_QUA := C1.MINUTOS_AJUSTADOS_DIA;

ELSIF C1.ORDEM_ID = 4 THEN
vHORARIO_INICIO_QUINTA := C1.HM_INICIO_MARCACAO_NOVA;
vHORARIO_FIM_QUINTA := C1.HM_FIM_MARCACAO_NOVA;
vMINUTOS_AJUSTADOS_QUI := C1.MINUTOS_AJUSTADOS_DIA;

ELSIF C1.ORDEM_ID = 5 THEN
vHORARIO_INICIO_SEXTA := C1.HM_INICIO_MARCACAO_NOVA;
vHORARIO_FIM_SEXTA := C1.HM_FIM_MARCACAO_NOVA;
vMINUTOS_AJUSTADOS_SEX := C1.MINUTOS_AJUSTADOS_DIA;

INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS,  CAMPO_1, CAMPO_3, CAMPO_4, CAMPO_5, CAMPO_6, CAMPO_7, CAMPO_8, CAMPO_9, CAMPO_10, CAMPO_11, CAMPO_12, CAMPO_13, CAMPO_14, CAMPO_15, CAMPO_16, CAMPO_17)
VALUES('AJUSTE_FINAL_DE-PARA_SMED_2023_ERRO_EXTRACLASSE_REGISTRO_NOVO', SYSDATE, C1.ID_JORNADA,  
vHORARIO_INICIO_SEGUNDA, vHORARIO_FIM_SEGUNDA, vMINUTOS_AJUSTADOS_SEG,
vHORARIO_INICIO_TERCA, vHORARIO_FIM_TERCA, vMINUTOS_AJUSTADOS_TER,
vHORARIO_INICIO_QUARTA, vHORARIO_FIM_QUARTA, vMINUTOS_AJUSTADOS_QUA,
vHORARIO_INICIO_QUINTA, vHORARIO_FIM_QUINTA, vMINUTOS_AJUSTADOS_QUI,
vHORARIO_INICIO_SEXTA, vHORARIO_FIM_SEXTA, vMINUTOS_AJUSTADOS_SEX
);COMMIT;
END IF;
END LOOP;
END;
--fim------------------------------------------------------------------------------------------------segunda parte grava os calculos
--*/---fim-- segunda parte para comentar parar rodar os blocos deste arquivo
------FIM-------------------------------------------------------------------------------------2º PASSO LOOP SIMULAR AJUSTES----------------------------------------------------------------------------------------------------


END;
END;