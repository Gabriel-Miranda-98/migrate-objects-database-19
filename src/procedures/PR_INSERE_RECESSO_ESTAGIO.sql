
  CREATE OR REPLACE EDITIONABLE PROCEDURE "ARTERH"."PR_INSERE_RECESSO_ESTAGIO" (
 pcodigo_empresa IN VARCHAR2,
 ptipo_contrato  IN VARCHAR2,
 pcodigo_contrato   IN VARCHAR2
) AS BEGIN

DECLARE 

    vDT_INI_VIG_ESTAGIO DATE;
    vDT_FIM_VIG_ESTAGIO DATE;
    vDT_INI_AQUIS_RECESSO DATE;
    vDT_FIM_AQUIS_RECESSO DATE;
    vQTD_MESES_ESTAGIO NUMBER;
    vQTD_RECESSO_ESTAGIO NUMBER;
    vPER_AQUI_QTDE NUMBER;
    vMAX_DIAS_GOZO NUMBER;

FUNCTION VALIDA_INSERT ( pDT_INI_AQUIS_RECESSO DATE ) RETURN char  IS
vINSERE number;
BEGIN
    SELECT COUNT(1) into vINSERE FROM RHFERI_FERIAS WHERE
    CODIGO_EMPRESA = pcodigo_empresa
    AND TIPO_CONTRATO = ptipo_contrato
    AND CODIGO_CONTRATO = pcodigo_contrato
    AND DT_INI_AQUISICAO = pDT_INI_AQUIS_RECESSO
    AND PERIODO = 1  
    AND TIPO_FERIAS = '0013';
RETURN vINSERE;
END;


    BEGIN

    select max_dias_gozo INTO vMAX_DIAS_GOZO from rhparm_p_feri where codigo_empresa = pcodigo_empresa and codigo = '0013';
    vQTD_RECESSO_ESTAGIO:=0;

    --INICIO--PEGA DADOS DA TABELA DE ESTAGIO
    BEGIN
        select dt_ini_vigencia, dt_fim_vigencia, MONTHS_BETWEEN(dt_fim_vigencia, dt_ini_vigencia) QTD_MESES, 
        MONTHS_BETWEEN(dt_fim_vigencia, dt_ini_vigencia)/
        (select (CASE p.per_aqui_unidade 	WHEN 'A' THEN 12*p.per_aqui_qtde WHEN 'M' THEN p.per_aqui_qtde 	WHEN 'D' THEN 30*p.per_aqui_qtde 	end) dt_fim_aquisicao from  rhparm_p_feri p  where p.codigo_empresa = pcodigo_empresa  and p.codigo = '0013') QTD_PERIODOS_RECESSO
        ,(select (CASE p.per_aqui_unidade 	WHEN 'A' THEN 12*p.per_aqui_qtde WHEN 'M' THEN p.per_aqui_qtde 	WHEN 'D' THEN 30*p.per_aqui_qtde 	end) dt_fim_aquisicao from  rhparm_p_feri p  where p.codigo_empresa = pcodigo_empresa  and p.codigo = '0013') per_aqui_qtde
        INTO vDT_INI_VIG_ESTAGIO, vDT_FIM_VIG_ESTAGIO, vQTD_MESES_ESTAGIO, vQTD_RECESSO_ESTAGIO, vPER_AQUI_QTDE                
        from rhpess_info_estagio
        where CODIGO_EMPRESA = pcodigo_empresa AND TIPO_CONTRATO= ptipo_contrato AND CODIGO_CONTRATO = pcodigo_contrato;
    EXCEPTION
    WHEN NO_DATA_FOUND THEN
        DBMS_Output.PUT_LINE('N√ÉO EXISTE DADOS NA RHPESS_INFO_ESTAGIO');
    WHEN OTHERS THEN
        DBMS_Output.PUT_LINE('ENCONTRADO ERRO - '||SQLCODE|| ' -ERROR- '||SQLERRM||'');
    END;
    --FIM--PEGA DADOS DA TABELA DE ESTAGIO
    dbms_output.put_line('--vDT_INI_VIG_ESTAGIO: '||vDT_INI_VIG_ESTAGIO ||' vDT_FIM_VIG_ESTAGIO: '|| vDT_FIM_VIG_ESTAGIO ||' vQTD_MESES_ESTAGIO: '|| vQTD_MESES_ESTAGIO ||' vQTD_RECESSO_ESTAGIO: '||vQTD_RECESSO_ESTAGIO|| ' vPER_AQUI_QTDE: '||vPER_AQUI_QTDE ); 

    --INICIA PRIMEIRO INICIO AQUIS
    vDT_INI_AQUIS_RECESSO := vDT_INI_VIG_ESTAGIO;

    --INICIO--GRAVA OS PERIODOS DE RECESSO NA RHFERI_FERIAS
    FOR I in 1..vQTD_RECESSO_ESTAGIO LOOP
    dbms_output.put_line('I: '|| I );
    --vPER_AQUI_QTDE := I;

    --popula variaveis para o novo periodo
    vDT_FIM_AQUIS_RECESSO :=  ADD_MONTHS(vDT_INI_VIG_ESTAGIO, I * vPER_AQUI_QTDE)-1;

    IF I <> vQTD_RECESSO_ESTAGIO THEN
    dbms_output.put_line('RECESSO QUE NAO E O ULTIMO PERIODO');
        IF (VALIDA_INSERT(vDT_INI_AQUIS_RECESSO) = 0) THEN
            INSERT INTO RHFERI_FERIAS (CODIGO_EMPRESA, TIPO_CONTRATO, CODIGO_CONTRATO, DT_INI_AQUISICAO, PERIODO, DT_FIM_AQUISICAO, DIAS_PROG_FERIAS, 
            DIAS_PROG_ABONO, DT_INI_GOZO, DT_FIM_GOZO, DIAS_GOZO_FERIAS, DIAS_ABONO, DIAS_COMPENSACAO, NRO_MESES_AFAST, ADIANT_13_SALARIO, SALDO_AUXILIAR, STATUS_CONFIRMACAO, LOGIN_USUARIO, DT_ULT_ALTER_USUA, FALTAS_PERIODO, TIPO_FERIAS, C_LIVRE_SELEC01, C_LIVRE_SELEC02, C_LIVRE_SELEC03, C_LIVRE_VALOR01, C_LIVRE_VALOR02, C_LIVRE_VALOR03,DT_FIM_GOZO_FORCA,DIAS_GOZO_FORCA,RECEBE_ADIANT,DIAS_ABONO_FORCA,ACEITA_PREVISTO,STATUS_CALCULO)
            VALUES (pcodigo_empresa, ptipo_contrato, pcodigo_contrato, vDT_INI_AQUIS_RECESSO, 1, vDT_FIM_AQUIS_RECESSO, 0, 0, NULL, NULL, vMAX_DIAS_GOZO, 0, 0, 0, 'N',	0, 2, 'INSERT_FERIAS_ESTAGIO_SIT_FUNC', SYSDATE,0, '0013', 0, 0, 0, 0, 0, 0, NULL, vMAX_DIAS_GOZO, 'N',	0, 'N', 'N');
             COMMIT;
        END IF;
    ELSIF I = vQTD_RECESSO_ESTAGIO THEN
    dbms_output.put_line('RECESSO QUE E O ULTIMO PERIODO');
        IF (VALIDA_INSERT(vDT_INI_AQUIS_RECESSO) = 0) THEN
            INSERT INTO RHFERI_FERIAS (CODIGO_EMPRESA, TIPO_CONTRATO, CODIGO_CONTRATO, DT_INI_AQUISICAO, PERIODO, DT_FIM_AQUISICAO, DIAS_PROG_FERIAS, 
            DIAS_PROG_ABONO, DT_INI_GOZO, DT_FIM_GOZO, DIAS_GOZO_FERIAS, DIAS_ABONO, DIAS_COMPENSACAO, NRO_MESES_AFAST, ADIANT_13_SALARIO, SALDO_AUXILIAR, STATUS_CONFIRMACAO, LOGIN_USUARIO, DT_ULT_ALTER_USUA, FALTAS_PERIODO, TIPO_FERIAS, C_LIVRE_SELEC01, C_LIVRE_SELEC02, C_LIVRE_SELEC03, C_LIVRE_VALOR01, C_LIVRE_VALOR02, C_LIVRE_VALOR03,DT_FIM_GOZO_FORCA,DIAS_GOZO_FORCA,RECEBE_ADIANT,DIAS_ABONO_FORCA,ACEITA_PREVISTO,STATUS_CALCULO)
            VALUES (pcodigo_empresa, ptipo_contrato, pcodigo_contrato, vDT_INI_AQUIS_RECESSO, 1, vDT_FIM_AQUIS_RECESSO, 0, 0, 
            (vDT_FIM_VIG_ESTAGIO - vMAX_DIAS_GOZO) + 1, vDT_FIM_VIG_ESTAGIO, vMAX_DIAS_GOZO, 0, 0, 0, 'N',	0, 1, 'INSERT_FERIAS_ESTAGIO_SIT_FUNC', SYSDATE,0, '0013', 0, 0, 0, 0, 0, 0, vDT_FIM_VIG_ESTAGIO, vMAX_DIAS_GOZO, 'N',	0, 'N', 'N');
             COMMIT;
        END IF;
    END IF;

    --popula variaveis para o novo periodo
    vDT_INI_AQUIS_RECESSO := vDT_FIM_AQUIS_RECESSO+1;

    END LOOP;

END;

END;