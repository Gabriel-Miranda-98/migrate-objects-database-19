
  CREATE OR REPLACE EDITIONABLE PROCEDURE "PONTO_ELETRONICO"."PR_PONTO_FECHAMENTO_MES_P1" (DATA_INICIO IN DATE, DATA_FIM IN DATE) AS
--Kellysson em 13/12/22 baseado no script que uso desde o inicio melhorado em 2022 (roteiro_fechamento_IFPONTO.sql) criado esse usando tambem conceitos/objetos pensados no script (roteiro_fechamento_IFPONTO_DIA.sql)
--Kellysson em 7/11/23 incluido codigo empresa para pegar apenas as que fecham dia 11 na tabela de conversao 'IFP4' E TENTANDO MELHORAR AS INTERRUPÇÕES PARA SER MAIS DINAMICO OS AJUSTES MANUAIS CASO PARE A SEQUENCIA
vDATA_INICIO DATE;
vDATA_FIM DATE;
err_msg VARCHAR2(4000 BYTE);
vQTD_REGS NUMBER;
vLOG VARCHAR2(4000 BYTE);
vCONTADOR NUMBER;
vPR_OK  NUMBER;

---PROCEDURE PARA GRAVAR LOG DE ERRO
PROCEDURE GRAVA_ERRO(PROCEDURE_ERRO IN VARCHAR2,COD_ERRO IN VARCHAR2, SQL_ERRO IN VARCHAR2) AS
BEGIN
INSERT INTO PONTO_ELETRONICO.SMARH_INT_LOG_INTEGRA_DIARIA(ID,PROCEDURE_ERRO,CODIGO_ERRO,DESCRICAO_ERRO) VALUES(PONTO_ELETRONICO.ID_SEQ_LOG_PONTO.NEXTVAL,PROCEDURE_ERRO,COD_ERRO,SQL_ERRO);
COMMIT;
END;

---PROCEDURE PARA GRAVAR LOG DE SUCESSO
PROCEDURE GRAVA_SUCESSO(PROCEDURE_ERRO IN VARCHAR2,COD_ERRO IN VARCHAR2, SQL_ERRO IN VARCHAR2) AS
BEGIN
INSERT INTO PONTO_ELETRONICO.SMARH_INT_LOG_INTEGRA_DIARIA(ID,PROCEDURE_ERRO,CODIGO_ERRO,DESCRICAO_ERRO,VERIFICADO) VALUES(PONTO_ELETRONICO.ID_SEQ_LOG_PONTO.NEXTVAL,PROCEDURE_ERRO,COD_ERRO,SQL_ERRO,'S');
COMMIT;
END;



BEGIN --BEGIN GERAL
dbms_output.enable(null);--ajuste 14/2/23

vDATA_INICIO := TO_DATE(DATA_INICIO,'DD/MM/YYYY'); --TROCAR PELO ARGUMENTO DA PROCEDURE
vDATA_FIM := TO_DATE(DATA_FIM,'DD/MM/YYYY'); --TROCAR PELO ARGUMENTO DA PROCEDURE
vQTD_REGS := 0;
vLOG := NULL;
vPR_OK :=0;
------------------------------------------------------------------------------------------------------------------------INICIO--PROCESSO FECHAMENTO--------------------------------------------------------------------------------------

-- TAREFA 1 -- criada em 20/12/22
-- GRAVAR DADOS DA TABELA TEMPORARIA PARA A HISTORICA NA TABELA DE ESPELHO

SELECT COUNT(1) INTO vQTD_REGS FROM PONTO_ELETRONICO.IFPONTO_ESPELHO_HISTORICA WHERE DATA_PROCESSAMENTO IS NULL
AND LPAD(EMPRESA,4,'0') IN (SELECT DADO_ORIGEM FROM ARTERH.RHINTE_ED_IT_CONV WHERE CODIGO_CONVERSAO = 'IFP4');--NOVO EM 7/11/23

IF vQTD_REGS = 0 THEN
vLOG := 'TAREFA 1 vQTD_REGS ANTES DE GERAR REGISTROS NA TABELA PONTO_ELETRONICO.IFPONTO_ESPELHO_HISTORICA: '||vQTD_REGS;
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;

INSERT INTO PONTO_ELETRONICO.IFPONTO_ESPELHO_HISTORICA 
(
DESCONTO_TOLERADO, INTERVALO_A_MENOR, ENTRADA_ANTECIPADA, MULTA_INTERJORNADA, EXTRA_DIA_INFO_SEM_MENSAL, DESCONTO_DIA_INFO_SEM_MENSAL, COD_EMPRESA, TIPO_CONTRATO, MATRICULA, CODIGO, DATA, SITUACAO, TIPO_FOLGA, ENTRADA, ACEITO, SIT_PONTO, PREVISTO, H_NORMAIS, DESCONTO_ABONADO, HORAS_ABONADA, DESCONTO, H_EXTRA, H_EXTRA_FERIADO, H_NOTURNA, COMPENSADO, FALTA_COMPENSAR, ATRASO, SAIDA_ANTECIPADA, H_EXTRA_NOTURNA, H_INTRA_JORNADA, DESCONTO_AUX, INTERJORNADA, BH_CREDITO, BH_DEBITO, DTCADASTRO, COD_PESSOA, COD_JUSTIFICATIVA_PONTO, COD_PONTO_FECHAMENTO, COD_BANCO_HORAS, COD_CARGO, COD_UNIDADE, COD_HORARIO, COD_ESCALA_PADRAO, CAMPO_LIVRE, MARCACAO1, MARCACAO2, MARCACAO3, MARCACAO4, MARCACAO5, MARCACAO6, MARCACAO7, MARCACAO8, MARCACAO9, MARCACAO10, MARCACAO11, MARCACAO12, MARCACAO_E1, MARCACAO_E2, MARCACAO_E3, MARCACAO_E4, MARCACAO_E5, MARCACAO_E6, MARCACAO_E7, MARCACAO_E8, MARCACAO_E9, MARCACAO_E10, MARCACAO_E11, MARCACAO_E12, MARCACAO1_ALTERADA, MARCACAO2_ALTERADA, MARCACAO3_ALTERADA, MARCACAO4_ALTERADA, MARCACAO5_ALTERADA, MARCACAO6_ALTERADA, MARCACAO7_ALTERADA, MARCACAO8_ALTERADA, MARCACAO9_ALTERADA, MARCACAO10_ALTERADA, MARCACAO11_ALTERADA, MARCACAO12_ALTERADA, OBS_MARCACAO_ALTERADA, BANCO_HORAS, TIPO_BANCO_HORAS, OBS, BIT_DIVERGENCIA, COD_COMPENSACAO, MULTIPLICADOR_BANCO_HORAS, NA009, DTJUSTIFICATIVA, LOGIN_JUSTIFICATIVA, DTAVALIADOR, LOGIN_AVALIADOR, DTALTERACAO, LOGIN_ALTERACAO, FOTO, SOBREAVISO_DOBRA, COD_JUSTIFICATIVA_BANCO_HORAS, DESCRICAO_BANCO_HORAS, COMPROVANTE_JUSTIFICATIVA, RELATORIO_RH_VALIDADO, TOTAIS, CARGA_HORARIA, EMPRESA, TIPO_ESCALA, AGRUPADOR, TIPO_SOBREAVISO, HRINICIO_SOBREAVISO, HRFIM_SOBREAVISO, PREVISTO_SOBREAVISO, EXECUTADO_SOBREAVISO, COD_TIPO_PESSA, DTDEMISSAO, DTADMISSAO
)
SELECT --x.codigo cod,
--X.DESCONTO_TOLERADO 
CASE WHEN X.DESCONTO_TOLERADO IS NULL THEN 0 ELSE TO_NUMBER(TO_CHAR(SUBSTR(X.DESCONTO_TOLERADO,1,INSTR(X.DESCONTO_TOLERADO,'.' ,1,1)-1)||','|| SUBSTR(X.DESCONTO_TOLERADO,INSTR(X.DESCONTO_TOLERADO,'.' ,1,1)+1,LENGTH(X.DESCONTO_TOLERADO)))) END DESCONTO_TOLERADO
--,X.INTERVALO_A_MENOR
,CASE WHEN X.INTERVALO_A_MENOR IS NULL THEN 0 ELSE TO_NUMBER(TO_CHAR(SUBSTR(X.INTERVALO_A_MENOR,1,INSTR(X.INTERVALO_A_MENOR,'.' ,1,1)-1)||','|| SUBSTR(X.INTERVALO_A_MENOR,INSTR(X.INTERVALO_A_MENOR,'.' ,1,1)+1,LENGTH(X.INTERVALO_A_MENOR)))) END INTERVALO_A_MENOR
--,X.ENTRADA_ANTECIPADA 
,CASE WHEN X.ENTRADA_ANTECIPADA IS NULL THEN 0 ELSE TO_NUMBER(TO_CHAR(SUBSTR(X.ENTRADA_ANTECIPADA,1,INSTR(X.ENTRADA_ANTECIPADA,'.' ,1,1)-1)||','|| SUBSTR(X.ENTRADA_ANTECIPADA,INSTR(X.ENTRADA_ANTECIPADA,'.' ,1,1)+1,LENGTH(X.ENTRADA_ANTECIPADA)))) END ENTRADA_ANTECIPADA
--,X.MULTA_INTERJORNADA 
,CASE WHEN X.MULTA_INTERJORNADA IS NULL THEN 0 ELSE TO_NUMBER(TO_CHAR(SUBSTR(X.MULTA_INTERJORNADA,1,INSTR(X.MULTA_INTERJORNADA,'.' ,1,1)-1)||','|| SUBSTR(X.MULTA_INTERJORNADA,INSTR(X.MULTA_INTERJORNADA,'.' ,1,1)+1,LENGTH(X.MULTA_INTERJORNADA)))) END MULTA_INTERJORNADA
--,X.EXTRA_DIA_INFO_SEM_MENSAL 
,CASE WHEN X.EXTRA_DIA_INFO_SEM_MENSAL IS NULL THEN 0 
WHEN INSTR(X.EXTRA_DIA_INFO_SEM_MENSAL,'.',1,1) = 0 THEN TO_NUMBER(X.EXTRA_DIA_INFO_SEM_MENSAL)
ELSE TO_NUMBER(TO_CHAR(SUBSTR(X.EXTRA_DIA_INFO_SEM_MENSAL,1,INSTR(X.EXTRA_DIA_INFO_SEM_MENSAL,'.' ,1,1)-1)||','|| SUBSTR(X.EXTRA_DIA_INFO_SEM_MENSAL,INSTR(X.EXTRA_DIA_INFO_SEM_MENSAL,'.' ,1,1)+1,LENGTH(X.EXTRA_DIA_INFO_SEM_MENSAL)))) END EXTRA_DIA_INFO_SEM_MENSAL
--,X.DESCONTO_DIA_INFO_SEM_MENSAL
,CASE WHEN X.DESCONTO_DIA_INFO_SEM_MENSAL IS NULL THEN 0 
WHEN INSTR(X.DESCONTO_DIA_INFO_SEM_MENSAL,'.',1,1) = 0 THEN TO_NUMBER(X.DESCONTO_DIA_INFO_SEM_MENSAL)
ELSE TO_NUMBER(TO_CHAR(SUBSTR(X.DESCONTO_DIA_INFO_SEM_MENSAL,1,INSTR(X.DESCONTO_DIA_INFO_SEM_MENSAL,'.' ,1,1)-1)||','|| SUBSTR(X.DESCONTO_DIA_INFO_SEM_MENSAL,INSTR(X.DESCONTO_DIA_INFO_SEM_MENSAL,'.' ,1,1)+1,LENGTH(X.DESCONTO_DIA_INFO_SEM_MENSAL)))) END DESCONTO_DIA_INFO_SEM_MENSAL
,X.COD_EMPRESA ,X.TIPO_CONTRATO ,LPAD(X.MATRICULA,15,0) MATRICULA, X.CODIGO, X.DATA 
,X.SITUACAO ,X.TIPO_FOLGA ,X.ENTRADA ,X.ACEITO
,LPAD (X.SIT_PONTO,4,0) SIT_PONTO ,X.PREVISTO
--,case when x.entrada = 1 then X.PREVISTO else 0 end PREVISTO_TRATADO 
,X.H_NORMAIS ,X.DESCONTO_ABONADO ,X.HORAS_ABONADA
,X.DESCONTO ,X.H_EXTRA ,X.H_EXTRA_FERIADO ,X.H_NOTURNA ,X.COMPENSADO ,X.FALTA_COMPENSAR  ,X.ATRASO ,X.SAIDA_ANTECIPADA ,X.H_EXTRA_NOTURNA ,X.H_INTRA_JORNADA ,X.DESCONTO_AUX ,X.INTERJORNADA ,X.BH_CREDITO ,X.BH_DEBITO
,X.DTCADASTRO ,X.COD_PESSOA ,X.COD_JUSTIFICATIVA_PONTO ,X.COD_PONTO_FECHAMENTO ,X.COD_BANCO_HORAS ,X.COD_CARGO ,X.COD_UNIDADE ,X.COD_HORARIO ,X.COD_ESCALA_PADRAO ,X.CAMPO_LIVRE
,X.MARCACAO1 ,X.MARCACAO2 ,X.MARCACAO3 ,X.MARCACAO4 ,X.MARCACAO5 ,X.MARCACAO6 ,X.MARCACAO7 ,X.MARCACAO8 ,X.MARCACAO9 ,X.MARCACAO10 ,X.MARCACAO11 ,X.MARCACAO12 ,X.MARCACAO_E1 ,X.MARCACAO_E2 ,X.MARCACAO_E3 ,X.MARCACAO_E4 ,X.MARCACAO_E5 ,X.MARCACAO_E6 ,X.MARCACAO_E7 ,X.MARCACAO_E8 ,X.MARCACAO_E9 ,X.MARCACAO_E10 ,X.MARCACAO_E11 ,X.MARCACAO_E12 ,X.MARCACAO1_ALTERADA ,X.MARCACAO2_ALTERADA ,X.MARCACAO3_ALTERADA ,X.MARCACAO4_ALTERADA ,X.MARCACAO5_ALTERADA ,X.MARCACAO6_ALTERADA ,X.MARCACAO7_ALTERADA ,X.MARCACAO8_ALTERADA ,X.MARCACAO9_ALTERADA ,X.MARCACAO10_ALTERADA ,X.MARCACAO11_ALTERADA ,X.MARCACAO12_ALTERADA 
,X.OBS_MARCACAO_ALTERADA ,X.BANCO_HORAS ,X.TIPO_BANCO_HORAS, X.OBS, X.BIT_DIVERGENCIA ,X.COD_COMPENSACAO ,X.MULTIPLICADOR_BANCO_HORAS ,X.NA009 ,X.DTJUSTIFICATIVA ,X.LOGIN_JUSTIFICATIVA ,X.DTAVALIADOR ,X.LOGIN_AVALIADOR ,X.DTALTERACAO ,X.LOGIN_ALTERACAO ,X.FOTO ,X.SOBREAVISO_DOBRA ,X.COD_JUSTIFICATIVA_BANCO_HORAS ,X.DESCRICAO_BANCO_HORAS ,X.COMPROVANTE_JUSTIFICATIVA ,X.RELATORIO_RH_VALIDADO
,X.TOTAIS, X.CARGA_HORARIA, LPAD(X.EMPRESA,4,0) EMPRESA, X.TIPO_ESCALA, X.AGRUPADOR, X.TIPO_SOBREAVISO, X.HRINICIO_SOBREAVISO, X.HRFIM_SOBREAVISO
,CASE WHEN X.PREVISTO_SOBREAVISO IS NULL THEN 0 
WHEN INSTR(X.PREVISTO_SOBREAVISO,'.',1,1) = 0 THEN TO_NUMBER(X.PREVISTO_SOBREAVISO)
ELSE TO_NUMBER(TO_CHAR(SUBSTR(X.PREVISTO_SOBREAVISO,1,INSTR(X.PREVISTO_SOBREAVISO,'.' ,1,1)-1)||','|| SUBSTR(X.PREVISTO_SOBREAVISO,INSTR(X.PREVISTO_SOBREAVISO,'.' ,1,1)+1,LENGTH(X.PREVISTO_SOBREAVISO)))) END PREVISTO_SOBREAVISO
,CASE WHEN X.EXECUTADO_SOBREAVISO IS NULL THEN 0 
WHEN INSTR(X.EXECUTADO_SOBREAVISO,'.',1,1) = 0 THEN TO_NUMBER(X.EXECUTADO_SOBREAVISO)
ELSE TO_NUMBER(TO_CHAR(SUBSTR(X.EXECUTADO_SOBREAVISO,1,INSTR(X.EXECUTADO_SOBREAVISO,'.' ,1,1)-1)||','|| SUBSTR(X.EXECUTADO_SOBREAVISO,INSTR(X.EXECUTADO_SOBREAVISO,'.' ,1,1)+1,LENGTH(X.EXECUTADO_SOBREAVISO)))) END EXECUTADO_SOBREAVISO
,X.COD_TIPO_PESSA ,X.DTDEMISSAO, X.DTADMISSAO
FROM PONTO_ELETRONICO.IFPONTO_ESPELHO X 
WHERE LPAD(X.EMPRESA,4,'0') IN (SELECT DADO_ORIGEM FROM ARTERH.RHINTE_ED_IT_CONV WHERE CODIGO_CONVERSAO = 'IFP4');--NOVO EM 7/11/23


SELECT COUNT(1) INTO vQTD_REGS FROM PONTO_ELETRONICO.IFPONTO_ESPELHO_HISTORICA WHERE DATA_PROCESSAMENTO IS NULL
AND LPAD(EMPRESA,4,'0') IN (SELECT DADO_ORIGEM FROM ARTERH.RHINTE_ED_IT_CONV WHERE CODIGO_CONVERSAO = 'IFP4');--NOVO EM 7/11/23
vLOG := 'TAREFA 1 vQTD_REGS DEPOIS DE GERAR REGISTROS NA TABELA PONTO_ELETRONICO.IFPONTO_ESPELHO_HISTORICA: '||vQTD_REGS;
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;

ELSE
vLOG := 'TAREFA 1 NAO PROCESSADA POIS HAVIAM ' ||vQTD_REGS|| ' REGISTROS NA TABELA PONTO_ELETRONICO.IFPONTO_ESPELHO_HISTORICA, VERIFICAR.';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;
END IF;



-- TAREFA 2 -- criada em 14/12/22
-- Criar o registro de fechamento dentro do Arterh em MODULOS>CONTROLE DE FREQUENCIA>APURACAO>FECHAMENTO APURACAO

SELECT COUNT(1)QTD INTO vQTD_REGS FROM RHPONT_APUR_AGRUP WHERE C_LIVRE_SELEC01 = 1 AND STATUS_APUR = 'C' AND C_LIVRE_DATA02 IS NULL AND C_LIVRE_DATA03 IS NULL;
vLOG := 'TAREFA 2 vQTD_REGS ANTES DE GERAR REGISTROS NA TABELA ARTERH.RHPONT_APUR_AGRU: '||vQTD_REGS;
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;



IF vQTD_REGS = 0 THEN
FOR C1 IN (
SELECT CAMPO_11 CODIGO_EMPRESA, CAMPO_1 ID_AGRUP, CAMPO_2 COD_AGRUP1, CAMPO_3 COD_AGRUP2, CAMPO_4 COD_AGRUP3, CAMPO_5 COD_AGRUP4, CAMPO_6 COD_AGRUP5, CAMPO_7 COD_AGRUP6, CAMPO_8 DESCRICAO, CAMPO_9 ABREVIACAO, CAMPO_10 TIPO
FROM PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT WHERE CONSIDERACOES = 'FECHAMENTO_DEPARTAMENTOS_IFPONTO' ORDER BY TIPO, CAMPO_11, COD_AGRUP1
)
LOOP
IF C1.TIPO = 'ESTRUTURA' THEN
INSERT INTO ARTERH.RHPONT_APUR_AGRUP (CODIGO_EMPRESA, TIPO_APUR, STATUS_APUR, C_LIVRE_SELEC01, C_LIVRE_DATA01, C_LIVRE_OPCAO01, LOGIN_USUARIO, DT_ULT_ALTER_USUA, TEXTO_ASSOCIADO, DATA_INI_FOLHA, DATA_FIM_FOLHA, OCORRENCIA, ID_AGRUP)
VALUES (C1.CODIGO_EMPRESA, 'F', 'C' ,1, SYSDATE, 'N', 'IFPONTO', SYSDATE, 'FECHAMENTO IFPONTO>ARTERH ', TO_DATE(vDATA_INICIO,'DD/MM/YYYY'), TO_DATE(vDATA_FIM,'DD/MM/YYYY'), (SELECT MAX(OCORRENCIA)+1 FROM ARTERH.RHPONT_APUR_AGRUP), C1.ID_AGRUP ); COMMIT;
ELSIF C1.TIPO = 'INDIVIDUAL' THEN
INSERT INTO ARTERH.RHPONT_APUR_AGRUP (CODIGO_EMPRESA, TIPO_APUR,STATUS_APUR, C_LIVRE_SELEC01, C_LIVRE_DATA01, C_LIVRE_OPCAO01, LOGIN_USUARIO, DT_ULT_ALTER_USUA, TEXTO_ASSOCIADO, DATA_INI_FOLHA, DATA_FIM_FOLHA, OCORRENCIA, ID_AGRUP)
VALUES (C1.CODIGO_EMPRESA, 'F', 'C' ,1, SYSDATE, 'S', 'IFPONTO', SYSDATE, 'FECHAMENTO IFPONTO>ARTERH ', TO_DATE(vDATA_INICIO,'DD/MM/YYYY'), TO_DATE(vDATA_FIM,'DD/MM/YYYY'), (SELECT MAX(OCORRENCIA)+1 FROM ARTERH.RHPONT_APUR_AGRUP), C1.ID_AGRUP ); COMMIT;
END IF;
END LOOP;

SELECT COUNT(1)QTD INTO vQTD_REGS FROM ARTERH.RHPONT_APUR_AGRUP WHERE C_LIVRE_SELEC01 = 1 AND STATUS_APUR = 'C' AND C_LIVRE_DATA02 IS NULL AND C_LIVRE_DATA03 IS NULL;
vLOG := 'TAREFA 2 PROCESSADA GRAVANDO ARTERH.RHPONT_APUR_AGRU vQTD_REGS: '||vQTD_REGS;
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;

ELSE
vLOG := 'TAREFA 2 NAO PROCESSADA POIS HAVIAM ' ||vQTD_REGS|| ' REGISTROS NA TABELA ARTERH.RHPONT_APUR_AGRU, VERIFICAR.';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;
END IF;



-- TAREFA 3 --criada em 20/12/22
-- Gerar os registros de fechamento por departamento para separar o publico da empresa 1 no ifponto e fora
--baseado no sql (PR_RHPONT_APUR_AGRUP_INCLUI.sql) PRM1_RHPONT_APUR_AGRUP_INCLUI
SELECT COUNT(1) INTO vQTD_REGS FROM PONTO_ELETRONICO.IFPONTO_FECHAMENTO WHERE TRUNC(DT_SAIU_ARTE) = TRUNC(SYSDATE) AND TIPO_FECHAMENTO = 'DEPARTAMENTO' ;
vLOG := 'TAREFA 3 vQTD_REGS ANTES DE GERAR REGISTROS NA PONTO_ELETRONICO.IFPONTO_FECHAMENTO DO TIPO_FECHAMENTO = DEPARTAMENTO: '||vQTD_REGS;
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;



IF vQTD_REGS = 0 THEN
--/*
BEGIN 
PONTO_ELETRONICO.PRM1_RHPONT_APUR_AGRUP_INCLUI;
 err_msg := SUBSTR('EXECUCAO_REALIZADA_COM_SUCESSO', 1, 4000);
              GRAVA_SUCESSO('FECHAMENTO_MES PROCEDURE PRM1_RHPONT_APUR_AGRUP_INCLUI','000',err_msg);
exception
              when others then
               err_msg := SUBSTR(SQLERRM, 1, 4000);
              GRAVA_ERRO('FECHAMENTO_MES PROCEDURE PRM1_RHPONT_APUR_AGRUP_INCLUI',SQLCODE,err_msg);
END;
--*/
SELECT COUNT(1) INTO vQTD_REGS FROM PONTO_ELETRONICO.IFPONTO_FECHAMENTO WHERE TRUNC(DT_SAIU_ARTE) = TRUNC(SYSDATE)  AND TIPO_FECHAMENTO = 'DEPARTAMENTO' ;
vLOG := 'TAREFA 3 vQTD_REGS APOS DE GERAR REGISTROS NA PONTO_ELETRONICO.IFPONTO_FECHAMENTO DO TIPO_FECHAMENTO = DEPARTAMENTO: '||vQTD_REGS;
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;

ELSE
vLOG := 'TAREFA 2 NAO PROCESSADA POIS HAVIAM ' ||vQTD_REGS|| ' REGISTROS NA TABELA PONTO_ELETRONICO.IFPONTO_FECHAMENTO DO TIPO_FECHAMENTO = DEPARTAMENTO, VERIFICAR.';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;

END IF;



SELECT COUNT(1) INTO vPR_OK FROM PONTO_ELETRONICO.SMARH_INT_LOG_INTEGRA_DIARIA WHERE TRUNC(DATA_ERRO)= TRUNC(SYSDATE) AND DESCRICAO_ERRO = 'EXECUCAO_REALIZADA_COM_SUCESSO' AND PROCEDURE_ERRO ='FECHAMENTO_MES PROCEDURE PRM1_RHPONT_APUR_AGRUP_INCLUI';
-- TAREFA 4 EM 20/12/22 -- LIMPEZA DE ALGUNS DADOS NA TABELA DE ESPELHO DEVIDO A REGRAS DE NEOGOCIOS
IF vPR_OK = 1 
AND vQTD_REGS > 1000 --ADICIONEI EM 13/3/23 PARA GARANTIR QUE SEMPRE VAI TER PELO MENOS 1000 REGISTROS DE DEPARTAMENTO ATE QUE SE MUDE A LEOGICA
THEN
-- PRIMEIRO AJUSTE -- TIRAR DO PROCESSAMENTO DIAS EM QUE A PESSOA FICOU NO LOCAL FORA DO FECHAMENTO
SELECT COUNT(1) INTO vQTD_REGS FROM PONTO_ELETRONICO.IFPONTO_ESPELHO_HISTORICA WHERE DATA_PROCESSAMENTO IS NULL
AND LPAD(EMPRESA,4,'0') IN (SELECT DADO_ORIGEM FROM ARTERH.RHINTE_ED_IT_CONV WHERE CODIGO_CONVERSAO = 'IFP4');--NOVO EM 7/11/23
vLOG := 'TAREFA 4 PRIMEIRO AJUSTE ANTES DE PROCESSAR ' ||vQTD_REGS|| ' REGISTROS NA TABELA PONTO_ELETRONICO.IFPONTO_ESPELHO_HISTORICA, TIRAR DO PROCESSAMENTO DIAS EM QUE A PESSOA FICOU NO LOCAL FORA DO FECHAMENTO.';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;

FOR C1 IN (
SELECT STATUS_FECHAMENTO, AGRUPADOR, COUNT(1)QTD FROM(
SELECT CASE WHEN F.CODIGO IS NULL AND  E.AGRUPADOR <> '01.000091.000098.000000.000000.000000.000000' --ajustado 14/2/23
AND SUBSTR(E.AGRUPADOR,1,9)<>'01.000085' AND SUBSTR(E.AGRUPADOR,1,9)<>'06.000085'--novo em 31/3/23
THEN 'FORA_FECHAMENTO' ELSE 'DENTRO_FECHAMENTO' END STATUS_FECHAMENTO, E.*
FROM PONTO_ELETRONICO.IFPONTO_ESPELHO_HISTORICA E 
LEFT OUTER JOIN 
(SELECT * FROM PONTO_ELETRONICO.IFPONTO_FECHAMENTO WHERE TRUNC(DT_SAIU_ARTE) = TRUNC(SYSDATE) AND TIPO_FECHAMENTO = 'DEPARTAMENTO'  ORDER BY CODIGO) F
ON F.CODIGO = E.AGRUPADOR
WHERE E.DATA_PROCESSAMENTO IS NULL 
AND LPAD(E.EMPRESA,4,'0') IN (SELECT DADO_ORIGEM FROM ARTERH.RHINTE_ED_IT_CONV WHERE CODIGO_CONVERSAO = 'IFP4')--NOVO EM 7/11/23
)GROUP BY STATUS_FECHAMENTO, AGRUPADOR ORDER BY STATUS_FECHAMENTO, AGRUPADOR
)
LOOP
IF C1.STATUS_FECHAMENTO = 'FORA_FECHAMENTO' OR C1.STATUS_FECHAMENTO IS NULL THEN
UPDATE PONTO_ELETRONICO.IFPONTO_ESPELHO_HISTORICA SET DATA_PROCESSAMENTO = trunc(SYSDATE)-1 WHERE DATA_PROCESSAMENTO IS NULL AND AGRUPADOR = C1.AGRUPADOR;COMMIT;
END IF;
END LOOP;

SELECT COUNT(1) INTO vQTD_REGS FROM PONTO_ELETRONICO.IFPONTO_ESPELHO_HISTORICA WHERE DATA_PROCESSAMENTO IS NULL
AND LPAD(EMPRESA,4,'0') IN (SELECT DADO_ORIGEM FROM ARTERH.RHINTE_ED_IT_CONV WHERE CODIGO_CONVERSAO = 'IFP4');--NOVO EM 7/11/23
vLOG := 'TAREFA 4 PRIMEIRO AJUSTE DEPOIS DE PROCESSAR ' ||vQTD_REGS|| ' REGISTROS NA TABELA PONTO_ELETRONICO.IFPONTO_ESPELHO_HISTORICA, TIRAR DO PROCESSAMENTO DIAS EM QUE A PESSOA FICOU NO LOCAL FORA DO FECHAMENTO.';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;

-- SEGUNDO AJUSTE -- PARA RESOLVER PROBLEMA DE DESCONTOS MAIORES APOS DESLIGAMENTO DA PESSOA
UPDATE PONTO_ELETRONICO.IFPONTO_ESPELHO_HISTORICA SET DATA_PROCESSAMENTO = trunc(SYSDATE)-1 WHERE DATA_PROCESSAMENTO IS NULL AND DTDEMISSAO IS NOT NULL AND TRUNC(DATA)> TRUNC(DTDEMISSAO) 
AND LPAD(EMPRESA,4,'0') IN (SELECT DADO_ORIGEM FROM ARTERH.RHINTE_ED_IT_CONV WHERE CODIGO_CONVERSAO = 'IFP4');--NOVO EM 7/11/23
COMMIT;

SELECT COUNT(1) INTO vQTD_REGS FROM PONTO_ELETRONICO.IFPONTO_ESPELHO_HISTORICA WHERE DATA_PROCESSAMENTO IS NULL AND LPAD(EMPRESA,4,'0') IN (SELECT DADO_ORIGEM FROM ARTERH.RHINTE_ED_IT_CONV WHERE CODIGO_CONVERSAO = 'IFP4');--NOVO EM 7/11/23
vLOG := 'TAREFA 4 SEGUNDO AJUSTE DEPOIS DE PROCESSAR ' ||vQTD_REGS|| ' REGISTROS NA TABELA PONTO_ELETRONICO.IFPONTO_ESPELHO_HISTORICA TIRAR DO PROCESSAMENTO DIAS EM QUE A PESSOA FICOU APOS DESLIGAMENTO DA PESSOA.';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;

--INICIO NOVO EM 9/2/23-------------
-- TERCEIRO AJUSTE -- TIRAR DO PROCESSAMENTO DIAS EM QUE A PESSOA FICOU INATIVA PELA SITUACAO FUNCIONAL MAS QUE O IFPONTO GEROU ESPELHO NESTES DIAS
SELECT COUNT(1) INTO vQTD_REGS FROM PONTO_ELETRONICO.IFPONTO_ESPELHO_HISTORICA WHERE DATA_PROCESSAMENTO IS NULL AND LPAD(EMPRESA,4,'0') IN (SELECT DADO_ORIGEM FROM ARTERH.RHINTE_ED_IT_CONV WHERE CODIGO_CONVERSAO = 'IFP4');--NOVO EM 7/11/23;
vLOG := 'TAREFA 4 TERCEIRO AJUSTE ANTES DE PROCESSAR ' ||vQTD_REGS|| ' REGISTROS NA TABELA PONTO_ELETRONICO.IFPONTO_ESPELHO_HISTORICA, TIRAR DO PROCESSAMENTO DIAS EM QUE A PESSOA FICOU INATIVA PELA SITUACAO FUNCIONAL MAS QUE O IFPONTO GEROU ESPELHO NESTES DIAS.';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;

FOR C1 IN (
SELECT 
CASE WHEN X.STATUS_IFPONTO = 'INATIVO' AND X.CONTROLE_FOLHA = 'L' THEN
'UPDATE PONTO_ELETRONICO.IFPONTO_ESPELHO_HISTORICA SET DATA_PROCESSAMENTO = TRUNC(SYSDATE)-1 WHERE  DATA_PROCESSAMENTO IS NULL AND EMPRESA ='''|| X.CODIGO_EMPRESA||''' AND TIPO_CONTRATO ='''|| X.TIPO_CONTRATO||''' AND MATRICULA ='''||X.CODIGO||''' AND TRUNC(DATA)BETWEEN TO_DATE('''||X.DATA_INIC_SITUACAO||''',''DD/MM/YYYY'') AND TO_DATE('''||X.DATA_FIM_SITUACAO||''',''DD/MM/YYYY''); COMMIT;'
END COMANDO,
CASE
WHEN X.STATUS_IFPONTO = 'INATIVO' THEN 'RETIRAR DIAS A PARTIR DATA INICIO SIT FUNC'
ELSE 'FAZER NADA' END CENARIO_A_PARTIR_JAN_23,
X.* FROM (
SELECT 
ROW_NUMBER() OVER(PARTITION BY A.CODIGO_EMPRESA, A.TIPO_CONTRATO, A.CODIGO ORDER BY A.CODIGO_EMPRESA, A.TIPO_CONTRATO, A.CODIGO, A.DATA_INIC_SITUACAO)ORDEM_BM,
TO_DATE(vDATA_FIM,'DD/MM/YYYY')-TO_DATE(vDATA_INICIO,'DD/MM/YYYY')+1 DIAS_FECHAMENTO,
I.QTD_DIAS QTD_DIAS_ESPELHO, TO_DATE(I.DTDEMISSAO,'DD/MM/YYYY')DTDEMISSAO, 
CASE WHEN I.DTDEMISSAO IS NOT NULL THEN TO_DATE(I.DTDEMISSAO,'DD/MM/YYYY') - TO_DATE(vDATA_INICIO,'DD/MM/YYYY')+1 ELSE TO_DATE(vDATA_FIM,'DD/MM/YYYY')-TO_DATE(vDATA_INICIO,'DD/MM/YYYY')+1 END DIAS_ATIVOS,
CASE WHEN I.DTDEMISSAO IS NULL OR TO_DATE(I.DTDEMISSAO,'DD/MM/YYYY') > TO_DATE(vDATA_FIM,'DD/MM/YYYY') THEN 0 ELSE TO_DATE(vDATA_FIM,'DD/MM/YYYY')-TO_DATE(I.DTDEMISSAO,'DD/MM/YYYY') END DIAS_INATIVOS,
P.STATUS_IFPONTO,
A.PARTE,A.CODIGO_EMPRESA, A.TIPO_CONTRATO, A.CODIGO, A.COD_SIT_FUNCIONAL, S.DESCRICAO SIT_FUNC, S.CONTROLE_FOLHA, C.TIPO_CESS TIPO_CESSAO, A.DATA_INIC_SITUACAO, A.DATA_FIM_SITUACAO, A.LOGIN_USUARIO, A.DT_ULT_ALTER_USUA
FROM 
(
SELECT 'P1'PARTE, A.* FROM RHCGED_ALT_SIT_FUN A WHERE A.DATA_INIC_SITUACAO IS NOT NULL AND A.DATA_FIM_SITUACAO IS NULL AND TRUNC(A.DATA_INIC_SITUACAO)<=TO_DATE(vDATA_FIM,'DD/MM/YYYY') 
AND TRUNC(A.DATA_INIC_SITUACAO) = (SELECT TRUNC(MAX(AUX.DATA_INIC_SITUACAO)) FROM RHCGED_ALT_SIT_FUN AUX WHERE A.CODIGO_EMPRESA = AUX.CODIGO_EMPRESA AND A.TIPO_CONTRATO = AUX.TIPO_CONTRATO AND A.CODIGO = AUX.CODIGO  )
UNION ALL
SELECT 'P2'PARTE, A.* FROM RHCGED_ALT_SIT_FUN A WHERE 
(TRUNC(A.DATA_INIC_SITUACAO) BETWEEN TO_DATE(vDATA_INICIO,'DD/MM/YYYY')AND TO_DATE(vDATA_FIM,'DD/MM/YYYY')AND A.DATA_FIM_SITUACAO IS NOT NULL )
OR
TRUNC(A.DATA_FIM_SITUACAO) BETWEEN TO_DATE(vDATA_INICIO,'DD/MM/YYYY')AND TO_DATE(vDATA_FIM,'DD/MM/YYYY')
)
A
LEFT OUTER JOIN RHPARM_SIT_FUNC S ON S.CODIGO = A.COD_SIT_FUNCIONAL
LEFT OUTER JOIN (SELECT DADO_ORIGEM SIT_FUNC, DADO_DESTINO TIPO_CESS FROM RHINTE_ED_IT_CONV X WHERE X.CODIGO_CONVERSAO = 'CESS')C ON C.SIT_FUNC = S.CODIGO
LEFT OUTER JOIN (SELECT SUBSTR(DADO_ORIGEM,1,4)EMPRESA, SUBSTR(DADO_ORIGEM,5,4)SIT_FUNC, RHPARM_SIT_FUNC.DESCRICAO, DADO_DESTINO STATUS_IFPONTO
FROM RHINTE_ED_IT_CONV LEFT OUTER JOIN RHPARM_SIT_FUNC ON SUBSTR(RHINTE_ED_IT_CONV.DADO_ORIGEM,5,4) = RHPARM_SIT_FUNC.CODIGO WHERE CODIGO_CONVERSAO = 'POST')
P ON P.EMPRESA = A.CODIGO_EMPRESA AND P.SIT_FUNC = A.COD_SIT_FUNCIONAL
LEFT OUTER JOIN 
(
SELECT EMPRESA, TIPO_CONTRATO, MATRICULA, TO_CHAR(DTDEMISSAO,'DD/MM/YYYY')DTDEMISSAO, COUNT(1) QTD_DIAS 
FROM(
SELECT EMPRESA, TIPO_CONTRATO, MATRICULA, DTDEMISSAO 
FROM PONTO_ELETRONICO.IFPONTO_ESPELHO_HISTORICA WHERE DATA_PROCESSAMENTO IS NULL AND LPAD(EMPRESA,4,'0') IN (SELECT DADO_ORIGEM FROM ARTERH.RHINTE_ED_IT_CONV WHERE CODIGO_CONVERSAO = 'IFP4')--NOVO EM 7/11/23--TRUNC(DATA) BETWEEN TO_DATE(vDATA_INICIO,'DD/MM/YYYY')AND TO_DATE(vDATA_FIM,'DD/MM/YYYY')
)GROUP BY  EMPRESA, TIPO_CONTRATO, MATRICULA, DTDEMISSAO ORDER BY  EMPRESA, TIPO_CONTRATO, MATRICULA
)I ON I.EMPRESA = A.CODIGO_EMPRESA AND I.TIPO_CONTRATO = A.TIPO_CONTRATO AND I.MATRICULA = A.CODIGO
WHERE 
I.QTD_DIAS IS NOT NULL--APENAS BMS NA TABELA PONTO_ELETRONICO.IFPONTO_ESPELHO_HISTORICA
ORDER BY A.CODIGO_EMPRESA, A.TIPO_CONTRATO, A.CODIGO, A.DATA_INIC_SITUACAO
)X
)
LOOP
IF C1.STATUS_IFPONTO = 'INATIVO' AND C1.CONTROLE_FOLHA = 'L' THEN
UPDATE PONTO_ELETRONICO.IFPONTO_ESPELHO_HISTORICA SET DATA_PROCESSAMENTO = TRUNC(SYSDATE)-1 WHERE  DATA_PROCESSAMENTO IS NULL AND EMPRESA = C1.CODIGO_EMPRESA AND TIPO_CONTRATO = C1.TIPO_CONTRATO AND MATRICULA = C1.CODIGO AND TRUNC(DATA)BETWEEN TO_DATE(C1.DATA_INIC_SITUACAO,'DD/MM/YYYY') AND TO_DATE(C1.DATA_FIM_SITUACAO,'DD/MM/YYYY'); COMMIT;
END IF;
END LOOP;

SELECT COUNT(1) INTO vQTD_REGS FROM PONTO_ELETRONICO.IFPONTO_ESPELHO_HISTORICA WHERE DATA_PROCESSAMENTO IS NULL;
vLOG := 'TAREFA 4 TERCEIRO AJUSTE DEPOIS DE PROCESSAR ' ||vQTD_REGS|| ' REGISTROS NA TABELA PONTO_ELETRONICO.IFPONTO_ESPELHO_HISTORICA, TIRAR DO PROCESSAMENTO DIAS EM QUE A PESSOA FICOU INATIVA PELA SITUACAO FUNCIONAL MAS QUE O IFPONTO GEROU ESPELHO NESTES DIAS.';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;
--FIM NOVO EM 9/2/23----------------


-- QUARTO AJUSTE -- PARA RESOLVER PROBLEMA DE DESCONTOS MAIORES DIAS DE ESEPLHO ANTES DA NOVA DATA ADMISSAO PESSOA
UPDATE PONTO_ELETRONICO.IFPONTO_ESPELHO_HISTORICA SET DATA_PROCESSAMENTO = trunc(SYSDATE)-1 WHERE DATA_PROCESSAMENTO IS NULL AND TRUNC(DATA)< TRUNC(DTADMISSAO)AND LPAD(EMPRESA,4,'0') IN (SELECT DADO_ORIGEM FROM ARTERH.RHINTE_ED_IT_CONV WHERE CODIGO_CONVERSAO = 'IFP4');--NOVO EM 7/11/23
COMMIT;

SELECT COUNT(1) INTO vQTD_REGS FROM PONTO_ELETRONICO.IFPONTO_ESPELHO_HISTORICA WHERE DATA_PROCESSAMENTO IS NULL AND LPAD(EMPRESA,4,'0') IN (SELECT DADO_ORIGEM FROM ARTERH.RHINTE_ED_IT_CONV WHERE CODIGO_CONVERSAO = 'IFP4');--NOVO EM 7/11/23;
vLOG := 'TAREFA 4 QUARTO AJUSTE DEPOIS DE PROCESSAR ' ||vQTD_REGS|| ' REGISTROS NA TABELA PONTO_ELETRONICO.IFPONTO_ESPELHO_HISTORICA TIRAR DO PROCESSAMENTO DIAS DE ESEPLHO ANTES DA NOVA DATA ADMISSAO PESSOA.';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;




--INICIO NOVO EM 4/1/24-------------
-- QUINTO AJUSTE -- TIRAR DO PROCESSAMENTO JUSTIFICATIVAS EM DIAS QUE O ESPELHO NAO PROCESSO RETIRADO NOS AJUSTES DA TAREFA 4
SELECT COUNT(1) INTO vQTD_REGS FROM PONTO_ELETRONICO.IFPONTO_JUSTIFICATIVA_HISTORICA WHERE DATA_PROCESSAMENTO IS NULL AND LPAD(EMPRESA,4,'0') IN (SELECT DADO_ORIGEM FROM ARTERH.RHINTE_ED_IT_CONV WHERE CODIGO_CONVERSAO = 'IFP4');--NOVO EM 7/11/23;
vLOG := 'TAREFA 4 QUINTO AJUSTE ANTES DE PROCESSAR ' ||vQTD_REGS|| ' REGISTROS NA TABELA PONTO_ELETRONICO.IFPONTO_JUSTIFICATIVA_HISTORICA, TIRAR DO PROCESSAMENTO JUSTIFICATIVAS EM DIAS QUE O ESPELHO NAO PROCESSO RETIRADO NOS AJUSTES DA TAREFA 4.';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;

FOR C1 IN (
SELECT E.CODIGO, J.CODIGO_PONTO
FROM PONTO_ELETRONICO.IFPONTO_ESPELHO_HISTORICA E 
LEFT OUTER JOIN (SELECT * FROM PONTO_ELETRONICO.IFPONTO_JUSTIFICATIVA_HISTORICA WHERE DATA_PROCESSAMENTO IS NULL ) J ON E.CODIGO = J.CODIGO_PONTO
WHERE --oficial--DATA_PROCESSAMENTO IS NULL 
TRUNC(E.DATA_PROCESSAMENTO) = TO_DATE('11/12/2023','DD/MM/YYYY') --para testes 761435
AND LPAD(E.EMPRESA,4,'0') IN (SELECT DADO_ORIGEM FROM ARTERH.RHINTE_ED_IT_CONV WHERE CODIGO_CONVERSAO = 'IFP4')
AND J.CODIGO_PONTO IS NOT NULL AND E.CODIGO IS NULL --TEM JUSTIFICATIVA MAS TIRADO DIA DO ESPELHO DEVIDO AOS 4 AJUSTES DA TAREFA 4
ORDER BY E.CODIGO, J.CODIGO_PONTO
)
LOOP
UPDATE PONTO_ELETRONICO.IFPONTO_JUSTIFICATIVA_HISTORICA SET DATA_PROCESSAMENTO = TRUNC(SYSDATE)-1 WHERE DATA_PROCESSAMENTO IS NULL AND CODIGO_PONTO = C1.CODIGO_PONTO; COMMIT;
END LOOP;

SELECT COUNT(1) INTO vQTD_REGS FROM PONTO_ELETRONICO.IFPONTO_ESPELHO_HISTORICA WHERE DATA_PROCESSAMENTO IS NULL;
vLOG := 'TAREFA 4 QUINTO AJUSTE DEPOIS DE PROCESSAR ' ||vQTD_REGS|| ' REGISTROS NA TABELA PONTO_ELETRONICO.IFPONTO_JUSTIFICATIVA_HISTORICA, TIRAR DO PROCESSAMENTO JUSTIFICATIVAS EM DIAS QUE O ESPELHO NAO PROCESSO RETIRADO NOS AJUSTES DA TAREFA 4.';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;
--FIM NOVO EM 4/1/24----------------



-- TAREFA 5 -- EM 20/12/22
-- (27ª tarefa NO FECHAMENTO MENSAL)--NOVO EM 12/7/21--GRAVAR AS JUSTIFICATIVAS NA TABELA QUE JUNTA TUDO
--COMANDO DIRETO NA PROCEDURE GERAL DO FECHAMENTO (PR_FECHAMENTO_DIARIO_IFPONTO)
SELECT count(1) INTO vQTD_REGS FROM PONTO_ELETRONICO.IFPONTO_OCOR_JUST_SIT_FUNC_TR WHERE DATA_PROCESSAMENTO IS NULL AND LPAD(EMPRESA,4,'0') IN (SELECT DADO_ORIGEM FROM ARTERH.RHINTE_ED_IT_CONV WHERE CODIGO_CONVERSAO = 'IFP4');--NOVO EM 7/11/23;
vLOG := 'TAREFA 5 ANTES DE PROCESSAR ' ||vQTD_REGS|| ' PONTO_ELETRONICO.IFPONTO_OCOR_JUST_SIT_FUNC_TR.';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;

INSERT INTO PONTO_ELETRONICO.IFPONTO_OCOR_JUST_SIT_FUNC_TR SELECT * FROM PONTO_ELETRONICO.IFPONTO_OCOR_JUST_SIT_FUNC WHERE DATA_PROCESSAMENTO IS NULL AND COD_JUSTIFICATIVA_PONTO = 151 AND LPAD(EMPRESA,4,'0') IN (SELECT DADO_ORIGEM FROM ARTERH.RHINTE_ED_IT_CONV WHERE CODIGO_CONVERSAO = 'IFP4');--NOVO EM 7/11/23;
COMMIT;

SELECT count(1) INTO vQTD_REGS FROM PONTO_ELETRONICO.IFPONTO_OCOR_JUST_SIT_FUNC_TR WHERE DATA_PROCESSAMENTO IS NULL AND LPAD(EMPRESA,4,'0') IN (SELECT DADO_ORIGEM FROM ARTERH.RHINTE_ED_IT_CONV WHERE CODIGO_CONVERSAO = 'IFP4');--NOVO EM 7/11/23;
vLOG := 'TAREFA 5 DEPOIS DE PROCESSAR ' ||vQTD_REGS|| ' PONTO_ELETRONICO.IFPONTO_OCOR_JUST_SIT_FUNC_TR.';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;



-- TAREFA 6 -- EM 20/12/22
--NOVO EM 12/7/21--GRAVAR AS JUSTIFICATIVAS NA TABELA QUE JUNTA TUDO 5ª TAREFA --(28ª tarefa NO FECHAMENTO MENSAL)----NOVO EM 12/7/21--GRAVAR AS JUSTIFICATIVAS NA TABELA QUE JUNTA TUDO)
SELECT count(1) INTO vQTD_REGS FROM PONTO_ELETRONICO.IFPONTO_OCOR_JUST_SIT_FUNC_TR WHERE DATA_PROCESSAMENTO IS NULL AND LPAD(EMPRESA,4,'0') IN (SELECT DADO_ORIGEM FROM ARTERH.RHINTE_ED_IT_CONV WHERE CODIGO_CONVERSAO = 'IFP4');--NOVO EM 7/11/23;
vLOG := 'TAREFA 6 ANTES RODAR PROCEDURE PONTO_ELETRONICO.PRG2_CONVERT_OCOR_EM_JUST' ||vQTD_REGS|| ' REGISTRO NA TABELA PONTO_ELETRONICO.IFPONTO_OCOR_JUST_SIT_FUNC_TR.';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;

--/*
BEGIN 
PONTO_ELETRONICO.PRG2_CONVERT_OCOR_EM_JUST;
 err_msg := SUBSTR('EXECUCAO_REALIZADA_COM_SUCESSO', 1, 4000);
              GRAVA_SUCESSO('FECHAMENTO_MES PROCEDURE PRG2_CONVERT_OCOR_EM_JUST','000',err_msg);
exception
              when others then
               err_msg := SUBSTR(SQLERRM, 1, 4000);
              GRAVA_ERRO('FECHAMENTO_MES PROCEDURE PRG2_CONVERT_OCOR_EM_JUST',SQLCODE,err_msg);
END;
--*/

SELECT count(1) INTO vQTD_REGS FROM PONTO_ELETRONICO.IFPONTO_OCOR_JUST_SIT_FUNC_TR WHERE DATA_PROCESSAMENTO IS NULL;
vLOG := 'TAREFA 6 APOS RODAR PROCEDURE PONTO_ELETRONICO.PRG2_CONVERT_OCOR_EM_JUST' ||vQTD_REGS|| ' REGISTRO NA TABELA PONTO_ELETRONICO.IFPONTO_OCOR_JUST_SIT_FUNC_TR.';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;

ELSE
vLOG := '*******FECHAMENTO COM ERRO NA TAREFA 3, PROCEDURE PRM1_RHPONT_APUR_AGRUP_INCLUI, VERIFICAR ERRO';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;
vPR_OK :=0;
END IF;



SELECT COUNT(1) INTO vPR_OK FROM PONTO_ELETRONICO.SMARH_INT_LOG_INTEGRA_DIARIA WHERE TRUNC(DATA_ERRO)= TRUNC(SYSDATE) AND DESCRICAO_ERRO = 'EXECUCAO_REALIZADA_COM_SUCESSO' AND PROCEDURE_ERRO ='FECHAMENTO_MES PROCEDURE PRG2_CONVERT_OCOR_EM_JUST';
--TAREFA 7 -- EM 20/12/22
--6ª TAREFA --(29ª tarefa NO FECHAMENTO MENSAL)--- --PRG29_PREPARA_SIT_FUNC_OCOR.sql
IF vPR_OK = 1 THEN
SELECT count(1) INTO vQTD_REGS FROM PONTO_ELETRONICO.IFPONTO_OCOR_JUST_SIT_FUNC_T2 WHERE  DATA_PROCESSAMENTO IS NULL AND LPAD(EMPRESA,4,'0') IN (SELECT DADO_ORIGEM FROM ARTERH.RHINTE_ED_IT_CONV WHERE CODIGO_CONVERSAO = 'IFP4');--NOVO EM 7/11/23;
vLOG := 'TAREFA 7 ANTES RODAR PROCEDURE PONTO_ELETRONICO.PRG3_PREPARA_SIT_FUNC_OCOR ' ||vQTD_REGS|| ' REGISTRO NA TABELA PONTO_ELETRONICO.IFPONTO_OCOR_JUST_SIT_FUNC_T2.';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;

IF vQTD_REGS = 0 THEN
--/*
BEGIN 
PONTO_ELETRONICO.PRG3_PREPARA_SIT_FUNC_OCOR(TO_DATE(vDATA_INICIO,'DD/MM/YYYY'), TO_DATE(vDATA_FIM,'DD/MM/YYYY'));
 err_msg := SUBSTR('EXECUCAO_REALIZADA_COM_SUCESSO', 1, 4000);
              GRAVA_SUCESSO('FECHAMENTO_MES PROCEDURE PRG3_PREPARA_SIT_FUNC_OCOR','000',err_msg);
exception
              when others then
               err_msg := SUBSTR(SQLERRM, 1, 4000);
              GRAVA_ERRO('FECHAMENTO_MES PROCEDURE PRG3_PREPARA_SIT_FUNC_OCOR',SQLCODE,err_msg);
END;
--*/
SELECT count(1) INTO vQTD_REGS FROM PONTO_ELETRONICO.IFPONTO_OCOR_JUST_SIT_FUNC_T2 WHERE  DATA_PROCESSAMENTO IS NULL;
vLOG := 'TAREFA 7 APOS RODAR PROCEDURE PONTO_ELETRONICO.PRG3_PREPARA_SIT_FUNC_OCOR ' ||vQTD_REGS|| ' REGISTRO NA TABELA PONTO_ELETRONICO.IFPONTO_OCOR_JUST_SIT_FUNC_T2.';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;

ELSE
vLOG := 'TAREFA 7 ERRO VERIFICAR, REGISTROS JA EXISTENTES NA TABELA PONTO_ELETRONICO.IFPONTO_OCOR_JUST_SIT_FUNC_T2 ANTES DE PROCESSAR.';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;

END IF;

ELSE
vLOG := '*******FECHAMENTO COM ERRO NA TAREFA 3, PROCEDURE PONTO_ELETRONICO.PRM1_RHPONT_APUR_AGRUP_INCLUI, VERIFICAR ERRO';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;
vPR_OK :=0;
END IF;



SELECT COUNT(1) INTO vPR_OK FROM PONTO_ELETRONICO.SMARH_INT_LOG_INTEGRA_DIARIA WHERE TRUNC(DATA_ERRO)= TRUNC(SYSDATE) AND DESCRICAO_ERRO = 'EXECUCAO_REALIZADA_COM_SUCESSO' AND PROCEDURE_ERRO ='FECHAMENTO_MES PROCEDURE PRG3_PREPARA_SIT_FUNC_OCOR';
--TAREFA 8 -- EM 20/12/22
--7ª TAREFA --(30ª tarefa NO FECHAMENTO MENSAL) GERA SIT FUNC DAS LMP/LMDP PRG4_SIT_FUNC_OCORRENCIA.sql --tem que colocar datas ainda para virar procedure
IF vPR_OK = 1 THEN
--/*
BEGIN 
PONTO_ELETRONICO.PRG4_SIT_FUNC_OCORRENCIA(TO_DATE(vDATA_INICIO,'DD/MM/YYYY'), TO_DATE(vDATA_FIM,'DD/MM/YYYY'));
 err_msg := SUBSTR('EXECUCAO_REALIZADA_COM_SUCESSO', 1, 4000);
              GRAVA_SUCESSO('FECHAMENTO_MES PROCEDURE PRG4_SIT_FUNC_OCORRENCIA','000',err_msg);
exception
              when others then
               err_msg := SUBSTR(SQLERRM, 1, 4000);
              GRAVA_ERRO('FECHAMENTO_MES PROCEDURE PRG4_SIT_FUNC_OCORRENCIA',SQLCODE,err_msg);
END;
--*/

SELECT count(1) INTO vQTD_REGS FROM PONTO_ELETRONICO.IFPONTO_OCOR_JUST_SIT_FUNC_T2 WHERE trunc(DATA_PROCESSAMENTO) = TRUNC(SYSDATE) AND LPAD(EMPRESA,4,'0') IN (SELECT DADO_ORIGEM FROM ARTERH.RHINTE_ED_IT_CONV WHERE CODIGO_CONVERSAO = 'IFP4');--NOVO EM 7/11/23;
vLOG := 'TAREFA 8 APOS RODAR PROCEDURE PONTO_ELETRONICO.PRG4_SIT_FUNC_OCORRENCIA ' ||vQTD_REGS|| ' REGISTROS PROCESSADOS NA TABELA PONTO_ELETRONICO.IFPONTO_OCOR_JUST_SIT_FUNC_T2.';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;

--O QUE SOBRAR GRAVAR COMO NAO PROCESSADO --EM 11/3/22
update PONTO_ELETRONICO.IFPONTO_OCOR_JUST_SIT_FUNC_T2 set data_processamento = trunc(sysdate)-1, STATUS_PROCESSAMENTO = 'N' where data_processamento is null AND LPAD(EMPRESA,4,'0') IN (SELECT DADO_ORIGEM FROM ARTERH.RHINTE_ED_IT_CONV WHERE CODIGO_CONVERSAO = 'IFP4');--NOVO EM 7/11/23;
COMMIT;

ELSE
vLOG := '*******FECHAMENTO COM ERRO NA TAREFA 7, PROCEDURE PRG3_PREPARA_SIT_FUNC_OCOR, VERIFICAR ERRO';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;
vPR_OK :=0;
END IF;



SELECT COUNT(1) INTO vPR_OK FROM PONTO_ELETRONICO.SMARH_INT_LOG_INTEGRA_DIARIA WHERE TRUNC(DATA_ERRO)= TRUNC(SYSDATE) AND DESCRICAO_ERRO = 'EXECUCAO_REALIZADA_COM_SUCESSO' AND PROCEDURE_ERRO ='FECHAMENTO_MES PROCEDURE PRG4_SIT_FUNC_OCORRENCIA';
-- TAREFA 9 -- 9ª TAREFA --(32ª tarefa NO FECHAMENTO MENSAL)--NOVO EM 9/2/22 --RODAR PROCEDURES ABAIXO PARA CORRIGIR ERROS POSSIVEIS NO FECHAMENTO NA ALT SIT FUNC
IF vPR_OK = 1 THEN
SELECT count(1) INTO vQTD_REGS FROM ARTERH.SUGESP_AJUSTE_LOTE_CAMPO_HIST WHERE CAMPO_VALOR_1 ='LOG EXECUCAO PROCEDURE PR_ACERTO_LACUNAS_SIT_FUNC_2022' AND TRUNC(DATA_DADOS)= TRUNC(SYSDATE);
vLOG := 'TAREFA 9 ANTES RODAR PROCEDURE ARTERH.PR_ACERTOS_ALT_SIT_FUNC_2022 ' ||vQTD_REGS|| ' REGISTROS PROCESSADOS.';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL; 
--/*
BEGIN 
 ARTERH.PR_ACERTOS_ALT_SIT_FUNC_2022;
 err_msg := SUBSTR('EXECUCAO_REALIZADA_COM_SUCESSO', 1, 4000);
              GRAVA_SUCESSO('FECHAMENTO_MES PROCEDURE PR_ACERTOS_ALT_SIT_FUNC_2022','000',err_msg);
exception
              when others then
               err_msg := SUBSTR(SQLERRM, 1, 4000);
              GRAVA_ERRO('FECHAMENTO_MES PROCEDURE PR_ACERTOS_ALT_SIT_FUNC_2022',SQLCODE,err_msg);
END;
--*/
SELECT count(1) INTO vQTD_REGS FROM ARTERH.SUGESP_AJUSTE_LOTE_CAMPO_HIST WHERE CAMPO_VALOR_1 ='LOG EXECUCAO PROCEDURE PR_ACERTO_LACUNAS_SIT_FUNC_2022' AND TRUNC(DATA_DADOS)= TRUNC(SYSDATE);
vLOG := 'TAREFA 9 DEPOIS RODAR PROCEDURE ARTERH.PR_ACERTOS_ALT_SIT_FUNC_2022 ' ||vQTD_REGS|| ' REGISTROS PROCESSADOS.';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;



--TAREFA 10 -- 10ª TAREFA --(33ª tarefa NO FECHAMENTO MENSAL)) --AJUSTAR SEQUENCIA DE ATIVOS
SELECT count(1) INTO vQTD_REGS FROM ARTERH.SUGESP_AJUSTE_LOTE_CAMPO_HIST WHERE CAMPO_VALOR_1 ='LOG EXECUCAO PROCEDURE PR_AJUSTES_ALT_SIT_FUNC_2022' AND TRUNC(DATA_DADOS)= TRUNC(SYSDATE);
vLOG := 'TAREFA 10 ANTES RODAR PROCEDURE ARTERH.PR_AJUSTES_ALT_SIT_FUNC_2022 ' ||vQTD_REGS|| ' REGISTROS PROCESSADOS.';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL; 
--/*
BEGIN 
ARTERH.PR_AJUSTES_ALT_SIT_FUNC_2022(to_char(sysdate,'DD/MM/YYYY'), to_char(sysdate,'DD/MM/YYYY'));
 err_msg := SUBSTR('EXECUCAO_REALIZADA_COM_SUCESSO', 1, 4000);
              GRAVA_SUCESSO('FECHAMENTO_MES PROCEDURE PR_AJUSTES_ALT_SIT_FUNC_2022','000',err_msg);
exception
              when others then
               err_msg := SUBSTR(SQLERRM, 1, 4000);
              GRAVA_ERRO('FECHAMENTO_MES PROCEDURE PR_AJUSTES_ALT_SIT_FUNC_2022',SQLCODE,err_msg);
END;
--*/
SELECT count(1) INTO vQTD_REGS FROM ARTERH.SUGESP_AJUSTE_LOTE_CAMPO_HIST WHERE CAMPO_VALOR_1 ='LOG EXECUCAO PROCEDURE PR_AJUSTES_ALT_SIT_FUNC_2022' AND TRUNC(DATA_DADOS)= TRUNC(SYSDATE);
vLOG := 'TAREFA 10 DEPOIS RODAR PROCEDURE ARTERH.PR_AJUSTES_ALT_SIT_FUNC_2022 ' ||vQTD_REGS|| ' REGISTROS PROCESSADOS.';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL; 


-- TAREFA 11 -- PARA GRAVAR os TOTALIZADORES DIARIOS DO ESPELHO 
--11ª TAREFA --(34ª tarefa NO FECHAMENTO MENSAL) PARA GRAVAR os TOTALIZADORES DIARIOS DO ESPELHO  ifponto_gera_sit_ponto_V7.sql SENDO ESTUDADA PARA REDUZIAR OS CENARIOS MAPEADOS AGUARDAR ESSE TRABALHO PARA ENCAPSULAR NA PROCEDURE
--PRG_GERA_SIT_PONTO_ESPELHO.sql
SELECT count(1) INTO vQTD_REGS  FROM ARTERH.RHPONT_RES_SIT_DIA D LEFT OUTER JOIN RHPONT_SITUACAO SP ON SP.CODIGO = D.CODIGO_SITUACAO whEre D.login_usuario = 'IFPONTO' AND TRUNC(D.DATA) BETWEEN TO_DATE(vDATA_INICIO,'DD/MM/YY') AND TO_DATE(vDATA_FIM,'DD/MM/YY')AND TRUNC(D.DT_ULT_ALTER_USUA) >= TRUNC(SYSDATE);
vLOG := 'TAREFA 11 ANTES RODAR PROCEDURE PONTO_ELETRONICO.PRG_GERA_SIT_PONTO_ESPELHO ' ||vQTD_REGS|| ' REGISTROS PROCESSADOS NA TABELA ARTERH.RHPONT_RES_SIT_DIA.';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;

--/*
BEGIN 
PONTO_ELETRONICO.PRG_GERA_SIT_PONTO_ESPELHO;
 err_msg := SUBSTR('EXECUCAO_REALIZADA_COM_SUCESSO', 1, 4000);
              GRAVA_SUCESSO('FECHAMENTO_MES PROCEDURE PRG_GERA_SIT_PONTO_ESPELHO','000',err_msg);
exception
              when others then
               err_msg := SUBSTR(SQLERRM, 1, 4000);
              GRAVA_ERRO('FECHAMENTO_MES PROCEDURE PRG_GERA_SIT_PONTO_ESPELHO',SQLCODE,err_msg);
END;
--*/

SELECT count(1) INTO vQTD_REGS  FROM ARTERH.RHPONT_RES_SIT_DIA D LEFT OUTER JOIN RHPONT_SITUACAO SP ON SP.CODIGO = D.CODIGO_SITUACAO whEre D.login_usuario = 'IFPONTO' AND TRUNC(D.DATA) BETWEEN TO_DATE(vDATA_INICIO,'DD/MM/YY') AND TO_DATE(vDATA_FIM,'DD/MM/YY')AND TRUNC(D.DT_ULT_ALTER_USUA) >= TRUNC(SYSDATE);
vLOG := 'TAREFA 11 APOS RODAR PROCEDURE PONTO_ELETRONICO.PRG_GERA_SIT_PONTO_ESPELHO ' ||vQTD_REGS|| ' REGISTROS PROCESSADOS NA TABELA ARTERH.RHPONT_RES_SIT_DIA.';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;

ELSE
vLOG := '*******FECHAMENTO COM ERRO NA TAREFA: 8, PROCEDURE: PONTO_ELETRONICO.PRG4_SIT_FUNC_OCORRENCIA, VERIFICAR ERRO';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;
vPR_OK :=0;
END IF;



SELECT COUNT(1) INTO vPR_OK FROM PONTO_ELETRONICO.SMARH_INT_LOG_INTEGRA_DIARIA WHERE TRUNC(DATA_ERRO)= TRUNC(SYSDATE) AND DESCRICAO_ERRO = 'EXECUCAO_REALIZADA_COM_SUCESSO' AND PROCEDURE_ERRO = 'FECHAMENTO_MES PROCEDURE PRG_GERA_SIT_PONTO_ESPELHO';
-- TAREFA 12 -- 
--12ª TAREFA --(35ª tarefa NO FECHAMENTO MENSAL)--1.5 TEMPORARIA devido a COVID-19 se fez necesssario criar SITUacaO DE PONTO pela OCORreNCIA PRG5_SIT_PONTO_OCORRENCIA.sql --FALTA COLOCAR PARAMETROS DE DATA PARA ENCAPSULAR NA PROCEDURE
IF vPR_OK = 1 THEN
--/*
BEGIN 
PONTO_ELETRONICO.PRG5_SIT_PONTO_OCORRENCIA(TO_DATE(vDATA_INICIO,'DD/MM/YYYY'), TO_DATE(vDATA_FIM,'DD/MM/YYYY'));
 err_msg := SUBSTR('EXECUCAO_REALIZADA_COM_SUCESSO', 1, 4000);
              GRAVA_SUCESSO('FECHAMENTO_MES PROCEDURE PRG5_SIT_PONTO_OCORRENCIA','000',err_msg);
exception
              when others then
               err_msg := SUBSTR(SQLERRM, 1, 4000);
              GRAVA_ERRO('FECHAMENTO_MES PROCEDURE PRG5_SIT_PONTO_OCORRENCIA',SQLCODE,err_msg);
END;
--*/

SELECT count(1) INTO vQTD_REGS  FROM ARTERH.RHPONT_RES_SIT_DIA D LEFT OUTER JOIN RHPONT_SITUACAO SP ON SP.CODIGO = D.CODIGO_SITUACAO whEre D.login_usuario = 'IFPONTO' AND TRUNC(D.DATA) BETWEEN TO_DATE(vDATA_INICIO,'DD/MM/YY') AND TO_DATE(vDATA_FIM,'DD/MM/YY')AND TRUNC(D.DT_ULT_ALTER_USUA) >= TRUNC(SYSDATE);
vLOG := 'TAREFA 12 APOS RODAR PROCEDURE PONTO_ELETRONICO.PRG5_SIT_PONTO_OCORRENCIA ' ||vQTD_REGS|| ' REGISTROS PROCESSADOS NA TABELA ARTERH.RHPONT_RES_SIT_DIA.';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;

ELSE
vLOG := '*******FECHAMENTO COM ERRO NA TAREFA: 11, PROCEDURE: PONTO_ELETRONICO.PRG_GERA_SIT_PONTO_ESPELHO, VERIFICAR ERRO';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;
vPR_OK :=0;
END IF;



SELECT COUNT(1) INTO vPR_OK FROM PONTO_ELETRONICO.SMARH_INT_LOG_INTEGRA_DIARIA WHERE TRUNC(DATA_ERRO)= TRUNC(SYSDATE) AND DESCRICAO_ERRO = 'EXECUCAO_REALIZADA_COM_SUCESSO' AND PROCEDURE_ERRO = 'FECHAMENTO_MES PROCEDURE PRG5_SIT_PONTO_OCORRENCIA';
-- TAREFA 13
--INICIO--************PARTE ESPECIAL VERBAS DA SMSA
--13ª TAREFA --(37ª tarefa NO FECHAMENTO MENSAL)----TIPO VERBA: Abono Plantão Data Especial----TROCAR DATAS
--PRG6_DATA_ESPECIAL_SMSA.sql--FALTA COLOCAR PARAMETROS DE DATA PARA ENCAPSULAR NA PROCEDURE (grava_1193_DATA_ESPECIAL_SMSA_v5.sql)
IF vPR_OK = 1 THEN
SELECT COUNT(1)QTD INTO vQTD_REGS FROM PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT WHERE TRUNC(DATA_DADOS) = TRUNC(SYSDATE) AND CAMPO_1 ='PRG6_DATA_ESPECIAL_SMSA';
vLOG := 'TAREFA 13 ANTES RODAR PROCEDURE PONTO_ELETRONICO.PRG6_DATA_ESPECIAL_SMSA ' ||vQTD_REGS|| ' REGISTROS PROCESSADOS NA TABELA ARTERH.RHPONT_RES_SIT_DIA.';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;

--/*
BEGIN 
PONTO_ELETRONICO.PRG6_DATA_ESPECIAL_SMSA(TO_DATE(vDATA_INICIO,'DD/MM/YYYY'), TO_DATE(vDATA_FIM,'DD/MM/YYYY'));
 err_msg := SUBSTR('EXECUCAO_REALIZADA_COM_SUCESSO', 1, 4000);
              GRAVA_SUCESSO('FECHAMENTO_MES PROCEDURE PRG6_DATA_ESPECIAL_SMSA','000',err_msg);
exception
              when others then
               err_msg := SUBSTR(SQLERRM, 1, 4000);
              GRAVA_ERRO('FECHAMENTO_MES PROCEDURE PRG6_DATA_ESPECIAL_SMSA',SQLCODE,err_msg);
END;
--*/

SELECT COUNT(1)QTD INTO vQTD_REGS FROM PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT WHERE TRUNC(DATA_DADOS) = TRUNC(SYSDATE) AND CAMPO_1 ='PRG6_DATA_ESPECIAL_SMSA';
vLOG := 'TAREFA 13 APOS RODAR PROCEDURE PONTO_ELETRONICO.PRG6_DATA_ESPECIAL_SMSA ' ||vQTD_REGS|| ' REGISTROS PROCESSADOS NA TABELA ARTERH.RHPONT_RES_SIT_DIA.';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;

ELSE
vLOG := '*******FECHAMENTO COM ERRO NA TAREFA: 12 , PROCEDURE: PRG5_SIT_PONTO_OCORRENCIA, VERIFICAR ERRO';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;
vPR_OK :=1; --COMENTADO E TROQUEI DE O PARA 1 EM 3/7/23--vPR_OK :=0;
END IF;



SELECT COUNT(1) INTO vPR_OK FROM PONTO_ELETRONICO.SMARH_INT_LOG_INTEGRA_DIARIA WHERE TRUNC(DATA_ERRO)= TRUNC(SYSDATE) AND DESCRICAO_ERRO = 'EXECUCAO_REALIZADA_COM_SUCESSO' AND PROCEDURE_ERRO = 'FECHAMENTO_MES PROCEDURE PRG6_DATA_ESPECIAL_SMSA';
-- TAREFA 14
--14ª TAREFA --(38ª tarefa NO FECHAMENTO MENSAL)-----TIPO VERBA: Adicional Noturno----TROCAR DATAS
--PRG7_ADICIONAL_NOTURNO.sql --FALTA COLOCAR PARAMETROS DE DATA PARA ENCAPSULAR NA PROCEDURE (gravar_ADICIONAL_NOTURNO.sql)
IF vPR_OK = 1 THEN
SELECT COUNT(1)QTD INTO vQTD_REGS FROM PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT WHERE TRUNC(DATA_DADOS) = TRUNC(SYSDATE) AND CAMPO_1 ='PRG7_ADICIONAL_NOTURNO';
vLOG := 'TAREFA 14 ANTES RODAR PROCEDURE PONTO_ELETRONICO.PRG7_ADICIONAL_NOTURNO ' ||vQTD_REGS|| ' REGISTROS PROCESSADOS NA TABELA ARTERH.RHPONT_RES_SIT_DIA.';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;

--/*
BEGIN 
PONTO_ELETRONICO.PRG7_ADICIONAL_NOTURNO(TO_DATE(vDATA_INICIO,'DD/MM/YYYY'), TO_DATE(vDATA_FIM,'DD/MM/YYYY'));
 err_msg := SUBSTR('EXECUCAO_REALIZADA_COM_SUCESSO', 1, 4000);
              GRAVA_SUCESSO('FECHAMENTO_MES PROCEDURE PRG7_ADICIONAL_NOTURNO','000',err_msg);
exception
              when others then
               err_msg := SUBSTR(SQLERRM, 1, 4000);
              GRAVA_ERRO('FECHAMENTO_MES PROCEDURE PRG7_ADICIONAL_NOTURNO',SQLCODE,err_msg);
END;
--*/

SELECT COUNT(1)QTD INTO vQTD_REGS FROM PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT WHERE TRUNC(DATA_DADOS) = TRUNC(SYSDATE) AND CAMPO_1 ='PRG7_ADICIONAL_NOTURNO';
vLOG := 'TAREFA 14 DEPOIS RODAR PROCEDURE PONTO_ELETRONICO.PRG7_ADICIONAL_NOTURNO ' ||vQTD_REGS|| ' REGISTROS PROCESSADOS NA TABELA ARTERH.RHPONT_RES_SIT_DIA.';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;

ELSE
vLOG := '*******FECHAMENTO COM ERRO NA TAREFA: 13, PROCEDURE: PRG6_DATA_ESPECIAL_SMSA, VERIFICAR ERRO';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;
vPR_OK :=1; --COMENTADO E TROQUEI DE O PARA 1 EM 3/7/23--vPR_OK :=0;
END IF;



SELECT COUNT(1) INTO vPR_OK FROM PONTO_ELETRONICO.SMARH_INT_LOG_INTEGRA_DIARIA WHERE TRUNC(DATA_ERRO)= TRUNC(SYSDATE) AND DESCRICAO_ERRO = 'EXECUCAO_REALIZADA_COM_SUCESSO' AND PROCEDURE_ERRO = 'FECHAMENTO_MES PROCEDURE PRG7_ADICIONAL_NOTURNO';
-- TAREFA 15
--15ª TAREFA --(39ª tarefa)--ANTES VER SE NAO TEM ENDERECOS ARTERH ERRADOS O PONTO DECIMA DE LATITUDE E LONGITUDE
IF vPR_OK = 1 THEN
--COMANDO DIRETO NA PROCEDURE GERAL DO FECHAMENTO (PR_FECHAMENTO_DIARIO_IFPONTO)
UPDATE ARTERH.RHORGA_ENDERECO SET CAIXA_POSTAL = REPLACE(CAIXA_POSTAL,'.',','), TELEX = REPLACE(TELEX,'.',',') WHERE c_livre_data02 IS NULL AND CAIXA_POSTAL IS NOT NULL AND TELEX IS NOT NULL AND (CAIXA_POSTAL LIKE '%.%' OR TELEX LIKE '%.%');COMMIT;
--PRG8_DESMEMBRA_REDES_RMI.sql --converter em procedure ainda pode juntar comando acima nela (desmembra faixa de rede todos_enderecos_pbh_com_organograma.sql)

SELECT COUNT(1)QTD INTO vQTD_REGS FROM PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT WHERE CONSIDERACOES = 'PRG8_DESMEMBRA_REDES_RMI' AND TRUNC(DATA_DADOS)= TRUNC(SYSDATE);
vLOG := 'TAREFA 15 ANTES RODAR PROCEDURE PONTO_ELETRONICO.PRG8_DESMEMBRA_REDES_RMI ' ||vQTD_REGS ;
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;

--/*
BEGIN 
PONTO_ELETRONICO.PRG8_DESMEMBRA_REDES_RMI;
 err_msg := SUBSTR('EXECUCAO_REALIZADA_COM_SUCESSO', 1, 4000);
              GRAVA_SUCESSO('FECHAMENTO_MES PROCEDURE PRG8_DESMEMBRA_REDES_RMI','000',err_msg);
exception
              when others then
               err_msg := SUBSTR(SQLERRM, 1, 4000);
              GRAVA_ERRO('FECHAMENTO_MES PROCEDURE PRG8_DESMEMBRA_REDES_RMI',SQLCODE,err_msg);
END;
--*/

SELECT COUNT(1)QTD INTO vQTD_REGS FROM PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT WHERE CONSIDERACOES = 'PRG8_DESMEMBRA_REDES_RMI' AND TRUNC(DATA_DADOS)= TRUNC(SYSDATE);
vLOG := 'TAREFA 15 DEPOIS RODAR PROCEDURE PONTO_ELETRONICO.PRG8_DESMEMBRA_REDES_RMI ' ||vQTD_REGS ;
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;

ELSE
vLOG := '*******FECHAMENTO COM ERRO NA TAREFA: 14, PROCEDURE: PRG7_ADICIONAL_NOTURNO, VERIFICAR ERRO';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;
vPR_OK :=1; --COMENTADO E TROQUEI DE O PARA 1 EM 3/7/23--vPR_OK :=0;
END IF;



SELECT COUNT(1) INTO vPR_OK FROM PONTO_ELETRONICO.SMARH_INT_LOG_INTEGRA_DIARIA WHERE TRUNC(DATA_ERRO)= TRUNC(SYSDATE) AND DESCRICAO_ERRO = 'EXECUCAO_REALIZADA_COM_SUCESSO' AND PROCEDURE_ERRO = 'FECHAMENTO_MES PROCEDURE PRG8_DESMEMBRA_REDES_RMI';
-- TAREFA 16
--16ª TAREFA --(40ª tarefa NO FECHAMENTO MENSAL)--para as 3 verbas restantes: Plantão Extra, Plantão Extra SUP e Abono CERSAM----TROCAR DATAS
--PRG10_PLANTOES_ABONO_SMSA.sql --FALTA COLOCAR PARAMETROS DE DATA PARA ENCAPSULAR NA PROCEDURE(grava_3_tipos_sit_ponto_verba_SMSA_v7.sql)
IF vPR_OK = 1 THEN
SELECT COUNT(1)QTD INTO vQTD_REGS FROM PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT WHERE CAMPO_1 = 'PRG10_PLANTOES_ABONO_SMSA' AND TRUNC(DATA_DADOS)= TRUNC(SYSDATE);
vLOG := 'TAREFA 16 ANTES RODAR PROCEDURE PONTO_ELETRONICO.PRG10_PLANTOES_ABONO_SMSA ' ||vQTD_REGS ;
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;

--/*
BEGIN 
PONTO_ELETRONICO.PRG10_PLANTOES_ABONO_SMSA(TO_DATE(vDATA_INICIO,'DD/MM/YYYY'), TO_DATE(vDATA_FIM,'DD/MM/YYYY'));
 err_msg := SUBSTR('EXECUCAO_REALIZADA_COM_SUCESSO', 1, 4000);
              GRAVA_SUCESSO('FECHAMENTO_MES PROCEDURE PRG10_PLANTOES_ABONO_SMSA','000',err_msg);
exception
              when others then
               err_msg := SUBSTR(SQLERRM, 1, 4000);
              GRAVA_ERRO('FECHAMENTO_MES PROCEDURE PRG10_PLANTOES_ABONO_SMSA',SQLCODE,err_msg);
END;
--*/

SELECT COUNT(1)QTD INTO vQTD_REGS FROM PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT WHERE CAMPO_1 = 'PRG10_PLANTOES_ABONO_SMSA' AND TRUNC(DATA_DADOS)= TRUNC(SYSDATE);
vLOG := 'TAREFA 16 DEPOIS RODAR PROCEDURE PONTO_ELETRONICO.PRG10_PLANTOES_ABONO_SMSA ' ||vQTD_REGS ;
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;

ELSE
vLOG := '*******FECHAMENTO COM ERRO NA TAREFA: 15, PROCEDURE: PONTO_ELETRONICO.PRG8_DESMEMBRA_REDES_RMI, VERIFICAR ERRO';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;
vPR_OK :=1; --COMENTADO E TROQUEI DE O PARA 1 EM 3/7/23--vPR_OK :=0;
END IF;



SELECT COUNT(1) INTO vPR_OK FROM PONTO_ELETRONICO.SMARH_INT_LOG_INTEGRA_DIARIA WHERE TRUNC(DATA_ERRO)= TRUNC(SYSDATE) AND DESCRICAO_ERRO = 'EXECUCAO_REALIZADA_COM_SUCESSO' AND PROCEDURE_ERRO = 'FECHAMENTO_MES PROCEDURE PRG10_PLANTOES_ABONO_SMSA';
-- TAREFA 17
--17ª TAREFA --(42ª tarefa NO FECHAMENTO MENSAL)--novo em 2/2/22 --- gravar SOBREAVISO Ifponto CAMPANHA DE VACINACAO script inicial baseado no (grava_3_tipos_sit_ponto_verba_SMSA_v5.2.2.sql)
--PRG11_CAMPANHA_VACINACAO.sql--FALTA COLOCAR PARAMETROS DE DATA PARA ENCAPSULAR NA PROCEDURE(grava_sobreaviso_campanha_vacinacao_v1.sql)
IF vPR_OK = 1 THEN
SELECT COUNT(1)QTD INTO vQTD_REGS FROM PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT WHERE CAMPO_1 = 'PRG11_CAMPANHA_VACINACAO' AND TRUNC(DATA_DADOS)= TRUNC(SYSDATE);
vLOG := 'TAREFA 17 ANTES RODAR PROCEDURE PONTO_ELETRONICO.PRG11_CAMPANHA_VACINACAO ' ||vQTD_REGS ;
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;

--/*
BEGIN 
PONTO_ELETRONICO.PRG11_CAMPANHA_VACINACAO(TO_DATE(vDATA_INICIO,'DD/MM/YYYY'), TO_DATE(vDATA_FIM,'DD/MM/YYYY'));
 err_msg := SUBSTR('EXECUCAO_REALIZADA_COM_SUCESSO', 1, 4000);
              GRAVA_SUCESSO('FECHAMENTO_MES PROCEDURE PRG11_CAMPANHA_VACINACAO','000',err_msg);
exception
              when others then
               err_msg := SUBSTR(SQLERRM, 1, 4000);
              GRAVA_ERRO('FECHAMENTO_MES PROCEDURE PRG11_CAMPANHA_VACINACAO',SQLCODE,err_msg);
END;
--*/

SELECT COUNT(1)QTD INTO vQTD_REGS FROM PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT WHERE CAMPO_1 = 'PRG11_CAMPANHA_VACINACAO' AND TRUNC(DATA_DADOS)= TRUNC(SYSDATE);
vLOG := 'TAREFA 17 DEPOIS RODAR PROCEDURE PONTO_ELETRONICO.PRG11_CAMPANHA_VACINACAO ' ||vQTD_REGS ;
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;

ELSE
vLOG := '*******FECHAMENTO COM ERRO NA TAREFA: 16, PROCEDURE: PRG10_PLANTOES_ABONO_SMSA, VERIFICAR ERRO';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;
vPR_OK :=1; --COMENTADO E TROQUEI DE O PARA 1 EM 3/7/23--vPR_OK :=0;
END IF;
--FIM--************PARTE ESPECIAL VERBAS DA SMSA



----TALVEZ TROCAR AQUI EM 8/11/23 SE NAO ACHAR ERRO 
--comentado em 8/11/23 para evitar parar processamento se tiver--SELECT COUNT(1) INTO vPR_OK FROM PONTO_ELETRONICO.SMARH_INT_LOG_INTEGRA_DIARIA WHERE TRUNC(DATA_ERRO)= TRUNC(SYSDATE) AND DESCRICAO_ERRO = 'EXECUCAO_REALIZADA_COM_SUCESSO' AND PROCEDURE_ERRO = 'FECHAMENTO_MES PROCEDURE PRG11_CAMPANHA_VACINACAO';
-- TAREFA 18
--18ª TAREFA --(44ª tarefa NO FECHAMENTO MENSAL)--GRAVAR SITUACAO DE PONTO NO MES DE FECHAMENTO IFPONTO DA PESSOA COM OS DADOS DE FERIAS E SITUACAO FUNCIONAL
--PRG_SIT_PONTO_ORIGEM_ARTE.sql --FALTA COLOCAR PARAMETROS DE DATA PARA ENCAPSULAR NA PROCEDURE(fechamento_ifponto_sit_pontov4_v2.sql) 
IF vPR_OK = 1 THEN
SELECT count(1) INTO vQTD_REGS  FROM ARTERH.RHPONT_RES_SIT_DIA D LEFT OUTER JOIN RHPONT_SITUACAO SP ON SP.CODIGO = D.CODIGO_SITUACAO whEre D.login_usuario <> 'IFPONTO' AND TRUNC(D.DATA) BETWEEN TO_DATE(vDATA_INICIO,'DD/MM/YY') AND TO_DATE(vDATA_FIM,'DD/MM/YY');
vLOG := 'TAREFA 18 ANTES RODAR PROCEDURE PONTO_ELETRONICO.PRG_SIT_PONTO_ORIGEM_ARTE ' ||vQTD_REGS|| ' REGISTROS PROCESSADOS NA TABELA ARTERH.RHPONT_RES_SIT_DIA.';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;

--/*
BEGIN 
PONTO_ELETRONICO.PRG_SIT_PONTO_ORIGEM_ARTE(TO_DATE(vDATA_INICIO,'DD/MM/YYYY'), TO_DATE(vDATA_FIM,'DD/MM/YYYY'));
 err_msg := SUBSTR('EXECUCAO_REALIZADA_COM_SUCESSO', 1, 4000);
              GRAVA_SUCESSO('FECHAMENTO_MES PROCEDURE PRG_SIT_PONTO_ORIGEM_ARTE','000',err_msg);
exception
              when others then
               err_msg := SUBSTR(SQLERRM, 1, 4000);
              GRAVA_ERRO('FECHAMENTO_MES PROCEDURE PRG_SIT_PONTO_ORIGEM_ARTE',SQLCODE,err_msg);
END;
--*/

SELECT count(1) INTO vQTD_REGS  FROM ARTERH.RHPONT_RES_SIT_DIA D LEFT OUTER JOIN RHPONT_SITUACAO SP ON SP.CODIGO = D.CODIGO_SITUACAO whEre D.login_usuario <> 'IFPONTO' AND TRUNC(D.DATA) BETWEEN TO_DATE(vDATA_INICIO,'DD/MM/YY') AND TO_DATE(vDATA_FIM,'DD/MM/YY');
vLOG := 'TAREFA 18 APOS RODAR PROCEDURE PONTO_ELETRONICO.PRG_SIT_PONTO_ORIGEM_ARTE ' ||vQTD_REGS|| ' REGISTROS PROCESSADOS NA TABELA ARTERH.RHPONT_RES_SIT_DIA.';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;

ELSE
vLOG := '*******FECHAMENTO COM ERRO NA TAREFA: 17, PROCEDURE: PRG11_CAMPANHA_VACINACAO, VERIFICAR ERRO';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;
vPR_OK :=0;
END IF;



SELECT COUNT(1) INTO vPR_OK FROM PONTO_ELETRONICO.SMARH_INT_LOG_INTEGRA_DIARIA WHERE TRUNC(DATA_ERRO)= TRUNC(SYSDATE) AND DESCRICAO_ERRO = 'EXECUCAO_REALIZADA_COM_SUCESSO' AND PROCEDURE_ERRO ='FECHAMENTO_MES PROCEDURE PRG_SIT_PONTO_ORIGEM_ARTE' ;
-- TAREFA 19
--19ª TAREFA --(45ª tarefa NO FECHAMENTO MENSAL)--2 procedure PARA GRAVAR os TOTALIZADORES POR PERIODO inclusive a COMPENSACAO DA PBH  ADM DIRETA
--PRG12_TOT_PER_COMP_ADM_DIRETA.sql --FALTA COLOCAR PARAMETROS DE DATA PARA ENCAPSULAR NA PROCEDURE (totais_periodo_comp_pbh_V10.1.sql)
IF vPR_OK = 1 THEN
SELECT count(1) INTO vQTD_REGS FROM PONTO_ELETRONICO.TOTAIS_PERIODO_COMP_PBH WHERE TRUNC(DATA_PROCESSAMENTO)= TRUNC(SYSDATE);
vLOG := 'TAREFA 19 ANTES RODAR PROCEDURE PONTO_ELETRONICO.PRG12_TOT_PER_COMP_ADM_DIRETA ' ||vQTD_REGS|| ' REGISTROS PROCESSADOS NA TABELA PONTO_ELETRONICO.TOTAIS_PERIODO_COMP_PBH.';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;

--/*
BEGIN 
PONTO_ELETRONICO.PRG12_TOT_PER_COMP_ADM_DIRETA(TO_DATE(vDATA_INICIO,'DD/MM/YYYY'), TO_DATE(vDATA_FIM,'DD/MM/YYYY'));
 err_msg := SUBSTR('EXECUCAO_REALIZADA_COM_SUCESSO', 1, 4000);
              GRAVA_SUCESSO('FECHAMENTO_MES PROCEDURE PRG12_TOT_PER_COMP_ADM_DIRETA','000',err_msg);
exception
              when others then
               err_msg := SUBSTR(SQLERRM, 1, 4000);
              GRAVA_ERRO('FECHAMENTO_MES PROCEDURE PRG12_TOT_PER_COMP_ADM_DIRETA',SQLCODE,err_msg);
END;
--*/

SELECT count(1) INTO vQTD_REGS FROM PONTO_ELETRONICO.TOTAIS_PERIODO_COMP_PBH WHERE TRUNC(DATA_PROCESSAMENTO)= TRUNC(SYSDATE);
vLOG := 'TAREFA 19 APOS RODAR PROCEDURE PONTO_ELETRONICO.PRG12_TOT_PER_COMP_ADM_DIRETA ' ||vQTD_REGS|| ' REGISTROS PROCESSADOS NA TABELA PONTO_ELETRONICO.TOTAIS_PERIODO_COMP_PBH.';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;

SELECT count(1) INTO vQTD_REGS FROM PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT WHERE TRUNC(DATA_DADOS) = TRUNC(SYSDATE) AND CAMPO_1 = 'FECHAMENTO_MES ERRO_EXCEPTION: PRG12_TOT_PER_COMP_ADM_DIRETA';
vLOG := 'TAREFA 19 APOS RODAR PROCEDURE PONTO_ELETRONICO.PRG12_TOT_PER_COMP_ADM_DIRETA ' ||vQTD_REGS|| ' REGISTROS COM ERRO_EXCEPTION: PRG12_TOT_PER_COMP_ADM_DIRETA.';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;

ELSE
vLOG := '*******FECHAMENTO COM ERRO NA TAREFA: 18, PROCEDURE: PRG_SIT_PONTO_ORIGEM_ARTE, VERIFICAR ERRO';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;
vPR_OK :=0;
END IF;



SELECT COUNT(1) INTO vPR_OK FROM PONTO_ELETRONICO.SMARH_INT_LOG_INTEGRA_DIARIA WHERE TRUNC(DATA_ERRO)= TRUNC(SYSDATE) AND DESCRICAO_ERRO = 'EXECUCAO_REALIZADA_COM_SUCESSO' AND PROCEDURE_ERRO = 'FECHAMENTO_MES PROCEDURE PRG12_TOT_PER_COMP_ADM_DIRETA';
----------------------TAREFA TEMPORARIA 1 NOVA EM 4/4/23 --INICIO
IF vPR_OK = 1 THEN
SELECT count(1) INTO vQTD_REGS  FROM ARTERH.RHPONT_RES_SIT_DIA D LEFT OUTER JOIN RHPONT_SITUACAO SP ON SP.CODIGO = D.CODIGO_SITUACAO whEre D.login_usuario = 'IFPONTO' AND TEXTO_ASSOCIADO = 'PRT1_GREVE_PARALIZ_DESCONTO' AND TRUNC(D.DATA) BETWEEN TO_DATE(vDATA_INICIO,'DD/MM/YY') AND TO_DATE(vDATA_FIM,'DD/MM/YY')AND TRUNC(D.DT_ULT_ALTER_USUA) = TRUNC(SYSDATE);
vLOG := 'TAREFA TEMPORARIA 1 ANTES RODAR PROCEDURE PONTO_ELETRONICO.PRT1_GREVE_PARALIZ_DESCONTO ' ||vQTD_REGS|| ' REGISTROS PROCESSADOS NA TABELA ARTERH.RHPONT_RES_SIT_DIA.';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;

--/*
BEGIN 
PONTO_ELETRONICO.PRT1_GREVE_PARALIZ_DESCONTO(TO_DATE(vDATA_INICIO,'DD/MM/YYYY'), TO_DATE(vDATA_FIM,'DD/MM/YYYY'));
 err_msg := SUBSTR('EXECUCAO_REALIZADA_COM_SUCESSO', 1, 4000);
              GRAVA_SUCESSO('FECHAMENTO_MES PROCEDURE PRT1_GREVE_PARALIZ_DESCONTO','000',err_msg);
exception
              when others then
               err_msg := SUBSTR(SQLERRM, 1, 4000);
              GRAVA_ERRO('FECHAMENTO_MES PROCEDURE PRT1_GREVE_PARALIZ_DESCONTO',SQLCODE,err_msg);
END;
--*/

SELECT count(1) INTO vQTD_REGS  FROM ARTERH.RHPONT_RES_SIT_DIA D LEFT OUTER JOIN RHPONT_SITUACAO SP ON SP.CODIGO = D.CODIGO_SITUACAO whEre D.login_usuario = 'IFPONTO' AND TEXTO_ASSOCIADO = 'PRT1_GREVE_PARALIZ_DESCONTO' AND TRUNC(D.DATA) BETWEEN TO_DATE(vDATA_INICIO,'DD/MM/YY') AND TO_DATE(vDATA_FIM,'DD/MM/YY')AND TRUNC(D.DT_ULT_ALTER_USUA) = TRUNC(SYSDATE);
vLOG := 'TAREFA TEMPORARIA 1 APOS RODAR PROCEDURE PONTO_ELETRONICO.PRT1_GREVE_PARALIZ_DESCONTO ' ||vQTD_REGS|| ' REGISTROS PROCESSADOS NA TABELA ARTERH.RHPONT_RES_SIT_DIA.';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;

ELSE
vLOG := '*******FECHAMENTO COM ERRO NA TAREFA TEMPORARIA 1, PROCEDURE: PRT1_GREVE_PARALIZ_DESCONTO, VERIFICAR ERRO';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;
vPR_OK :=0;
END IF;



SELECT COUNT(1) INTO vPR_OK FROM PONTO_ELETRONICO.SMARH_INT_LOG_INTEGRA_DIARIA WHERE TRUNC(DATA_ERRO)= TRUNC(SYSDATE) AND DESCRICAO_ERRO = 'EXECUCAO_REALIZADA_COM_SUCESSO' AND PROCEDURE_ERRO = 'FECHAMENTO_MES PROCEDURE PRT1_GREVE_PARALIZ_DESCONTO';
----------------------TAREFA TEMPORARIA 1 NOVA EM 4/4/23 --FIM
-- TAREFA 20
--20ª TAREFA --(46ª tarefa NO FECHAMENTO MENSAL) ---COMPESACAO ESTAGIARIO ADM DIRETA --inicio NOVO EM 8/7/21 para ESTAGIOS
--PRG13_TOT_PER_COMP_ESTAGIO.sql--FALTA COLOCAR PARAMETROS DE DATA PARA ENCAPSULAR NA PROCEDURE (totais_periodo_comp_pbh_V1_estagio.sql)
IF vPR_OK = 1 THEN
SELECT count(1) INTO vQTD_REGS  FROM ARTERH.RHPONT_RES_SIT_DIA D LEFT OUTER JOIN RHPONT_SITUACAO SP ON SP.CODIGO = D.CODIGO_SITUACAO whEre D.login_usuario = 'IFPONTO' AND TEXTO_ASSOCIADO = 'PRG13_TOT_PER_COMP_ESTAGIO' AND TRUNC(D.DATA) BETWEEN TO_DATE(vDATA_INICIO,'DD/MM/YY') AND TO_DATE(vDATA_FIM,'DD/MM/YY')AND TRUNC(D.DT_ULT_ALTER_USUA) = TRUNC(SYSDATE);
vLOG := 'TAREFA 20 ANTES RODAR PROCEDURE PONTO_ELETRONICO.PRG13_TOT_PER_COMP_ESTAGIO ' ||vQTD_REGS|| ' REGISTROS PROCESSADOS NA TABELA ARTERH.RHPONT_RES_SIT_DIA.';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;

--/*
BEGIN 
PONTO_ELETRONICO.PRG13_TOT_PER_COMP_ESTAGIO(TO_DATE(vDATA_FIM,'DD/MM/YYYY'));
 err_msg := SUBSTR('EXECUCAO_REALIZADA_COM_SUCESSO', 1, 4000);
              GRAVA_SUCESSO('FECHAMENTO_MES PROCEDURE PRG13_TOT_PER_COMP_ESTAGIO','000',err_msg);
exception
              when others then
               err_msg := SUBSTR(SQLERRM, 1, 4000);
              GRAVA_ERRO('FECHAMENTO_MES PROCEDURE PRG13_TOT_PER_COMP_ESTAGIO',SQLCODE,err_msg);
END;
--*/

SELECT count(1) INTO vQTD_REGS  FROM ARTERH.RHPONT_RES_SIT_DIA D LEFT OUTER JOIN RHPONT_SITUACAO SP ON SP.CODIGO = D.CODIGO_SITUACAO whEre D.login_usuario = 'IFPONTO' AND TEXTO_ASSOCIADO = 'PRG13_TOT_PER_COMP_ESTAGIO' AND TRUNC(D.DATA) BETWEEN TO_DATE(vDATA_INICIO,'DD/MM/YY') AND TO_DATE(vDATA_FIM,'DD/MM/YY')AND TRUNC(D.DT_ULT_ALTER_USUA) = TRUNC(SYSDATE);
vLOG := 'TAREFA 20 APOS RODAR PROCEDURE PONTO_ELETRONICO.PRG13_TOT_PER_COMP_ESTAGIO ' ||vQTD_REGS|| ' REGISTROS PROCESSADOS NA TABELA ARTERH.RHPONT_RES_SIT_DIA.';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;

ELSE
vLOG := '*******FECHAMENTO COM ERRO NA TAREFA: 19, PROCEDURE: PRG12_TOT_PER_COMP_ADM_DIRETA, VERIFICAR ERRO';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;
vPR_OK :=0;
END IF;



SELECT COUNT(1) INTO vPR_OK FROM PONTO_ELETRONICO.SMARH_INT_LOG_INTEGRA_DIARIA WHERE TRUNC(DATA_ERRO)= TRUNC(SYSDATE) AND DESCRICAO_ERRO = 'EXECUCAO_REALIZADA_COM_SUCESSO' AND PROCEDURE_ERRO = 'FECHAMENTO_MES PROCEDURE PRG13_TOT_PER_COMP_ESTAGIO';
-- TAREFA 21
--21ª TAREFA --(47ª tarefa NO FECHAMENTO MENSAL) -----------novo em 28/5/21 ate achar erro no campo REFERENCIA IGUAL A DIA
--PRG14_ERRO_REF_HORAS.sql --FALTA COLOCAR PARAMETROS DE DATA PARA ENCAPSULAR NA PROCEDURE 
IF vPR_OK = 1 THEN

vCONTADOR :=0;
FOR C1 IN (
SELECT 
X2.DATA, X2.CODIGO_EMPRESA, X2.TIPO_CONTRATO, X2.CODIGO_CONTRATO, X2.CODIGO_SITUACAO
FROM(
SELECT 
CASE WHEN X.TIPO_REFERENCIA = 'D' AND X.REF_LANCADA <> 'UM' THEN 'ERRO' ELSE 'POSSIVEL_OK' END STATUS,
X.* FROM(
SELECT 
D.CODIGO_EMPRESA, D.TIPO_CONTRATO, D.CODIGO_CONTRATO, D.DATA, D.CODIGO_SITUACAO, S.DESCRICAO, S.TIPO_REFERENCIA, S.TIPO_SITUACAO,  
CASE WHEN D.ref_horas = 1 THEN 'UM' ELSE 'DIF_UM' END REF_LANCADA,
CASE WHEN D.LOGIN_USUARIO ='IFPONTO' THEN 'IFPONTO' ELSE 'USUARIO' END LOGIN
FROM RHPONT_RES_SIT_DIA D
LEFT OUTER JOIN RHPONT_SITUACAO S ON S.CODIGO = D.CODIGO_SITUACAO
WHERE
D.CODIGO_EMPRESA IN (SELECT DADO_ORIGEM FROM ARTERH.RHINTE_ED_IT_CONV WHERE CODIGO_CONVERSAO = 'IFP4')--NOVO EM 7/11/23--('0001','0003','0013','0014') 
AND TRUNC(D.DATA) BETWEEN TO_DATE(vDATA_INICIO,'DD/MM/YYYY') AND TO_DATE(vDATA_FIM,'DD/MM/YYYY') ----********************************************************TROCAR DATAS
ORDER BY D.CODIGO_EMPRESA, D.TIPO_CONTRATO, D.CODIGO_CONTRATO, D.DATA, D.CODIGO_SITUACAO
)X
)X2 WHERE X2.STATUS = 'ERRO'
)LOOP
vCONTADOR :=vCONTADOR+1;
UPDATE ARTERH.RHPONT_RES_SIT_DIA SET REF_HORAS = 1 WHERE TRUNC(DATA) = TO_DATE(C1.DATA,'DD/MM/YYYY') AND CODIGO_EMPRESA = C1.CODIGO_EMPRESA AND TIPO_CONTRATO = C1.TIPO_CONTRATO AND CODIGO_CONTRATO = C1.CODIGO_CONTRATO AND CODIGO_SITUACAO = C1.CODIGO_SITUACAO; COMMIT; 
END LOOP;

vLOG := 'TAREFA 21 EXECUTADA COM SUCESSO, UPDATE ARTERH.RHPONT_RES_SIT_DIA SET REF_HORAS = 1 QUANDO REFERENCIA EM DIA QUANTIDADE DE REGISTROS: '|| vCONTADOR;
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vCONTADOR); COMMIT;
vLOG := NULL;


-- TAREFA 22
--12 passo - POR ENQUANTO ALEM DE RODAR NO SIMULADOR IFPONTO 1 VEZ POR MES RODAR NOS FECHAMENTOS TAMBEM DO IFPONTO 
-- PARA TIRAR DUPLICIDADES DE SITUAcaO DE PONTO DE CESSÃƒO devera comecar a rodar juntamente com o (simulador_ifpontov3.sql)
vCONTADOR :=0;
FOR C1 IN(
SELECT 
X2.* FROM( 
SELECT  
LEAD(X.ORDEM_PONTO_NO_DIA, 1, NULL) OVER (PARTITION BY X.CODIGO_EMPRESA, X.TIPO_CONTRATO, X.CODIGO_CONTRATO, X.DATA ORDER BY X.CODIGO_SITUACAO) AS PROXIMA_ORDEM_PONTO_NO_DIA,
LEAD(X.CODIGO_SITUACAO, 1, NULL) OVER (PARTITION BY X.CODIGO_EMPRESA, X.TIPO_CONTRATO, X.CODIGO_CONTRATO, X.DATA ORDER BY X.CODIGO_SITUACAO) AS PROXIMO_CODIGO_SITUACAO,
X.* FROM(
SELECT 
ROW_NUMBER() OVER (PARTITION BY D.CODIGO_EMPRESA, D.TIPO_CONTRATO, D.CODIGO_CONTRATO, D.DATA ORDER BY D.CODIGO_SITUACAO) AS ORDEM_PONTO_NO_DIA,
D.* FROM RHPONT_RES_SIT_DIA D WHERE TRUNC(D.DATA)>= TO_DATE('01/10/2019','DD/MM/YYYY') AND D.CODIGO_SITUACAO IN ('0510','0534','0552','0553')
ORDER BY D.CODIGO_EMPRESA, D.TIPO_CONTRATO, D.CODIGO_CONTRATO, D.DATA, D.CODIGO_SITUACAO DESC
)X 
)X2 WHERE X2.PROXIMA_ORDEM_PONTO_NO_DIA IS NOT NULL
) 
LOOP 
vCONTADOR :=vCONTADOR+1;
IF C1.PROXIMA_ORDEM_PONTO_NO_DIA = 2 AND C1.PROXIMO_CODIGO_SITUACAO IN ('0552','0553') AND C1.ORDEM_PONTO_NO_DIA = 1 AND C1.CODIGO_SITUACAO IN ('0510','0534') THEN   
DELETE ARTERH.RHPONT_RES_SIT_DIA WHERE CODIGO_EMPRESA = C1.CODIGO_EMPRESA AND TIPO_CONTRATO = C1.TIPO_CONTRATO AND CODIGO_CONTRATO = C1.CODIGO_CONTRATO AND TRUNC(DATA) = TO_DATE(C1.DATA,'DD/MM/YYYY') AND CODIGO_SITUACAO = C1.CODIGO_SITUACAO AND REF_HORAS = C1.REF_HORAS AND TIPO_APURACAO = C1.TIPO_APURACAO AND TRUNC(DT_ULT_ALTER_USUA) = TO_DATE(C1.DT_ULT_ALTER_USUA ,'DD/MM/YYYY') AND LOGIN_USUARIO = C1.LOGIN_USUARIO; COMMIT;
END IF;
END LOOP;

vLOG := 'TAREFA 22 EXECUTADA COM SUCESSO, PARA TIRAR DUPLICIDADES DE SITUACAO DE PONTO DE CESSAO, QUANTIDADE DE REGISTROS: '||vCONTADOR;
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vCONTADOR); COMMIT;
vLOG := NULL;

------------------INICIO--------------------------------ANALISE GERAL DE DESCONTOS COMPARANDO ARTERH E IFPONTO------------------------------------------

-- TAREFA 23
--22ª TAREFA --(48ª tarefa NO FECHAMENTO MENSAL) --novo em 21/5/21--- gravar dados da SIT PONTO do Arterh para comparar com o fechamento do Ifponto
--PRG15_P1_TOT_SIT_PONTO_ARTE.sql --FALTA COLOCAR PARAMETROS DE DATA PARA ENCAPSULAR NA PROCEDURE (primeira_parte_TOTAIS_PERIODO_SIT_PONTO_ARTE_v1.sql) ---grava os dados do contrato
SELECT count(1) INTO vQTD_REGS FROM ARTERH.TOTAIS_PERIODO_SIT_PONTO_ARTE WHERE TRUNC(DATA_PROCESSAMENTO) = TRUNC(SYSDATE);
vLOG := 'TAREFA 23 ANTES RODAR PROCEDURE PONTO_ELETRONICO.PRG15_P1_TOT_SIT_PONTO_ARTE ' ||vQTD_REGS|| ' REGISTROS PROCESSADOS NA TABELA ARTERH.TOTAIS_PERIODO_SIT_PONTO_ARTE.';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;

--/*
BEGIN 
PONTO_ELETRONICO.PRG15_P1_TOT_SIT_PONTO_ARTE(TO_DATE(vDATA_INICIO,'DD/MM/YYYY'), TO_DATE(vDATA_FIM,'DD/MM/YYYY'));
 err_msg := SUBSTR('EXECUCAO_REALIZADA_COM_SUCESSO', 1, 4000);
              GRAVA_SUCESSO('FECHAMENTO_MES PROCEDURE PRG15_P1_TOT_SIT_PONTO_ARTE','000',err_msg);
exception
              when others then
               err_msg := SUBSTR(SQLERRM, 1, 4000);
              GRAVA_ERRO('FECHAMENTO_MES PROCEDURE PRG15_P1_TOT_SIT_PONTO_ARTE',SQLCODE,err_msg);
END;
--*/

SELECT count(1) INTO vQTD_REGS FROM ARTERH.TOTAIS_PERIODO_SIT_PONTO_ARTE WHERE TRUNC(DATA_PROCESSAMENTO) = TRUNC(SYSDATE);
vLOG := 'TAREFA 23 APOS RODAR PROCEDURE PONTO_ELETRONICO.PRG15_P1_TOT_SIT_PONTO_ARTE ' ||vQTD_REGS|| ' REGISTROS PROCESSADOS NA TABELA ARTERH.TOTAIS_PERIODO_SIT_PONTO_ARTE.';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;

ELSE
vLOG := '*******FECHAMENTO COM ERRO NA TAREFA: 20, PROCEDURE: PRG13_TOT_PER_COMP_ESTAGIO, VERIFICAR ERRO';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;
vPR_OK :=0;
END IF;



SELECT COUNT(1) INTO vPR_OK FROM PONTO_ELETRONICO.SMARH_INT_LOG_INTEGRA_DIARIA WHERE TRUNC(DATA_ERRO)= TRUNC(SYSDATE) AND DESCRICAO_ERRO = 'EXECUCAO_REALIZADA_COM_SUCESSO' AND PROCEDURE_ERRO = 'FECHAMENTO_MES PROCEDURE PRG15_P1_TOT_SIT_PONTO_ARTE';
-- TAREFA 24
--23ª TAREFA --(49ª tarefa NO FECHAMENTO MENSAL) --novo em 21/5/21--- gravar dados da SIT PONTO do Arterh para comparar com o fechamento do Ifponto
--PRG16_P2_TOT_SIT_PONTO_ARTE.sql--FALTA COLOCAR PARAMETROS DE DATA PARA ENCAPSULAR NA PROCEDURE (segunda_parte_TOTAIS_PERIODO_SIT_PONTO_ARTE_v3.sql) --grava os totais das sit ponto
IF vPR_OK = 1 THEN
--/*
BEGIN 
PONTO_ELETRONICO.PRG16_P2_TOT_SIT_PONTO_ARTE(TO_DATE(vDATA_INICIO,'DD/MM/YYYY'), TO_DATE(vDATA_FIM,'DD/MM/YYYY'));
 err_msg := SUBSTR('EXECUCAO_REALIZADA_COM_SUCESSO', 1, 4000);
              GRAVA_SUCESSO('FECHAMENTO_MES PROCEDURE PRG16_P2_TOT_SIT_PONTO_ARTE','000',err_msg);
exception
              when others then
               err_msg := SUBSTR(SQLERRM, 1, 4000);
              GRAVA_ERRO('FECHAMENTO_MES PROCEDURE PRG16_P2_TOT_SIT_PONTO_ARTE',SQLCODE,err_msg);
END;
--*/
vLOG := 'TAREFA 24 EXECUTADA COM SUCESSO, PROCEDURE PRG16_P2_TOT_SIT_PONTO_ARTE.';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;

ELSE
vLOG := '*******FECHAMENTO COM ERRO NA TAREFA: 23, PROCEDURE: PRG15_P1_TOT_SIT_PONTO_ARTE, VERIFICAR ERRO';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;
vPR_OK :=0;
END IF;



SELECT COUNT(1) INTO vPR_OK FROM PONTO_ELETRONICO.SMARH_INT_LOG_INTEGRA_DIARIA WHERE TRUNC(DATA_ERRO)= TRUNC(SYSDATE) AND DESCRICAO_ERRO = 'EXECUCAO_REALIZADA_COM_SUCESSO' AND PROCEDURE_ERRO = 'FECHAMENTO_MES PROCEDURE PRG16_P2_TOT_SIT_PONTO_ARTE';
-- TAREFA 25
--24ª TAREFA --(50ª tarefa NO FECHAMENTO MENSAL) ---NOVO EM 8/7/21 PARA GRAVAR SIT PONTO 1013 NO ULTIMO DIA DO ESTAGIARIO assim como tambem todas pessoas com escala COMPENSAÇÃO = Diária
--PRG17_DESCONTO_ESTAGIO_MES.sql--FALTA COLOCAR PARAMETROS DE DATA PARA ENCAPSULAR NA PROCEDURE (desconto_mes_estagio_apenas_sit_func_1013_v1.sql)
IF vPR_OK = 1 THEN
SELECT count(1) INTO vQTD_REGS  FROM ARTERH.RHPONT_RES_SIT_DIA D LEFT OUTER JOIN RHPONT_SITUACAO SP ON SP.CODIGO = D.CODIGO_SITUACAO whEre D.login_usuario = 'IFPONTO' AND TEXTO_ASSOCIADO = 'PRG17_DESCONTO_ESTAGIO_MES' AND TRUNC(D.DATA) BETWEEN TO_DATE(vDATA_INICIO,'DD/MM/YY') AND TO_DATE(vDATA_FIM,'DD/MM/YY')AND TRUNC(D.DT_ULT_ALTER_USUA) = TRUNC(SYSDATE);
vLOG := 'TAREFA 25 ANTES RODAR PROCEDURE PONTO_ELETRONICO.PRG17_DESCONTO_ESTAGIO_MES ' ||vQTD_REGS|| ' REGISTROS PROCESSADOS NA TABELA ARTERH.RHPONT_RES_SIT_DIA.';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;

--/*
BEGIN 
PONTO_ELETRONICO.PRG17_DESCONTO_ESTAGIO_MES(TO_DATE(vDATA_INICIO,'DD/MM/YYYY'), TO_DATE(vDATA_FIM,'DD/MM/YYYY'));
 err_msg := SUBSTR('EXECUCAO_REALIZADA_COM_SUCESSO', 1, 4000);
              GRAVA_SUCESSO('FECHAMENTO_MES PROCEDURE PRG17_DESCONTO_ESTAGIO_MES','000',err_msg);
exception
              when others then
               err_msg := SUBSTR(SQLERRM, 1, 4000);
              GRAVA_ERRO('FECHAMENTO_MES PROCEDURE PRG17_DESCONTO_ESTAGIO_MES',SQLCODE,err_msg);
END;
--*/

SELECT count(1) INTO vQTD_REGS  FROM ARTERH.RHPONT_RES_SIT_DIA D LEFT OUTER JOIN RHPONT_SITUACAO SP ON SP.CODIGO = D.CODIGO_SITUACAO whEre D.login_usuario = 'IFPONTO' AND TEXTO_ASSOCIADO = 'PRG17_DESCONTO_ESTAGIO_MES' AND TRUNC(D.DATA) BETWEEN TO_DATE(vDATA_INICIO,'DD/MM/YY') AND TO_DATE(vDATA_FIM,'DD/MM/YY')AND TRUNC(D.DT_ULT_ALTER_USUA) = TRUNC(SYSDATE);
vLOG := 'TAREFA 25 APOS RODAR PROCEDURE PONTO_ELETRONICO.PRG17_DESCONTO_ESTAGIO_MES ' ||vQTD_REGS|| ' REGISTROS PROCESSADOS NA TABELA ARTERH.RHPONT_RES_SIT_DIA.';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;

ELSE
vLOG := '*******FECHAMENTO COM ERRO NA TAREFA: 24, PROCEDURE: PRG16_P2_TOT_SIT_PONTO_ARTE, VERIFICAR ERRO';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;
vPR_OK :=0;
END IF;



--COMENTADO EM 5/9/23 DEVIDO AO MESMO ERRO NOS 2 ULTIMOS FECHAMENTOS
--DESCOMENTADO EM 7/11/23
SELECT COUNT(1) INTO vPR_OK FROM PONTO_ELETRONICO.SMARH_INT_LOG_INTEGRA_DIARIA WHERE TRUNC(DATA_ERRO)= TRUNC(SYSDATE) AND DESCRICAO_ERRO = 'EXECUCAO_REALIZADA_COM_SUCESSO' AND PROCEDURE_ERRO = 'FECHAMENTO_MES PROCEDURE PRG17_DESCONTO_ESTAGIO_MES';
-- TAREFA 26
--25ª TAREFA -- (51ª tarefa NO FECHAMENTO MENSAL)--em 12/7/21 fazer assim até achar solucao melhor, deletar e rodar novamente para atualizar os dados do desconto
--PRG18_P3_TOT_SIT_PONTO_ARTE.sql --FALTA COLOCAR PARAMETROS DE DATA PARA ENCAPSULAR NA PROCEDURE (primeira_parte_TOTAIS_PERIODO_SIT_PONTO_ARTE_v1_p2.sql)
IF vPR_OK = 1 THEN
SELECT count(1) INTO vQTD_REGS FROM ARTERH.TOTAIS_PERIODO_SIT_PONTO_ARTE WHERE TRUNC(DATA_PROCESSAMENTO) = TRUNC(SYSDATE);
vLOG := 'TAREFA 26 ANTES RODAR PROCEDURE PONTO_ELETRONICO.PRG18_P3_TOT_SIT_PONTO_ARTE ' ||vQTD_REGS|| ' REGISTROS PROCESSADOS NA TABELA ARTERH.TOTAIS_PERIODO_SIT_PONTO_ARTE.';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;

--/*
BEGIN 
PONTO_ELETRONICO.PRG18_P3_TOT_SIT_PONTO_ARTE(TO_DATE(vDATA_INICIO,'DD/MM/YYYY'), TO_DATE(vDATA_FIM,'DD/MM/YYYY'));
 err_msg := SUBSTR('EXECUCAO_REALIZADA_COM_SUCESSO', 1, 4000);
              GRAVA_SUCESSO('FECHAMENTO_MES PROCEDURE PRG18_P3_TOT_SIT_PONTO_ARTE','000',err_msg);
exception
              when others then
               err_msg := SUBSTR(SQLERRM, 1, 4000);
              GRAVA_ERRO('FECHAMENTO_MES PROCEDURE PRG18_P3_TOT_SIT_PONTO_ARTE',SQLCODE,err_msg);
END;
--*/

SELECT count(1) INTO vQTD_REGS FROM ARTERH.TOTAIS_PERIODO_SIT_PONTO_ARTE WHERE TRUNC(DATA_PROCESSAMENTO) = TRUNC(SYSDATE);
vLOG := 'TAREFA 26 APOS RODAR PROCEDURE PONTO_ELETRONICO.PRG18_P3_TOT_SIT_PONTO_ARTE ' ||vQTD_REGS|| ' REGISTROS PROCESSADOS NA TABELA ARTERH.TOTAIS_PERIODO_SIT_PONTO_ARTE.';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;

ELSE
vLOG := '*******FECHAMENTO COM ERRO NA TAREFA: 25, PROCEDURE: PRG17_DESCONTO_ESTAGIO_MES, VERIFICAR ERRO';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;
vPR_OK :=0;
END IF;



SELECT COUNT(1) INTO vPR_OK FROM PONTO_ELETRONICO.SMARH_INT_LOG_INTEGRA_DIARIA WHERE TRUNC(DATA_ERRO)= TRUNC(SYSDATE) AND DESCRICAO_ERRO = 'EXECUCAO_REALIZADA_COM_SUCESSO' AND PROCEDURE_ERRO = 'FECHAMENTO_MES PROCEDURE PRG18_P3_TOT_SIT_PONTO_ARTE';
-- TAREFA 27
--26ª TAREFA --(52ª tarefa NO FECHAMENTO MENSAL)
--PRG19_P4_TOT_SIT_PONTO_ARTE.sql --FALTA COLOCAR PARAMETROS DE DATA PARA ENCAPSULAR NA PROCEDURE (segunda_parte_TOTAIS_PERIODO_SIT_PONTO_ARTE_v3_p2.sql)
IF vPR_OK = 1 THEN
--/*
BEGIN 
PONTO_ELETRONICO.PRG19_P4_TOT_SIT_PONTO_ARTE(TO_DATE(vDATA_INICIO,'DD/MM/YYYY'), TO_DATE(vDATA_FIM,'DD/MM/YYYY'));
 err_msg := SUBSTR('EXECUCAO_REALIZADA_COM_SUCESSO', 1, 4000);
              GRAVA_SUCESSO('FECHAMENTO_MES PROCEDURE PRG19_P4_TOT_SIT_PONTO_ARTE','000',err_msg);
exception
              when others then
               err_msg := SUBSTR(SQLERRM, 1, 4000);
              GRAVA_ERRO('FECHAMENTO_MES PROCEDURE PRG19_P4_TOT_SIT_PONTO_ARTE',SQLCODE,err_msg);
END;
--*/
vLOG := 'TAREFA 27 EXECUTADA COM SUCESSO, PROCEDURE PRG19_P4_TOT_SIT_PONTO_ARTE.';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;

ELSE
vLOG := '*******FECHAMENTO COM ERRO NA TAREFA: 26, PROCEDURE: PRG18_P3_TOT_SIT_PONTO_ARTE, VERIFICAR ERRO';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;
vPR_OK :=0;
END IF;



------------------FIM-------------------------------ANALISE GERAL DE DESCONTOS COMPARANDO ARTERH E IFPONTO------------------------------------------
SELECT COUNT(1) INTO vPR_OK FROM PONTO_ELETRONICO.SMARH_INT_LOG_INTEGRA_DIARIA WHERE TRUNC(DATA_ERRO)= TRUNC(SYSDATE) AND DESCRICAO_ERRO = 'EXECUCAO_REALIZADA_COM_SUCESSO' AND PROCEDURE_ERRO = 'FECHAMENTO_MES PROCEDURE PRG19_P4_TOT_SIT_PONTO_ARTE';
-- TAREFA 28
--57ª tarefa--14 passo
---******* em 3/9/20--importante aplicar o comando para liberar a data de fechamento do Arterh apenas quando finalizar o processamento, copiar o resultado, salvar e executar em producao
IF vPR_OK = 1 THEN

SELECT count(1) INTO vQTD_REGS FROM ARTERH.RHPONT_APUR_AGRUP WHERE C_LIVRE_SELEC01 = 1 AND STATUS_APUR = 'C' AND C_LIVRE_DATA02 IS NULL AND C_LIVRE_DATA03 IS NULL;
vLOG := 'TAREFA 28 ANTES RHPONT_APUR_AGRUP set STATUS_APUR ' ||vQTD_REGS|| ' REGISTROS PROCESSADOS NA TABELA ARTERH.RHPONT_APUR_AGRUP.';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;

FOR C1 IN (
SELECT
'update RHPONT_APUR_AGRUP set STATUS_APUR = ''P'', C_LIVRE_DATA02 = SYSDATE WHERE CODIGO_EMPRESA = ''' || CODIGO_EMPRESA||''' AND OCORRENCIA = '||OCORRENCIA ||';' comando,
CODIGO_EMPRESA, TIPO_APUR, OCORRENCIA, DATA_INI_VIGENCIA, DATA_FIM_VIGENCIA, DATA_INI_FOLHA, DATA_FIM_FOLHA, ID_AGRUP, STATUS_APUR
, C_LIVRE_SELEC01 TIPO_FECHAMENTO, C_LIVRE_OPCAO01 FECHAMENTO_LOCAL_UNICO, C_LIVRE_DATA01 DATA_CADASTRO, C_LIVRE_DATA02 DATA_PROCESSAMENTO, C_LIVRE_DATA03 DATA_ESTORNO
FROM ARTERH.RHPONT_APUR_AGRUP WHERE 
C_LIVRE_SELEC01 = 1 AND STATUS_APUR = 'C' AND C_LIVRE_DATA02 IS NULL AND C_LIVRE_DATA03 IS NULL
)LOOP
UPDATE ARTERH.RHPONT_APUR_AGRUP set STATUS_APUR = 'P', C_LIVRE_DATA02 = SYSDATE WHERE CODIGO_EMPRESA = C1.CODIGO_EMPRESA AND OCORRENCIA = C1.OCORRENCIA; COMMIT;
END LOOP;

SELECT count(1) INTO vQTD_REGS FROM ARTERH.RHPONT_APUR_AGRUP WHERE C_LIVRE_SELEC01 = 1 AND STATUS_APUR = 'C' AND C_LIVRE_DATA02 IS NULL AND C_LIVRE_DATA03 IS NULL;
vLOG := 'TAREFA 28 DEPOIS RHPONT_APUR_AGRUP set STATUS_APUR ' ||vQTD_REGS|| ' REGISTROS PROCESSADOS NA TABELA ARTERH.RHPONT_APUR_AGRUP.';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;



-- TAREFA 29
--58ª tarefa --em 4/6/21 kellyson 
--para deixar de usar a view que esta causando possivel lentidão nas integrações diarias do Ifponto e outros processos como arquivo da TEG
--deve rodar toda fez que fazer o fechamento Ifponto no dia 11 dos meses e no primeiro dia do mes quando usar o simulador_ifponto
--sql_insert_tabela_SUGESP_DATA_APURACAO_FREQUENC.sql>sql_insert_tabela_SUGESP_DATA_APURACAO_FREQUENC_v2.sql --v2 novo em 26/8/21
SELECT count(1) INTO vQTD_REGS FROM ARTERH.SUGESP_DATA_APURACAO_FREQUENC;
vLOG := 'TAREFA 29 ANTES ATUALIZAR DATAS ' ||vQTD_REGS|| ' REGISTROS NA TABELA ARTERH.SUGESP_DATA_APURACAO_FREQUENC.';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS);COMMIT;
vLOG := NULL;

--1º LIMPA A TABELA PARA POPULAR LOGO EM SEGUIDA COM A LOGICA ABAIXO
DELETE ARTERH.SUGESP_DATA_APURACAO_FREQUENC; COMMIT;

FOR C1 IN(
SELECT IFP.DT_ULT_FECHAMENTO_IFPONTO, (SELECT MAX(x.data_fim_folha)from RHPONT_APUR_AGRUP x where x.codigo_empresa = '0001' and x.tipo_apur = 'F' AND c_livre_selec01 = 2 AND id_agrup = 152123)FECHAMENTO_GERAL,
A.ID_AGRUP, A.nivel_agrup_estrut, A.CODIGO_EMPRESA, 'G' TIPO_AGRUP,  A.COD_CGERENC1 COD_AGRUP1, A.COD_CGERENC2 COD_AGRUP2, A.COD_CGERENC3 COD_AGRUP3, A.COD_CGERENC4 COD_AGRUP4, A.COD_CGERENC5 COD_AGRUP5, A.COD_CGERENC6 COD_AGRUP6,
A.DESCRICAO, A.ABREVIACAO, A.CGC, A.RAZAO_SOCIAL, A.DATA_EXTINCAO
FROM ARTERH.RHORGA_CUSTO_GEREN A LEFT OUTER JOIN
(SELECT LPAD(SUBSTR(CODIGO,1,2),4,0)EMPRESA, LPAD(SUBSTR(CODIGO,4,6),6,0)COD1, LPAD(SUBSTR(CODIGO,11,6),6,0)COD2, LPAD(SUBSTR(CODIGO,18,6),6,0)COD3, LPAD(SUBSTR(CODIGO,25,6),6,0)COD4, LPAD(SUBSTR(CODIGO,32,6),6,0)COD5, LPAD(SUBSTR(CODIGO,39,6),6,0)COD6
,(SELECT MAX(TRUNC(DATA_FIM)) FROM PONTO_ELETRONICO.IFPONTO_FECHAMENTO)DT_ULT_FECHAMENTO_IFPONTO
,(SELECT MAX(x.data_fim_folha)from RHPONT_APUR_AGRUP x where x.codigo_empresa = '0001' and x.tipo_apur = 'F' AND c_livre_selec01 = 2 AND id_agrup = 152123)FECHAMENTO_GERAL
FROM PONTO_ELETRONICO.IFPONTO_FECHAMENTO WHERE TRUNC(DT_SAIU_ARTE) = (SELECT MAX(TRUNC(DT_SAIU_ARTE)) FROM PONTO_ELETRONICO.IFPONTO_FECHAMENTO) )IFP
ON IFP.EMPRESA = A.CODIGO_EMPRESA AND IFP.COD1 =A.COD_CGERENC1 AND IFP.COD2 = A.COD_CGERENC2 AND IFP.COD3 = A.COD_CGERENC3 AND IFP.COD4 = A.COD_CGERENC4 AND IFP.COD5 = A.COD_CGERENC5 AND IFP.COD6 = A.COD_CGERENC6
ORDER BY A.CODIGO_EMPRESA, A.COD_CGERENC1, A.COD_CGERENC2, A.COD_CGERENC3, A.COD_CGERENC4, A.COD_CGERENC5, A.COD_CGERENC6
)LOOP
IF C1.DT_ULT_FECHAMENTO_IFPONTO IS NOT NULL THEN
INSERT INTO ARTERH.SUGESP_DATA_APURACAO_FREQUENC
(FECHAMENTO_AGRUPADOR, FECHAMENTO_GERAL, ID_AGRUP,  ORDEM_ESTRUT, CODIGO_EMPRESA, TIPO_AGRUP, COD_AGRUP1, COD_AGRUP2, COD_AGRUP3, COD_AGRUP4, COD_AGRUP5, COD_AGRUP6, DESCRICAO, ABREVIACAO, CGC, RAZAO_SOCIAL, DATA_EXTINCAO)
VALUES(C1.DT_ULT_FECHAMENTO_IFPONTO, C1.FECHAMENTO_GERAL, C1.ID_AGRUP, C1.nivel_agrup_estrut, C1.CODIGO_EMPRESA, C1.TIPO_AGRUP, C1.COD_AGRUP1, C1.COD_AGRUP2, C1.COD_AGRUP3, C1.COD_AGRUP4, C1.COD_AGRUP5, C1.COD_AGRUP6, C1.DESCRICAO, C1.ABREVIACAO, C1.CGC, C1.RAZAO_SOCIAL, C1.DATA_EXTINCAO);COMMIT;
ELSE
INSERT INTO ARTERH.SUGESP_DATA_APURACAO_FREQUENC
(FECHAMENTO_AGRUPADOR, FECHAMENTO_GERAL, ID_AGRUP,  ORDEM_ESTRUT, CODIGO_EMPRESA, TIPO_AGRUP, COD_AGRUP1, COD_AGRUP2, COD_AGRUP3, COD_AGRUP4, COD_AGRUP5, COD_AGRUP6, DESCRICAO, ABREVIACAO, CGC, RAZAO_SOCIAL, DATA_EXTINCAO)
VALUES(NULL, C1.FECHAMENTO_GERAL, C1.ID_AGRUP, C1.nivel_agrup_estrut, C1.CODIGO_EMPRESA, C1.TIPO_AGRUP, C1.COD_AGRUP1, C1.COD_AGRUP2, C1.COD_AGRUP3, C1.COD_AGRUP4, C1.COD_AGRUP5, C1.COD_AGRUP6, C1.DESCRICAO, C1.ABREVIACAO, C1.CGC, C1.RAZAO_SOCIAL, C1.DATA_EXTINCAO);COMMIT;
END IF;
END LOOP;

FOR C1 IN (
--EM 2/9/21 TIRAR DUPLICIDADES, tem que rodar o script abaixo 
select 
'delete SUGESP_DATA_APURACAO_FREQUENC where rowid = '''||x3.rowid||''';' comando,
x3.* from (
select 
rowid, row_number () over(partition by d.id_agrup order by d.id_agrup) ordem_id,
d.* FROM ARTERH.SUGESP_DATA_APURACAO_FREQUENC d where exists (
select x2.* from (SELECT x.CODIGO_EMPRESA, x.COD_AGRUP1, x.COD_AGRUP2, x.COD_AGRUP3, x.COD_AGRUP4, x.COD_AGRUP5, x.COD_AGRUP6, COUNT(1)QUANT FROM ARTERH.SUGESP_DATA_APURACAO_FREQUENC X 
group by  x.CODIGO_EMPRESA, x.COD_AGRUP1, x.COD_AGRUP2, x.COD_AGRUP3, x.COD_AGRUP4, x.COD_AGRUP5, x.COD_AGRUP6 HAVING COUNT(1)>1
)x2 where x2.CODIGO_EMPRESA = d.CODIGO_EMPRESA and x2.COD_AGRUP1 = d.COD_AGRUP1 and x2.COD_AGRUP2 = d.COD_AGRUP2 and x2.COD_AGRUP3 = d.COD_AGRUP3 and x2.COD_AGRUP4 = d.COD_AGRUP4 and x2.COD_AGRUP5 = d.COD_AGRUP5 and x2.COD_AGRUP6 = d.COD_AGRUP6
)order by d.id_agrup
)x3 where x3.ordem_id >1
) LOOP
DELETE ARTERH.SUGESP_DATA_APURACAO_FREQUENC where rowid = C1.rowid;COMMIT;
END LOOP;

SELECT count(1) INTO vQTD_REGS FROM ARTERH.SUGESP_DATA_APURACAO_FREQUENC;
vLOG := 'TAREFA 29 DEPOIS ATUALIZAR DATAS ' ||vQTD_REGS|| ' REGISTROS NA TABELA ARTERH.SUGESP_DATA_APURACAO_FREQUENC.';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS);COMMIT;
vLOG := NULL;



--****INICIO**************RELATORIOS GETED GERAR MENSAL***********************

--TAREFA 30 PRR_DATA_ESPECIAL_SMSA
--13ª TAREFA--PARA GERAR O RELATORIO E PASSAR PARA A GETED, SALVAR EM CS2 E ABRIR NO EXCEL DELIMITANDO POR PIPE 
--(relatorio_final_data_especial_SMSA.sql) 
--SELECT CONSIDERACOES FROM PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT WHERE TRUNC(DATA_DADOS) = TRUNC(SYSDATE) AND CAMPO_1 = 'PRR_DATA_ESPECIAL_SMSA'
--/*
BEGIN 
PONTO_ELETRONICO.PRR_DATA_ESPECIAL_SMSA(TO_DATE(vDATA_INICIO,'DD/MM/YYYY'), TO_DATE(vDATA_FIM,'DD/MM/YYYY'));
 err_msg := SUBSTR('EXECUCAO_REALIZADA_COM_SUCESSO', 1, 4000);
              GRAVA_SUCESSO('FECHAMENTO_MES PROCEDURE PRR_DATA_ESPECIAL_SMSA','000',err_msg);
exception
              when others then
               err_msg := SUBSTR(SQLERRM, 1, 4000);
              GRAVA_ERRO('FECHAMENTO_MES PROCEDURE PRR_DATA_ESPECIAL_SMSA',SQLCODE,err_msg);
END;
--*/
SELECT count(1) INTO vQTD_REGS FROM PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT WHERE TRUNC(DATA_DADOS) = TRUNC(SYSDATE) AND CAMPO_1 = 'PRR_DATA_ESPECIAL_SMSA';
vLOG := 'TAREFA 30 EXECUTADA COM SUCESSO RELATORIO PROCEDURE PRR_DATA_ESPECIAL_SMSA, GERANDO '||vQTD_REGS|| ' REGISTROS.';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;

ELSE
vLOG := '*******FECHAMENTO COM ERRO NA TAREFA: 27, PROCEDURE: PRG19_P4_TOT_SIT_PONTO_ARTE, VERIFICAR ERRO';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;
vPR_OK :=0;
END IF;



SELECT COUNT(1) INTO vPR_OK FROM PONTO_ELETRONICO.SMARH_INT_LOG_INTEGRA_DIARIA WHERE TRUNC(DATA_ERRO)= TRUNC(SYSDATE) AND DESCRICAO_ERRO = 'EXECUCAO_REALIZADA_COM_SUCESSO' AND PROCEDURE_ERRO = 'FECHAMENTO_MES PROCEDURE PRR_DATA_ESPECIAL_SMSA';
-- TAREFA 31 PRR_VACINACAO_SMSA
--17ª TAREFA
--(relatorio_final_vacinacao_SMSA.sql)--relatorio final
--FECHAMENTO MENSAL 41ª tarefa
--SELECT CONSIDERACOES FROM PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT WHERE TRUNC(DATA_DADOS) = TRUNC(SYSDATE) AND CAMPO_1 = 'PRR_VACINACAO_SMSA'
IF vPR_OK = 1 THEN
--/*
BEGIN 
PONTO_ELETRONICO.PRR_VACINACAO_SMSA(TO_DATE(vDATA_INICIO,'DD/MM/YYYY'), TO_DATE(vDATA_FIM,'DD/MM/YYYY'));
 err_msg := SUBSTR('EXECUCAO_REALIZADA_COM_SUCESSO', 1, 4000);
              GRAVA_SUCESSO('FECHAMENTO_MES PROCEDURE PRR_VACINACAO_SMSA','000',err_msg);
exception
              when others then
               err_msg := SUBSTR(SQLERRM, 1, 4000);
              GRAVA_ERRO('FECHAMENTO_MES PROCEDURE PRR_VACINACAO_SMSA',SQLCODE,err_msg);
END;
--*/
SELECT count(1) INTO vQTD_REGS FROM PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT WHERE TRUNC(DATA_DADOS) = TRUNC(SYSDATE) AND CAMPO_1 = 'PRR_VACINACAO_SMSA';
vLOG := 'TAREFA 31 EXECUTADA COM SUCESSO RELATORIO PROCEDURE PRR_VACINACAO_SMSA, GERANDO '||vQTD_REGS|| ' REGISTROS.';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;

ELSE
vLOG := '*******FECHAMENTO COM ERRO NA TAREFA: 30, PROCEDURE: PRR_DATA_ESPECIAL_SMSA, VERIFICAR ERRO';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;
vPR_OK :=0;
END IF;



SELECT COUNT(1) INTO vPR_OK FROM PONTO_ELETRONICO.SMARH_INT_LOG_INTEGRA_DIARIA WHERE TRUNC(DATA_ERRO)= TRUNC(SYSDATE) AND DESCRICAO_ERRO = 'EXECUCAO_REALIZADA_COM_SUCESSO' AND PROCEDURE_ERRO = 'FECHAMENTO_MES PROCEDURE PRR_VACINACAO_SMSA';
-- TAREFA 32 PRR_PLANTOES_ABONO_SMSA
--(relatorio_final_verbas_SMSA.sql)-- usar primeiro em 11/1/22 --*************************************************trocar datas
--SELECT CONSIDERACOES FROM PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT WHERE TRUNC(DATA_DADOS) = TRUNC(SYSDATE) AND CAMPO_1 = 'PRR_PLANTOES_ABONO_SMSA'
IF vPR_OK = 1 THEN
--/*
BEGIN 
PONTO_ELETRONICO.PRR_PLANTOES_ABONO_SMSA(TO_DATE(vDATA_INICIO,'DD/MM/YYYY'), TO_DATE(vDATA_FIM,'DD/MM/YYYY'));
 err_msg := SUBSTR('EXECUCAO_REALIZADA_COM_SUCESSO', 1, 4000);
              GRAVA_SUCESSO('FECHAMENTO_MES PROCEDURE PRR_PLANTOES_ABONO_SMSA','000',err_msg);
exception
              when others then
               err_msg := SUBSTR(SQLERRM, 1, 4000);
              GRAVA_ERRO('FECHAMENTO_MES PROCEDURE PRR_PLANTOES_ABONO_SMSA',SQLCODE,err_msg);
END;
--*/
SELECT count(1) INTO vQTD_REGS FROM PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT WHERE TRUNC(DATA_DADOS) = TRUNC(SYSDATE) AND CAMPO_1 = 'PRR_PLANTOES_ABONO_SMSA';
vLOG := 'TAREFA 32 EXECUTADA COM SUCESSO RELATORIO PROCEDURE PRR_PLANTOES_ABONO_SMSA, GERANDO '||vQTD_REGS|| ' REGISTROS.';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;

ELSE
vLOG := '*******FECHAMENTO COM ERRO NA TAREFA: 31, PROCEDURE: PRR_VACINACAO_SMSA, VERIFICAR ERRO';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;
vPR_OK :=0;
END IF;



SELECT COUNT(1) INTO vPR_OK FROM PONTO_ELETRONICO.SMARH_INT_LOG_INTEGRA_DIARIA WHERE TRUNC(DATA_ERRO)= TRUNC(SYSDATE) AND DESCRICAO_ERRO = 'EXECUCAO_REALIZADA_COM_SUCESSO' AND PROCEDURE_ERRO = 'FECHAMENTO_MES PROCEDURE PRR_PLANTOES_ABONO_SMSA';
-- TAREFA 33 PRR_LIMITES_PLANTOES_SMSA
--(relat_limites_plantoes_h_extras_v1.sql)--*************************************************trocar data
--FECHAMENTO MENSAL 43ª tarefa
-- TAREFA 33 PRR_LIMITES_PLANTOES_SMSA
--SELECT CONSIDERACOES FROM PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT WHERE TRUNC(DATA_DADOS) = TRUNC(SYSDATE) AND CAMPO_1 = 'PRR_LIMITES_PLANTOES_SMSA'
IF vPR_OK = 1 THEN
--/*
BEGIN 
PONTO_ELETRONICO.PRR_LIMITES_PLANTOES_SMSA(TO_DATE(vDATA_INICIO,'DD/MM/YYYY'), TO_DATE(vDATA_FIM,'DD/MM/YYYY'));
 err_msg := SUBSTR('EXECUCAO_REALIZADA_COM_SUCESSO', 1, 4000);
              GRAVA_SUCESSO('FECHAMENTO_MES PROCEDURE PRR_LIMITES_PLANTOES_SMSA','000',err_msg);
exception
              when others then
               err_msg := SUBSTR(SQLERRM, 1, 4000);
              GRAVA_ERRO('FECHAMENTO_MES PROCEDURE PRR_LIMITES_PLANTOES_SMSA',SQLCODE,err_msg);
END;
--*/
SELECT count(1) INTO vQTD_REGS FROM PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT WHERE TRUNC(DATA_DADOS) = TRUNC(SYSDATE) AND CAMPO_1 = 'PRR_LIMITES_PLANTOES_SMSA';
vLOG := 'TAREFA 33 EXECUTADA COM SUCESSO RELATORIO PROCEDURE PRR_LIMITES_PLANTOES_SMSA, GERANDO '||vQTD_REGS|| ' REGISTROS.';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;

ELSE
vLOG := '*******FECHAMENTO COM ERRO NA TAREFA: 32, PROCEDURE: PRR_PLANTOES_ABONO_SMSA, VERIFICAR ERRO';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;
vPR_OK :=0;
END IF;



SELECT COUNT(1) INTO vPR_OK FROM PONTO_ELETRONICO.SMARH_INT_LOG_INTEGRA_DIARIA WHERE TRUNC(DATA_ERRO)= TRUNC(SYSDATE) AND DESCRICAO_ERRO = 'EXECUCAO_REALIZADA_COM_SUCESSO' AND PROCEDURE_ERRO = 'FECHAMENTO_MES PROCEDURE PRR_LIMITES_PLANTOES_SMSA';
-- TAREFA 34 (relat_sobreavisos_programados_nao_executados.sql)
--*****FIM********RELATORIO VERBAS ESPECIAIS DA SMSA, VAI PRECISAR? SE SIM TRABALHAR PARA FICAR DENTRO DO ARTERH OS ABAIXO LISTADOS
-- TAREFA 34 PRR_SOBREAVISO_NAO_SMSA
--SELECT CONSIDERACOES FROM PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT WHERE TRUNC(DATA_DADOS) = TRUNC(SYSDATE) AND CAMPO_1 = 'PRR_SOBREAVISO_NAO_SMSA'
IF vPR_OK = 1 THEN
--/*
BEGIN 
PONTO_ELETRONICO.PRR_SOBREAVISO_NAO_SMSA;
 err_msg := SUBSTR('EXECUCAO_REALIZADA_COM_SUCESSO', 1, 4000);
              GRAVA_SUCESSO('FECHAMENTO_MES PROCEDURE PRR_SOBREAVISO_NAO_SMSA','000',err_msg);
exception
              when others then
               err_msg := SUBSTR(SQLERRM, 1, 4000);
              GRAVA_ERRO('FECHAMENTO_MES PROCEDURE PRR_SOBREAVISO_NAO_SMSA',SQLCODE,err_msg);
END;
--*/
SELECT count(1) INTO vQTD_REGS FROM PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT WHERE TRUNC(DATA_DADOS) = TRUNC(SYSDATE) AND CAMPO_1 = 'PRR_SOBREAVISO_NAO_SMSA';
vLOG := 'TAREFA 34 EXECUTADA COM SUCESSO RELATORIO PROCEDURE PRR_SOBREAVISO_NAO_SMSA, GERANDO '||vQTD_REGS|| ' REGISTROS.';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;

ELSE
vLOG := '*******FECHAMENTO COM ERRO NA TAREFA: 33, PROCEDURE: PRR_LIMITES_PLANTOES_SMSA, VERIFICAR ERRO';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;
vPR_OK :=0;
END IF;



SELECT COUNT(1) INTO vPR_OK FROM PONTO_ELETRONICO.SMARH_INT_LOG_INTEGRA_DIARIA WHERE TRUNC(DATA_ERRO)= TRUNC(SYSDATE) AND DESCRICAO_ERRO = 'EXECUCAO_REALIZADA_COM_SUCESSO' AND PROCEDURE_ERRO = 'FECHAMENTO_MES PROCEDURE PRR_SOBREAVISO_NAO_SMSA';
-- TAREFA 35  RELATORIO 54ª tarefa----novo em 14/5/21----avaliar os descontos gravados no Arterh com os dados do Ifponto
--desconto_vs_compensacao_pbh_v5.sql ----------------------------------------TROCAR DATAS
-- TAREFA 35 PRR_DESCONTOS_FECHAMENTO
--SELECT CONSIDERACOES FROM PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT WHERE TRUNC(DATA_DADOS) = TRUNC(SYSDATE) AND CAMPO_1 = 'PRR_DESCONTOS_FECHAMENTO'
--/*
IF vPR_OK = 1 THEN
BEGIN 
PONTO_ELETRONICO.PRR_DESCONTOS_FECHAMENTO(TO_DATE(vDATA_INICIO,'DD/MM/YYYY'), TO_DATE(vDATA_FIM,'DD/MM/YYYY'));
 err_msg := SUBSTR('EXECUCAO_REALIZADA_COM_SUCESSO', 1, 4000);
              GRAVA_SUCESSO('FECHAMENTO_MES PROCEDURE PRR_DESCONTOS_FECHAMENTO','000',err_msg);
exception
              when others then
               err_msg := SUBSTR(SQLERRM, 1, 4000);
              GRAVA_ERRO('FECHAMENTO_MES PROCEDURE PRR_DESCONTOS_FECHAMENTO',SQLCODE,err_msg);
END;
--*/
SELECT count(1) INTO vQTD_REGS FROM PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT WHERE TRUNC(DATA_DADOS) = TRUNC(SYSDATE) AND CAMPO_1 = 'PRR_DESCONTOS_FECHAMENTO';
vLOG := 'TAREFA 35 EXECUTADA COM SUCESSO RELATORIO PROCEDURE PRR_DESCONTOS_FECHAMENTO, GERANDO '||vQTD_REGS|| ' REGISTROS.';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;

ELSE
vLOG := '*******FECHAMENTO COM ERRO NA TAREFA: 34, PROCEDURE: PRR_SOBREAVISO_NAO_SMSA, VERIFICAR ERRO';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;
vPR_OK :=0;
END IF;



SELECT COUNT(1) INTO vPR_OK FROM PONTO_ELETRONICO.SMARH_INT_LOG_INTEGRA_DIARIA WHERE TRUNC(DATA_ERRO)= TRUNC(SYSDATE) AND DESCRICAO_ERRO = 'EXECUCAO_REALIZADA_COM_SUCESSO' AND PROCEDURE_ERRO = 'FECHAMENTO_MES PROCEDURE PRR_DESCONTOS_FECHAMENTO';
--novo em 7/3/23 --inicio
BEGIN 
PONTO_ELETRONICO.PRM_21_PARES_DIAS_ESCALA;
 err_msg := SUBSTR('EXECUCAO_REALIZADA_COM_SUCESSO', 1, 4000);
              GRAVA_SUCESSO('FECHAMENTO_MES PROCEDURE PRM_21_PARES_DIAS_ESCALA','000',err_msg);
exception
              when others then
               err_msg := SUBSTR(SQLERRM, 1, 4000);
              GRAVA_ERRO('FECHAMENTO_MES PROCEDURE PRM_21_PARES_DIAS_ESCALA',SQLCODE,err_msg);
END;
--*/
SELECT count(1) INTO vQTD_REGS FROM PONTO_ELETRONICO.IFPONTO_RL_ESC_HOR ;
vLOG := 'TAREFA 35.2 EXECUTADA COM SUCESSO PROCEDURE PRM_21_PARES_DIAS_ESCALA, GERANDO '||vQTD_REGS|| ' REGISTROS NA TABELA PONTO_ELETRONICO.IFPONTO_RL_ESC_HOR.';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;


BEGIN 
PONTO_ELETRONICO.PRM_22_COMPRIMENTO_ESCALA;
 err_msg := SUBSTR('EXECUCAO_REALIZADA_COM_SUCESSO', 1, 4000);
              GRAVA_SUCESSO('FECHAMENTO_MES PROCEDURE PRM_22_COMPRIMENTO_ESCALA','000',err_msg);
exception
              when others then
               err_msg := SUBSTR(SQLERRM, 1, 4000);
              GRAVA_ERRO('FECHAMENTO_MES PROCEDURE PRM_22_COMPRIMENTO_ESCALA',SQLCODE,err_msg);
END;
--*/
SELECT count(1) INTO vQTD_REGS FROM PONTO_ELETRONICO.IFPONTO_ESCALA_PADRAO ;
vLOG := 'TAREFA 35.3 EXECUTADA COM SUCESSO PROCEDURE PRM_22_COMPRIMENTO_ESCALA, UPDATE '||vQTD_REGS|| ' REGISTROS NA TABELA PONTO_ELETRONICO.IFPONTO_ESCALA_PADRAO.';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;
--novo em 7/3/23 --fim


--****FIM**************RELATORIOS GETED GERAR MENSAL***********************
-- TAREFA 36
--59ª tarefa -- 10 passo - AJUSTAR TABELAS HISTORICAS
IF vPR_OK = 1 THEN
SELECT count(1) INTO vQTD_REGS FROM PONTO_ELETRONICO.IFPONTO_ESPELHO_HISTORICA WHERE DATA_PROCESSAMENTO IS NULL AND LPAD(EMPRESA,4,'0') IN (SELECT DADO_ORIGEM FROM ARTERH.RHINTE_ED_IT_CONV WHERE CODIGO_CONVERSAO = 'IFP4');--NOVO EM 7/11/23
vLOG := 'TAREFA 36 ANTES ATUALIZAR DATA PROCESSAMENTO ' ||vQTD_REGS|| ' REGISTROS NA TABELA PONTO_ELETRONICO.IFPONTO_ESPELHO_HISTORICA.';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS);COMMIT;
vLOG := NULL;
UPDATE PONTO_ELETRONICO.IFPONTO_ESPELHO_HISTORICA SET DATA_PROCESSAMENTO = TRUNC(SYSDATE) WHERE DATA_PROCESSAMENTO IS NULL AND LPAD(EMPRESA,4,'0') IN (SELECT DADO_ORIGEM FROM ARTERH.RHINTE_ED_IT_CONV WHERE CODIGO_CONVERSAO = 'IFP4');--NOVO EM 7/11/23
COMMIT;

SELECT count(1) INTO vQTD_REGS FROM PONTO_ELETRONICO.IFPONTO_OCORRENCIAS WHERE DATA_PROCESSAMENTO IS NULL AND LPAD(EMPRESA,4,'0') IN (SELECT DADO_ORIGEM FROM ARTERH.RHINTE_ED_IT_CONV WHERE CODIGO_CONVERSAO = 'IFP4');--NOVO EM 7/11/23;
vLOG := 'TAREFA 36 ANTES ATUALIZAR DATA PROCESSAMENTO ' ||vQTD_REGS|| ' REGISTROS NA TABELA PONTO_ELETRONICO.IFPONTO_OCORRENCIAS.';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS);COMMIT;
vLOG := NULL;
UPDATE PONTO_ELETRONICO.IFPONTO_OCORRENCIAS SET DATA_PROCESSAMENTO = TRUNC(SYSDATE) WHERE DATA_PROCESSAMENTO IS NULL AND LPAD(EMPRESA,4,'0') IN (SELECT DADO_ORIGEM FROM ARTERH.RHINTE_ED_IT_CONV WHERE CODIGO_CONVERSAO = 'IFP4');--NOVO EM 7/11/23
COMMIT;

SELECT count(1) INTO vQTD_REGS FROM PONTO_ELETRONICO.IFPONTO_MARCACOES WHERE DATA_PROCESSAMENTO IS NULL AND LPAD(EMPRESA,4,'0') IN (SELECT DADO_ORIGEM FROM ARTERH.RHINTE_ED_IT_CONV WHERE CODIGO_CONVERSAO = 'IFP4');--NOVO EM 7/11/23
vLOG := 'TAREFA 36 ANTES ATUALIZAR DATA PROCESSAMENTO ' ||vQTD_REGS|| ' REGISTROS NA TABELA PONTO_ELETRONICO.IFPONTO_MARCACOES.';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS);COMMIT;
vLOG := NULL;
UPDATE PONTO_ELETRONICO.IFPONTO_MARCACOES SET DATA_PROCESSAMENTO = TRUNC(SYSDATE) WHERE DATA_PROCESSAMENTO IS NULL AND LPAD(EMPRESA,4,'0') IN (SELECT DADO_ORIGEM FROM ARTERH.RHINTE_ED_IT_CONV WHERE CODIGO_CONVERSAO = 'IFP4');--NOVO EM 7/11/23
COMMIT;

SELECT count(1) INTO vQTD_REGS FROM PONTO_ELETRONICO.IFPONTO_OCOR_JUST_SIT_FUNC WHERE DATA_PROCESSAMENTO IS NULL AND LPAD(EMPRESA,4,'0') IN (SELECT DADO_ORIGEM FROM ARTERH.RHINTE_ED_IT_CONV WHERE CODIGO_CONVERSAO = 'IFP4');--NOVO EM 7/11/23
vLOG := 'TAREFA 36 ANTES ATUALIZAR DATA PROCESSAMENTO ' ||vQTD_REGS|| ' REGISTROS NA TABELA PONTO_ELETRONICO.IFPONTO_OCOR_JUST_SIT_FUNC.';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS);COMMIT;
vLOG := NULL;
UPDATE PONTO_ELETRONICO.IFPONTO_OCOR_JUST_SIT_FUNC SET DATA_PROCESSAMENTO = TRUNC(SYSDATE) WHERE DATA_PROCESSAMENTO IS NULL AND LPAD(EMPRESA,4,'0') IN (SELECT DADO_ORIGEM FROM ARTERH.RHINTE_ED_IT_CONV WHERE CODIGO_CONVERSAO = 'IFP4');--NOVO EM 7/11/23
COMMIT; 

SELECT count(1) INTO vQTD_REGS FROM PONTO_ELETRONICO.IFPONTO_OCOR_JUST_SIT_FUNC_TR WHERE DATA_PROCESSAMENTO IS NULL AND LPAD(EMPRESA,4,'0') IN (SELECT DADO_ORIGEM FROM ARTERH.RHINTE_ED_IT_CONV WHERE CODIGO_CONVERSAO = 'IFP4');--NOVO EM 7/11/23
vLOG := 'TAREFA 36 ANTES ATUALIZAR DATA PROCESSAMENTO ' ||vQTD_REGS|| ' REGISTROS NA TABELA PONTO_ELETRONICO.IFPONTO_OCOR_JUST_SIT_FUNC_TR.';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS);COMMIT;
vLOG := NULL;
UPDATE PONTO_ELETRONICO.IFPONTO_OCOR_JUST_SIT_FUNC_TR SET DATA_PROCESSAMENTO = TRUNC(SYSDATE) WHERE DATA_PROCESSAMENTO IS NULL AND LPAD(EMPRESA,4,'0') IN (SELECT DADO_ORIGEM FROM ARTERH.RHINTE_ED_IT_CONV WHERE CODIGO_CONVERSAO = 'IFP4');--NOVO EM 7/11/23 
COMMIT;

SELECT count(1) INTO vQTD_REGS FROM PONTO_ELETRONICO.IFPONTO_OCOR_JUST_SIT_FUNC_T2 WHERE DATA_PROCESSAMENTO IS NULL AND LPAD(EMPRESA,4,'0') IN (SELECT DADO_ORIGEM FROM ARTERH.RHINTE_ED_IT_CONV WHERE CODIGO_CONVERSAO = 'IFP4');--NOVO EM 7/11/23
vLOG := 'TAREFA 36 ANTES ATUALIZAR DATA PROCESSAMENTO ' ||vQTD_REGS|| ' REGISTROS NA TABELA PONTO_ELETRONICO.IFPONTO_OCOR_JUST_SIT_FUNC_T2.';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS);COMMIT;
vLOG := NULL;
UPDATE PONTO_ELETRONICO.IFPONTO_OCOR_JUST_SIT_FUNC_T2 SET DATA_PROCESSAMENTO = TRUNC(SYSDATE)+1 WHERE DATA_PROCESSAMENTO IS NULL AND LPAD(EMPRESA,4,'0') IN (SELECT DADO_ORIGEM FROM ARTERH.RHINTE_ED_IT_CONV WHERE CODIGO_CONVERSAO = 'IFP4');--NOVO EM 7/11/23 
COMMIT;

SELECT count(1) INTO vQTD_REGS FROM PONTO_ELETRONICO.IFPONTO_FECHAMENTO WHERE DT_ENVIADO_IFPONTO_SURICATO IS NULL AND LPAD(EMPRESA,4,'0') IN (SELECT DADO_ORIGEM FROM ARTERH.RHINTE_ED_IT_CONV WHERE CODIGO_CONVERSAO = 'IFP4');--NOVO EM 7/11/23 --AJUSTE EM 14/2/23
vLOG := 'TAREFA 36 ANTES ATUALIZAR DT_ENVIADO_IFPONTO_SURICATO ' ||vQTD_REGS|| ' REGISTROS NA TABELA PONTO_ELETRONICO.IFPONTO_FECHAMENTO.';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS);COMMIT;
vLOG := NULL;
UPDATE PONTO_ELETRONICO.IFPONTO_FECHAMENTO SET DT_ENVIADO_IFPONTO_SURICATO = SYSDATE WHERE DT_ENVIADO_IFPONTO_SURICATO IS NULL AND LPAD(EMPRESA,4,'0') IN (SELECT DADO_ORIGEM FROM ARTERH.RHINTE_ED_IT_CONV WHERE CODIGO_CONVERSAO = 'IFP4');--NOVO EM 7/11/23
COMMIT;


SELECT count(1) INTO vQTD_REGS FROM PONTO_ELETRONICO.IFPONTO_ESPELHO WHERE LPAD(EMPRESA,4,'0') IN (SELECT DADO_ORIGEM FROM ARTERH.RHINTE_ED_IT_CONV WHERE CODIGO_CONVERSAO = 'IFP4');--NOVO EM 7/11/23;
vLOG := 'TAREFA 36 ANTES EXCLUIR ' ||vQTD_REGS|| ' REGISTROS NA TABELA PONTO_ELETRONICO.IFPONTO_ESPELHO.';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS);COMMIT;
vLOG := NULL;
DELETE PONTO_ELETRONICO.IFPONTO_ESPELHO WHERE LPAD(EMPRESA,4,'0') IN (SELECT DADO_ORIGEM FROM ARTERH.RHINTE_ED_IT_CONV WHERE CODIGO_CONVERSAO = 'IFP4');--NOVO EM 7/11/23
COMMIT;

SELECT count(1) INTO vQTD_REGS FROM PONTO_ELETRONICO.AUTORIZACAO_EXTRA_PESSOA WHERE LPAD(EMPRESA,4,'0') IN (SELECT DADO_ORIGEM FROM ARTERH.RHINTE_ED_IT_CONV WHERE CODIGO_CONVERSAO = 'IFP4');--NOVO EM 7/11/23
vLOG := 'TAREFA 36 ANTES EXCLUIR ' ||vQTD_REGS|| ' REGISTROS NA TABELA PONTO_ELETRONICO.AUTORIZACAO_EXTRA_PESSOA.';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS);COMMIT;
vLOG := NULL;
DELETE PONTO_ELETRONICO.AUTORIZACAO_EXTRA_PESSOA WHERE LPAD(EMPRESA,4,'0') IN (SELECT DADO_ORIGEM FROM ARTERH.RHINTE_ED_IT_CONV WHERE CODIGO_CONVERSAO = 'IFP4');--NOVO EM 7/11/23 
COMMIT;

/* levei para a procedure PONTO_ELETRONICO.PR_PONTO_INTEGRACAO_DIARIA em 8/3/23 para rodar dia 11
--novo em 7/3/23 --inicio
SELECT count(1) INTO vQTD_REGS FROM PONTO_ELETRONICO.IFPONTO_HORARIO;
vLOG := 'TAREFA 36 ANTES EXCLUIR ' ||vQTD_REGS|| ' REGISTROS NA TABELA PONTO_ELETRONICO.IFPONTO_HORARIO.';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS);COMMIT;
vLOG := NULL;
DELETE PONTO_ELETRONICO.IFPONTO_HORARIO; COMMIT;

SELECT count(1) INTO vQTD_REGS FROM PONTO_ELETRONICO.IFPONTO_ESCALA_PADRAO;
vLOG := 'TAREFA 36 ANTES EXCLUIR ' ||vQTD_REGS|| ' REGISTROS NA TABELA PONTO_ELETRONICO.IFPONTO_ESCALA_PADRAO.';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS);COMMIT;
vLOG := NULL;
DELETE PONTO_ELETRONICO.IFPONTO_ESCALA_PADRAO; COMMIT;

SELECT count(1) INTO vQTD_REGS FROM PONTO_ELETRONICO.IFPONTO_ESCALA_HORARIO;
vLOG := 'TAREFA 36 ANTES EXCLUIR ' ||vQTD_REGS|| ' REGISTROS NA TABELA PONTO_ELETRONICO.IFPONTO_ESCALA_HORARIO.';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS);COMMIT;
vLOG := NULL;
DELETE PONTO_ELETRONICO.IFPONTO_ESCALA_HORARIO; COMMIT;

SELECT count(1) INTO vQTD_REGS FROM PONTO_ELETRONICO.IFPONTO_ESCALA_PESSOA;
vLOG := 'TAREFA 36 ANTES EXCLUIR ' ||vQTD_REGS|| ' REGISTROS NA TABELA PONTO_ELETRONICO.IFPONTO_ESCALA_PESSOA.';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS);COMMIT;
vLOG := NULL;
DELETE PONTO_ELETRONICO.IFPONTO_ESCALA_PESSOA; COMMIT;

SELECT count(1) INTO vQTD_REGS FROM PONTO_ELETRONICO.IFPONTO_RL_ESC_HOR;
vLOG := 'TAREFA 36 ANTES EXCLUIR ' ||vQTD_REGS|| ' REGISTROS NA TABELA PONTO_ELETRONICO.IFPONTO_RL_ESC_HOR.';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS);COMMIT;
vLOG := NULL;
DELETE PONTO_ELETRONICO.IFPONTO_RL_ESC_HOR; COMMIT;
--novo em 7/3/23 --fim
*/

-- TAREFA 37
--61ª tarefa --Insere registro tab conversão FCPT
--COMENTADO 7/11/23--SELECT count(1) INTO vQTD_REGS FROM PONTO_ELETRONICO.AUTORIZACAO_EXTRA_PESSOA;
SELECT 'TAREFA 37 ANTES ATUALIZAR ULTIMA DATA FECHAMENTO TABELA DE CONVERSAO FCPT: ' ||MAX(TO_DATE(DADO_ORIGEM,'DD/MM/YYYY')) INTO VLOG FROM ARTERH.RHINTE_ED_IT_CONV WHERE CODIGO_CONVERSAO = 'FCPT';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG);COMMIT;
vLOG := NULL;

INSERT INTO ARTERH.RHINTE_ED_IT_CONV(CODIGO_CONVERSAO, DADO_ORIGEM, DADO_DESTINO, LOGIN_USUARIO, DT_ULT_ALTER_USUA)VALUES('FCPT', TO_DATE(vDATA_FIM,'DD/MM/YYYY'), TO_DATE(vDATA_FIM,'DD/MM/YYYY'), 'IFPONTO', SYSDATE);COMMIT;

--COMENTADO 7/11/23--SELECT count(1) INTO vQTD_REGS FROM PONTO_ELETRONICO.AUTORIZACAO_EXTRA_PESSOA;
SELECT 'TAREFA 37 APOS ATUALIZAR ULTIMA DATA FECHAMENTO TABELA DE CONVERSAO FCPT: ' ||MAX(TO_DATE(DADO_ORIGEM,'DD/MM/YYYY')) INTO VLOG FROM ARTERH.RHINTE_ED_IT_CONV WHERE CODIGO_CONVERSAO = 'FCPT';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG);COMMIT;
vLOG := NULL;

ELSE
vLOG := '*******FECHAMENTO COM ERRO NA TAREFA: 35, PROCEDURE: PRR_DESCONTOS_FECHAMENTO, VERIFICAR ERRO';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;
vPR_OK :=0; --CONTROLA SE PROCEDURE PODE SEGUIR, 0 = SEGUIR, 1 = NAO SEGUIR
END IF;



--TAREFA 38 --NOVA EM 9/2/23 -- AVALIAR SE PRECISARA TODOS OS MESES REFERENTE A TAREFA 4 DESSA PROCEDURE
-- TERCEIRO AJUSTE -- TIRAR DO PROCESSAMENTO DIAS EM QUE A PESSOA FICOU INATIVA PELA SITUACAO FUNCIONAL MAS QUE O IFPONTO GEROU ESPELHO NESTES DIAS
--BASEADO SQL (sql_ajuste_dias_inativo_ifponto.sql)
FOR C1 IN (
SELECT 'CENARIO_EXECUTADO|ORDEM_BM|DIAS_FECHAMENTO|QTD_DIAS_ESPELHO|DTDEMISSAO|DIAS_ATIVOS|DIAS_PROCESSADOS|DIAS_INATIVOS|DIAS_NAO_PROCESSADOS|STATUS_IFPONTO|PARTE|CODIGO_EMPRESA|TIPO_CONTRATO|CODIGO|COD_SIT_FUNCIONAL|SIT_FUNC|CONTROLE_FOLHA|TIPO_CESSAO|DATA_INIC_SITUACAO|DATA_FIM_SITUACAO|LOGIN_USUARIO|DT_ULT_ALTER_USUA|COMANDO' AS LINHA FROM DUAL UNION ALL
SELECT 
X2.CENARIO_EXECUTADO||'|'||X2.ORDEM_BM||'|'||X2.DIAS_FECHAMENTO||'|'||X2.QTD_DIAS_ESPELHO||'|'||X2.DTDEMISSAO||'|'||X2.DIAS_ATIVOS||'|'||X2.DIAS_PROCESSADOS||'|'||X2.DIAS_INATIVOS||'|'||X2.DIAS_NAO_PROCESSADOS||'|'||X2.STATUS_IFPONTO||'|'||X2.PARTE||'|'||X2.CODIGO_EMPRESA||'|'||X2.TIPO_CONTRATO||'|'||X2.CODIGO||'|'||X2.COD_SIT_FUNCIONAL||'|'||X2.SIT_FUNC||'|'||X2.CONTROLE_FOLHA||'|'||X2.TIPO_CESSAO||'|'||X2.DATA_INIC_SITUACAO||'|'||X2.DATA_FIM_SITUACAO||'|'||X2.LOGIN_USUARIO||'|'||X2.DT_ULT_ALTER_USUA||'|'||X2.COMANDO
AS LINHA 
FROM(
SELECT 
--CASE WHEN X.STATUS_IFPONTO = 'INATIVO' THEN 'RETIRAR DIAS A PARTIR DATA INICIO SIT FUNC' ELSE 'FAZER NADA' END CENARIO_A_PARTIR_JAN_23,
CASE
WHEN X.DIAS_PROCESSADOS > 0 AND X.STATUS_IFPONTO = 'INATIVO' AND TRUNC(X.DATA_INIC_SITUACAO)< TO_DATE(vDATA_INICIO,'DD/MM/YYYY') THEN 'ERRO_TODO_PERIODO_INATIVO_MAS_PROCESSADO' 
WHEN (X.DIAS_ATIVOS = X.DIAS_PROCESSADOS OR X.QTD_DIAS_ESPELHO = X.DIAS_PROCESSADOS) AND X.DIAS_INATIVOS = X.DIAS_NAO_PROCESSADOS THEN 'OK' 
WHEN X.QTD_DIAS_ESPELHO = X.DIAS_NAO_PROCESSADOS AND X.DIAS_PROCESSADOS = 0 AND X.DIAS_INATIVOS = 0 AND X.DIAS_NAO_PROCESSADOS = 31 AND X.STATUS_IFPONTO = 'INATIVO' AND TRUNC(X.DATA_INIC_SITUACAO)< TO_DATE(vDATA_INICIO,'DD/MM/YYYY') THEN 'OK_TODO_PERIODO_INATIVO_E_NAO_PROCESSADO' 
WHEN X.DIAS_FECHAMENTO > X.QTD_DIAS_ESPELHO AND X.QTD_DIAS_ESPELHO =  X.DIAS_PROCESSADOS + X.DIAS_NAO_PROCESSADOS AND TRUNC(X.DTDEMISSAO) BETWEEN TO_DATE(vDATA_INICIO,'DD/MM/YYYY') AND TO_DATE(vDATA_FIM,'DD/MM/YYYY') THEN 'OK_TODO_PARCIALMENTE_ATIVO_INATIVO_PROCESSADO_CORRETO' 
ELSE 'VERIFICAR' END CENARIO_EXECUTADO,
X.* ,
CASE WHEN X.STATUS_IFPONTO = 'INATIVO' AND X.CONTROLE_FOLHA = 'L' THEN
'UPDATE PONTO_ELETRONICO.IFPONTO_ESPELHO_HISTORICA SET DATA_PROCESSAMENTO = TRUNC(SYSDATE)-1 WHERE  DATA_PROCESSAMENTO IS NULL AND EMPRESA ='''|| X.CODIGO_EMPRESA||''' AND TIPO_CONTRATO ='''|| X.TIPO_CONTRATO||''' AND MATRICULA ='''||X.CODIGO||''' AND TRUNC(DATA)BETWEEN TO_DATE('''||X.DATA_INIC_SITUACAO||''',''DD/MM/YYYY'') AND TO_DATE('''||X.DATA_FIM_SITUACAO||''',''DD/MM/YYYY''); COMMIT;'
END COMANDO
FROM (
SELECT 
ROW_NUMBER() OVER(PARTITION BY A.CODIGO_EMPRESA, A.TIPO_CONTRATO, A.CODIGO ORDER BY A.CODIGO_EMPRESA, A.TIPO_CONTRATO, A.CODIGO, A.DATA_INIC_SITUACAO)ORDEM_BM,
TO_DATE(vDATA_FIM,'DD/MM/YYYY')-TO_DATE(vDATA_INICIO,'DD/MM/YYYY')+1 DIAS_FECHAMENTO,
I.QTD_DIAS QTD_DIAS_ESPELHO, TO_DATE(I.DTDEMISSAO,'DD/MM/YYYY')DTDEMISSAO, 
CASE WHEN I.DTDEMISSAO IS NOT NULL THEN TO_DATE(I.DTDEMISSAO,'DD/MM/YYYY') - TO_DATE(vDATA_INICIO,'DD/MM/YYYY')+1 ELSE TO_DATE(vDATA_FIM,'DD/MM/YYYY')-TO_DATE(vDATA_INICIO,'DD/MM/YYYY')+1 END DIAS_ATIVOS,
I.DIAS_PROCESSADOS, 
CASE WHEN I.DTDEMISSAO IS NULL OR TO_DATE(I.DTDEMISSAO,'DD/MM/YYYY') > TO_DATE(vDATA_FIM,'DD/MM/YYYY') THEN 0 ELSE TO_DATE(vDATA_FIM,'DD/MM/YYYY')-TO_DATE(I.DTDEMISSAO,'DD/MM/YYYY') END DIAS_INATIVOS,
I.DIAS_NAO_PROCESSADOS,
P.STATUS_IFPONTO,
A.PARTE,A.CODIGO_EMPRESA, A.TIPO_CONTRATO, A.CODIGO, A.COD_SIT_FUNCIONAL, S.DESCRICAO SIT_FUNC, S.CONTROLE_FOLHA, C.TIPO_CESS TIPO_CESSAO, A.DATA_INIC_SITUACAO, A.DATA_FIM_SITUACAO, A.LOGIN_USUARIO, A.DT_ULT_ALTER_USUA
FROM 
(
SELECT 'P1'PARTE, A.* FROM RHCGED_ALT_SIT_FUN A WHERE A.DATA_INIC_SITUACAO IS NOT NULL AND A.DATA_FIM_SITUACAO IS NULL AND TRUNC(A.DATA_INIC_SITUACAO)<=TO_DATE(vDATA_FIM,'DD/MM/YYYY') 
AND TRUNC(A.DATA_INIC_SITUACAO) = (SELECT TRUNC(MAX(AUX.DATA_INIC_SITUACAO)) FROM RHCGED_ALT_SIT_FUN AUX WHERE A.CODIGO_EMPRESA = AUX.CODIGO_EMPRESA AND A.TIPO_CONTRATO = AUX.TIPO_CONTRATO AND A.CODIGO = AUX.CODIGO  )
UNION ALL
SELECT 'P2'PARTE, A.* FROM RHCGED_ALT_SIT_FUN A WHERE 
(TRUNC(A.DATA_INIC_SITUACAO) BETWEEN TO_DATE(vDATA_INICIO,'DD/MM/YYYY')AND TO_DATE(vDATA_FIM,'DD/MM/YYYY')AND A.DATA_FIM_SITUACAO IS NOT NULL )
OR
TRUNC(A.DATA_FIM_SITUACAO) BETWEEN TO_DATE(vDATA_INICIO,'DD/MM/YYYY')AND TO_DATE(vDATA_FIM,'DD/MM/YYYY')
)
A
LEFT OUTER JOIN RHPARM_SIT_FUNC S ON S.CODIGO = A.COD_SIT_FUNCIONAL
LEFT OUTER JOIN (SELECT DADO_ORIGEM SIT_FUNC, DADO_DESTINO TIPO_CESS FROM RHINTE_ED_IT_CONV X WHERE X.CODIGO_CONVERSAO = 'CESS')C ON C.SIT_FUNC = S.CODIGO
LEFT OUTER JOIN (SELECT SUBSTR(DADO_ORIGEM,1,4)EMPRESA, SUBSTR(DADO_ORIGEM,5,4)SIT_FUNC, RHPARM_SIT_FUNC.DESCRICAO, DADO_DESTINO STATUS_IFPONTO
FROM RHINTE_ED_IT_CONV LEFT OUTER JOIN RHPARM_SIT_FUNC ON SUBSTR(RHINTE_ED_IT_CONV.DADO_ORIGEM,5,4) = RHPARM_SIT_FUNC.CODIGO WHERE CODIGO_CONVERSAO = 'POST')
P ON P.EMPRESA = A.CODIGO_EMPRESA AND P.SIT_FUNC = A.COD_SIT_FUNCIONAL
LEFT OUTER JOIN 
(
SELECT EMPRESA, TIPO_CONTRATO, MATRICULA, TO_CHAR(DTDEMISSAO,'DD/MM/YYYY')DTDEMISSAO, COUNT(1) QTD_DIAS , SUM(DIAS_NAO_PROCESSADOS)DIAS_NAO_PROCESSADOS, SUM(DIAS_PROCESSADOS)DIAS_PROCESSADOS FROM(
SELECT EMPRESA, TIPO_CONTRATO, MATRICULA, DTDEMISSAO, 
CASE WHEN TRUNC(DATA_PROCESSAMENTO) = TRUNC(SYSDATE)-1 THEN 1 ELSE 0 END DIAS_NAO_PROCESSADOS, CASE WHEN TRUNC(DATA_PROCESSAMENTO) = TRUNC(SYSDATE) THEN 1 ELSE  0 END DIAS_PROCESSADOS
FROM PONTO_ELETRONICO.IFPONTO_ESPELHO_HISTORICA WHERE TRUNC(DATA) BETWEEN TO_DATE(vDATA_INICIO,'DD/MM/YYYY')AND TO_DATE(vDATA_FIM,'DD/MM/YYYY')
)GROUP BY  EMPRESA, TIPO_CONTRATO, MATRICULA, DTDEMISSAO ORDER BY  EMPRESA, TIPO_CONTRATO, MATRICULA
)I ON I.EMPRESA = A.CODIGO_EMPRESA AND I.TIPO_CONTRATO = A.TIPO_CONTRATO AND I.MATRICULA = A.CODIGO
WHERE 
I.QTD_DIAS IS NOT NULL--APENAS BMS NA TABELA PONTO_ELETRONICO.IFPONTO_ESPELHO_HISTORICA
ORDER BY A.CODIGO_EMPRESA, A.TIPO_CONTRATO, A.CODIGO, A.DATA_INIC_SITUACAO
)X
)X2
)LOOP
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (DATA_DADOS, CAMPO_1, CONSIDERACOES)VALUES(SYSDATE,'ANALISE_DIAS_INATIVOS_IFPONTO',C1.LINHA);COMMIT;
END LOOP;
vLOG := 'TAREFA 38 EXECUTADA COM SUCESSO RELATORIO REFERENTE TAREFA 4 TERCEIRO AJUSTE: ANALISE_DIAS_INATIVOS_IFPONTO.';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;

------------------------------------------------------------------------------------------------------------------------FIM--PROCESSO FECHAMENTO--------------------------------------------------------------------------------------
vLOG := 'FECHAMENTO EXECUTADO ATE A ULTIMA TAREFA.';
DBMS_OUTPUT.PUT_LINE(vLOG);
INSERT INTO PONTO_ELETRONICO.IFPONTO_FECHAMENTO_LOG_RELAT (CONSIDERACOES, DATA_DADOS, CAMPO_1, CAMPO_2)VALUES('LOG_PR_FECHAMENTO_MES_P1', SYSDATE, vLOG, vQTD_REGS); COMMIT;
vLOG := NULL;

END;-- END GERAL