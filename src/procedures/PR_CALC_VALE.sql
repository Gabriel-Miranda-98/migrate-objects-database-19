
  CREATE OR REPLACE EDITIONABLE PROCEDURE "ARTERH"."PR_CALC_VALE" (
    pDATA1 IN DATE,
    pDATA2 IN DATE,
    pCOD IN VARCHAR2)
IS
  CONT NUMBER;
  RETORNO DATA_VALES;
  TESTE NUMBER:=0;
  nro_meses number;
  VERIFICA_MOV NUMBER:=0;

  /*INICIO FUNCTION VALIDA_SGE -- VERIFICA SE O CONTRATO POSSUI VALE EXTRA ATIVO, OU SEJA,  COM DATA FIM MENOR QUE A PDT_INI OU DATA FIM NULA*/
  FUNCTION VALIDA_SGE( pCOD_CONTRATO IN VARCHAR2, pTP_CONT IN CHAR, pCOD_EMPRESA IN CHAR, pDT_INI DATE)
    RETURN NUMBER  AS  RETOR NUMBER:=0;
  BEGIN

    SELECT COUNT(1)QUANT
    INTO RETOR
    FROM RHVALE_DESLOCA
    INNER JOIN RHVALE_RL_DESL_LIN
    ON RHVALE_DESLOCA.CODIGO_CONTRATO = RHVALE_RL_DESL_LIN.CODIGO_CONTRATO
    AND RHVALE_DESLOCA.DATA_INICIO = RHVALE_RL_DESL_LIN.DATA_INICIO
    AND RHVALE_DESLOCA.TIPO_CONTRATO = RHVALE_RL_DESL_LIN.TIPO_CONTRATO
    AND RHVALE_DESLOCA.CODIGO_EMPRESA = RHVALE_RL_DESL_LIN.CODIGO_EMPRESA
    INNER JOIN RHVALE_RL_LIN_ITIN
    ON RHVALE_RL_LIN_ITIN.CODIGO_LINHA = RHVALE_RL_DESL_LIN.CODIGO_LINHA
    AND RHVALE_RL_LIN_ITIN.CODIGO_ITINERARIO = RHVALE_RL_DESL_LIN.CODIGO_ITINERARIO
    WHERE RHVALE_DESLOCA.CODIGO_CONTRATO =pCOD_CONTRATO
    AND RHVALE_DESLOCA.TIPO_CONTRATO     =pTP_CONT
    AND RHVALE_DESLOCA.CODIGO_EMPRESA    =pCOD_EMPRESA
    AND ( pDT_INI BETWEEN RHVALE_DESLOCA.DATA_INICIO AND RHVALE_DESLOCA.DATA_FIM
    or ( pDT_INI >= RHVALE_DESLOCA.DATA_INICIO and RHVALE_DESLOCA.DATA_FIM is null ) )
    AND ( pDT_INI BETWEEN RHVALE_RL_DESL_LIN.DATA_INICIO AND RHVALE_RL_DESL_LIN.DATA_FIM
    or ( pDT_INI >= RHVALE_RL_DESL_LIN.DATA_INICIO and RHVALE_RL_DESL_LIN.DATA_FIM is null ) )
    AND RHVALE_RL_LIN_ITIN.TIPO_VALE = '0002'; 
    /*AJUSTADO POR LETICIA EM 24/04/2023 */ 


    RETURN RETOR;

  END; 
/*FIM FUNCTION VALIDA_SGE*/

BEGIN /*INICIO PROCEDURE PR_CALC_VALE*/
  dbms_output.enable(NULL);
  CONT:=0;
  FOR X1 IN
  ( SELECT * FROM arterh.smarh_int_recalculo_vale_foto /*WHERE CODIGO_CONTRATO = '00000000095749X'*/)
  LOOP
     dbms_output.put_line(x1.codigo_contrato);
    dbms_output.put_line(x1.DATA_INICIO ||'-' || x1.DATA_FIM);

    RETORNO                   :=DATA_VALES(NULL,NULL,NULL,NULL,NULL); /*OBJETO QUE ARMAZENA DATA_INI, DATA_FIM, DIAS_UTEIS_SEM_FERIADO, QTD_FERIADO E DIAS_UTEIS_MES*/
    CONT                      :=CONT+1;
    RETORNO                   :=FU_CAL_DATAS(pDATA1, last_day(pDATA1)); /*ESSA FUNÇÃO CALCULA A QUANTIDADE DE DIAS UTEIS DO MES, FERIADOS E QUANTIDADE DE DIAS UTEIS SEM FERIADO */

      FOR C1 IN
      (SELECT  X.*,
        case when SMARH_INT_CELETISTAS_UP.VALOR_TOTAL <> MV.VALOR_VERBA OR MV.VALOR_VERBA IS NULL 
        then DATA_CALCULO_FOLHA else
        ( case when MV.CODIGO_VERBA = '0800' then TRUNC(MV.ANO_MES_REFERENCIA,'MM') else add_months(TRUNC(MV.ANO_MES_REFERENCIA,'MM'),1) end ) end AS DATA_CALCULO_FOLHA ,

        case when SMARH_INT_CELETISTAS_UP.VALOR_TOTAL <> MV.VALOR_VERBA OR MV.VALOR_VERBA IS NULL 
        then DATA_CALCULO_FOLHA else
        ( case when MV.CODIGO_VERBA = '0800' then TRUNC(MV.ANO_MES_REFERENCIA,'MM') else  add_months(TRUNC(MV.ANO_MES_REFERENCIA,'MM'),1) end ) end AS DATA_INI_APURA_FREQUENCIA ,

        case when SMARH_INT_CELETISTAS_UP.VALOR_TOTAL <> MV.VALOR_VERBA OR MV.VALOR_VERBA IS NULL 
        then LAST_DAY(DATA_CALCULO_FOLHA) else
        ( case when MV.CODIGO_VERBA = '0800' then LAST_DAY(MV.ANO_MES_REFERENCIA)  else add_months(LAST_DAY(MV.ANO_MES_REFERENCIA),1) end ) end AS DATA_FIM_APURA_FREQUENCIA ,

        case when SMARH_INT_CELETISTAS_UP.VALOR_TOTAL <> MV.VALOR_VERBA OR MV.VALOR_VERBA IS NULL 
        then DATA_CALCULO_FOLHA else
        (case when MV.CODIGO_VERBA = '0800' then TRUNC(MV.ANO_MES_REFERENCIA,'MM') else add_months(TRUNC(MV.ANO_MES_REFERENCIA,'MM'),1) end  )end AS DATA_INI_VALE ,

        case when SMARH_INT_CELETISTAS_UP.VALOR_TOTAL <> MV.VALOR_VERBA OR MV.VALOR_VERBA IS NULL 
        then LAST_DAY(DATA_CALCULO_FOLHA) else
        (case when MV.CODIGO_VERBA = '0800' then LAST_DAY(MV.ANO_MES_REFERENCIA)  else add_months(LAST_DAY(MV.ANO_MES_REFERENCIA),1) end  ) end AS DATA_FIM_VALE,

        case when SMARH_INT_CELETISTAS_UP.VALOR_TOTAL <> MV.VALOR_VERBA OR MV.VALOR_VERBA IS NULL 
        then 'UP' else
         MV.CODIGO_VERBA end AS CODIGO_VERBA,

        case when SMARH_INT_CELETISTAS_UP.VALOR_TOTAL <> MV.VALOR_VERBA OR MV.VALOR_VERBA IS NULL 
         then null else
        case when MV.REF_VERBA  <0 then MV.REF_VERBA*-1 else MV.REF_VERBA end     
        end AS DIAS,

        case when SMARH_INT_CELETISTAS_UP.VALOR_TOTAL <> MV.VALOR_VERBA OR MV.VALOR_VERBA IS NULL 
        then SMARH_INT_CELETISTAS_UP.VALOR_TOTAL else MV.VALOR_VERBA end as VALOR_VERBA
      FROM
        (SELECT CN.CODIGO_EMPRESA,
          CN.TIPO_CONTRATO,
          CN.CODIGO AS CODIGO_CONTRATO,
          CN.VINCULO,
          G.COD_CGERENC1
            ||'.'
            || G.COD_CGERENC2
            ||'.'
            || G.COD_CGERENC3
            ||'.'
            || G.COD_CGERENC4
            ||'.'
            || G.COD_CGERENC5
            ||'.'
            || G.COD_CGERENC6 as local_epoca,
             NVL(G.DESCRICAO,G.TEXTO_ASSOCIADO) as NOME_epoca
        FROM ARTERH.RHPESS_CONTRATO CN
        LEFT OUTER JOIN ARTERH.RHORGA_CUSTO_GEREN G
        ON G.CODIGO_EMPRESA      =CN.CODIGO_EMPRESA
        AND G.COD_CGERENC1       =CN.COD_CUSTO_GERENC1
        AND G.COD_CGERENC2       =CN.COD_CUSTO_GERENC2
        AND G.COD_CGERENC3       =CN.COD_CUSTO_GERENC3
        AND G.COD_CGERENC4       =CN.COD_CUSTO_GERENC4
        AND G.COD_CGERENC5       =CN.COD_CUSTO_GERENC5
        AND G.COD_CGERENC6       =CN.COD_CUSTO_GERENC6
        WHERE CN.CODIGO          =X1.CODIGO_CONTRATO
        AND CN.TIPO_CONTRATO     =X1.TIPO_CONTRATO
        AND CN.CODIGO_EMPRESA    =X1.CODIGO_EMPRESA
        AND CN.ANO_MES_REFERENCIA=
          (SELECT MAX(AUX.ANO_MES_REFERENCIA)
          FROM ARTERH.RHPESS_CONTRATO AUX
          WHERE AUX.CODIGO            =CN.CODIGO
          AND AUX.TIPO_CONTRATO       =CN.TIPO_CONTRATO
          AND AUX.CODIGO_EMPRESA      =CN.CODIGO_EMPRESA
          AND AUX.ANO_MES_REFERENCIA <= last_day(add_months(pDATA1,1))/*AJUSTADO POR LETICIA EM 24/04/2023 */ 

          )
        )X
      LEFT OUTER JOIN RHMOVI_MOVIMENTO MV
      ON MV.CODIGO_EMPRESA   =X.CODIGO_EMPRESA
      AND MV.TIPO_CONTRATO   =X.TIPO_CONTRATO
      AND MV.TIPO_MOVIMENTO  = case when x.VINCULO in ('0001','0005') then 'BE' else 'ME' end
      AND MV.CODIGO_CONTRATO = X.CODIGO_CONTRATO
      AND MV.CODIGO_VERBA  =  case when x.VINCULO in ('0001','0005') then '0800' else '1074' end
      AND MV.MODO_OPERACAO = 'R'
      AND MV.ANO_MES_REFERENCIA BETWEEN 
      case when x.VINCULO in ('0001','0005') then  pDATA1 else  ADD_MONTHS(pDATA1,-1) end
     AND case when x.VINCULO in ('0001','0005') then  last_day(pDATA1) else  last_day(ADD_MONTHS(pDATA1,-1)) end

      /*REGRAS PARA VALIDAR O LANÇAMENTO INCLUIDO POR LETICIA EM 14/07/2022 */
       AND (
        /*0  - LANÇAMENTO NORMAL */
        ( MV.CTRL_LANCAMENTO = 0 AND MV.VALOR_VERBA > 0 ) OR
        /*1 - ACEITAR REFERENCIA*/
        ( MV.CTRL_LANCAMENTO = 1 AND MV.REF_VERBA > 0 ) OR
         /*2 - ACEITAR VALOR */
        ( MV.CTRL_LANCAMENTO = 2 AND MV.VALOR_VERBA > 0 ) OR
         /*3  - ACEITAR REFERENCIA/VALOR */
        ( MV.CTRL_LANCAMENTO = 3 AND ( MV.VALOR_VERBA > 0 or MV.REF_VERBA > 0 ) )      
        )


      LEFT OUTER JOIN (SELECT  CN.* FROM ARTERH.RHPESS_CONTRATO CN WHERE  CN.ANO_MES_REFERENCIA=
          (SELECT MAX(AUX.ANO_MES_REFERENCIA)
          FROM ARTERH.RHPESS_CONTRATO AUX
          WHERE AUX.CODIGO            =CN.CODIGO
          AND AUX.TIPO_CONTRATO       =CN.TIPO_CONTRATO
          AND AUX.CODIGO_EMPRESA      =CN.CODIGO_EMPRESA   
          and aux.ANO_MES_REFERENCIA<='30/04/2021'
          )
          )CN 
          ON CN.CODIGO          =X.CODIGO_CONTRATO
        AND CN.TIPO_CONTRATO     =X.TIPO_CONTRATO
        AND CN.CODIGO_EMPRESA    =X.CODIGO_EMPRESA

        LEFT OUTER JOIN ARTERH.SMARH_INT_CELETISTAS_UP
        ON CN.CODIGO          =SMARH_INT_CELETISTAS_UP.MATRICULA
        AND CN.TIPO_CONTRATO     =SMARH_INT_CELETISTAS_UP.TIPO_CONTRATO
        AND CN.CODIGO_EMPRESA    =SMARH_INT_CELETISTAS_UP.CODIGO_EMPRESA
        AND SMARH_INT_CELETISTAS_UP.DATA_CALCULO_FOLHA BETWEEN pDATA1 AND last_day(pDATA1)
         AND ( SMARH_INT_CELETISTAS_UP.VALOR_TOTAL <> MV.VALOR_VERBA OR MV.VALOR_VERBA IS NULL )

        LEFT OUTER JOIN ARTERH.RHORGA_CUSTO_GEREN G
        ON G.CODIGO_EMPRESA      =CN.CODIGO_EMPRESA
        AND G.COD_CGERENC1       =CN.COD_CUSTO_GERENC1
        AND G.COD_CGERENC2       =CN.COD_CUSTO_GERENC2
        AND G.COD_CGERENC3       =CN.COD_CUSTO_GERENC3
        AND G.COD_CGERENC4       =CN.COD_CUSTO_GERENC4
        AND G.COD_CGERENC5       =CN.COD_CUSTO_GERENC5
        AND G.COD_CGERENC6       =CN.COD_CUSTO_GERENC6

       where G.COD_CGERENC1=pCOD

      )
      LOOP

        IF (C1.DATA_CALCULO_FOLHA IS NOT NULL AND C1.DATA_CALCULO_FOLHA BETWEEN TO_DATE(pDATA1,'DD/MM/YYYY') AND TO_DATE(pDATA2,'DD/MM/YYYY')) THEN
          TESTE                   :=VALIDA_SGE(C1.CODIGO_CONTRATO,C1.TIPO_CONTRATO,C1.CODIGO_EMPRESA, C1.DATA_INI_VALE);

          IF TESTE                 =0 THEN
            INSERT
            INTO SMARH_INT_RECALCULO_VALE
              (
                ID ,
                DATA_GEROU,
                CODIGO_EMPRESA,
                TIPO_CONTRATO,
                CODIGO_CONTRATO,
                CODIGO_VERBA,
                DIAS_PAGO,
                VALOR_PAGO,
                DATA_CALCULO_FOLHA,
                DATA_INI_FREQUENCIA,
                DATA_FIM_FREQUENCIA,
                DATA_INI_VALE,
                DATA_FIM_VALE,
                DIAS_UTEIS_SEM_FERIADO,
                QTD_FERIADOS,
                DIAS_UTEIS_MES,
                LOCAL_EPOCA,
                NOME_epoca
              )
              VALUES
              (
                ID_VALE.nextval,
                SYSDATE,
                C1.CODIGO_EMPRESA,
                C1.TIPO_CONTRATO,
                C1.CODIGO_CONTRATO,
                C1.CODIGO_VERBA,
                C1.DIAS,
                C1.VALOR_VERBA,
                C1.DATA_CALCULO_FOLHA,
                C1.DATA_INI_APURA_FREQUENCIA,
                C1.DATA_FIM_APURA_FREQUENCIA,
                C1.DATA_INI_VALE,
                C1.DATA_FIM_VALE,
                RETORNO.DIAS_UTEIS_SEM_FERIADO,
                RETORNO.QTD_FERIADOS,
                RETORNO.DIAS_UTEIS_MES,
                C1.LOCAL_EPOCA,
              C1.NOME_epoca
              );
            COMMIT;
            DIA_FALTA_TRABALHO( C1.DATA_INI_VALE, C1.DATA_FIM_VALE, C1.CODIGO_EMPRESA,C1.TIPO_CONTRATO,C1.CODIGO_CONTRATO,'MES_VALE');
            DIA_FALTA_TRABALHO( C1.DATA_INI_APURA_FREQUENCIA, C1.DATA_FIM_APURA_FREQUENCIA, C1.CODIGO_EMPRESA,C1.TIPO_CONTRATO,C1.CODIGO_CONTRATO,'MES_FREQUENCIA');
          END IF;
          --   dbms_output.put_line( C1.CODIGO_EMPRESA||'-'||C1.TIPO_CONTRATO||'='||C1.CODIGO_CONTRATO||'='||C1.CODIGO_VERBA||'='||'='||C1.DIAS||'='||C1.VALOR_VERBA||'='||C1.DATA_CALCULO_FOLHA );
        elsif (C1.DATA_CALCULO_FOLHA IS NULL ) THEN
          INSERT
          INTO SMARH_INT_RECALCULO_VALE
            (
              ID ,
              DATA_GEROU,
              CODIGO_EMPRESA,
              TIPO_CONTRATO,
              CODIGO_CONTRATO,
              CODIGO_VERBA,
              DIAS_PAGO,
              VALOR_PAGO,
              DATA_CALCULO_FOLHA,
              DATA_INI_FREQUENCIA,
              DATA_FIM_FREQUENCIA,
              DATA_INI_VALE,
              DATA_FIM_VALE,
              DIAS_UTEIS_SEM_FERIADO,
              QTD_FERIADOS,
              DIAS_UTEIS_MES,
              LOCAL_EPOCA,
              NOME_epoca
            )
            VALUES
            (
              ID_VALE.nextval,
              SYSDATE,
              C1.CODIGO_EMPRESA,
              C1.TIPO_CONTRATO,
              C1.CODIGO_CONTRATO,
              '0',
              '0',
              '0',
              pDATA1,
              pDATA1,
              last_day(pDATA1),
              pDATA1,
              last_day(pDATA1),
              RETORNO.DIAS_UTEIS_SEM_FERIADO,
              RETORNO.QTD_FERIADOS,
              RETORNO.DIAS_UTEIS_MES,
              C1.LOCAL_EPOCA,
              C1.NOME_epoca

            );
          COMMIT;
          DIA_FALTA_TRABALHO( pDATA1, last_day(pDATA1), C1.CODIGO_EMPRESA,C1.TIPO_CONTRATO,C1.CODIGO_CONTRATO,'MES_VALE');
          DIA_FALTA_TRABALHO( pDATA1, last_day(pDATA1), C1.CODIGO_EMPRESA,C1.TIPO_CONTRATO,C1.CODIGO_CONTRATO,'MES_FREQUENCIA');
        END IF;
      END LOOP;

  END LOOP;
END;