
  CREATE OR REPLACE EDITIONABLE PROCEDURE "ARTERH"."PR_ATUALIZA_CADASTRO_DEP" 
AS
  CONT          NUMBER;
  v_retorno1    VARCHAR2(2000BYTE);
  vRETORNO      VARCHAR2(2000BYTE);
  vCODIGO_P_A   VARCHAR2(15 BYTE);
  vCODIGO_P_D   VARCHAR2(15 BYTE);
  NOME_TABELA   VARCHAR2(45BYTE);
  NOME_COLUNA   VARCHAR2(1000BYTE);
  vCOLUNA_1     VARCHAR2(1000 BYTE);
  vCOLUNA_2     VARCHAR2(1000 BYTE);
  vSQL1         VARCHAR2(2000 BYTE);
  vSQL2         VARCHAR2(2000 BYTE);
  vCPF_VALIDO_D BOOLEAN;
  vCPF_VALIDO_A BOOLEAN;

  FUNCTION VERIFICA_DADOS(
  vCODIGO_PESSOA_A     IN VARCHAR2,
  vCODIGO_PESSOA_D     IN VARCHAR2,
  TABELA             IN VARCHAR2,
  COLUNA    IN VARCHAR2
  )


  RETURN VARCHAR2
  IS
  BEGIN


  v_retorno1:=null;
  vSQL1                 := 'SELECT '||COLUNA||' FROM ARTERH.RHPESS_PESSOA WHERE CODIGO  =  '''||TRIM(vCODIGO_PESSOA_A)||'''AND CODIGO_EMPRESA=''0001''';
   dbms_output.put_line('-- comando sql 1 ---'||vSQL1 );
  vSQL2  := 'SELECT '||COLUNA||' FROM ARTERH.RHPESS_PESSOA WHERE CODIGO  =  '''||TRIM(vCODIGO_PESSOA_D)||'''AND CODIGO_EMPRESA=''0001''';
   dbms_output.put_line('-- comando sql 2 ---'||vSQL2 );
  EXECUTE IMMEDIATE vSQL1  INTO vCOLUNA_1;
--  dbms_output.put_line('1'||'-'||vCODIGO_PESSOA_A||'-'|| vCOLUNA_1);
  EXECUTE IMMEDIATE vSQL2  INTO vCOLUNA_2;
 -- dbms_output.put_line('2'||'-'||vCODIGO_PESSOA_D||'-'|| vCOLUNA_2);
  IF vCOLUNA_1 IS NULL AND vCOLUNA_2 IS NOT NULL THEN
  --  dbms_output.put_line('ENTROU IF '||vCOLUNA_1||'----- '||vCOLUNA_2);
  v_retorno1:= vCODIGO_PESSOA_A||';'||vCODIGO_PESSOA_D||';'||COLUNA||';'||vCOLUNA_2||';'||vCOLUNA_1||';'||'CODIGO ATIVO SEM VALOR E CODIGO ANTIGO COM VALOR';
  ELSIF TRIM(vCOLUNA_1) <> TRIM(vCOLUNA_2)  THEN
  --  dbms_output.put_line('ENTROU ELSIF 2 '||vCOLUNA_1||'----- '||vCOLUNA_2);
  v_retorno1:= vCODIGO_PESSOA_A||';'||vCODIGO_PESSOA_D||';'||COLUNA||';'||vCOLUNA_2||';'||vCOLUNA_1||';'||'TEM VALOR MAS SÃƒO DIFERENTES';
  END IF;
  ---   dbms_output.put_line('VARIAVEL DE RETORNO '||v_retorno1);
  RETURN  TRIM(v_retorno1);
  END;
  ----SELECT DO FOR
  BEGIN
  DBMS_OUTPUT.ENABLE (buffer_size => NULL);
  CONT  :=0;
  FOR C1 IN (
  SELECT CODIGO,CODIGO_P_ATIVO FROM SANEAMENTO_PES_DEP WHERE TIPO='DT_FIM'  
  ) LOOP
  CONT:=CONT+1;
  vCODIGO_P_A :=C1.CODIGO_P_ATIVO;
  vCODIGO_P_D :=C1.CODIGO;
  ---dbms_output.put_line(' ANTES DE CHAMAR A FUNCAO '||vCODIGO_P_A||'---------------'||vCODIGO_P_D);
  IF vCODIGO_P_A IS NOT NULL AND vCODIGO_P_D IS NOT NULL THEN
  FOR C2 IN (SELECT NOME_TABELA,COLUNA FROM TABELA_MIGRA )
  LOOP
  NOME_TABELA:=C2.NOME_TABELA;
  NOME_COLUNA:=C2.COLUNA;
  vRETORNO:=REPLACE(REPLACE(VERIFICA_DADOS(vCODIGO_P_A,vCODIGO_P_D,NOME_TABELA,NOME_COLUNA),';;','; ;'),';;','; ;');
  ---dbms_output.put_line(' RETORNO DA FUNCAO '||vRETORNO);
  ---vCODIGO_PESSOA_A||';'||vCODIGO_PESSOA_D||';'||COLUNA||';'||vCOLUNA_2||';'||vCOLUNA_1||'CODIGO ATIVO SEM VALOR E CODIGO ANTIGO COM VALOR';
  IF vRETORNO IS NOT NULL THEN
  INSERT
  INTO ARMAZENA_DADOS
  (
  CODIGO_P_ATIVO,
  CODIGO_P_DESLIGADO,
  COLUNA_DADO,
  DADO_COD_P_DESLIGADO,
  DADO_COD_P_ATIVO,
  OBSERVACAO
  )
  VALUES
  (
  regexp_substr(vRETORNO, '[^;]+', 1, 1),
  regexp_substr(vRETORNO, '[^;]+', 1, 2),
  regexp_substr(vRETORNO, '[^;]+', 1, 3),
  regexp_substr(vRETORNO, '[^;]+', 1, 4),
  regexp_substr(vRETORNO, '[^;]+', 1, 5),
  regexp_substr(vRETORNO, '[^;]+', 1, 6)
  );
  COMMIT;
  END IF;
  END LOOP;
  END IF;
  END LOOP;
--- FECHA BEGIN DO FOR

  vCPF_VALIDO_D:=NULL;
  vCPF_VALIDO_A:=NULL;
  CONT         :=0;
  DBMS_OUTPUT.ENABLE (buffer_size => NULL);
  FOR C1 IN
  (SELECT CODIGO_P_ATIVO,
    CODIGO_P_DESLIGADO,
    COLUNA_DADO,
    REPLACE(REPLACE(REPLACE(TRIM(DADO_COD_P_ATIVO),'-',''),'.',''),' ','')    AS DADO_COD_P_ATIVO,
    REPLACE(REPLACE(REPLACE(TRIM(DADO_COD_P_DESLIGADO),'-',''),'.',''),' ','')AS DADO_COD_P_DESLIGADO
  FROM ARMAZENA_DADOS
  WHERE COLUNA_DADO ='CPF'
    --  AND CODIGO_P_ATIVO='101150820000165'
  )
  LOOP
    CONT            :=CONT+1;
    vCPF_VALIDO_D   :=VALIDA_CPF_CNPJ(C1.DADO_COD_P_DESLIGADO);
    vCPF_VALIDO_A   :=VALIDA_CPF_CNPJ(C1.DADO_COD_P_ATIVO);
    IF vCPF_VALIDO_D =FALSE AND vCPF_VALIDO_A=FALSE THEN
      UPDATE ARMAZENA_DADOS
      SET CPF_VALIDO      ='NENHUM_VALIDO'
      WHERE CODIGO_P_ATIVO=''
        ||C1.CODIGO_P_ATIVO
        ||''
      AND CODIGO_P_DESLIGADO=''
        ||C1.CODIGO_P_DESLIGADO
        ||''
      AND COLUNA_DADO         ='CPF'
      AND DADO_COD_P_DESLIGADO=''
        ||C1.DADO_COD_P_DESLIGADO
        ||''
      AND DADO_COD_P_ATIVO=''
        ||C1.DADO_COD_P_ATIVO
        ||'';
        commit;
    END IF;
    IF vCPF_VALIDO_D=TRUE AND vCPF_VALIDO_A=FALSE THEN
      UPDATE ARMAZENA_DADOS
      SET CPF_VALIDO      ='VALIDO_D'
      WHERE CODIGO_P_ATIVO=''
        ||C1.CODIGO_P_ATIVO
        ||''
      AND CODIGO_P_DESLIGADO=''
        ||C1.CODIGO_P_DESLIGADO
        ||''
      AND COLUNA_DADO         ='CPF'
      AND DADO_COD_P_DESLIGADO=''
        ||C1.DADO_COD_P_DESLIGADO
        ||''
      AND DADO_COD_P_ATIVO=''
        ||C1.DADO_COD_P_ATIVO
        ||'';
        commit;
    END IF;
    IF vCPF_VALIDO_D=FALSE AND vCPF_VALIDO_A=TRUE THEN
      UPDATE ARMAZENA_DADOS
      SET CPF_VALIDO      ='VALIDO_A'
      WHERE CODIGO_P_ATIVO=''
        ||C1.CODIGO_P_ATIVO
        ||''
      AND CODIGO_P_DESLIGADO=''
        ||C1.CODIGO_P_DESLIGADO
        ||''
      AND COLUNA_DADO         ='CPF'
      AND DADO_COD_P_DESLIGADO=''
        ||C1.DADO_COD_P_DESLIGADO
        ||''
      AND DADO_COD_P_ATIVO=''
        ||C1.DADO_COD_P_ATIVO
        ||'';
        commit;
    END IF;
    IF vCPF_VALIDO_D=TRUE AND vCPF_VALIDO_A=TRUE THEN
      UPDATE ARMAZENA_DADOS
      SET CPF_VALIDO      ='VALIDO_AMBOS'
      WHERE CODIGO_P_ATIVO=''
        ||C1.CODIGO_P_ATIVO
        ||''
      AND CODIGO_P_DESLIGADO=''
        ||C1.CODIGO_P_DESLIGADO
        ||''
      AND COLUNA_DADO         ='CPF'
      AND DADO_COD_P_DESLIGADO=''
        ||C1.DADO_COD_P_DESLIGADO
        ||''
      AND DADO_COD_P_ATIVO=''
        ||C1.DADO_COD_P_ATIVO
        ||'';
    END IF;
    commit;
  END LOOP;
UPDATE ARMAZENA_DADOS SET dado_cod_p_DESLIGADO=LPAD(dado_cod_p_DESLIGADO,4,0)where coluna_dado='NACIONALIDADE' and OBSERVACAO='CODIGO ATIVO SEM VALOR E CODIGO ANTIGO COM VALOR';
commit;
UPDATE ARMAZENA_DADOS SET dado_cod_p_DESLIGADO=LPAD(dado_cod_p_DESLIGADO,4,0)where coluna_dado='GRAU_INSTRUCAO' and OBSERVACAO='CODIGO ATIVO SEM VALOR E CODIGO ANTIGO COM VALOR';
commit;
  CONT:=0;
  vSQL1:=NULL;
  DBMS_OUTPUT.ENABLE (buffer_size => NULL);
  FOR C1 IN
  (SELECT XX.*
  FROM
    (SELECT X.*,
      CASE
        WHEN X.CPF_NOVO  = 'NADA'
        AND DEMAIS_ATUAL = 'NADA'
        THEN 'NAO_ATUALIZAR'
        ELSE 'ATUALIZAR'
      END AS DEVE_ATUALIZAR
    FROM
      (SELECT X.CODIGO_P_ATIVO ,X.COLUNA_DADO,X.DADO_COD_P_DESLIGADO,X.DADO_COD_P_ATIVO,OBSERVACAO,CPF_VALIDO,
        CASE
          WHEN CPF_VALIDO     ='VALIDO_AMBOS'
          AND DADO_COD_P_ATIVO='00000000000'
          AND CPF_VALIDO     IS NOT NULL
          THEN DADO_COD_P_DESLIGADO
          WHEN CPF_VALIDO ='VALIDO_A'
          AND CPF_VALIDO IS NOT NULL
          THEN DADO_COD_P_ATIVO
          WHEN CPF_VALIDO ='VALIDO_D'
          AND CPF_VALIDO IS NOT NULL
          THEN DADO_COD_P_DESLIGADO
          WHEN CPF_VALIDO IS NULL
          AND OBSERVACAO   ='CODIGO ATIVO SEM VALOR E CODIGO ANTIGO COM VALOR'
          AND COLUNA_DADO  ='CPF'
          THEN DADO_COD_P_DESLIGADO
          ELSE 'NADA'
        END AS CPF_NOVO,
        CASE
          WHEN OBSERVACAO      ='CODIGO ATIVO SEM VALOR E CODIGO ANTIGO COM VALOR'
          AND COLUNA_DADO NOT IN ('CPF')
          THEN DADO_COD_P_DESLIGADO
          ELSE 'NADA'
        END AS DEMAIS_ATUAL
      FROM ARMAZENA_DADOS X
      ORDER BY CODIGO_P_ATIVO DESC
      )X
    )XX
  WHERE XX.DEVE_ATUALIZAR='ATUALIZAR'
---- AND XX.CODIGO_P_ATIVO=LPAD('000007738790001',15,0)
  GROUP BY XX.CODIGO_P_ATIVO,XX.COLUNA_DADO,XX.DADO_COD_P_DESLIGADO,XX.DADO_COD_P_ATIVO,XX.OBSERVACAO,XX.CPF_VALIDO,XX.CPF_NOVO,XX.DEMAIS_ATUAL,XX.DEVE_ATUALIZAR
  ORDER BY XX.CODIGO_P_ATIVO,XX.COLUNA_DADO,XX.DADO_COD_P_DESLIGADO,XX.DADO_COD_P_ATIVO,XX.OBSERVACAO,XX.CPF_VALIDO,XX.CPF_NOVO,XX.DEMAIS_ATUAL,XX.DEVE_ATUALIZAR
  )
  LOOP
    CONT         :=CONT+1;
    IF C1.CPF_NOVO='NADA' AND C1.DEMAIS_ATUAL<>'NADA' THEN
    vSQL1 :='UPDATE RHPESS_PESSOA SET '||C1.COLUNA_DADO||'='''||C1.DEMAIS_ATUAL||''',DT_ULT_ALTER_USUA=SYSDATE,LOGIN_USUARIO=''PR_ATUALIZA_CADA_DEP'' WHERE CODIGO='''||C1.CODIGO_P_ATIVO||'''AND CODIGO_EMPRESA=''0001''';
  --  dbms_output.put_line('-- comando sql  ---'||vSQL1 );
  EXECUTE IMMEDIATE vSQL1;
      COMMIT;
    ELSIF C1.CPF_NOVO<>'NADA' AND C1.DEMAIS_ATUAL='NADA' THEN
    vSQL1 :='UPDATE RHPESS_PESSOA SET '||C1.COLUNA_DADO||'='''||C1.CPF_NOVO||''',DT_ULT_ALTER_USUA=SYSDATE,LOGIN_USUARIO=''PR_ATUALIZA_CADA_DEP'' WHERE CODIGO='''||C1.CODIGO_P_ATIVO||''' AND CODIGO_EMPRESA=''0001''';
   ---  dbms_output.put_line('-- comando sql 1 ---'||vSQL1 );
    EXECUTE IMMEDIATE vSQL1;
      COMMIT;
    END IF;
  END LOOP;
END;