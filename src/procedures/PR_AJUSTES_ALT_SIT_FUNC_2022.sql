
  CREATE OR REPLACE EDITIONABLE PROCEDURE "ARTERH"."PR_AJUSTES_ALT_SIT_FUNC_2022" (DATA_INICIO IN VARCHAR2, DATA_FIM IN VARCHAR2)
AS
BEGIN

 --Kellysson em 26/10/21 NOVA PROCEDURE PARA RODAR DIARIMENTE NA INTEGRACAO IFPONTO PARA AJUSTAR 4 ITENS NA ALT SIT FUNC
BEGIN
--INICIO--------------------------------------------------------------------------------------------------------------------AJUSTES 1--- SEQUENCIA DE SITUACOES ATIVAS UNINDO AS MESMAS EM UMA SO
DECLARE    

vDATA_INICIO Varchar2(10);
vDATA_FIM Varchar2(10);

vCONTADOR1 NUMBER; 
vCONTADOR2 NUMBER; 
vULTIMO_REG_ATIVO_SEM_FIM VARCHAR2(1);
vDATA_INICIO_MAIS_RECENTE DATE;
vDATA_INICIO_MAIS_ANTIGO DATE;
vDATA_FIM_MAIS_RECENTE DATE;--novo em 25/10/21

vULTIMO_REG_E_LICENCA VARCHAR2(1);--novo em 25/10/21
vDATA_INICIO_MAIS_RECENTE_L DATE;--novo em 25/10/21
vDATA_INICIO_MAIS_ANTIGO_L DATE;--novo em 25/10/21
vDATA_FIM_MAIS_RECENTE_L DATE;--novo em 25/10/21
vPROXIMA_SITUACAO VARCHAR2(4);--novo em 25/10/21
vTEM_FICHA_PERIODO VARCHAR2(1);--novo em 25/10/21 
vQTD_FICHAS_SEQUENCIAIS NUMBER;--NOVO EM 26/10/21
vQTD_SIT_FUNC_SEQUENCIAIS NUMBER;--NOVO EM 26/10/21

err_msg varchar2 (4000);


BEGIN
dbms_output.enable(null);

vDATA_INICIO := DATA_INICIO;
vDATA_FIM := DATA_FIM;

vCONTADOR1 := 0;
vCONTADOR2 := 0;
vULTIMO_REG_ATIVO_SEM_FIM := NULL;
vDATA_INICIO_MAIS_RECENTE := NULL;
vDATA_INICIO_MAIS_ANTIGO := NULL;
vDATA_FIM_MAIS_RECENTE := NULL;

vULTIMO_REG_E_LICENCA := NULL;---novo em 25/10/21
vDATA_INICIO_MAIS_RECENTE_L := NULL;--novo em 25/10/21
vDATA_INICIO_MAIS_ANTIGO_L := NULL;---novo em 25/10/21
vDATA_FIM_MAIS_RECENTE_L := NULL;---novo em 25/10/21
vPROXIMA_SITUACAO := NULL;--novo em 25/10/21
vTEM_FICHA_PERIODO := NULL; --novo em 25/10/21
vQTD_FICHAS_SEQUENCIAIS := 0;--NOVO EM 26/10/21
vQTD_SIT_FUNC_SEQUENCIAIS := 0;--NOVO EM 26/10/21

err_msg := NULL;


dbms_output.put_line('--INICIO--AJUSTES 1--- SEQUENCIA DE SITUACOES ATIVAS UNINDO AS MESMAS EM UMA SO REGISTRO ALT SIT FUNC');
--FIM -----C1. BUSCAR REGISTROS NA LOG ALT SIT FUNC
FOR C1 IN (

SELECT L.CODIGO_EMPRESA, L.TIPO_CONTRATO, L.CODIGO, COUNT(1)QUANT FROM SMARH_INT_PE_ALTSITFUN_AUDITO L WHERE L.CODIGO_EMPRESA IN ('0001','0098','0003','0013','0014', '0002','0007','0009','0010')--AJUSTADO EM 26/10/23 --('0001','0013','0014') --AJUSTADO EM 8/5/23
AND
TRUNC(L.DT_ULT_ALTER_USUA)  BETWEEN vDATA_INICIO AND vDATA_FIM --= TRUNC(SYSDATE)-1 --TO_DATE('23/12/2021','DD/MM/YYYY') --TRUNC(SYSDATE)-1 --------TROCA DATA---------------DATA A ALTERAR PARA PEGAR NA LOG DA ALT SIT FUNC OS REGISTROS ALTERADOS
--BETWEEN TO_DATE('07/01/2022','DD/MM/YYYY') AND TO_DATE('09/01/2022','DD/MM/YYYY')--
GROUP BY L.CODIGO_EMPRESA, L.TIPO_CONTRATO, L.CODIGO ORDER BY COUNT(1)DESC, L.CODIGO_EMPRESA, L.TIPO_CONTRATO, L.CODIGO

)
LOOP
vCONTADOR1 :=vCONTADOR1+1; 
dbms_output.put_line('--vCONTADOR1: '||vCONTADOR1);
dbms_output.put_line('--C1.CODIGO_EMPRESA: '||C1.CODIGO_EMPRESA||' C1.TIPO_CONTRATO: '||C1.TIPO_CONTRATO||' C1.CODIGO: '||C1.CODIGO);

---INICIO---C2. POR BM VERIFICAR HISTORICO A PARTIR DE 01/10/19
FOR C2 IN (

select  
x2.* from(
SELECT
X.*
 FROM (
SELECT 
S.* 
FROM (
select 
k.*
 from (
SELECT 
COD_CATEG.CONTEUDO_INICIAL TIPO_TRABALHADOR, C.SITUACAO_FUNCIONAL SIT_FUNC_ULT_CONTR,
TRUNC(Q.DATA_INICIO_COMPARAR) - TRUNC(Q.DATA_FIM_COMPARAR) -1 AS LACUNAS 
,Q.* 
FROM(
SELECT 
T.* 
,CASE 
WHEN T.ORDEM_BM = 1 THEN to_date(to_char(SYSDATE,'dd/mm/yyyy'),'dd/mm/yyyy')+1 
ELSE to_date(to_char(T.PROXIMA_DATA_INICIO,'dd/mm/yyyy'),'dd/mm/yyyy') END DATA_INICIO_COMPARAR
,CASE 
WHEN T.CONTROLE_FOLHA NOT IN ('L','M') AND T.DATA_FIM IS NULL AND T.ORDEM_BM = 1 THEN to_date(to_char(SYSDATE,'dd/mm/yyyy'),'dd/mm/yyyy')
WHEN T.CONTROLE_FOLHA NOT IN ('L','M') AND T.DATA_FIM IS NULL AND T.ORDEM_BM <> 1 THEN to_date(to_char(T.DATA_INICIO,'dd/mm/yyyy'),'dd/mm/yyyy')-1--em 27/8/21 incluir -1 para dar diferença 
ELSE to_date(to_char(T.DATA_FIM,'dd/mm/yyyy'),'dd/mm/yyyy') END DATA_FIM_COMPARAR
FROM (
SELECT 
ROW_NUMBER() OVER (PARTITION BY A.CODIGO_EMPRESA, A.TIPO_CONTRATO, A.CODIGO ORDER BY A.DATA_INIC_SITUACAO DESC) AS ORDEM_BM,
A.CODIGO_EMPRESA, A.TIPO_CONTRATO, A.CODIGO, A.COD_SIT_FUNCIONAL, S.DESCRICAO SIT_FUNCIONAL, S.CONTROLE_FOLHA, 
S.E_AFASTAMENTO, S.SUSPENDE_REMUNERA, S.qtde_dias_proximo, S.SITUACAO_PONTO,
case when S.c_livre_selec02 = '0' THEN 'NADA' when S.c_livre_selec02 = '1' then 'SIM' when S.c_livre_selec02 = '2' then 'NÃO' ELSE 'ERRO' END SO_GERA_SIT_PONTO, 
to_date(to_char(A.DATA_INIC_SITUACAO,'dd/mm/yyyy'),'dd/mm/yyyy') DATA_INICIO, to_date(to_char(A.DATA_FIM_SITUACAO,'dd/mm/yyyy'),'dd/mm/yyyy') DATA_FIM--, A.PROXIMA_SITUACAO 
,a.login_usuario, a.dt_ult_alter_usua
,LEAD(A.COD_SIT_FUNCIONAL, 1, NULL) OVER (PARTITION BY A.CODIGO_EMPRESA, A.TIPO_CONTRATO, A.CODIGO ORDER BY A.DATA_INIC_SITUACAO DESC ) AS PROXIMA_COD_SIT_FUNCIONAL
,LEAD(S.DESCRICAO, 1, NULL) OVER (PARTITION BY A.CODIGO_EMPRESA, A.TIPO_CONTRATO, A.CODIGO ORDER BY A.DATA_INIC_SITUACAO DESC ) AS PROXIMA_SIT_FUNCIONAL
,LEAD(S.CONTROLE_FOLHA, 1, NULL) OVER (PARTITION BY A.CODIGO_EMPRESA, A.TIPO_CONTRATO, A.CODIGO ORDER BY A.DATA_INIC_SITUACAO DESC ) AS PROXIMO_CONTROLE_FOLHA
,LEAD(S.E_AFASTAMENTO, 1, NULL) OVER (PARTITION BY A.CODIGO_EMPRESA, A.TIPO_CONTRATO, A.CODIGO ORDER BY A.DATA_INIC_SITUACAO DESC ) AS PROXIMO_E_AFASTAMENTO
,LEAD(S.SUSPENDE_REMUNERA, 1, NULL) OVER (PARTITION BY A.CODIGO_EMPRESA, A.TIPO_CONTRATO, A.CODIGO ORDER BY A.DATA_INIC_SITUACAO DESC ) AS PROXIMO_SUSPENDE_REMUNERA
,LEAD(case when S.c_livre_selec02 = '0' THEN 'NADA' when S.c_livre_selec02 = '1' then 'SIM' when S.c_livre_selec02 = '2' then 'NÃO' ELSE 'ERRO' END, 1, NULL) OVER (PARTITION BY A.CODIGO_EMPRESA, A.TIPO_CONTRATO, A.CODIGO ORDER BY A.DATA_INIC_SITUACAO DESC ) AS PROXIMO_SO_GERA_SIT_PONTO
,LEAD(to_date(to_char(A.DATA_INIC_SITUACAO,'dd/mm/yyyy'),'dd/mm/yyyy'), 1, NULL) OVER (PARTITION BY A.CODIGO_EMPRESA, A.TIPO_CONTRATO, A.CODIGO  ORDER BY A.DATA_INIC_SITUACAO DESC ) AS PROXIMA_DATA_INICIO
,LEAD(to_date(to_char(A.DATA_FIM_SITUACAO,'dd/mm/yyyy'),'dd/mm/yyyy'), 1, NULL) OVER (PARTITION BY A.CODIGO_EMPRESA, A.TIPO_CONTRATO, A.CODIGO  ORDER BY A.DATA_INIC_SITUACAO DESC ) AS PROXIMA_DATA_FIM
,LEAD(a.login_usuario, 1, NULL) OVER (PARTITION BY A.CODIGO_EMPRESA, A.TIPO_CONTRATO, A.CODIGO ORDER BY A.DATA_INIC_SITUACAO DESC ) AS PROXIMO_login_usuario
,LEAD( a.dt_ult_alter_usua, 1, NULL) OVER (PARTITION BY A.CODIGO_EMPRESA, A.TIPO_CONTRATO, A.CODIGO ORDER BY A.DATA_INIC_SITUACAO DESC ) AS PROXIMa_dt_ult_alter_usua

FROM RHCGED_ALT_SIT_FUN A
LEFT OUTER JOIN RHPARM_SIT_FUNC S ON S.CODIGO = A.COD_SIT_FUNCIONAL
WHERE 
--A.CODIGO IN ('000000000883291','00000000021005X','000000000239597', '00000000028777X', '000000000297562', '000000000302450') AND
A.CODIGO_EMPRESA IN ('0001','0098','0003','0013','0014', '0002','0007','0009','0010')-- '1' 
                                                                            -- and trunc(A.DT_ULT_ALTER_USUA) >= to_date('19/12/2019','dd/mm/yyyy')--1291
and 
(trunc(A.DATA_INIC_SITUACAO) >= to_date('30/09/2019','dd/mm/yyyy')
or A.DATA_FIM_SITUACAO IS NULL --NOVO EM 15/10/21
OR trunc(A.DATA_FIM_SITUACAO) >= to_date('30/09/2019','dd/mm/yyyy')--NOVO EM 15/10/21
)
)T
)Q
LEFT OUTER JOIN rhpess_contrato c ON C.CODIGO_EMPRESA = q.CODIGO_EMPRESA AND C.TIPO_CONTRATO = q.TIPO_CONTRATO AND C.CODIGO = q.CODIGO
left outer join RHTABS_VINCULO_EMP V ON V.CODIGO = c.VINCULO
LEFT OUTER JOIN (select * from rhtabs_itds_sist WHERE CODIGO_DOMINIO IN (select CODIGO_DOMINIO from RHTABS_COLS_SIST  where codigo_tabela = 'RHTABS_VINCULO_EMP' and codigo_coluna = 'TP_REGIME_TRAB_ESOCIAL'))RG_TRAB
ON RG_TRAB.CONTEUDO_INICIAL = V.TP_REGIME_TRAB_ESOCIAL
LEFT OUTER JOIN (select * from rhtabs_itds_sist WHERE CODIGO_DOMINIO IN (select CODIGO_DOMINIO from RHTABS_COLS_SIST  where codigo_tabela = 'RHTABS_VINCULO_EMP' and codigo_coluna = 'TP_REGIME_PREV_ESOCIAL'))RG_PREV
ON RG_PREV.CONTEUDO_INICIAL = V.TP_REGIME_PREV_ESOCIAL
LEFT OUTER JOIN (select * from rhtabs_itds_sist WHERE CODIGO_DOMINIO IN (select CODIGO_DOMINIO from RHTABS_COLS_SIST  where codigo_tabela = 'RHTABS_VINCULO_EMP' and codigo_coluna = 'COD_CATEG_ESOCIAL'))COD_CATEG
ON COD_CATEG.CONTEUDO_INICIAL = V.COD_CATEG_ESOCIAL
WHERE 
C.ANO_MES_REFERENCIA = (SELECT MAX(AUX.ANO_MES_REFERENCIA)FROM RHPESS_CONTRATO AUX WHERE C.CODIGO_EMPRESA = AUX.CODIGO_EMPRESA AND C.TIPO_CONTRATO = AUX.TIPO_CONTRATO AND C.CODIGO = AUX.CODIGO)
and c.data_rescisao is null and c.CODIGO_EMPRESA IN ('0001','0098','0003','0013','0014', '0002','0007','0009','0010')-----------------------para todos bm ativos em geral
)k
--WHERE k.lacunas <> 0 --teste urbel sequencia de ativos
order by  K.CODIGO_EMPRESA , K.TIPO_CONTRATO , K.CODIGO , K.data_inicIO
)S
--where trunc(s.data_fim) < trunc(sysdate) --COMENTADO EM 27/8/21
--comentado estes 15/10/21--where trunc(s.data_fim_COMPARAR) < trunc(sysdate) --NOVO EM 27/8/21

)X 

)x2 
WHERE C1.CODIGO_EMPRESA = X2.CODIGO_EMPRESA AND C1.TIPO_CONTRATO = X2.TIPO_CONTRATO AND C1.CODIGO = X2.CODIGO --UNE C1. COM C2.
--LEFT OUTER JOIN (SELECT L.CODIGO_EMPRESA, L.TIPO_CONTRATO, L.CODIGO, COUNT(1)QUANT FROM SMARH_INT_PE_ALTSITFUN_AUDITO L WHERE TRUNC(L.DT_ULT_ALTER_USUA) = TRUNC(SYSDATE)-1 GROUP BY L.CODIGO_EMPRESA, L.TIPO_CONTRATO, L.CODIGO)L ON L.CODIGO_EMPRESA = X2.CODIGO_EMPRESA AND L.TIPO_CONTRATO = X2.TIPO_CONTRATO AND L.CODIGO = X2.CODIGO WHERE L.CODIGO_EMPRESA IS NOT NULL

order by  x2.CODIGO_EMPRESA , x2.TIPO_CONTRATO , x2.CODIGO , x2.data_inicIO desc


)
LOOP

vCONTADOR2 :=vCONTADOR2+1; 
dbms_output.put_line('--vCONTADOR2: '||vCONTADOR2);
dbms_output.put_line('--ORDEM_BM: '||C2.ORDEM_BM||' CODIGO_EMPRESA: '||C2.CODIGO_EMPRESA	||' TIPO_CONTRATO: '||C2.TIPO_CONTRATO||' CODIGO: '||C2.CODIGO|| ' COD_SIT_FUNCIONAL: '||C2.COD_SIT_FUNCIONAL|| ' DATA_INICIO: '||C2.DATA_INICIO||' DATA_FIM: '||C2.DATA_FIM);

BEGIN --EXCEPTION


--INICIO -------------------------------------IF DE ATIVOS
IF 
C2.CONTROLE_FOLHA = 'N' AND C2.E_AFASTAMENTO = 'N' AND C2.SUSPENDE_REMUNERA = 'N' 
AND C2.PROXIMO_CONTROLE_FOLHA = 'N' AND C2.PROXIMO_E_AFASTAMENTO = 'N' AND C2.PROXIMO_SUSPENDE_REMUNERA = 'N'
AND C2.COD_SIT_FUNCIONAL = C2.PROXIMA_COD_SIT_FUNCIONAL AND C2.SITUACAO_PONTO IS NULL
AND C2.ORDEM_BM = 1 
THEN
vULTIMO_REG_ATIVO_SEM_FIM := 'S';
vDATA_INICIO_MAIS_RECENTE := C2.DATA_INICIO;
vDATA_FIM_MAIS_RECENTE := C2.DATA_FIM;
dbms_output.put_line('--*********1-ULTIMO REG. ALT SIT FUNC ATIVO, SEQUENCIAL COM OUTRO ATIVO (PRIMEIRO SENDO O ULTIMO DO HISTORICO). vULTIMO_REG_ATIVO_SEM_FIM: '||vULTIMO_REG_ATIVO_SEM_FIM ||' vDATA_INICIO_MAIS_RECENTE: '||vDATA_INICIO_MAIS_RECENTE|| ' vDATA_FIM_MAIS_RECENTE: '||vDATA_FIM_MAIS_RECENTE);

ELSIF
C2.CONTROLE_FOLHA = 'N' AND C2.E_AFASTAMENTO = 'N' AND C2.SUSPENDE_REMUNERA = 'N' 
AND C2.PROXIMO_CONTROLE_FOLHA = 'N' AND C2.PROXIMO_E_AFASTAMENTO = 'N' AND C2.PROXIMO_SUSPENDE_REMUNERA = 'N'
AND C2.COD_SIT_FUNCIONAL = C2.PROXIMA_COD_SIT_FUNCIONAL AND C2.SITUACAO_PONTO IS NULL
AND C2.ORDEM_BM <> 1 
AND vDATA_INICIO_MAIS_RECENTE IS NULL
THEN
vULTIMO_REG_ATIVO_SEM_FIM := 'N';
vDATA_INICIO_MAIS_RECENTE := C2.DATA_INICIO;
vDATA_FIM_MAIS_RECENTE := C2.DATA_FIM;
dbms_output.put_line('--*********1-REG. ALT SIT FUNC ATIVO, SEQUENCIAL COM OUTRO ATIVO (PRIMEIRO NAO SENDO O ULTIMO DO HISTORICO). vULTIMO_REG_ATIVO_SEM_FIM: '||vULTIMO_REG_ATIVO_SEM_FIM ||' vDATA_INICIO_MAIS_RECENTE: '||vDATA_INICIO_MAIS_RECENTE|| ' vDATA_FIM_MAIS_RECENTE: '||vDATA_FIM_MAIS_RECENTE);

ELSIF
C2.CONTROLE_FOLHA = 'N' AND C2.E_AFASTAMENTO = 'N' AND C2.SUSPENDE_REMUNERA = 'N' 
AND C2.PROXIMO_CONTROLE_FOLHA = 'N' AND C2.PROXIMO_E_AFASTAMENTO = 'N' AND C2.PROXIMO_SUSPENDE_REMUNERA = 'N'
AND C2.COD_SIT_FUNCIONAL = C2.PROXIMA_COD_SIT_FUNCIONAL AND C2.SITUACAO_PONTO IS NULL
AND C2.ORDEM_BM <> 1 
AND vDATA_INICIO_MAIS_RECENTE IS NOT NULL
THEN
dbms_output.put_line('--*********2-REG. ALT SIT FUNC ATIVO SEQUENCIAL COM OUTRO ATIVO (NO MEIO). vULTIMO_REG_ATIVO_SEM_FIM: '||vULTIMO_REG_ATIVO_SEM_FIM ||' vDATA_INICIO_MAIS_RECENTE: '||vDATA_INICIO_MAIS_RECENTE|| ' vDATA_FIM_MAIS_RECENTE: '||vDATA_FIM_MAIS_RECENTE);

ELSIF
C2.CONTROLE_FOLHA = 'N' AND C2.E_AFASTAMENTO = 'N' AND C2.SUSPENDE_REMUNERA = 'N' 
AND  C2.SITUACAO_PONTO IS NULL
AND 
  (
  (C2.PROXIMO_CONTROLE_FOLHA <> 'N' OR C2.PROXIMO_E_AFASTAMENTO <> 'N' OR C2.PROXIMO_SUSPENDE_REMUNERA <> 'N')
  OR C2.PROXIMO_CONTROLE_FOLHA IS NULL
  OR C2.COD_SIT_FUNCIONAL <> C2.PROXIMA_COD_SIT_FUNCIONAL
  OR  C2.SITUACAO_PONTO IS NOT NULL
  )
AND C2.ORDEM_BM <> 1 
AND vDATA_INICIO_MAIS_RECENTE IS NOT NULL
THEN
vDATA_INICIO_MAIS_ANTIGO := C2.DATA_INICIO;
dbms_output.put_line('--*********3-REG. ALT SIT FUNC ATIVO SEQUENCIAL COM OUTRO ATIVO (ULTIMO). vULTIMO_REG_ATIVO_SEM_FIM: '||vULTIMO_REG_ATIVO_SEM_FIM ||' vDATA_INICIO_MAIS_ANTIGO: '||vDATA_INICIO_MAIS_ANTIGO);

dbms_output.put_line('--****ATENCAO**** NESTE MOMENTO AJUSTAR O HISTORICO E LIMPAR AS VARIAVEIS,MAS DEVE AVALIAR SE A SEQUENCIA SER A ULTIMA NO HISTORICO OU NO MEIO DEVIDO A DATA FIM DA ATIVA');
dbms_output.put_line('--C2.COD_SIT_FUNCIONAL: '||C2.COD_SIT_FUNCIONAL|| ' vULTIMO_REG_ATIVO_SEM_FIM: '||vULTIMO_REG_ATIVO_SEM_FIM ||' vDATA_INICIO_MAIS_RECENTE: '||vDATA_INICIO_MAIS_RECENTE||' vDATA_INICIO_MAIS_ANTIGO: '||vDATA_INICIO_MAIS_ANTIGO || ' vDATA_FIM_MAIS_RECENTE: '||vDATA_FIM_MAIS_RECENTE);
dbms_output.put_line('');

IF vULTIMO_REG_ATIVO_SEM_FIM = 'S' THEN
dbms_output.put_line('--DELETA ALT SIT FUNC QUE NAO SAO AS MAIS ANTIGAS E UPDATE NA MAIS ANTIGA CODIGO SITUACAO ATIVA: '||C2.COD_SIT_FUNCIONAL|| ' E DATA INICIO ENTRE TRUNC(vDATA_INICIO_MAIS_ANTIGO)+1: '|| TRUNC(vDATA_INICIO_MAIS_ANTIGO)|| ' TRUNC(vDATA_INICIO_MAIS_RECENTE): '||TRUNC(vDATA_INICIO_MAIS_RECENTE));

INSERT INTO SUGESP_AJUSTE_LOTE_CAMPO_HIST(CODIGO_EMPRESA, TIPO_CONTRATO, CODIGO_CONTRATO, CAMPO_VALOR_1, DATA_DADOS, CONSIDERACOES)VALUES(C2.CODIGO_EMPRESA, C2.TIPO_CONTRATO, C2.CODIGO,'LOG EXECUCAO PROCEDURE PR_AJUSTES_ALT_SIT_FUNC_2022',SYSDATE,
'DELETA ALT SIT FUNC QUE NAO SAO AS MAIS ANTIGAS E UPDATE NA MAIS ANTIGA CODIGO SITUACAO ATIVA: '||C2.COD_SIT_FUNCIONAL|| ' E DATA INICIO ENTRE TRUNC(vDATA_INICIO_MAIS_ANTIGO)+1: '|| TRUNC(vDATA_INICIO_MAIS_ANTIGO)|| ' TRUNC(vDATA_INICIO_MAIS_RECENTE): '||TRUNC(vDATA_INICIO_MAIS_RECENTE)
);COMMIT;

--DELETE RHCGED_ALT_SIT_FUN WHERE CODIGO_EMPRESA = C2.CODIGO_EMPRESA AND  TIPO_CONTRATO = C2.TIPO_CONTRATO AND CODIGO = C2.CODIGO AND COD_SIT_FUNCIONAL = C2.COD_SIT_FUNCIONAL AND TRUNC(DATA_INIC_SITUACAO) BETWEEN TRUNC(vDATA_INICIO_MAIS_ANTIGO)+1 AND TRUNC(vDATA_INICIO_MAIS_RECENTE); COMMIT;
DELETE RHCGED_ALT_SIT_FUN WHERE CODIGO_EMPRESA = C2.CODIGO_EMPRESA AND TIPO_CONTRATO = C2.TIPO_CONTRATO AND CODIGO = C2.CODIGO AND COD_SIT_FUNCIONAL =  C2.COD_SIT_FUNCIONAL AND TRUNC(DATA_INIC_SITUACAO) BETWEEN TO_DATE(vDATA_INICIO_MAIS_ANTIGO,'DD/MM/YYYY')+1 AND TO_DATE(vDATA_INICIO_MAIS_RECENTE,'DD/MM/YYYY'); COMMIT;
--UPDATE RHCGED_ALT_SIT_FUN SET DATA_FIM_SITUACAO = NULL, LOGIN_USUARIO = 'AJUSTE_ATIVO_SEQUENCIA_PR_DIA' ,DT_ULT_ALTER_USUA = SYSDATE WHERE CODIGO_EMPRESA = C2.CODIGO_EMPRESA AND  TIPO_CONTRATO = C2.TIPO_CONTRATO AND CODIGO = C2.CODIGO AND COD_SIT_FUNCIONAL = C2.COD_SIT_FUNCIONAL AND TRUNC(DATA_INIC_SITUACAO) = TRUNC(vDATA_INICIO_MAIS_ANTIGO); COMMIT;
UPDATE RHCGED_ALT_SIT_FUN SET DATA_FIM_SITUACAO = NULL, LOGIN_USUARIO = 'AJUSTE_ATIVO_SEQUENCIA_PR_DIA' ,DT_ULT_ALTER_USUA = SYSDATE WHERE CODIGO_EMPRESA = C2.CODIGO_EMPRESA AND TIPO_CONTRATO = C2.TIPO_CONTRATO AND CODIGO = C2.CODIGO AND COD_SIT_FUNCIONAL = C2.COD_SIT_FUNCIONAL AND TRUNC(DATA_INIC_SITUACAO) = TO_DATE(vDATA_INICIO_MAIS_ANTIGO,'DD/MM/YYYY'); COMMIT;

--LIMPAR VARIAVEIS PARA PROXIMO GRUPO DE ATIVAS
vULTIMO_REG_ATIVO_SEM_FIM := 'N';
vDATA_INICIO_MAIS_RECENTE := NULL;
vDATA_INICIO_MAIS_ANTIGO:= NULL;
vDATA_FIM_MAIS_RECENTE := NULL;

ELSIF vULTIMO_REG_ATIVO_SEM_FIM = 'N' THEN
dbms_output.put_line('--DELETA E CRIA ALT SIT FUNC CODIGO SITUACAO ATIVA: '||C2.COD_SIT_FUNCIONAL|| ' E DATA INICIO ENTRE TRUNC(vDATA_INICIO_MAIS_ANTIGO): '|| TRUNC(vDATA_INICIO_MAIS_ANTIGO)|| ' TRUNC(vDATA_FIM_MAIS_RECENTE): '||TRUNC(vDATA_FIM_MAIS_RECENTE));
INSERT INTO SUGESP_AJUSTE_LOTE_CAMPO_HIST(CODIGO_EMPRESA, TIPO_CONTRATO, CODIGO_CONTRATO, CAMPO_VALOR_1, DATA_DADOS, CONSIDERACOES)VALUES(C2.CODIGO_EMPRESA, C2.TIPO_CONTRATO, C2.CODIGO,'LOG EXECUCAO PROCEDURE PR_AJUSTES_ALT_SIT_FUNC_2022',SYSDATE,
'DELETA E CRIA ALT SIT FUNC CODIGO SITUACAO ATIVA: '||C2.COD_SIT_FUNCIONAL|| ' E DATA INICIO ENTRE TRUNC(vDATA_INICIO_MAIS_ANTIGO): '|| TRUNC(vDATA_INICIO_MAIS_ANTIGO)|| ' TRUNC(vDATA_FIM_MAIS_RECENTE): '||TRUNC(vDATA_FIM_MAIS_RECENTE)
);COMMIT;

--DELETE RHCGED_ALT_SIT_FUN WHERE CODIGO_EMPRESA = C2.CODIGO_EMPRESA AND  TIPO_CONTRATO = C2.TIPO_CONTRATO AND  CODIGO = C2.CODIGO AND COD_SIT_FUNCIONAL = C2.COD_SIT_FUNCIONAL AND TRUNC(DATA_INIC_SITUACAO)BETWEEN TRUNC(vDATA_INICIO_MAIS_ANTIGO) AND TRUNC(vDATA_INICIO_MAIS_RECENTE); COMMIT;
DELETE RHCGED_ALT_SIT_FUN WHERE CODIGO_EMPRESA = C2.CODIGO_EMPRESA AND TIPO_CONTRATO = C2.TIPO_CONTRATO AND CODIGO = C2.CODIGO AND COD_SIT_FUNCIONAL = C2.COD_SIT_FUNCIONAL AND TRUNC(DATA_INIC_SITUACAO)BETWEEN TO_DATE(vDATA_INICIO_MAIS_ANTIGO,'DD/MM/YYYY') AND TO_DATE(vDATA_INICIO_MAIS_RECENTE,'DD/MM/YYYY'); COMMIT;
--INSERT INTO RHCGED_ALT_SIT_FUN (IND_EF_RETRO_ESOCIAL,CODIGO_EMPRESA, TIPO_CONTRATO, CODIGO, DATA_INIC_SITUACAO, DATA_FIM_SITUACAO, COD_SIT_FUNCIONAL, LOGIN_USUARIO, DT_ULT_ALTER_USUA)VALUES ('N', C2.CODIGO_EMPRESA, C2.TIPO_CONTRATO, C2.CODIGO, TRUNC(vDATA_INICIO_MAIS_ANTIGO), TRUNC(vDATA_FIM_MAIS_RECENTE), C2.COD_SIT_FUNCIONAL, 'AJUSTE_ATIVO_SEQUENCIA_PR_DIA', SYSDATE);COMMIT;
INSERT INTO RHCGED_ALT_SIT_FUN (IND_EF_RETRO_ESOCIAL,CODIGO_EMPRESA, TIPO_CONTRATO, CODIGO, DATA_INIC_SITUACAO, DATA_FIM_SITUACAO, COD_SIT_FUNCIONAL, LOGIN_USUARIO, DT_ULT_ALTER_USUA)VALUES ('N',C2.CODIGO_EMPRESA,C2.TIPO_CONTRATO,C2.CODIGO, TO_DATE(vDATA_INICIO_MAIS_ANTIGO,'DD/MM/YYYY'), TO_DATE(vDATA_FIM_MAIS_RECENTE,'DD/MM/YYYY'),C2.COD_SIT_FUNCIONAL, 'AJUSTE_ATIVO_SEQUENCIA_PR_DIA', SYSDATE);COMMIT;

--LIMPAR VARIAVEIS PARA PROXIMO GRUPO DE ATIVAS
vULTIMO_REG_ATIVO_SEM_FIM := 'N';
vDATA_INICIO_MAIS_RECENTE := NULL;
vDATA_INICIO_MAIS_ANTIGO:= NULL;
vDATA_FIM_MAIS_RECENTE := NULL;

END IF; --FIM IF AJUSTAR AS ATIVAS

END IF;--GERAL
--FIM------------------------------------------IF ATIVOS

EXCEPTION WHEN OTHERS THEN
err_msg := SQLCODE||' '||SUBSTR(SQLERRM, 1, 4000);
dbms_output.put_line('err_msg:' ||err_msg);

INSERT INTO SUGESP_AJUSTE_LOTE_CAMPO_HIST(CODIGO_EMPRESA, TIPO_CONTRATO, CODIGO_CONTRATO, CAMPO_VALOR_1,  DATA_DADOS, CONSIDERACOES)
VALUES(C2.CODIGO_EMPRESA,C2.TIPO_CONTRATO, C2.CODIGO,'LOG EXECUCAO PROCEDURE PR_AJUSTES_ALT_SIT_FUNC_2022', SYSDATE, err_msg
);COMMIT;
END;--BEGIN EXCEPTION

err_msg := NULL;


END LOOP;---FIM C2. POR BM VERIFICAR HISTORICO A PARTIR DE 01/10/19
dbms_output.put_line('------------FIM DE 1 BM');
END LOOP; --FIM C1. BUSCAR REGISTROS NA LOG ALT SIT FUNC
dbms_output.put_line('--FIM--AJUSTES 1--- SEQUENCIA DE SITUACOES ATIVAS UNINDO AS MESMAS EM UMA SO REGISTRO ALT SIT FUNC');

--END;
--FIM--------------------------------------------------------------------------------------------------------------------AJUSTES 1--- SEQUENCIA DE SITUACOES ATIVAS UNINDO AS MESMAS EM UMA SOREGISTRO ALT SIT FUNC----------------

--dbms_output.put_line('--****************************************************************************************************************************************************');
--***********************************************************************************************************************************************************************************************************************************************************

--INICIO--------------------------------------------------------------------------------------------------------------------AJUSTES 2--- SEQUENCIA DE SITUACOES DE LICENCA VINDO DE FICHA MEIDCA UNINDO AS MESMAS EM UMA SO REGISTRO ALT SIT FUNC----------------
--em 23/12/21 migrei este passo para o sql (sql_PR_ACERTO_TEG_SIT_FUNC_V1.sql) que ira virar uma procedure para ser executada todo dia pela DGSA

--FIM--------------------------------------------------------------------------------------------------------------------AJUSTES 2--- SEQUENCIA DE SITUACOES DE LICENCA VINDO DE FICHA MEIDCA UNINDO AS MESMAS EM UMA SO REGISTRO ALT SIT FUNC----------------
--dbms_output.put_line('--****************************************************************************************************************************************************************************************************');
--***********************************************************************************************************************************************************************************************************************************************************

--INICIO--------------------------------------------------------------------------------------------------------------------AJUSTES 3--- VERIFICAR CONCOMITANCIAS ALT SIT FUNC----------------
--FIM--------------------------------------------------------------------------------------------------------------------AJUSTES 3--- VERIFICAR CONCOMITANCIAS ALT SIT FUNC----------------
--dbms_output.put_line('--****************************************************************************************************************************************************************************************************');
--***********************************************************************************************************************************************************************************************************************************************************

--INICIO--------------------------------------------------------------------------------------------------------------------AJUSTES 4--- AJUSTES DE LACUNAS ALT SIT FUNC----------------
--FIM--------------------------------------------------------------------------------------------------------------------AJUSTES 4--- AJUSTES DE LACUNAS ALT SIT FUNC----------------
END;
END; --BEGIN GERAL

END;