
  CREATE OR REPLACE EDITIONABLE PROCEDURE "ARTERH"."PR_GERA_REGISTRO_AD_PDBL" 
-- *****************************************************************************
-- Descricao.....: PROCEDURE DIÁRIA PARA GERAR INFORMAÇÕES DE INCLUÃO,
--                 ALTERAÇÃO E EXCLUSÃO DE UMA DETERMINADA MATRÍCULA
--                 E GRAVAR NA TABELA RHPBH_REGISTRO_AD

-- Autor................: MARCELO SOARES
-- Última alteração.....: 05/08/2022
-- Compilada em PRODUÇÃO: SIM

-- Parametros....: NA
-- Funcionamento.: PROCESSO BATCH
-- Periodicidade.: batch = TODOS OS DIAS ÀS 23:00

--  INFORMAÇÕES MODIFICADAS NAS EMPRESAS APÓS PROJETO DE UNIFICAÇÃO DO ARTERH
--  CODIGO_EMPRESA			TIPO_CONTRATO ANTES UNIFICAÇÃO		TIPO_CONTRATO APÓS UNIFICAÇÃO
--	0001 -> PBH				0001								0001
--	0002 -> PRODABEL		0001,0003,0004						0001,0003,0098
--	0003 -> SUDECAP			0001,0002							0001,0002
--  0007 -> SLU				0001								0001
--	0009 -> BELOTUR			0001								0001
--  0010 -> URBEL			0001,0003							0001,0098
--  0013 -> CULTURA			0001,0003							0001,0003
--  0014 -> PARQUES			0001,0003							0001,0003
--	0015 -> SAUDE			0001								VIROU TIPO DE CONTRATO 0015 DA EMPRESA 0001
--	0021 -> CONTRATOS		0001								VIROU TIPO DE CONTRATO 0211 DA EMPRESA 0001
--	0032 -> ZOONOSE			0001								VIROU TIPO DE CONTRATO 0214 DA EMPRESA 0001
--	0098 -> CONTRATOS PBH	0001								VIROU TIPO DE CONTRATO 0098 DA EMPRESA 0001
--	1700 -> APOSENTADOS		0001								NÃO ESTÁ SENDO UTILIZADA MAIS PELO ARTERH
--	0011 -> PRENVIDENCIA	0001								NÃO ESTÁ SENDO UTILIZADA MAIS PELO ARTERH

-- *****************************************************************************
IS
  --VARIAVEIS CONFORME OS TIPOS CRIADOS NA TABELA RHPBH_REGISTRO_AD
  V_SEQUENCIAL_AD            RHPBH_REGISTRO_AD.ID_RHPBH_REGISTRO_AD%TYPE;
  V_NOME_AD                  RHPBH_REGISTRO_AD.NOME%TYPE;
  V_CARGO_AD                 RHPBH_REGISTRO_AD.CARGO%TYPE;
  V_SECRETARIA_AD            RHPBH_REGISTRO_AD.SECRETARIA%TYPE;
  V_UNIDADE_AD               RHPBH_REGISTRO_AD.UNIDADE%TYPE;
  V_EMAIL_AD                 RHPBH_REGISTRO_AD.EMAIL%TYPE;
  V_TELEFONE_AD              RHPBH_REGISTRO_AD.TELEFONE%TYPE;
  V_SITUACAO_FUNCIONAL_AD    RHPBH_REGISTRO_AD.SITUACAO_FUNCIONAL%TYPE;
  V_MATRICULA_AD	         RHPBH_REGISTRO_AD.MATRICULA%TYPE;
  V_FUNCAO_COMISSIONADA_AD   RHPBH_REGISTRO_AD.FUNCAO_COMISSIONADA%TYPE;
  V_COD_LOTACAO_ADM_AD       RHPBH_REGISTRO_AD.COD_LOTACAO_ADM%TYPE;
  V_COD_LOTACAO_PONTO_AD     RHPBH_REGISTRO_AD.COD_LOTACAO_PONTO%TYPE;
  V_TITULAR_UNIDADE_AD       RHPBH_REGISTRO_AD.TITULAR_UNIDADE%TYPE;
  V_LOGIN_GERENTE_AD		 RHPBH_REGISTRO_AD.LOGIN_GERENTE%TYPE;
  V_OPERACAO_JOIN            RHPBH_REGISTRO_AD.IND_OPERACAO%TYPE;

  --VARIAVEIS COMUM
  V_QTD_REGISTRO               INTEGER;
  V_EXISTE                     INTEGER;
  V_QTD_ARQUIVO_CRIADO         INTEGER;
  V_CONT_INC                   INTEGER;
  V_CONT_ALT                   INTEGER;
  V_CONT_EXE                   INTEGER;
  V_EXISTE_LOGIN_8			   INTEGER;
  V_EXISTE_LOGIN_6			   INTEGER;
  V_TELEFONE                   VARCHAR(20);
  V_EMAIL                      VARCHAR(200);
  V_ULT_IND_OPERACAO           VARCHAR(01);
  V_SECRETARIA				   VARCHAR(15);
  V_UNIDADE					   VARCHAR(15);
  V_DSC_UNIDADE		           VARCHAR(100);
  V_TITULAR_UNIDADE			   VARCHAR(100);
  V_LOGIN_GERENTE			   VARCHAR(15);	
  V_NOME_GERENTE	           VARCHAR(100);
  V_GERENTE_LOTACAO_ADM        VARCHAR(15); 
  V_CPF_LOTACAO_ADM            VARCHAR(15); 
  V_TP_CONTR_LOTACAO_ADM       VARCHAR(4); 
  V_CONTR_LOTACAO_ADM          VARCHAR(15); 
  V_LOTACAO_SUP_ADM1           VARCHAR(6);
  V_LOTACAO_SUP_ADM2           VARCHAR(6);
  V_LOTACAO_SUP_ADM3           VARCHAR(6);
  V_LOTACAO_SUP_ADM4           VARCHAR(6);
  V_LOTACAO_SUP_ADM5           VARCHAR(6);
  V_LOTACAO_SUP_ADM6           VARCHAR(6);
  V_GERENTE_LOTACAO_SUP_ADM    VARCHAR(15); 
  V_CPF_LOTACAO_SUP_ADM        VARCHAR(15);   
  V_TP_CONTR_LOTACAO_SUP_ADM   VARCHAR(4); 
  V_CONTR_LOTACAO_SUP_ADM      VARCHAR(15);   
  V_GERENTE_LOTACAO_PONTO      VARCHAR(15); 
  V_CPF_LOTACAO_PONTO          VARCHAR(15); 
  V_TP_CONTR_LOTACAO_PONTO     VARCHAR(4); 
  V_CONTR_LOTACAO_PONTO        VARCHAR(15);   
  V_LOTACAO_SUP_PONTO1         VARCHAR(6);
  V_LOTACAO_SUP_PONTO2         VARCHAR(6);
  V_LOTACAO_SUP_PONTO3         VARCHAR(6);
  V_LOTACAO_SUP_PONTO4         VARCHAR(6);
  V_LOTACAO_SUP_PONTO5         VARCHAR(6);
  V_LOTACAO_SUP_PONTO6         VARCHAR(6);
  V_GERENTE_LOTACAO_SUP_PONTO  VARCHAR(15); 
  V_CPF_LOTACAO_SUP_PONTO      VARCHAR(15);   
  V_TP_CONTR_LOTACAO_SUP_PONTO VARCHAR(4); 
  V_CONTR_LOTACAO_SUP_PONTO    VARCHAR(15);     
  V_LOGIN_PADRAO			   VARCHAR(15);  
  V_ULT_DATA_RESCISAO          DATE;
  V_INSERE                     BOOLEAN;  
  V_DT_RESCISAO_MES_ANTERIOR   DATE;

  --VARIÁVEIS REFERENTE A GERAÇÃO DE ARQUIVO TXT
  ID_ARQ                     UTL_FILE.FILE_TYPE;
  LINHA                      VARCHAR(2000) := '';
  DIRETORIO                  VARCHAR(50)   := '/trab/cdbp05/sirh/arquivos_prodabel_ad';
  ARQUIVO_INC                VARCHAR(50)   := 'Inclusao_AD_PDBL_' || TO_CHAR(sysdate,'DDMMYYYY')||'.txt';
  ARQUIVO_ALT                VARCHAR(50)   := 'Alteracao_AD_PDBL_'|| TO_CHAR(sysdate,'DDMMYYYY')||'.txt';
  ARQUIVO_EXC                VARCHAR(50)   := 'Exclusao_AD_PDBL_' || TO_CHAR(sysdate,'DDMMYYYY')||'.txt';
  ARQUIVO_ERR                VARCHAR(50)   := 'Erro_AD_PBH_'     || TO_CHAR(sysdate,'DDMMYYYY')||'.txt';
  V_TIPO_ARQUIVO             VARCHAR(01)   := 'I';
  V_CONTA_REGISTRO           INTEGER       := 0;

  --VARIÁVEIS REFERENTE A GERAÇÃO DE EMAIL
  AV_NAME_FROM               VARCHAR(200) := 'Dep.RH/PRODABEL';
  AV_MSG_FROM                VARCHAR(200) := 'servicos@pbh.gov.br';
  AV_NAME_TO                 VARCHAR(200) := 'servicos@pbh.gov.br';
  AV_MSG_TO                  VARCHAR(200) := 'servicos@pbh.gov.br;gss@pbh.gov.br';
  AV_MSG_SUBJECT_INC         VARCHAR(200) := 'Arquivo para incluir funcionários da PRODABEL no AD';
  AV_MSG_SUBJECT_ALT         VARCHAR(200) := 'Arquivo para alterar funcionários da PRODABEL no AD';
  AV_MSG_SUBJECT_EXC         VARCHAR(200) := 'Arquivo para excluir funcionários da PRODABEL no AD';
  AV_MSG_TEXT_INC            VARCHAR(200) := 'Senhores,'||CHR(13)||CHR(13)||'  Segue em anexo o Arquivo com as inclusões de funcionários da PRODABEL';
  AV_MSG_TEXT_ALT            VARCHAR(200) := 'Senhores,'||CHR(13)||CHR(13)||'  Segue em anexo o Arquivo com as alterações de funcionários da PRODABEL';
  AV_MSG_TEXT_EXC            VARCHAR(200) := 'Senhores,'||CHR(13)||CHR(13)||'  Segue em anexo o Arquivo com as exclusões de funcionários da PRODABEL';
  AV_BODY_HTML               VARCHAR(01)  := 'N';

BEGIN
  -- ******************************************************************************************************
  -- *******************************************  BUSCA ATIVOS E DEMITIDOS ********************************
  -- ******************************************************************************************************
  FOR I IN (SELECT 	CNT.CODIGO AS MATRICULA,
					SUBSTR(CNT.CODIGO,7,8) || '-' ||SUBSTR(CNT.CODIGO,15,1) AS MATRICULA_FORMATADA,
					CASE WHEN CG.DESCRICAO NOT LIKE '%ESTAG%' THEN 'pb'   || SUBSTR(CNT.CODIGO,9,6)  
						 WHEN CG.DESCRICAO     LIKE '%ESTAG%' THEN 'pbes' || SUBSTR(CNT.CODIGO,9,6)  
					ELSE
						'NÃO DEFINIDA'
					END LOGIN,
					CNT.NOME      AS NOME,
					CG.DESCRICAO  AS CARGO_PGTO,
					'PRODABEL'    AS EMPRESA,
					PES.CPF       AS CPF,
                    CASE WHEN TRUNC(CNT.DATA_EFETIVO_EXERC) IS NOT NULL AND TRUNC(CNT.DATA_EFETIVO_EXERC) >= TRUNC(CNT.DATA_ADMISSAO) 
                      THEN CNT.DATA_EFETIVO_EXERC                      
                      ELSE CNT.DATA_ADMISSAO
                    END DATA_ADMISSAO,
					CNT.DATA_RESCISAO,
					CNT.DATA_INIC_AFAST,
					CNT.SITUACAO_FUNCIONAL,
					SIT.DESCRICAO AS DSC_SITUACAO_FUNCIONAL,
                    AF.DATA_INIC_SITUACAO,
					SIT.CONTROLE_FOLHA,
					SIT.SUSPENDE_REMUNERA,
					SIT.E_AFASTAMENTO,
					CNT.CODIGO_EMPRESA,
					CNT.CODIGO_PESSOA,
					CNT.TIPO_CONTRATO,
					CNT.COD_UNIDADE1,
					CNT.COD_UNIDADE2,
					CNT.COD_UNIDADE3,
					CNT.COD_UNIDADE4,
					CNT.COD_UNIDADE5,
					CNT.COD_UNIDADE6,
                    NVL(FUN.DESCRICAO,'NA') AS FUNCAO_COMISSIONADA,
     				SUBSTR(CNT.COD_UNIDADE1,5,2) || '-' || SUBSTR(CNT.COD_UNIDADE2,5,2) || '-' || SUBSTR(CNT.COD_UNIDADE3,5,2) || '-' ||
                    SUBSTR(CNT.COD_UNIDADE4,5,2) || '-' || SUBSTR(CNT.COD_UNIDADE5,5,2) || '-' || SUBSTR(CNT.COD_UNIDADE6,4,3) AS COD_LOTACAO_ADM,
     				SUBSTR(CNT.COD_CUSTO_GERENC1,5,2) || '-' || SUBSTR(CNT.COD_CUSTO_GERENC2,5,2) || '-' || SUBSTR(CNT.COD_CUSTO_GERENC3,5,2) || '-' ||
                    SUBSTR(CNT.COD_CUSTO_GERENC4,5,2) || '-' || SUBSTR(CNT.COD_CUSTO_GERENC5,5,2) || '-' || SUBSTR(CNT.COD_CUSTO_GERENC6,4,3) AS COD_LOTACAO_PONTO,
                    CNT.COD_CUSTO_GERENC1,
                    CNT.COD_CUSTO_GERENC2,
                    CNT.COD_CUSTO_GERENC3,
                    CNT.COD_CUSTO_GERENC4,
                    CNT.COD_CUSTO_GERENC5,
                    CNT.COD_CUSTO_GERENC6,
					ADD_MONTHS(TRUNC(CNT.ANO_MES_REFERENCIA),-1) AS MES_ANTERIOR
			FROM    ARTERH.RHPESS_CONTRATO CNT
					INNER JOIN ARTERH.RHORGA_EMPRESA  EMP   ON EMP.CODIGO = CNT.CODIGO_EMPRESA  AND EMP.DATA_EXTINCAO IS NULL
					INNER JOIN ARTERH.RHPESS_PESSOA   PES   ON PES.CODIGO = CNT.CODIGO_PESSOA   AND PES.CODIGO_EMPRESA = CNT.CODIGO_EMPRESA
					INNER JOIN ARTERH.RHPLCS_CARGO    CG    ON CG.CODIGO  = CNT.COD_CARGO_PAGTO AND CG.CODIGO_EMPRESA  = CNT.CODIGO_EMPRESA
					LEFT  JOIN ARTERH.RHCGED_ALT_SIT_FUN AF ON AF.CODIGO  = CNT.CODIGO          AND AF.TIPO_CONTRATO   = CNT.TIPO_CONTRATO   
                                                           AND AF.CODIGO_EMPRESA = CNT.CODIGO_EMPRESA
					INNER JOIN ARTERH.RHPARM_SIT_FUNC SIT   ON SIT.CODIGO = CNT.SITUACAO_FUNCIONAL
                    LEFT  JOIN ARTERH.RHPLCS_FUNCAO FUN     ON FUN.CODIGO = CNT.CODIGO_FUNCAO AND FUN.CODIGO_EMPRESA = CNT.CODIGO_EMPRESA
            WHERE 1 = 1
			AND   CNT.ANO_MES_REFERENCIA  = ( SELECT MAX (CNT2.ANO_MES_REFERENCIA)
											  FROM ARTERH.RHPESS_CONTRATO CNT2
											  WHERE CNT2.CODIGO              = CNT.CODIGO											  
											  AND   TRUNC(CNT2.ANO_MES_REFERENCIA) <= (SELECT DT_MAX_DATAS FROM ARTERH.RHPARM_P_SIST)
											  AND   CNT2.TIPO_CONTRATO       = CNT.TIPO_CONTRATO
											  AND   CNT2.CODIGO_EMPRESA      = CNT.CODIGO_EMPRESA)
		    AND CNT.CODIGO_EMPRESA        = '0002'
		    AND CNT.TIPO_CONTRATO        IN ('0001', '0003', '0098')
		    AND (   (CNT.DATA_RESCISAO IS NULL)
			     OR (CNT.DATA_RESCISAO > (SYSDATE - (EMP.C_LIVRE_SELEC01 + 1))))
            AND SIT.CONTROLE_FOLHA   <> 'S'    
            AND AF.DATA_INIC_SITUACAO = ( SELECT MAX(S2.DATA_INIC_SITUACAO) 
                                          FROM ARTERH.RHCGED_ALT_SIT_FUN S2
                                          WHERE S2.CODIGO         = AF.CODIGO
                                          AND   S2.TIPO_CONTRATO  = AF.TIPO_CONTRATO
                                          AND   S2.CODIGO_EMPRESA = AF.CODIGO_EMPRESA)
		   )
  LOOP
    BEGIN
	  -- ************************************ T E L E F O N E ***********************************************************
	  SELECT '('|| SUBSTR(TRIM(NVL(TO_CHAR(TP.DDD, '000'), '031')), 2, 2)||')'
	            || DECODE(LENGTH(TP.TELEFONE), 8, '9'|| TRIM(SUBSTR(TP.TELEFONE, 1, 4))||'-'|| SUBSTR(TP.TELEFONE, 5, 8),
                          TRIM(SUBSTR(TP.TELEFONE, 1, 5))||'-'||SUBSTR(TP.TELEFONE, 6, 9)) INTO V_TELEFONE
      FROM ARTERH.RHPESS_TELEFONE_P TP
      WHERE  TP.COD_TIPO_TELEFONE = '0002'
      AND    TP.CODIGO_PESSOA     = I.CODIGO_PESSOA
	  AND    TP.CODIGO_EMPRESA    = I.CODIGO_EMPRESA
	  AND    TP.OCORRENCIA        = (SELECT MAX(TP1.OCORRENCIA)
	                                 FROM ARTERH.RHPESS_TELEFONE_P TP1
									 WHERE TP1.COD_TIPO_TELEFONE = TP.COD_TIPO_TELEFONE
									 AND   TP1.CODIGO_PESSOA     = TP.CODIGO_PESSOA
									 AND   TP1.CODIGO_EMPRESA    = TP.CODIGO_EMPRESA);
    EXCEPTION
      WHEN NO_DATA_FOUND THEN V_TELEFONE := 'NA'; 
      WHEN TOO_MANY_ROWS THEN V_TELEFONE := 'NA'; 
      WHEN OTHERS        THEN V_TELEFONE := 'NA'; 
    END;

	--  ************************************ E M A I L *******************************************************************
    BEGIN
      SELECT LOWER(NVL(ENDER_ELETRONICO,'NA')) INTO V_EMAIL
      FROM   ARTERH.RHPESS_ENDERECO_P
      WHERE  CODIGO_PESSOA    = I.CODIGO_PESSOA
      AND    CODIGO_EMPRESA   = I.CODIGO_EMPRESA;
    EXCEPTION
      WHEN NO_DATA_FOUND THEN V_EMAIL := LOWER('NA');
      WHEN TOO_MANY_ROWS THEN V_EMAIL := LOWER('NA');
      WHEN OTHERS        THEN V_EMAIL := LOWER('NA'); 
    END;

    --  *******************************************  S E C R E T A R I A    E   U N I D A D E  ***************************************************************
	BEGIN      
	  SELECT ABREVIACAO INTO V_SECRETARIA
	  FROM 	ARTERH.RHORGA_UNIDADE
	  WHERE COD_UNIDADE1      = I.COD_UNIDADE1
	  AND   COD_UNIDADE2      = I.COD_UNIDADE2
	  AND 	COD_UNIDADE3      = '000000'
	  AND 	COD_UNIDADE4      = '000000'
	  AND 	COD_UNIDADE5      = '000000'
	  AND 	COD_UNIDADE6      = '000000'
	  AND 	CODIGO_EMPRESA    = I.CODIGO_EMPRESA;
    EXCEPTION
      WHEN NO_DATA_FOUND THEN V_SECRETARIA := 'NA';	
      WHEN TOO_MANY_ROWS THEN V_SECRETARIA := 'NA';
      WHEN OTHERS        THEN V_SECRETARIA := 'NA';
    END;

	-- GERENCIA
    BEGIN      
	  SELECT ABREVIACAO,DESCRICAO INTO V_UNIDADE,V_DSC_UNIDADE
	  FROM 	ARTERH.RHORGA_UNIDADE
	  WHERE COD_UNIDADE1      = I.COD_UNIDADE1
	  AND 	COD_UNIDADE2      = I.COD_UNIDADE2
	  AND 	COD_UNIDADE3      = I.COD_UNIDADE3
	  AND 	COD_UNIDADE4      = I.COD_UNIDADE4
	  AND 	COD_UNIDADE5      = I.COD_UNIDADE5
	  AND 	COD_UNIDADE6      = I.COD_UNIDADE6
	  AND 	CODIGO_EMPRESA    = I.CODIGO_EMPRESA;	
    EXCEPTION
      WHEN NO_DATA_FOUND THEN V_UNIDADE	 := 'NA';
      WHEN TOO_MANY_ROWS THEN V_UNIDADE	 := 'NA';
      WHEN OTHERS        THEN V_UNIDADE	 := 'NA';
    END;

    -- *******************************************  T I T U L A R   E   G E R E N C I A   D A   U N I D A D E  ************************************************
	-- BUSCAR O LOGIN AD DO GERENTE DA MATRICULA DO LOOP	
    -- BUSCA NA TABELA DE UNIDADE
	BEGIN
	  -- MESMO NIVEL DE UNIDADE
	  SELECT NVL(U.COD_PESSOA_RESP,'NA'),NVL(P.CPF,'NA'),NVL(U.TIPO_CONT_RESP,'NA'), NVL(U.CONTRATO_RESP,'NA'),
	         NVL(U.COD_UNIDADE_SUP1,LPAD('0',6,'0')),NVL(U.COD_UNIDADE_SUP2,LPAD('0',6,'0')),NVL(U.COD_UNIDADE_SUP3,LPAD('0',6,'0')),
	         NVL(U.COD_UNIDADE_SUP4,LPAD('0',6,'0')),NVL(U.COD_UNIDADE_SUP5,LPAD('0',6,'0')),NVL(U.COD_UNIDADE_SUP6,LPAD('0',6,'0'))
	  INTO   V_GERENTE_LOTACAO_ADM, V_CPF_LOTACAO_ADM, V_TP_CONTR_LOTACAO_ADM, V_CONTR_LOTACAO_ADM,
	         V_LOTACAO_SUP_ADM1,V_LOTACAO_SUP_ADM2,V_LOTACAO_SUP_ADM3,V_LOTACAO_SUP_ADM4,V_LOTACAO_SUP_ADM5,V_LOTACAO_SUP_ADM6
      FROM ARTERH.RHORGA_UNIDADE U 
	       LEFT JOIN ARTERH.RHPESS_PESSOA P ON P.CODIGO = U.COD_PESSOA_RESP AND P.CODIGO_EMPRESA = I.CODIGO_EMPRESA
      WHERE U.COD_UNIDADE1    = I.COD_UNIDADE1
	  AND   U.COD_UNIDADE2    = I.COD_UNIDADE2
	  AND   U.COD_UNIDADE3    = I.COD_UNIDADE3
	  AND   U.COD_UNIDADE4    = I.COD_UNIDADE4
	  AND   U.COD_UNIDADE5    = I.COD_UNIDADE5
	  AND   U.COD_UNIDADE6    = I.COD_UNIDADE6
	  AND   U.CODIGO_EMPRESA  = I.CODIGO_EMPRESA;	
    EXCEPTION
      WHEN NO_DATA_FOUND THEN
        V_GERENTE_LOTACAO_ADM  := 'NA';
        V_CPF_LOTACAO_ADM      := 'NA';
		V_TP_CONTR_LOTACAO_ADM := 'NA';
		V_CONTR_LOTACAO_ADM    := 'NA'; 
		V_LOTACAO_SUP_ADM1     := LPAD('0',6,'0');
		V_LOTACAO_SUP_ADM2     := LPAD('0',6,'0');
		V_LOTACAO_SUP_ADM3     := LPAD('0',6,'0');
		V_LOTACAO_SUP_ADM4     := LPAD('0',6,'0');
		V_LOTACAO_SUP_ADM5     := LPAD('0',6,'0');
		V_LOTACAO_SUP_ADM6     := LPAD('0',6,'0');
      WHEN TOO_MANY_ROWS THEN
        V_GERENTE_LOTACAO_ADM  := 'NA';
        V_CPF_LOTACAO_ADM      := 'NA';
		V_TP_CONTR_LOTACAO_ADM := 'NA';
		V_CONTR_LOTACAO_ADM    := 'NA'; 
		V_LOTACAO_SUP_ADM1     := LPAD('0',6,'0');
		V_LOTACAO_SUP_ADM2     := LPAD('0',6,'0');
		V_LOTACAO_SUP_ADM3     := LPAD('0',6,'0');
		V_LOTACAO_SUP_ADM4     := LPAD('0',6,'0');
		V_LOTACAO_SUP_ADM5     := LPAD('0',6,'0');
		V_LOTACAO_SUP_ADM6     := LPAD('0',6,'0');
      WHEN OTHERS THEN
        V_GERENTE_LOTACAO_ADM  := 'NA';
        V_CPF_LOTACAO_ADM      := 'NA';
		V_TP_CONTR_LOTACAO_ADM := 'NA';
		V_CONTR_LOTACAO_ADM    := 'NA'; 
		V_LOTACAO_SUP_ADM1     := LPAD('0',6,'0');
		V_LOTACAO_SUP_ADM2     := LPAD('0',6,'0');
		V_LOTACAO_SUP_ADM3     := LPAD('0',6,'0');
		V_LOTACAO_SUP_ADM4     := LPAD('0',6,'0');
		V_LOTACAO_SUP_ADM5     := LPAD('0',6,'0');
		V_LOTACAO_SUP_ADM6     := LPAD('0',6,'0');
    END;

	BEGIN
	  -- NIVEL SUPEROR DE UNIDADE
	  SELECT NVL(U.COD_PESSOA_RESP,'NA'),NVL(P.CPF,'NA'),NVL(U.TIPO_CONT_RESP,'NA'), NVL(U.CONTRATO_RESP,'NA') 
	  INTO   V_GERENTE_LOTACAO_SUP_ADM, V_CPF_LOTACAO_SUP_ADM, V_TP_CONTR_LOTACAO_SUP_ADM, V_CONTR_LOTACAO_SUP_ADM
      FROM ARTERH.RHORGA_UNIDADE U 
	       LEFT JOIN ARTERH.RHPESS_PESSOA P ON P.CODIGO = U.COD_PESSOA_RESP AND P.CODIGO_EMPRESA = I.CODIGO_EMPRESA
      WHERE U.COD_UNIDADE1    = V_LOTACAO_SUP_ADM1
	  AND   U.COD_UNIDADE2    = V_LOTACAO_SUP_ADM2
	  AND   U.COD_UNIDADE3    = V_LOTACAO_SUP_ADM3
	  AND   U.COD_UNIDADE4    = V_LOTACAO_SUP_ADM4
	  AND   U.COD_UNIDADE5    = V_LOTACAO_SUP_ADM5
	  AND   U.COD_UNIDADE6    = V_LOTACAO_SUP_ADM6
	  AND   U.CODIGO_EMPRESA  = I.CODIGO_EMPRESA;
    EXCEPTION
      WHEN NO_DATA_FOUND THEN
        V_GERENTE_LOTACAO_SUP_ADM  := 'NA';
        V_CPF_LOTACAO_SUP_ADM      := 'NA';
		V_TP_CONTR_LOTACAO_SUP_ADM := 'NA';
		V_CONTR_LOTACAO_SUP_ADM    := 'NA'; 
      WHEN TOO_MANY_ROWS THEN
        V_GERENTE_LOTACAO_SUP_ADM  := 'NA';
        V_CPF_LOTACAO_SUP_ADM      := 'NA';
		V_TP_CONTR_LOTACAO_SUP_ADM := 'NA';
		V_CONTR_LOTACAO_SUP_ADM    := 'NA'; 		
      WHEN OTHERS THEN             
        V_GERENTE_LOTACAO_SUP_ADM  := 'NA';
        V_CPF_LOTACAO_SUP_ADM      := 'NA';
		V_TP_CONTR_LOTACAO_SUP_ADM := 'NA';
		V_CONTR_LOTACAO_SUP_ADM    := 'NA'; 
    END;

	-- BUSCA NA TABELA DE PONTO
	BEGIN
	  -- MESMO NIVEL DE PONTO
	  SELECT NVL(G.COD_PESSOA_RESP,'NA'),NVL(P.CPF,'NA'),NVL(G.TIPO_CONT_RESP,'NA'), NVL(G.CONTRATO_RESP,'NA'),
	         NVL(G.COD_CGERENC_SUP1,LPAD('0',6,'0')),NVL(G.COD_CGERENC_SUP2,LPAD('0',6,'0')),NVL(G.COD_CGERENC_SUP3,LPAD('0',6,'0')),
	         NVL(G.COD_CGERENC_SUP4,LPAD('0',6,'0')),NVL(G.COD_CGERENC_SUP5,LPAD('0',6,'0')),NVL(G.COD_CGERENC_SUP6,LPAD('0',6,'0'))
	  INTO V_GERENTE_LOTACAO_PONTO, V_CPF_LOTACAO_PONTO,V_TP_CONTR_LOTACAO_PONTO,V_CONTR_LOTACAO_PONTO,
	       V_LOTACAO_SUP_PONTO1,V_LOTACAO_SUP_PONTO2,V_LOTACAO_SUP_PONTO3,V_LOTACAO_SUP_PONTO4,V_LOTACAO_SUP_PONTO5,V_LOTACAO_SUP_PONTO6
      FROM ARTERH.RHORGA_CUSTO_GEREN G 
	       LEFT JOIN ARTERH.RHPESS_PESSOA P ON P.CODIGO = G.COD_PESSOA_RESP AND P.CODIGO_EMPRESA = I.CODIGO_EMPRESA
      WHERE G.COD_CGERENC1    = I.COD_CUSTO_GERENC1
	  AND   G.COD_CGERENC2    = I.COD_CUSTO_GERENC2
	  AND   G.COD_CGERENC3    = I.COD_CUSTO_GERENC3
	  AND   G.COD_CGERENC4    = I.COD_CUSTO_GERENC4
	  AND   G.COD_CGERENC5    = I.COD_CUSTO_GERENC5
	  AND   G.COD_CGERENC6    = I.COD_CUSTO_GERENC6
	  AND   G.CODIGO_EMPRESA  = I.CODIGO_EMPRESA;
    EXCEPTION
      WHEN NO_DATA_FOUND THEN
        V_GERENTE_LOTACAO_PONTO  := 'NA';
        V_CPF_LOTACAO_PONTO      := 'NA';
		V_TP_CONTR_LOTACAO_PONTO := 'NA';
        V_CONTR_LOTACAO_PONTO    := 'NA';
		V_LOTACAO_SUP_PONTO1     := LPAD('0',6,'0');
		V_LOTACAO_SUP_PONTO2     := LPAD('0',6,'0');
		V_LOTACAO_SUP_PONTO3     := LPAD('0',6,'0');
		V_LOTACAO_SUP_PONTO4     := LPAD('0',6,'0');
		V_LOTACAO_SUP_PONTO5     := LPAD('0',6,'0');
		V_LOTACAO_SUP_PONTO6     := LPAD('0',6,'0');
      WHEN TOO_MANY_ROWS THEN    
        V_GERENTE_LOTACAO_PONTO  := 'NA';
        V_CPF_LOTACAO_PONTO      := 'NA';
		V_TP_CONTR_LOTACAO_PONTO := 'NA';
        V_CONTR_LOTACAO_PONTO    := 'NA';
		V_LOTACAO_SUP_PONTO1     := LPAD('0',6,'0');
		V_LOTACAO_SUP_PONTO2     := LPAD('0',6,'0');
		V_LOTACAO_SUP_PONTO3     := LPAD('0',6,'0');
		V_LOTACAO_SUP_PONTO4     := LPAD('0',6,'0');
		V_LOTACAO_SUP_PONTO5     := LPAD('0',6,'0');
		V_LOTACAO_SUP_PONTO6     := LPAD('0',6,'0');
      WHEN OTHERS THEN           
        V_GERENTE_LOTACAO_PONTO  := 'NA';
        V_CPF_LOTACAO_PONTO      := 'NA';
		V_TP_CONTR_LOTACAO_PONTO := 'NA';
        V_CONTR_LOTACAO_PONTO    := 'NA';
		V_LOTACAO_SUP_PONTO1     := LPAD('0',6,'0');
		V_LOTACAO_SUP_PONTO2     := LPAD('0',6,'0');
		V_LOTACAO_SUP_PONTO3     := LPAD('0',6,'0');
		V_LOTACAO_SUP_PONTO4     := LPAD('0',6,'0');
		V_LOTACAO_SUP_PONTO5     := LPAD('0',6,'0');
		V_LOTACAO_SUP_PONTO6     := LPAD('0',6,'0');
    END;

	BEGIN
	  -- NIVEL SUPEROR DE PONTO
	  SELECT NVL(G.COD_PESSOA_RESP,'NA'),NVL(P.CPF,'NA'),NVL(G.TIPO_CONT_RESP,'NA'), NVL(G.CONTRATO_RESP,'NA') 
	  INTO   V_GERENTE_LOTACAO_SUP_PONTO, V_CPF_LOTACAO_SUP_PONTO, V_TP_CONTR_LOTACAO_SUP_PONTO,V_CONTR_LOTACAO_SUP_PONTO
      FROM ARTERH.RHORGA_CUSTO_GEREN G
	       LEFT JOIN ARTERH.RHPESS_PESSOA P ON P.CODIGO = G.COD_PESSOA_RESP AND P.CODIGO_EMPRESA = I.CODIGO_EMPRESA
      WHERE G.COD_CGERENC1    = V_LOTACAO_SUP_PONTO1
	  AND   G.COD_CGERENC2    = V_LOTACAO_SUP_PONTO2
	  AND   G.COD_CGERENC3    = V_LOTACAO_SUP_PONTO3
	  AND   G.COD_CGERENC4    = V_LOTACAO_SUP_PONTO4
	  AND   G.COD_CGERENC5    = V_LOTACAO_SUP_PONTO5
	  AND   G.COD_CGERENC6    = V_LOTACAO_SUP_PONTO6
	  AND   G.CODIGO_EMPRESA  = I.CODIGO_EMPRESA;	
    EXCEPTION
      WHEN NO_DATA_FOUND THEN
        V_GERENTE_LOTACAO_SUP_PONTO  := 'NA';
        V_CPF_LOTACAO_SUP_PONTO      := 'NA';
		V_TP_CONTR_LOTACAO_SUP_PONTO := 'NA';
		V_CONTR_LOTACAO_SUP_PONTO    := 'NA';
      WHEN TOO_MANY_ROWS THEN
        V_GERENTE_LOTACAO_SUP_PONTO  := 'NA';
        V_CPF_LOTACAO_SUP_PONTO      := 'NA';
		V_TP_CONTR_LOTACAO_SUP_PONTO := 'NA';
		V_CONTR_LOTACAO_SUP_PONTO    := 'NA';
      WHEN OTHERS THEN
        V_GERENTE_LOTACAO_SUP_PONTO  := 'NA';
        V_CPF_LOTACAO_SUP_PONTO      := 'NA';
		V_TP_CONTR_LOTACAO_SUP_PONTO := 'NA';
		V_CONTR_LOTACAO_SUP_PONTO    := 'NA';
    END;

	-- VALIDA SE A MATRICULA DO LOOP É TITULAR DA LOTAÇÃO ADM OU LOTAÇÃO PONTO
	IF TRIM(V_GERENTE_LOTACAO_ADM) <> 'NA' AND TRIM(V_GERENTE_LOTACAO_ADM) = TRIM(I.CODIGO_PESSOA) 
	  THEN V_TITULAR_UNIDADE := I.COD_LOTACAO_ADM; 
	  ELSE V_TITULAR_UNIDADE := 'NA'; 
	END IF;

	IF V_TITULAR_UNIDADE = 'NA' THEN
	  IF TRIM(V_GERENTE_LOTACAO_PONTO) <> 'NA' AND TRIM(V_GERENTE_LOTACAO_PONTO) = TRIM(I.CODIGO_PESSOA) 
	    THEN V_TITULAR_UNIDADE := I.COD_LOTACAO_PONTO;
	    ELSE V_TITULAR_UNIDADE := 'NA';	
	  END IF;	
	END IF;

	-- BUSCA O GERENTE DA MATRICULA DO LOOP	
	V_LOGIN_GERENTE := 'NA';
    V_NOME_GERENTE  := 'NA';

	IF TRIM(V_TITULAR_UNIDADE) = 'NA' THEN
	  -- BUSCA O GERENTE NO MESMO NIVEL DA ESTRUTURA ORGANIZACIONAL DO LOOP
	  IF TRIM(V_GERENTE_LOTACAO_ADM) <> 'NA' THEN
	    BEGIN
		  SELECT DISTINCT NVL(AD.BM_MATRIC,'NA'),NVL(AD.NOME,'NA') INTO V_LOGIN_GERENTE,V_NOME_GERENTE 
	      FROM ARTERH.RHPBH_REGISTRO_AD AD
          WHERE AD.BM_MATRIC LIKE '%' || ( SELECT DISTINCT SUBSTR(CODIGO_CONTRATO,9,6) 
	                                       FROM ARTERH.RHPESS_CONTR_MEST
	                                       WHERE CODIGO_PESSOA    = V_GERENTE_LOTACAO_ADM
										   AND   CODIGO_CONTRATO >= (CASE WHEN V_CONTR_LOTACAO_ADM    <> 'NA' THEN V_CONTR_LOTACAO_ADM ELSE LPAD('00000000',15,0) END)
										   AND   CODIGO_CONTRATO <= (CASE WHEN V_CONTR_LOTACAO_ADM    <> 'NA' THEN V_CONTR_LOTACAO_ADM ELSE LPAD('99999999',15,0) END)
	                                       AND   TIPO_CONTRATO    = (CASE WHEN V_TP_CONTR_LOTACAO_ADM <> 'NA' THEN V_TP_CONTR_LOTACAO_ADM ELSE '0001' END)
	                                       AND   CODIGO_EMPRESA   = I.CODIGO_EMPRESA
								           AND   DATA_RESCISAO IS NULL)
          AND   AD.EMPRESA   = I.EMPRESA
          AND   AD.CPF       = V_CPF_LOTACAO_ADM;
        EXCEPTION
          WHEN NO_DATA_FOUND THEN
            V_LOGIN_GERENTE := 'NA';
            V_NOME_GERENTE  := 'NA';
          WHEN TOO_MANY_ROWS THEN
            V_LOGIN_GERENTE := 'NA';
            V_NOME_GERENTE  := 'NA';
          WHEN OTHERS THEN
            V_LOGIN_GERENTE := 'NA';
            V_NOME_GERENTE  := 'NA';
        END;
	  ELSE
	    IF TRIM(V_GERENTE_LOTACAO_PONTO) <> 'NA' THEN
	      BEGIN
		    SELECT DISTINCT NVL(AD.BM_MATRIC,'NA'),NVL(AD.NOME,'NA') INTO V_LOGIN_GERENTE,V_NOME_GERENTE
	        FROM ARTERH.RHPBH_REGISTRO_AD AD
            WHERE AD.BM_MATRIC LIKE '%' || ( SELECT DISTINCT SUBSTR(CODIGO_CONTRATO,9,6) 
	                                         FROM ARTERH.RHPESS_CONTR_MEST
	                                         WHERE CODIGO_PESSOA  = V_GERENTE_LOTACAO_PONTO
										     AND   CODIGO_CONTRATO >= (CASE WHEN V_CONTR_LOTACAO_PONTO    <> 'NA' THEN V_CONTR_LOTACAO_PONTO ELSE LPAD('00000000',15,0) END)
										     AND   CODIGO_CONTRATO <= (CASE WHEN V_CONTR_LOTACAO_PONTO    <> 'NA' THEN V_CONTR_LOTACAO_PONTO ELSE LPAD('99999999',15,0) END)
	                                         AND   TIPO_CONTRATO    = (CASE WHEN V_TP_CONTR_LOTACAO_PONTO <> 'NA' THEN V_TP_CONTR_LOTACAO_PONTO ELSE '0001' END)
	                                         AND   CODIGO_EMPRESA = I.CODIGO_EMPRESA
								             AND   DATA_RESCISAO IS NULL)
            AND   AD.EMPRESA   = I.EMPRESA
            AND   AD.CPF       = V_CPF_LOTACAO_PONTO;	    
          EXCEPTION
            WHEN NO_DATA_FOUND THEN
              V_LOGIN_GERENTE := 'NA';
              V_NOME_GERENTE  := 'NA';
            WHEN TOO_MANY_ROWS THEN
              V_LOGIN_GERENTE := 'NA';
              V_NOME_GERENTE  := 'NA';
            WHEN OTHERS THEN
              V_LOGIN_GERENTE := 'NA';
              V_NOME_GERENTE  := 'NA';
          END;			
		END IF;
	  END IF;	
	ELSE
	  -- BUSCA O GERENTE NO NIVEL SUPERIOR DA ESTRUTURA ORGANIZACIONAL DO LOOP
	  IF TRIM(V_GERENTE_LOTACAO_SUP_ADM) <> 'NA' THEN
	    BEGIN
		  SELECT DISTINCT NVL(AD.BM_MATRIC,'NA'),NVL(AD.NOME,'NA') INTO V_LOGIN_GERENTE,V_NOME_GERENTE
	      FROM ARTERH.RHPBH_REGISTRO_AD AD
          WHERE AD.BM_MATRIC LIKE '%' || ( SELECT DISTINCT SUBSTR(CODIGO_CONTRATO,9,6) 
	                                       FROM ARTERH.RHPESS_CONTR_MEST
	                                       WHERE CODIGO_PESSOA  = V_GERENTE_LOTACAO_SUP_ADM
										   AND   CODIGO_CONTRATO >= (CASE WHEN V_CONTR_LOTACAO_SUP_ADM    <> 'NA' THEN V_CONTR_LOTACAO_SUP_ADM ELSE LPAD('00000000',15,0) END)
										   AND   CODIGO_CONTRATO <= (CASE WHEN V_CONTR_LOTACAO_SUP_ADM    <> 'NA' THEN V_CONTR_LOTACAO_SUP_ADM ELSE LPAD('99999999',15,0) END)
	                                       AND   TIPO_CONTRATO    = (CASE WHEN V_TP_CONTR_LOTACAO_SUP_ADM <> 'NA' THEN V_TP_CONTR_LOTACAO_SUP_ADM ELSE '0001' END)
	                                       AND   CODIGO_EMPRESA = I.CODIGO_EMPRESA
								           AND   DATA_RESCISAO IS NULL)
          AND   AD.EMPRESA   = I.EMPRESA
          AND   AD.CPF       = V_CPF_LOTACAO_SUP_ADM;	  
        EXCEPTION
          WHEN NO_DATA_FOUND THEN
            V_LOGIN_GERENTE := 'NA';        
            V_NOME_GERENTE  := 'NA';
          WHEN TOO_MANY_ROWS THEN
            V_LOGIN_GERENTE := 'NA';
            V_NOME_GERENTE  := 'NA';
          WHEN OTHERS THEN
            V_LOGIN_GERENTE := 'NA';
            V_NOME_GERENTE  := 'NA';
        END;
	  ELSE
	    IF TRIM(V_GERENTE_LOTACAO_SUP_PONTO) <> 'NA' THEN
	      BEGIN
		    SELECT DISTINCT NVL(AD.BM_MATRIC,'NA'),NVL(AD.NOME,'NA') INTO V_LOGIN_GERENTE,V_NOME_GERENTE
	        FROM ARTERH.RHPBH_REGISTRO_AD AD
            WHERE AD.BM_MATRIC LIKE '%' || ( SELECT DISTINCT SUBSTR(CODIGO_CONTRATO,9,6) 
	                                         FROM ARTERH.RHPESS_CONTR_MEST
	                                         WHERE CODIGO_PESSOA  = V_GERENTE_LOTACAO_SUP_PONTO
										     AND   CODIGO_CONTRATO >= (CASE WHEN V_CONTR_LOTACAO_SUP_PONTO    <> 'NA' THEN V_CONTR_LOTACAO_SUP_PONTO ELSE LPAD('00000000',15,0) END)
										     AND   CODIGO_CONTRATO <= (CASE WHEN V_CONTR_LOTACAO_SUP_PONTO    <> 'NA' THEN V_CONTR_LOTACAO_SUP_PONTO ELSE LPAD('99999999',15,0) END)
	                                         AND   TIPO_CONTRATO    = (CASE WHEN V_TP_CONTR_LOTACAO_SUP_PONTO <> 'NA' THEN V_TP_CONTR_LOTACAO_SUP_PONTO ELSE '0001' END)
	                                         AND   CODIGO_EMPRESA = I.CODIGO_EMPRESA
								             AND   DATA_RESCISAO IS NULL)
            AND   AD.EMPRESA   = I.EMPRESA
            AND   AD.CPF       = V_CPF_LOTACAO_SUP_PONTO;	    
          EXCEPTION
            WHEN NO_DATA_FOUND THEN
              V_LOGIN_GERENTE := 'NA';
              V_NOME_GERENTE  := 'NA';
            WHEN TOO_MANY_ROWS THEN
              V_LOGIN_GERENTE := 'NA';
              V_NOME_GERENTE  := 'NA';
            WHEN OTHERS THEN
              V_LOGIN_GERENTE := 'NA';
              V_NOME_GERENTE  := 'NA';
          END;
		END IF;
	  END IF;	  
	END IF;
    -- ***************************************************************************************************************************

	-- VERIFICA SE A MATRICULA ENCONTRADA NO LOOP EXISTE NA TABELA RHPBH_REGISTRO_AD
    SELECT NVL(COUNT(*),0) INTO V_QTD_ARQUIVO_CRIADO
    FROM ARTERH.RHPBH_REGISTRO_AD AD
    WHERE AD.BM_MATRIC = I.LOGIN
    AND   AD.EMPRESA   = I.EMPRESA
    AND   AD.CPF       = I.CPF;

    --NAO EXISTE NA TABELA RHPBH_REGISTRO_AD
    IF V_QTD_ARQUIVO_CRIADO = 0 THEN
      V_INSERE        := FALSE;
      V_OPERACAO_JOIN := 'I';    

      -- VALIDACAO: INCLUIR CONTA NO AD PARA FUNCIONARIOS QUE POSSUEM A DATA ADMISSAO MENOR IGUAL A UM DIA ANTES DA POSSE    
      IF TO_DATE(I.DATA_ADMISSAO,'DD/MM/YYYY') <= TO_DATE(SYSDATE,    'DD/MM/YYYY') THEN V_INSERE := TRUE; END IF;
      IF TO_DATE(I.DATA_ADMISSAO,'DD/MM/YYYY')  = TO_DATE(SYSDATE + 1,'DD/MM/YYYY') THEN V_INSERE := TRUE; END IF;      

      IF V_INSERE THEN
        -- DEMISSAO ANTES DO DIA
		IF ((I.DATA_RESCISAO IS NOT NULL) AND (TO_DATE(I.DATA_RESCISAO,'DD/MM/YYYY') < TO_DATE(SYSDATE,'DD/MM/YYYY'))) THEN 
          V_OPERACAO_JOIN := 'E'; 
        ELSE   
          -- DEMISSAO FUTURA
		  IF I.DATA_RESCISAO IS NOT NULL THEN  
		    V_INSERE := FALSE;
		  ELSE
		    V_INSERE := TRUE;
          END IF;
		END IF;  
      END IF; 
    ELSE --EXISTE NA TABELA RHPBH_REGISTRO_AD
      --BUSCA NOME, CARGO, SECRETARIA, UNIDADE, DATA_RESCISAO E IND_OPERACAO DO ULLTIMO REGISTRO PARA COMPARACAO
      BEGIN
        SELECT NOME, NVL(CARGO,'NA'), UPPER(NVL(SECRETARIA,'NA')), UPPER(NVL(UNIDADE,'NA')), DATA_RESCISAO,
		       LOWER(NVL(EMAIL,'NA')), NVL(TELEFONE,'NA'), IND_OPERACAO, NVL(SITUACAO_FUNCIONAL,'0'), NVL(MATRICULA,'0'),
			   NVL(FUNCAO_COMISSIONADA,'NA'),NVL(COD_LOTACAO_ADM,'0'),NVL(COD_LOTACAO_PONTO,'0'), 
			   NVL(TITULAR_UNIDADE,'NA'),NVL(LOGIN_GERENTE,'NA')

		INTO   V_NOME_AD, V_CARGO_AD, V_SECRETARIA_AD, V_UNIDADE_AD, V_ULT_DATA_RESCISAO, 
		       V_EMAIL_AD, V_TELEFONE_AD, V_ULT_IND_OPERACAO,V_SITUACAO_FUNCIONAL_AD,V_MATRICULA_AD,
			   V_FUNCAO_COMISSIONADA_AD,V_COD_LOTACAO_ADM_AD,V_COD_LOTACAO_PONTO_AD,
			   V_TITULAR_UNIDADE_AD, V_LOGIN_GERENTE_AD

		FROM  ARTERH.RHPBH_REGISTRO_AD AD
        WHERE AD.BM_MATRIC            = I.LOGIN
        AND   AD.EMPRESA              = I.EMPRESA
        AND   AD.CPF                  = I.CPF
        AND   AD.ID_RHPBH_REGISTRO_AD = (SELECT MAX(A.ID_RHPBH_REGISTRO_AD)
                                         FROM   ARTERH.RHPBH_REGISTRO_AD A
                                         WHERE  A.BM_MATRIC = I.LOGIN
                                         AND    A.EMPRESA   = I.EMPRESA
                                         AND    A.CPF       = I.CPF);
      EXCEPTION
        WHEN NO_DATA_FOUND THEN
          V_NOME_AD    				:= NULL; 
          V_CARGO_AD   				:= 'NA'; 
          V_SECRETARIA_AD 			:= 'NA'; 
          V_UNIDADE_AD    			:= 'NA'; 
		  V_EMAIL_AD        		:= LOWER('NA');
		  V_TELEFONE_AD     		:= 'NA'; 
	      V_SITUACAO_FUNCIONAL_AD	:= '0';  
		  V_MATRICULA_AD			:= '0';  
		  V_FUNCAO_COMISSIONADA_AD	:= 'NA'; 
		  V_COD_LOTACAO_ADM_AD		:= '0';	 
		  V_COD_LOTACAO_PONTO_AD	:= '0';  
		  V_TITULAR_UNIDADE_AD		:= 'NA'; 
		  V_LOGIN_GERENTE_AD        := 'NA'; 
        WHEN OTHERS THEN
          V_NOME_AD    				:= NULL;
          V_CARGO_AD   				:= 'NA';
          V_SECRETARIA_AD 			:= 'NA';
          V_UNIDADE_AD    			:= 'NA';
		  V_EMAIL_AD        		:= LOWER('NA');
		  V_TELEFONE_AD     		:= 'NA';
	      V_SITUACAO_FUNCIONAL_AD	:= '0';
		  V_MATRICULA_AD			:= '0';
		  V_FUNCAO_COMISSIONADA_AD	:= 'NA';
		  V_COD_LOTACAO_ADM_AD		:= '0';	
		  V_COD_LOTACAO_PONTO_AD	:= '0';
		  V_TITULAR_UNIDADE_AD		:= 'NA';
		  V_LOGIN_GERENTE_AD        := 'NA'; 
      END;

      --VALIDA DEMITIDO NO RH
      IF I.DATA_RESCISAO IS NOT NULL THEN        
        V_OPERACAO_JOIN := 'E';

		-- VERIFICA SE INCLUI O REGISTRO NA TABELA SE ULTIMO REGISTRO FOR DIFERENTE DE 'E'
		IF (TO_DATE(I.DATA_RESCISAO,'DD/MM/YYYY') < TO_DATE(SYSDATE,'DD/MM/YYYY')) 
		  THEN V_INSERE := (V_ULT_IND_OPERACAO <> 'E');
		  ELSE V_INSERE := FALSE;
		END IF;
      ELSE
        -- VALIDA ALTERACAO NO RH
        V_OPERACAO_JOIN := 'A';
        V_INSERE        := (   (TRIM(V_NOME_AD)    				<> TRIM(I.NOME))
		                    OR (TRIM(V_CARGO_AD)   				<> TRIM(I.CARGO_PGTO))
							OR (TRIM(V_SECRETARIA_AD)			<> TRIM(V_SECRETARIA))
							OR (TRIM(V_UNIDADE_AD) 				<> TRIM(V_UNIDADE))
							OR (TRIM(V_EMAIL_AD)   				<> TRIM(V_EMAIL))
							OR (TRIM(V_TELEFONE_AD)				<> TRIM(V_TELEFONE))
							OR (TRIM(V_SITUACAO_FUNCIONAL_AD)	<> TRIM(I.SITUACAO_FUNCIONAL))
							OR (TRIM(V_MATRICULA_AD)    		<> TRIM(I.MATRICULA_FORMATADA))
							OR (TRIM(V_FUNCAO_COMISSIONADA_AD)  <> TRIM(I.FUNCAO_COMISSIONADA))
							OR (TRIM(V_COD_LOTACAO_ADM_AD)    	<> TRIM(I.COD_LOTACAO_ADM))
							OR (TRIM(V_COD_LOTACAO_PONTO_AD)    <> TRIM(I.COD_LOTACAO_PONTO))
							OR (TRIM(V_TITULAR_UNIDADE_AD)    	<> TRIM(V_TITULAR_UNIDADE))
							OR (TRIM(V_LOGIN_GERENTE_AD)    	<> TRIM(V_LOGIN_GERENTE)));

		-- VALIDA O PROCESSO DE READMISSAO		
		IF V_INSERE THEN
          -- BUSCAR A DATA DE DEMISSAO MÊS PASSADO
          BEGIN
            SELECT DISTINCT DATA_RESCISAO INTO V_DT_RESCISAO_MES_ANTERIOR
            FROM ARTERH.RHPESS_CONTRATO 
            WHERE CODIGO                    = I.MATRICULA 
            AND   TRUNC(ANO_MES_REFERENCIA) = TRUNC(I.MES_ANTERIOR) 
            AND   TIPO_CONTRATO             = I.TIPO_CONTRATO 
            AND   CODIGO_EMPRESA            = I.CODIGO_EMPRESA; 
          EXCEPTION
              WHEN NO_DATA_FOUND THEN V_DT_RESCISAO_MES_ANTERIOR := NULL;
              WHEN TOO_MANY_ROWS THEN V_DT_RESCISAO_MES_ANTERIOR := NULL;
              WHEN OTHERS        THEN V_DT_RESCISAO_MES_ANTERIOR := NULL;
          END;
          IF ((V_DT_RESCISAO_MES_ANTERIOR IS NOT NULL) AND (I.DATA_RESCISAO IS NULL) AND (V_ULT_IND_OPERACAO = 'E')) THEN
            V_OPERACAO_JOIN := 'R';  
          ELSE
            V_OPERACAO_JOIN := 'A';
          END IF;          
        END IF;
      END IF;
    END IF;   

    IF V_INSERE THEN
      SELECT ARTERH.ID_SEQ_REGISTRO_AD.NEXTVAL INTO V_SEQUENCIAL_AD FROM DUAL;

      INSERT INTO ARTERH.RHPBH_REGISTRO_AD  (ID_RHPBH_REGISTRO_AD,
                                             BM_MATRIC,
                                             NOME,
                                             CARGO,
                                             EMPRESA,
                                             SECRETARIA,
                                             UNIDADE,
                                             CPF,
                                             IND_GEROU_ARQ_TXT,
                                             IND_OPERACAO,
                                             DATA_INCLUSAO,
                                             DATA_ADMISSAO,
                                             DATA_RESCISAO,
                                             DATA_INIC_AFAST,
                                             DATA_PROCESSAMENTO_AD,
                                             DATA_PROCESSAMENTO_ARQ,
                                             SITUACAO_FUNCIONAL,
                                             TELEFONE,
                                             EMAIL,
                                             MATRICULA,
                                             DESCR_SIT_FUNCIONAL,
                                             DATA_SIT_FUNCIONAL,
											 FUNCAO_COMISSIONADA,
											 COD_LOTACAO_ADM,	
											 COD_LOTACAO_PONTO,
											 TITULAR_UNIDADE,
											 LOGIN_GERENTE,
                                             NOME_UNIDADE,
                                             NOME_GERENTE)
                                    VALUES  (V_SEQUENCIAL_AD,
                                             TRIM(I.LOGIN),
                                             TRIM(I.NOME),
                                             TRIM(I.CARGO_PGTO),
                                             TRIM(I.EMPRESA),
                                             TRIM(V_SECRETARIA),
                                             TRIM(V_UNIDADE),
                                             TRIM(I.CPF),
                                             'N',
                                             TRIM(V_OPERACAO_JOIN),
                                             TRUNC(SYSDATE),
                                             I.DATA_ADMISSAO,
                                             I.DATA_RESCISAO,
                                             I.DATA_INIC_AFAST,
                                             NULL,
                                             NULL,
                                             I.SITUACAO_FUNCIONAL,
                                             TRIM(V_TELEFONE),
                                             TRIM(V_EMAIL),
                                             I.MATRICULA_FORMATADA,
                                             I.DSC_SITUACAO_FUNCIONAL,
                                             I.DATA_INIC_SITUACAO,
											 I.FUNCAO_COMISSIONADA,
											 I.COD_LOTACAO_ADM,
											 I.COD_LOTACAO_PONTO,
											 V_TITULAR_UNIDADE,
											 V_LOGIN_GERENTE,
                                             V_DSC_UNIDADE,
                                             V_NOME_GERENTE);
      SELECT COUNT(*) INTO V_QTD_REGISTRO
      FROM   ARTERH.RHUSER_P_SIST U
      WHERE  LOWER(U.CODIGO_USUARIO) = I.LOGIN
      AND    EMPRESA_USUARIO  = I.CODIGO_EMPRESA
      AND    TP_CONTR_USUARIO = I.TIPO_CONTRATO;

      IF V_QTD_REGISTRO = 0 THEN
	    BEGIN
          INSERT INTO ARTERH.RHUSER_P_SIST (CODIGO_USUARIO,          GERA_LOG,                USA_JANELA_ACOMP,        DT_M_OPER_PROPRIO,       DATA_SISTEMA,
                                       ANO_BASE,                USA_SAL_PRINCIPAL,       MODO_OPER_MOVI,          CTRL_OPER_AUXILIAR,      MODO_OPER_TSAL,
                                       MODO_OPER_PONTO,         EMPR_TP_CONTR_PROP,      EMPRESA_SELEC,           TIPO_CONTR_SELEC,        LOGIN_USUARIO,
                                       DT_ULT_ALTER_USUA,       ALT_MOV_LIQUIDO,         COD_PAD_CONTRATO,        MSG_PARA_ARQ_TEXTO,      EXIBE_IDENT_TABELA,
                                       USA_DELIMIT_EXPORT,      DELIMITADOR_EXPORT,      EXPORT_NRO_REAL,         ALT_MV_PT_DT_RETRO,      USA_COD_ALTER_VERB,
                                       CODIGO_GRUPO,            GRUPO_SEL_CONTRATO,      GRUPO_SEL_PESSOA,        COD_SEL_PESSOA,          GRUPO_SEL_CAND,
                                       COD_SEL_CANDIDATO,       GRUPO_SEL_VERBA,         COD_SEL_VERBA,           ALT_PROPRIEDADES,        QTDE_MIN_ATIVO,
                                       PERMITE_INCLUSAO,        PERMITE_EXCLUSAO,        PERMITE_ALTERACAO,       PERMITE_EXECUCAO,        GRUPO_SEL_UNID,
                                       COD_SEL_UNID,            GRUPO_SEL_CCONT,         COD_SEL_CCONT,           GRUPO_SEL_CGER,          COD_SEL_CGER,
                                       EMPRESA_USUARIO,         TP_CONTR_USUARIO,        CONTRATO_USUARIO,        PESSOA_USUARIO,          GRUPO_SEL_LOC,
                                       COD_SEL_LOC,             USA_DT_MAQUINA,          CTRL_ATIVO,              NRO_MOD_SIMULT,          QTDE_REG_AUTO,
                                       CONSISTE_LANC_VERB,      INSERE_LIQUIDO,          BLOQUEIA_CONTRATO,       BLOQUEIA_PESSOA,         EXIBE_DICA,
                                       ALT_CONT_DT_RETRO,       ALT_PESS_DT_RETRO,       ALT_DATA_GERAL,          COD_PERIODO,             EDITA_SALARIO,
                                       NATUR_PROC_SELEC,        GRUPO_SEGURANCA,         MENU_DEF_ENABLED,        MENU_DEF_VISIBLE,        SENHA_USUARIO,
                                       STATUS_USUARIO,          DT_ULT_TROCA_SENHA,      CODIGO_SGBD_PADRAO,      DIAS_EXPIRA_SENHA,       PW_QTDE_POSIC,
                                       PW_ALFANUM,              PW_SUBSET_USUA,          PW_QTDE_TENTA,           PW_COMECA_VOGAL,         APLIC_PROPRIEDADES,
                                       NOME_USUARIO,            CODIGO_IDIOMA,           DIAS_EXP_SEM_ACESS,      DT_ULT_ACESSO,           CT_APLIC_PSEL_CONT,
                                       CT_APLIC_PSEL_PESS,      C_LIVRE_SELEC01,         C_LIVRE_SELEC02,         C_LIVRE_SELEC03,         C_LIVRE_VALOR01,
                                       C_LIVRE_VALOR02,         C_LIVRE_VALOR03,         C_LIVRE_DESCR01,         C_LIVRE_DESCR02,         C_LIVRE_DESCR03,
                                       C_LIVRE_OPCAO01,         C_LIVRE_OPCAO02,         C_LIVRE_OPCAO03,         C_LIVRE_DATA01,          C_LIVRE_DATA02,
                                       C_LIVRE_DATA03,          ALT_MOV_LIQ_AGRUP,       EXPAND_CAMINHO,          EDITA_GRUPO,             GRAVA_TEMPO_FORM,
                                       MIN_TESTE_ESCALONA,      ACERTO_BASE_HIST,        MODULO_ACESSADO,         ALT_PONTO_DT_RETRO,      CTRL_ACESSO_IND,
                                       APELIDO,                 TIPO_AGRUP_USUARIO,      PERMITE_TPAGR_ESP,       DEPURA,                  PW_SUBSET_NOME,
                                       PW_DATAS_PESSOAIS,       PW_DOCS_PESSOAIS,        USUARIO_LDAP,            TIPO_LOGIN,              CODIGO_SERV_AUTENT,
                                       INS_MOV_MEST_CONTR,      INS_MOV_MEST_AGRUP,      INS_MOV_MEST_VAGA,       ACESSA_OUTRO_USUA,       MODULO_ACES_WEB,
                                       ESTACAO_REDE,            LOG_DETALHADO,           PERSISTE_ARG_SEL,        DATA_CRIACAO,            EXEC_INST_ESCALONA,
                                       PERMITE_EFETIVAR_SQL,    CONTROLE_BPM,            ULTIMO_PERFIL_ACESSO_AZC)
          SELECT I.LOGIN,                      USR.GERA_LOG,                 USR.USA_JANELA_ACOMP,         USR.DT_M_OPER_PROPRIO,        USR.DATA_SISTEMA,
                 USR.ANO_BASE,                 USR.USA_SAL_PRINCIPAL,        USR.MODO_OPER_MOVI,           USR.CTRL_OPER_AUXILIAR,       USR.MODO_OPER_TSAL,
                 USR.MODO_OPER_PONTO,          USR.EMPR_TP_CONTR_PROP,       I.CODIGO_EMPRESA,             I.TIPO_CONTRATO,              USR.LOGIN_USUARIO,
                 USR.DT_ULT_ALTER_USUA,        USR.ALT_MOV_LIQUIDO,          USR.COD_PAD_CONTRATO,         USR.MSG_PARA_ARQ_TEXTO,       USR.EXIBE_IDENT_TABELA,
                 USR.USA_DELIMIT_EXPORT,       USR.DELIMITADOR_EXPORT,       USR.EXPORT_NRO_REAL,          USR.ALT_MV_PT_DT_RETRO,       USR.USA_COD_ALTER_VERB,
                 USR.CODIGO_GRUPO,             USR.GRUPO_SEL_CONTRATO,       USR.GRUPO_SEL_PESSOA,         USR.COD_SEL_PESSOA,           USR.GRUPO_SEL_CAND,
                 USR.COD_SEL_CANDIDATO,        USR.GRUPO_SEL_VERBA,          USR.COD_SEL_VERBA,            USR.ALT_PROPRIEDADES,         USR.QTDE_MIN_ATIVO,
                 USR.PERMITE_INCLUSAO,         USR.PERMITE_EXCLUSAO,         USR.PERMITE_ALTERACAO,        USR.PERMITE_EXECUCAO,         USR.GRUPO_SEL_UNID,
                 USR.COD_SEL_UNID,             USR.GRUPO_SEL_CCONT,          USR.COD_SEL_CCONT,            USR.GRUPO_SEL_CGER,           USR.COD_SEL_CGER,
                 I.CODIGO_EMPRESA,             I.TIPO_CONTRATO,              I.MATRICULA,                  I.CODIGO_PESSOA,              USR.GRUPO_SEL_LOC,
                 USR.COD_SEL_LOC,              USR.USA_DT_MAQUINA,           USR.CTRL_ATIVO,               USR.NRO_MOD_SIMULT,           USR.QTDE_REG_AUTO,
                 USR.CONSISTE_LANC_VERB,       USR.INSERE_LIQUIDO,           USR.BLOQUEIA_CONTRATO,        USR.BLOQUEIA_PESSOA,          USR.EXIBE_DICA,
                 USR.ALT_CONT_DT_RETRO,        USR.ALT_PESS_DT_RETRO,        USR.ALT_DATA_GERAL,           USR.COD_PERIODO,              USR.EDITA_SALARIO,
                 USR.NATUR_PROC_SELEC,         USR.GRUPO_SEGURANCA,          USR.MENU_DEF_ENABLED,         USR.MENU_DEF_VISIBLE,         USR.SENHA_USUARIO,
                 USR.STATUS_USUARIO,           USR.DT_ULT_TROCA_SENHA,       USR.CODIGO_SGBD_PADRAO,       USR.DIAS_EXPIRA_SENHA,        USR.PW_QTDE_POSIC,
                 USR.PW_ALFANUM,               USR.PW_SUBSET_USUA,           USR.PW_QTDE_TENTA,            USR.PW_COMECA_VOGAL,          USR.APLIC_PROPRIEDADES,
                 I.NOME,                       USR.CODIGO_IDIOMA,            USR.DIAS_EXP_SEM_ACESS,       USR.DT_ULT_ACESSO,            USR.CT_APLIC_PSEL_CONT,
                 USR.CT_APLIC_PSEL_PESS,       USR.C_LIVRE_SELEC01,          USR.C_LIVRE_SELEC02,          USR.C_LIVRE_SELEC03,          USR.C_LIVRE_VALOR01,
                 USR.C_LIVRE_VALOR02,          USR.C_LIVRE_VALOR03,          USR.C_LIVRE_DESCR01,          USR.C_LIVRE_DESCR02,          USR.C_LIVRE_DESCR03,
                 USR.C_LIVRE_OPCAO01,          USR.C_LIVRE_OPCAO02,          USR.C_LIVRE_OPCAO03,          USR.C_LIVRE_DATA01,           USR.C_LIVRE_DATA02,
                 USR.C_LIVRE_DATA03,           USR.ALT_MOV_LIQ_AGRUP,        USR.EXPAND_CAMINHO,           USR.EDITA_GRUPO,              USR.GRAVA_TEMPO_FORM,
                 USR.MIN_TESTE_ESCALONA,       USR.ACERTO_BASE_HIST,         USR.MODULO_ACESSADO,          USR.ALT_PONTO_DT_RETRO,       USR.CTRL_ACESSO_IND,
                 USR.APELIDO,                  USR.TIPO_AGRUP_USUARIO,       USR.PERMITE_TPAGR_ESP,        USR.DEPURA,                   USR.PW_SUBSET_NOME,
                 USR.PW_DATAS_PESSOAIS,        USR.PW_DOCS_PESSOAIS,         I.LOGIN,                      USR.TIPO_LOGIN,               USR.CODIGO_SERV_AUTENT,
                 USR.INS_MOV_MEST_CONTR,       USR.INS_MOV_MEST_AGRUP,       USR.INS_MOV_MEST_VAGA,        USR.ACESSA_OUTRO_USUA,        USR.MODULO_ACES_WEB,
                 USR.ESTACAO_REDE,             USR.LOG_DETALHADO,            USR.PERSISTE_ARG_SEL,         SYSDATE,                      USR.EXEC_INST_ESCALONA,
                 USR.PERMITE_EFETIVAR_SQL,     USR.CONTROLE_BPM,             USR.ULTIMO_PERFIL_ACESSO_AZC
          FROM   ARTERH.RHUSER_P_SIST USR
          WHERE  USR.CODIGO_USUARIO = 'MODELO';

          DELETE ARTERH.RHUSER_RL_USR_GRP 
		  WHERE LOWER(CODIGO_USUARIO) = I.LOGIN;


          INSERT INTO ARTERH.RHUSER_RL_USR_GRP (CODIGO_USUARIO, CODIGO_GRUPO, LOGIN_USUARIO, DT_ULT_ALTER_USUA)
          SELECT I.LOGIN, T.CODIGO_GRUPO, 'PROCEDURE_AD', SYSDATE
          FROM   ARTERH.RHUSER_RL_USR_GRP T
          WHERE  T.CODIGO_USUARIO = 'MODELO';

		  --  INSERIR REGISTRO NA TABELA: RHUSER_RL_USR_EMP
		  SELECT NVL(COUNT(*),0) INTO V_EXISTE
		  FROM   ARTERH.RHUSER_RL_USR_EMP
		  WHERE  LOWER(CODIGO_USUARIO) = I.LOGIN
		  AND	   CODIGO_EMPRESA		 = I.CODIGO_EMPRESA;

		  IF V_EXISTE = 0 THEN
		    INSERT INTO ARTERH.RHUSER_RL_USR_EMP (CODIGO_USUARIO, CODIGO_EMPRESA, LOGIN_USUARIO, DT_ULT_ALTER_USUA)
		                            VALUES(I.LOGIN,I.CODIGO_EMPRESA,'PROCEDURE_AD', SYSDATE);
		  END IF;

		  --  INSERIR REGISTRO NA TABELA: RHUSER_USR_TPCONT
		  SELECT NVL(COUNT(*),0) INTO V_EXISTE
		  FROM   ARTERH.RHUSER_USR_TPCONT
		  WHERE  LOWER(CODIGO_USUARIO) = I.LOGIN
		  AND	   TIPO_CONTRATO		 = I.TIPO_CONTRATO;

		  IF V_EXISTE = 0 THEN
		    INSERT INTO ARTERH.RHUSER_USR_TPCONT (CODIGO_USUARIO, TIPO_CONTRATO, LOGIN_USUARIO, DT_ULT_ALTER_USUA)
		                              VALUES(I.LOGIN, I.TIPO_CONTRATO, 'PROCEDURE_AD', SYSDATE);
		  END IF;        
	    EXCEPTION
	      WHEN OTHERS THEN DBMS_OUTPUT.PUT_LINE('ERRO AO GRAVAR O LOGIN ' || I.LOGIN || ' NA TABELA RHUSER_P_SIST DO ARTERH. '
		                                      ||'LOGIN DEVE ESTAR ASSOCIADO A UMA EMPRESA DIFERENTE DA SUA ORIGEM ('|| I.EMPRESA||').');
	    END;
	  END IF;	
    END IF;
  END LOOP;
  COMMIT;

 -- ******************************************************************************************************
  -- ******************************** GERAR ARQUIVO TXT E MODIFICAR PARÂMETROS ****************************
  -- ******************************************************************************************************

  SELECT COUNT(*) INTO V_CONT_INC
  FROM   ARTERH.RHPBH_REGISTRO_AD AD
  WHERE  AD.IND_OPERACAO 		= 'I'
  AND    AD.IND_GEROU_ARQ_TXT 	= 'N'
  AND    AD.EMPRESA             = 'PRODABEL';

  SELECT COUNT(*) INTO V_CONT_ALT   
  FROM   ARTERH.RHPBH_REGISTRO_AD AD
  WHERE  AD.IND_OPERACAO 		= 'A'
  AND    AD.IND_GEROU_ARQ_TXT 	= 'N'
  AND    AD.EMPRESA             = 'PRODABEL';

  SELECT COUNT(*) INTO V_CONT_EXE
  FROM   ARTERH.RHPBH_REGISTRO_AD AD
  WHERE  AD.IND_OPERACAO 		= 'E'
  AND    AD.IND_GEROU_ARQ_TXT 	= 'N'
  AND    AD.EMPRESA             = 'PRODABEL';

  FOR I IN 1..3
  LOOP
    V_CONTA_REGISTRO := 0;
    CASE WHEN I = 1 THEN
      BEGIN
        V_TIPO_ARQUIVO := 'I';
        ID_ARQ := UTL_FILE.FOPEN(DIRETORIO,ARQUIVO_INC,'W');
      END;
      WHEN I = 2 THEN
      BEGIN
        V_TIPO_ARQUIVO := 'A';
        ID_ARQ := UTL_FILE.FOPEN(DIRETORIO,ARQUIVO_ALT,'W');
      END;
      WHEN I = 3 THEN
      BEGIN
        V_TIPO_ARQUIVO := 'E';
        ID_ARQ := UTL_FILE.FOPEN(DIRETORIO,ARQUIVO_EXC,'W');
      END;
    END CASE;

    FOR ARQTXT IN(SELECT TRIM(BM_MATRIC)  ||';'|| TRIM(NOME)    ||';'|| TRIM(CARGO) ||';'|| TRIM(EMPRESA)    ||';'||
                         TRIM(SECRETARIA) ||';'|| TRIM(UNIDADE) ||';'|| TRIM(CPF)   ||';'|| IND_OPERACAO     ||';'||
                         TO_CHAR(DATA_INCLUSAO, 'DD/MM/YYYY')   ||';'|| TO_CHAR(DATA_ADMISSAO, 'DD/MM/YYYY') ||';'||
                         TO_CHAR(DATA_RESCISAO, 'DD/MM/YYYY')   ||';'|| TELEFONE    ||';'|| EMAIL AS REGISTRO
                  FROM   ARTERH.RHPBH_REGISTRO_AD
				  WHERE IND_GEROU_ARQ_TXT = 'N'
				  AND 	IND_OPERACAO 	  = V_TIPO_ARQUIVO
				  AND   EMPRESA           = 'PRODABEL'
                  ORDER  BY BM_MATRIC)
    LOOP
      V_CONTA_REGISTRO := V_CONTA_REGISTRO + 1;
      LINHA := TRIM(RPAD(ARQTXT.REGISTRO, 477)) || CHR(13);
      UTL_FILE.PUT_LINE(ID_ARQ, LINHA);
    END LOOP;

    IF V_CONTA_REGISTRO > 0 THEN
      UTL_FILE.FCLOSE(ID_ARQ);
      UPDATE ARTERH.RHPBH_REGISTRO_AD SET 	IND_GEROU_ARQ_TXT 		= 'S',
									DATA_PROCESSAMENTO_ARQ 	= TRUNC(SYSDATE)
      WHERE IND_OPERACAO 		= V_TIPO_ARQUIVO
	  AND 	IND_GEROU_ARQ_TXT 	= 'N'
	  AND   EMPRESA             = 'PRODABEL';
      COMMIT;
    END IF;
  END LOOP;
  -- ******************************************************************************************************
  -- ******************** ENVIA ARQUIVO TXT DE INCLUSÃƒO E EXCLUSÃƒO POR E-MAIL *****************************
  -- ******************************************************************************************************
  FOR I IN 1..3
  LOOP
    CASE
      WHEN I = 1 THEN
        IF V_CONT_INC > 0 THEN
          PR_ENVIA_EMAIL_AD(AV_NAME_FROM, AV_MSG_FROM, AV_NAME_TO, AV_MSG_TO, AV_MSG_SUBJECT_INC, AV_MSG_TEXT_INC, ARQUIVO_INC, DIRETORIO, AV_BODY_HTML);
        END IF;
      WHEN I = 2 THEN
        IF V_CONT_ALT > 0 THEN
          PR_ENVIA_EMAIL_AD(AV_NAME_FROM, AV_MSG_FROM, AV_NAME_TO, AV_MSG_TO, AV_MSG_SUBJECT_ALT, AV_MSG_TEXT_ALT, ARQUIVO_ALT, DIRETORIO, AV_BODY_HTML);
        END IF;
      WHEN I = 3 THEN
        IF V_CONT_EXE > 0 THEN
          PR_ENVIA_EMAIL_AD(AV_NAME_FROM, AV_MSG_FROM, AV_NAME_TO, AV_MSG_TO, AV_MSG_SUBJECT_EXC, AV_MSG_TEXT_EXC, ARQUIVO_EXC, DIRETORIO, AV_BODY_HTML);
        END IF;
    END CASE;
  END LOOP;
END PR_GERA_REGISTRO_AD_PDBL;