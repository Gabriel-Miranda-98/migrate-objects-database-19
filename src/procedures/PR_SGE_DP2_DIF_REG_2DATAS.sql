
  CREATE OR REPLACE EDITIONABLE PROCEDURE "PONTO_ELETRONICO"."PR_SGE_DP2_DIF_REG_2DATAS" (DATA_INICIO IN DATE)
AS 
BEGIN 

--Kellysson em 19/1/24 baseado (sql_dif_dia_data_horarios_b1.sql)
--KELLYSSON CRIADO EM 22/3/23
DECLARE 
vCONTADOR NUMBER;
vDATA_INICIO DATE;

BEGIN
dbms_output.enable(null);
vCONTADOR :=0;
vDATA_INICIO := DATA_INICIO;

--1ª TAREFA --ATUALIZAR CAMPOS: DATA_RECEBEU_ARTE, E BM
--UPDATE PONTO_ELETRONICO.SUGESP_SGE_JORNADAS_GERAL SET DATA_RECEBEU_ARTE = SYSDATE, BM = LPAD(BM,15,0) WHERE DATA_RECEBEU_ARTE IS NULL



FOR C1 IN (
----2ª TAREFA----------INICIO----------------------------------DADOS PARA COMPARAR DAS 2 ULTIMAS 2 CARGAS DO SGE

--SELECT OBS_PROCESSAMENTO,SITUACAO_JORNADA, COUNT(1)QTD FROM ( --SINTETICO

SELECT
X4.* FROM(
SELECT 
LENGTH(X3.STATUS_BM||X3.STATUS_TIPO_JORNADA||X3.STATUS_TURNO||X3.STATUS_HORA_INI_TURNO||X3.STATUS_HORA_FIM_TURNO||X3.STATUS_DURACAO_AULA||X3.STATUS_COD_ORGAO||X3.STATUS_COORDENACAO||X3.STATUS_DATA_INICIO||X3.STATUS_DATA_FIM||X3.STATUS_DATA_CANCELAMENTO
--||X3.STATUS_DATA_ULT_ALTERACAO
||X3.STATUS_SEGUNDA||X3.STATUS_INTERVALO_SEGUNDA||X3.STATUS_TERCA||X3.STATUS_INTERVALO_TERCA||X3.STATUS_QUARTA||X3.STATUS_INTERVALO_QUARTA||X3.STATUS_QUINTA||X3.STATUS_INTERVALO_QUINTA||X3.STATUS_SEXTA||X3.STATUS_INTERVALO_SEXTA)
LARGURA_TODOS_STATUS_CAMPOS, X3.* FROM(
SELECT 
--/*
CASE WHEN (X2.BM_U IS NULL AND X2.BM_P IS NOT NULL) OR (X2.BM_U IS NOT NULL AND X2.BM_P IS NULL) OR (X2.BM_U IS NOT NULL AND X2.BM_P IS NOT NULL AND X2.BM_U <> X2.BM_P) THEN 'ALTERADO' ELSE 'OK' END STATUS_BM,
CASE WHEN (X2.TIPO_JORNADA_U IS NULL AND X2.TIPO_JORNADA_P IS NOT NULL) OR (X2.TIPO_JORNADA_U IS NOT NULL AND X2.TIPO_JORNADA_P IS NULL) OR (X2.TIPO_JORNADA_U IS NOT NULL AND X2.TIPO_JORNADA_P IS NOT NULL AND X2.TIPO_JORNADA_U <> X2.TIPO_JORNADA_P) THEN 'ALTERADO' ELSE 'OK' END STATUS_TIPO_JORNADA,
CASE WHEN (X2.TURNO_U IS NULL AND X2.TURNO_P IS NOT NULL) OR (X2.TURNO_U IS NOT NULL AND X2.TURNO_P IS NULL) OR (X2.TURNO_U IS NOT NULL AND X2.TURNO_P IS NOT NULL AND X2.TURNO_U <> X2.TURNO_P) THEN 'ALTERADO' ELSE 'OK' END STATUS_TURNO,
CASE WHEN (X2.HORA_INI_TURNO_U IS NULL AND X2.HORA_INI_TURNO_P IS NOT NULL) OR (X2.HORA_INI_TURNO_U IS NOT NULL AND X2.HORA_INI_TURNO_P IS NULL) OR (X2.HORA_INI_TURNO_U IS NOT NULL AND X2.HORA_INI_TURNO_P IS NOT NULL AND X2.HORA_INI_TURNO_U <> X2.HORA_INI_TURNO_P) THEN 'ALTERADO' ELSE 'OK' END STATUS_HORA_INI_TURNO,
CASE WHEN (X2.HORA_FIM_TURNO_U IS NULL AND X2.HORA_FIM_TURNO_P IS NOT NULL) OR (X2.HORA_FIM_TURNO_U IS NOT NULL AND X2.HORA_FIM_TURNO_P IS NULL )OR (X2.HORA_FIM_TURNO_U IS NOT NULL AND X2.HORA_FIM_TURNO_P IS NOT NULL AND X2.HORA_FIM_TURNO_U <> X2.HORA_FIM_TURNO_P) THEN 'ALTERADO' ELSE 'OK' END STATUS_HORA_FIM_TURNO,
CASE WHEN (X2.DURACAO_AULA_U IS NULL AND X2.DURACAO_AULA_P IS NOT NULL) OR (X2.DURACAO_AULA_U IS NOT NULL AND X2.DURACAO_AULA_P IS NULL) OR (X2.DURACAO_AULA_U IS NOT NULL AND X2.DURACAO_AULA_P IS NOT NULL AND X2.DURACAO_AULA_U <> X2.DURACAO_AULA_P) THEN 'ALTERADO' ELSE 'OK' END STATUS_DURACAO_AULA,
CASE WHEN (X2.COD_ORGAO_U IS NULL AND X2.COD_ORGAO_P IS NOT NULL) OR (X2.COD_ORGAO_U IS NOT NULL AND X2.COD_ORGAO_P IS NULL) OR (X2.COD_ORGAO_U IS NOT NULL AND X2.COD_ORGAO_P IS NOT NULL AND X2.COD_ORGAO_U <> X2.COD_ORGAO_P) THEN 'ALTERADO' ELSE 'OK' END STATUS_COD_ORGAO,
CASE WHEN (X2.COORDENACAO_U IS NULL AND X2.COORDENACAO_P IS NOT NULL) OR (X2.COORDENACAO_U IS NOT NULL AND X2.COORDENACAO_P IS NULL) OR (X2.COORDENACAO_U IS NOT NULL AND X2.COORDENACAO_P IS NOT NULL AND X2.COORDENACAO_U <> X2.COORDENACAO_P) THEN 'ALTERADO' ELSE 'OK' END STATUS_COORDENACAO,
CASE WHEN (X2.INICIO_JORNADA_U IS NULL AND X2.INICIO_JORNADA_P IS NOT NULL) OR (X2.INICIO_JORNADA_U IS NOT NULL AND X2.INICIO_JORNADA_P IS NULL) OR (X2.INICIO_JORNADA_U IS NOT NULL AND X2.INICIO_JORNADA_P IS NOT NULL AND X2.INICIO_JORNADA_U <> X2.INICIO_JORNADA_P) THEN 'ALTERADO' ELSE 'OK' END STATUS_INICIO_JORNADA,--NOVO EM 30/8/23
CASE WHEN (X2.FIM_JORNADA_U IS NULL AND X2.FIM_JORNADA_P IS NOT NULL) OR (X2.FIM_JORNADA_U IS NOT NULL AND X2.FIM_JORNADA_P IS NULL) OR (X2.FIM_JORNADA_U IS NOT NULL AND X2.FIM_JORNADA_P IS NOT NULL AND X2.FIM_JORNADA_U <> X2.FIM_JORNADA_P) THEN 'ALTERADO' ELSE 'OK' END STATUS_FIM_JORNADA,--NOVO EM 30/8/23
CASE WHEN (X2.DATA_INICIO_U IS NULL AND X2.DATA_INICIO_P IS NOT NULL) OR (X2.DATA_INICIO_U IS NOT NULL AND X2.DATA_INICIO_P IS NULL) OR (X2.DATA_INICIO_U IS NOT NULL AND X2.DATA_INICIO_P IS NOT NULL AND X2.DATA_INICIO_U <> X2.DATA_INICIO_P) THEN 'ALTERADO' ELSE 'OK' END STATUS_DATA_INICIO,
CASE WHEN (X2.DATA_FIM_U IS NULL AND X2.DATA_FIM_P IS NOT NULL) OR (X2.DATA_FIM_U IS NOT NULL AND X2.DATA_FIM_P IS NULL) OR (X2.DATA_FIM_U IS NOT NULL AND X2.DATA_FIM_P IS NOT NULL AND X2.DATA_FIM_U <> X2.DATA_FIM_P) THEN 'ALTERADO' ELSE 'OK' END STATUS_DATA_FIM,
CASE WHEN (X2.DATA_CANCELAMENTO_U IS NULL AND X2.DATA_CANCELAMENTO_P IS NOT NULL) OR (X2.DATA_CANCELAMENTO_U IS NOT NULL AND X2.DATA_CANCELAMENTO_P IS NULL) OR (X2.DATA_CANCELAMENTO_U IS NOT NULL AND X2.DATA_CANCELAMENTO_P IS NOT NULL AND X2.DATA_CANCELAMENTO_U <> X2.DATA_CANCELAMENTO_P) THEN 'ALTERADO' ELSE 'OK' END STATUS_DATA_CANCELAMENTO,
CASE WHEN (X2.DATA_ULT_ALTERACAO_U IS NULL AND X2.DATA_ULT_ALTERACAO_P IS NOT NULL) OR (X2.DATA_ULT_ALTERACAO_U IS NOT NULL AND X2.DATA_ULT_ALTERACAO_P IS NULL) OR (X2.DATA_ULT_ALTERACAO_U IS NOT NULL AND X2.DATA_ULT_ALTERACAO_P IS NOT NULL AND X2.DATA_ULT_ALTERACAO_U <> X2.DATA_ULT_ALTERACAO_P) THEN 'ALTERADO' ELSE 'OK' END STATUS_DATA_ULT_ALTERACAO,
CASE WHEN (X2.SEGUNDA_U IS NULL AND X2.SEGUNDA_P IS NOT NULL) OR (X2.SEGUNDA_U IS NOT NULL AND X2.SEGUNDA_P IS NULL) OR (X2.SEGUNDA_U IS NOT NULL AND X2.SEGUNDA_P IS NOT NULL AND X2.SEGUNDA_U <> X2.SEGUNDA_P) THEN 'ALTERADO' ELSE 'OK' END STATUS_SEGUNDA,
CASE WHEN (X2.INTERVALO_SEGUNDA_U IS NULL AND X2.INTERVALO_SEGUNDA_P IS NOT NULL) OR (X2.INTERVALO_SEGUNDA_U IS NOT NULL AND X2.INTERVALO_SEGUNDA_P IS NULL) OR (X2.INTERVALO_SEGUNDA_U IS NOT NULL AND X2.INTERVALO_SEGUNDA_P IS NOT NULL AND X2.INTERVALO_SEGUNDA_U <> X2.INTERVALO_SEGUNDA_P) THEN 'ALTERADO' ELSE 'OK' END STATUS_INTERVALO_SEGUNDA,
CASE WHEN (X2.TERCA_U IS NULL AND X2.TERCA_P IS NOT NULL) OR (X2.TERCA_U IS NOT NULL AND X2.TERCA_P IS NULL) OR (X2.TERCA_U IS NOT NULL AND X2.TERCA_P IS NOT NULL AND X2.TERCA_U <> X2.TERCA_P) THEN 'ALTERADO' ELSE 'OK' END STATUS_TERCA,
CASE WHEN (X2.INTERVALO_TERCA_U IS NULL AND X2.INTERVALO_TERCA_P IS NOT NULL) OR (X2.INTERVALO_TERCA_U IS NOT NULL AND X2.INTERVALO_TERCA_P IS NULL) OR (X2.INTERVALO_TERCA_U IS NOT NULL AND X2.INTERVALO_TERCA_P IS NOT NULL AND X2.INTERVALO_TERCA_U <> X2.INTERVALO_TERCA_P) THEN 'ALTERADO' ELSE 'OK' END STATUS_INTERVALO_TERCA,
CASE WHEN (X2.QUARTA_U IS NULL AND X2.QUARTA_P IS NOT NULL) OR (X2.QUARTA_U IS NOT NULL AND X2.QUARTA_P IS NULL) OR (X2.QUARTA_U IS NOT NULL AND X2.QUARTA_P IS NOT NULL AND X2.QUARTA_U <> X2.QUARTA_P) THEN 'ALTERADO' ELSE 'OK' END STATUS_QUARTA,
CASE WHEN (X2.INTERVALO_QUARTA_U IS NULL AND X2.INTERVALO_QUARTA_P IS NOT NULL) OR (X2.INTERVALO_QUARTA_U IS NOT NULL AND X2.INTERVALO_QUARTA_P IS NULL) OR (X2.INTERVALO_QUARTA_U IS NOT NULL AND X2.INTERVALO_QUARTA_P IS NOT NULL AND X2.INTERVALO_QUARTA_U <> X2.INTERVALO_QUARTA_P) THEN 'ALTERADO' ELSE 'OK' END STATUS_INTERVALO_QUARTA,
CASE WHEN (X2.QUINTA_U IS NULL AND X2.QUINTA_P IS NOT NULL) OR (X2.QUINTA_U IS NOT NULL AND X2.QUINTA_P IS NULL) OR (X2.QUINTA_U IS NOT NULL AND X2.QUINTA_P IS NOT NULL AND X2.QUINTA_U <> X2.QUINTA_P) THEN 'ALTERADO' ELSE 'OK' END STATUS_QUINTA,
CASE WHEN (X2.INTERVALO_QUINTA_U IS NULL AND X2.INTERVALO_QUINTA_P IS NOT NULL) OR (X2.INTERVALO_QUINTA_U IS NOT NULL AND X2.INTERVALO_QUINTA_P IS NULL) OR (X2.INTERVALO_QUINTA_U IS NOT NULL AND X2.INTERVALO_QUINTA_P IS NOT NULL AND X2.INTERVALO_QUINTA_U <> X2.INTERVALO_QUINTA_P) THEN 'ALTERADO' ELSE 'OK' END STATUS_INTERVALO_QUINTA,
CASE WHEN (X2.SEXTA_U IS NULL AND X2.SEXTA_P IS NOT NULL) OR (X2.SEXTA_U IS NOT NULL AND X2.SEXTA_P IS NULL) OR (X2.SEXTA_U IS NOT NULL AND X2.SEXTA_P IS NOT NULL AND X2.SEXTA_U <> X2.SEXTA_P) THEN 'ALTERADO' ELSE 'OK' END STATUS_SEXTA,
CASE WHEN (X2.INTERVALO_SEXTA_U IS NULL AND X2.INTERVALO_SEXTA_P IS NOT NULL) OR (X2.INTERVALO_SEXTA_U IS NOT NULL AND X2.INTERVALO_SEXTA_P IS NULL) OR (X2.INTERVALO_SEXTA_U IS NOT NULL AND X2.INTERVALO_SEXTA_P IS NOT NULL AND X2.INTERVALO_SEXTA_U <> X2.INTERVALO_SEXTA_P) THEN 'ALTERADO' ELSE 'OK' END STATUS_INTERVALO_SEXTA,
CASE WHEN (X2.JORNADA_VALIDADA_U IS NULL AND X2.JORNADA_VALIDADA_P IS NOT NULL) OR (X2.JORNADA_VALIDADA_U IS NOT NULL AND X2.JORNADA_VALIDADA_P IS NULL) OR (X2.JORNADA_VALIDADA_U IS NOT NULL AND X2.JORNADA_VALIDADA_P IS NOT NULL AND X2.JORNADA_VALIDADA_U <> X2.JORNADA_VALIDADA_P) THEN 'ALTERADO' ELSE 'OK' END STATUS_JORNADA_VALIDADA,
CASE WHEN (X2.ID_JORNADA_U IS NULL AND X2.ID_JORNADA_P IS NOT NULL) OR (X2.ID_JORNADA_U IS NOT NULL AND X2.ID_JORNADA_P IS NULL) OR (X2.ID_JORNADA_U IS NOT NULL AND X2.ID_JORNADA_P IS NOT NULL AND X2.ID_JORNADA_U <> X2.ID_JORNADA_P) THEN 'ALTERADO' ELSE 'OK' END STATUS_ID_JORNADA,

CASE WHEN (X2.DT_CANCELAMENTO_USAR_U IS NULL AND X2.DT_CANCELAMENTO_USAR_P IS NOT NULL) OR (X2.DT_CANCELAMENTO_USAR_U IS NOT NULL AND X2.DT_CANCELAMENTO_USAR_P IS NULL) OR (X2.DT_CANCELAMENTO_USAR_U IS NOT NULL AND X2.DT_CANCELAMENTO_USAR_P IS NOT NULL AND X2.DT_CANCELAMENTO_USAR_U <> X2.DT_CANCELAMENTO_USAR_P) THEN 'ALTERADO' ELSE 'OK' END STATUS_DT_CANCELAMENTO_USAR,
--*/
CASE WHEN X2.DIA_U IS NULL     AND X2.DIA_P IS NOT NULL THEN 'AVALIAR' 
     WHEN X2.DIA_U IS NOT NULL AND X2.DIA_P IS NOT NULL THEN 'EXISTENTE' 
     WHEN X2.DIA_U IS NOT NULL AND X2.DIA_P IS NULL     AND X2.DIA_U = 'ULTIMO'    THEN 'INCLUIR' 
     WHEN X2.DIA_U IS NOT NULL AND X2.DIA_P IS NULL     AND X2.DIA_U = 'PENULTIMO' THEN 'EXCLUIR' 
     END STATUS_REGISTRO,
X2.* FROM(
SELECT 
X.SERA_INTEGRADO, X.CAMPOS_IMPORTANTES_INVALIDOS, X.CAMPOS_OBRIGATORIOS_NULOS, X.ERRO_CARGA_HORARIA, X.ERRO_INTERVALO_TURNO, X.SITUACAO_JORNADA, X.DT_REAL_ULT_DIA_TRABALHADO, X.QTD_REG_MESMO_ID_HORARIO,

ROW_NUMBER() OVER(PARTITION BY X.ID_HORARIO ORDER BY X.DIA DESC) ORDEM_ID_HORARIO,
X.ID_HORARIO,
X.DATA_RECEBEU_ARTE DATA_RECEBEU_ARTE_U,
LEAD(X.DATA_RECEBEU_ARTE, 1, NULL) OVER(PARTITION BY X.ID_HORARIO ORDER BY X.DIA DESC) DATA_RECEBEU_ARTE_P,
X.DIA DIA_U, 
LEAD(X.DIA, 1, NULL) OVER(PARTITION BY X.ID_HORARIO ORDER BY X.DIA DESC) DIA_P,
X.BM BM_U, 
LEAD(X.BM, 1, NULL) OVER(PARTITION BY X.ID_HORARIO ORDER BY X.DIA DESC) BM_P,
X.TIPO_JORNADA TIPO_JORNADA_U,
LEAD(X.TIPO_JORNADA, 1, NULL) OVER(PARTITION BY X.ID_HORARIO ORDER BY X.DIA DESC) TIPO_JORNADA_P,
X.TURNO TURNO_U, 
LEAD(X.TURNO, 1, NULL) OVER(PARTITION BY X.ID_HORARIO ORDER BY X.DIA DESC) TURNO_P,
X.HORA_INI_TURNO HORA_INI_TURNO_U,
LEAD(X.HORA_INI_TURNO, 1, NULL) OVER(PARTITION BY X.ID_HORARIO ORDER BY X.DIA DESC) HORA_INI_TURNO_P,
X.HORA_FIM_TURNO HORA_FIM_TURNO_U, 
LEAD(X.HORA_FIM_TURNO, 1, NULL) OVER(PARTITION BY X.ID_HORARIO ORDER BY X.DIA DESC) HORA_FIM_TURNO_P,
X.DURACAO_AULA DURACAO_AULA_U, 
LEAD(X.DURACAO_AULA, 1, NULL) OVER(PARTITION BY X.ID_HORARIO ORDER BY X.DIA DESC) DURACAO_AULA_P,
X.COD_ORGAO COD_ORGAO_U, 
LEAD(X.COD_ORGAO, 1, NULL) OVER(PARTITION BY X.ID_HORARIO ORDER BY X.DIA DESC) COD_ORGAO_P,
X.COORDENACAO COORDENACAO_U, 
LEAD(X.COORDENACAO, 1, NULL) OVER(PARTITION BY X.ID_HORARIO ORDER BY X.DIA DESC) COORDENACAO_P,
X.INICIO_JORNADA INICIO_JORNADA_U, --NOVO EM 30/8/23
LEAD(X.INICIO_JORNADA, 1, NULL) OVER(PARTITION BY X.ID_HORARIO ORDER BY X.DIA DESC) INICIO_JORNADA_P,--NOVO EM 30/8/23
X.FIM_JORNADA FIM_JORNADA_U, --NOVO EM 30/8/23
LEAD(X.FIM_JORNADA, 1, NULL) OVER(PARTITION BY X.ID_HORARIO ORDER BY X.DIA DESC) FIM_JORNADA_P,--NOVO EM 30/8/23
X.DATA_INICIO DATA_INICIO_U, 
LEAD(X.DATA_INICIO, 1, NULL) OVER(PARTITION BY X.ID_HORARIO ORDER BY X.DIA DESC) DATA_INICIO_P,
X.DATA_FIM DATA_FIM_U, 
LEAD(X.DATA_FIM, 1, NULL) OVER(PARTITION BY X.ID_HORARIO ORDER BY X.DIA DESC) DATA_FIM_P,
X.DATA_CANCELAMENTO DATA_CANCELAMENTO_U, 
LEAD(X.DATA_CANCELAMENTO, 1, NULL) OVER(PARTITION BY X.ID_HORARIO ORDER BY X.DIA DESC) DATA_CANCELAMENTO_P,
X.DATA_ULT_ALTERACAO DATA_ULT_ALTERACAO_U, 
LEAD(X.DATA_ULT_ALTERACAO, 1, NULL) OVER(PARTITION BY X.ID_HORARIO ORDER BY X.DIA DESC) DATA_ULT_ALTERACAO_P,
X.SEGUNDA SEGUNDA_U, 
LEAD(X.SEGUNDA, 1, NULL) OVER(PARTITION BY X.ID_HORARIO ORDER BY X.DIA DESC) SEGUNDA_P,
X.INTERVALO_SEGUNDA INTERVALO_SEGUNDA_U, 
LEAD(X.INTERVALO_SEGUNDA, 1, NULL) OVER(PARTITION BY X.ID_HORARIO ORDER BY X.DIA DESC) INTERVALO_SEGUNDA_P,
X.TERCA TERCA_U, 
LEAD(X.TERCA, 1, NULL) OVER(PARTITION BY X.ID_HORARIO ORDER BY X.DIA DESC) TERCA_P,
X.INTERVALO_TERCA INTERVALO_TERCA_U,
LEAD(X.INTERVALO_TERCA, 1, NULL) OVER(PARTITION BY X.ID_HORARIO ORDER BY X.DIA DESC) INTERVALO_TERCA_P,
X.QUARTA QUARTA_U,
LEAD(X.QUARTA, 1, NULL) OVER(PARTITION BY X.ID_HORARIO ORDER BY X.DIA DESC) QUARTA_P,
X.INTERVALO_QUARTA INTERVALO_QUARTA_U, 
LEAD(X.INTERVALO_QUARTA, 1, NULL) OVER(PARTITION BY X.ID_HORARIO ORDER BY X.DIA DESC) INTERVALO_QUARTA_P,
X.QUINTA QUINTA_U, 
LEAD(X.QUINTA, 1, NULL) OVER(PARTITION BY X.ID_HORARIO ORDER BY X.DIA DESC) QUINTA_P,
X.INTERVALO_QUINTA INTERVALO_QUINTA_U,
LEAD(X.INTERVALO_QUINTA, 1, NULL) OVER(PARTITION BY X.ID_HORARIO ORDER BY X.DIA DESC) INTERVALO_QUINTA_P,
X.SEXTA SEXTA_U,
LEAD(X.SEXTA, 1, NULL) OVER(PARTITION BY X.ID_HORARIO ORDER BY X.DIA DESC) SEXTA_P,
X.INTERVALO_SEXTA INTERVALO_SEXTA_U,
LEAD(X.INTERVALO_SEXTA, 1, NULL) OVER(PARTITION BY X.ID_HORARIO ORDER BY X.DIA DESC) INTERVALO_SEXTA_P,
X.JORNADA_VALIDADA JORNADA_VALIDADA_U,
LEAD(X.JORNADA_VALIDADA, 1, NULL) OVER(PARTITION BY X.ID_HORARIO ORDER BY X.DIA DESC) JORNADA_VALIDADA_P,
X.ID_JORNADA ID_JORNADA_U,
LEAD(X.ID_JORNADA, 1, NULL) OVER(PARTITION BY X.ID_HORARIO ORDER BY X.DIA DESC) ID_JORNADA_P,

X.DT_CANCELAMENTO_USAR DT_CANCELAMENTO_USAR_U,
LEAD(X.DT_CANCELAMENTO_USAR, 1, NULL) OVER(PARTITION BY X.ID_HORARIO ORDER BY X.DIA DESC) DT_CANCELAMENTO_USAR_P,

X.TIPO_JORNADA, X.CARGA_HORARIA, X.NOM_OFIC_ESCL, X.REGIONAL, X.LOCAL, X.DATA_RECEBEU_ARTE, X.DATA_PROCESSAMENTO, X.OBS_PROCESSAMENTO, X.BM_ULTIMA_ALTERACAO
FROM
          (
          SELECT 'ULTIMO' AS DIA, U.* FROM PONTO_ELETRONICO.SUGESP_SGE_JORNADAS_GERAL U
          WHERE TRUNC(U.DATA_RECEBEU_ARTE) = (SELECT TRUNC(MAX(DATA_RECEBEU_ARTE))FROM PONTO_ELETRONICO.SUGESP_SGE_JORNADAS_GERAL WHERE TIPO_REGISTRO = 'DE/PARA_EXTENSOES_2023'
          AND TO_DATE(DATA_INICIO,'DD/MM/YYYY')>= TO_DATE(vDATA_INICIO,'DD/MM/YYYY')--NOVO A PARTIR DE 2024
          ) -- WHERE DATA_PROCESSAMENTO IS NOT NULL)--(SELECT TRUNC(MAX(DATA_RECEBEU_ARTE))FROM PONTO_ELETRONICO.SUGESP_SGE_JORNADAS_GERAL WHERE DATA_PROCESSAMENTO IS NULL)
          UNION ALL
          SELECT 'PENULTIMO' AS DIA, P.* FROM PONTO_ELETRONICO.SUGESP_SGE_JORNADAS_GERAL P
          WHERE P.TIPO_REGISTRO = 'DE/PARA_EXTENSOES_2023' AND TRUNC(P.DATA_RECEBEU_ARTE) = --(SELECT TRUNC(MAX(DATA_RECEBEU_ARTE))FROM PONTO_ELETRONICO.SUGESP_SGE_JORNADAS_GERAL WHERE DATA_PROCESSAMENTO IS NOT NULL)
          (SELECT TRUNC(X.DATA_RECEBEU_ARTE) FROM(SELECT K.DATA_RECEBEU_ARTE,ROWNUM ORDEM_DATA FROM (SELECT Z.*FROM(SELECT TRUNC(X.DATA_RECEBEU_ARTE)DATA_RECEBEU_ARTE FROM PONTO_ELETRONICO.SUGESP_SGE_JORNADAS_GERAL x 
          WHERE X.TIPO_REGISTRO = 'DE/PARA_EXTENSOES_2023'
          AND TO_DATE(DATA_INICIO,'DD/MM/YYYY')>=  TO_DATE(vDATA_INICIO,'DD/MM/YYYY') --NOVO A PARTIR DE 2024
          GROUP BY TRUNC(X.DATA_RECEBEU_ARTE) ORDER BY TRUNC(X.DATA_RECEBEU_ARTE) DESC)Z)K)X WHERE X.ORDEM_DATA = 2)
          )X
ORDER BY X.ID_HORARIO, X.DIA DESC
)X2 WHERE X2.ORDEM_ID_HORARIO = 1
)X3
--/*
WHERE
(
X3.STATUS_REGISTRO IN ('INCLUIR','EXCLUIR')
OR
(X3.STATUS_REGISTRO = ('EXISTENTE')AND (X3.STATUS_BM = 'ALTERADO' OR X3.STATUS_TIPO_JORNADA = 'ALTERADO' OR X3.STATUS_TURNO = 'ALTERADO' OR X3.STATUS_HORA_INI_TURNO = 'ALTERADO' OR  X3.STATUS_HORA_FIM_TURNO = 'ALTERADO' OR 
                                        X3.STATUS_DURACAO_AULA = 'ALTERADO' OR X3.STATUS_COD_ORGAO = 'ALTERADO' OR X3.STATUS_COORDENACAO = 'ALTERADO' OR X3.STATUS_DATA_INICIO = 'ALTERADO' OR X3.STATUS_DATA_FIM = 'ALTERADO' OR 
                                        X3.STATUS_DATA_CANCELAMENTO = 'ALTERADO' 
                                        --OR X3.STATUS_DATA_ULT_ALTERACAO = 'ALTERADO' 
                                        OR X3.STATUS_SEGUNDA = 'ALTERADO' OR X3.STATUS_INTERVALO_SEGUNDA = 'ALTERADO' OR X3.STATUS_TERCA = 'ALTERADO' OR 
                                        X3.STATUS_INTERVALO_TERCA = 'ALTERADO' OR X3.STATUS_QUARTA = 'ALTERADO' OR X3.STATUS_INTERVALO_QUARTA = 'ALTERADO' OR X3.STATUS_QUINTA = 'ALTERADO' OR X3.STATUS_INTERVALO_QUINTA = 'ALTERADO' OR 
                                        X3.STATUS_SEXTA = 'ALTERADO' OR X3.STATUS_INTERVALO_SEXTA = 'ALTERADO' OR X3.STATUS_JORNADA_VALIDADA = 'ALTERADO' OR X3.STATUS_ID_JORNADA = 'ALTERADO'
                                        OR X3.STATUS_INICIO_JORNADA = 'ALTERADO' OR X3.STATUS_FIM_JORNADA = 'ALTERADO'--NOVO EM 30/8/23
                                        OR X3.STATUS_DT_CANCELAMENTO_USAR = 'ALTERADO'
))
)
ORDER BY X3.ID_HORARIO

--*/
)X4
WHERE 
--TRUNC(X4.DATA_PROCESSAMENTO) = TRUNC(SYSDATE)--X4.DATA_PROCESSAMENTO IS NULL
--AND (X4.LARGURA_TODOS_STATUS_CAMPOS = 44 AND 
X4.SERA_INTEGRADO = 'SIM'--COMENTADO ATÉ SGE TIRAR DUPLICIDADE ID_HORARIO--
--)--NOVOS CAMPOS PRE VALIDADOS DADOS SGE
--AND X4.ID_HORARIO IN (3001,3002) --TESTES 13/7/23

--COMENTADO 30/8/23--AND X4.OBS_PROCESSAMENTO LIKE 'EXTENSAO_NOVA_VALIDADA_%' ---NOVO EM 3/8/23 TRABALHAR POR ENQUANTO APENAS PARA OS ARQUIVOS DE EXTENSAO NOVOS REGISTROS PARA OS PRIMEIROS ARQUIVOS DE/PARA 2023
--COMENTADO 30/8/23--AND X4.STATUS_REGISTRO = 'INCLUIR' --NOVO EM 24/8/23 PARA OS ARQUIVOS APOS A PRIMEIRA CARGA

AND X4.OBS_PROCESSAMENTO IN ('EXTENSAO_NOVA_VALIDADA_CADASTRAR', 'EXTENSAO_NOVA_VALIDADA_CADASTRAR_JA_CANCELADA', 'EXTENSAO_NOVA_VALIDADA_CADASTRAR_JA_REALIZADA', 'EXTENSAO_NOVA_VALIDADA_CANCELAMENTO_RECENTE_CANCELAR_NO_ARTERH', 'EXTENSAO_NOVA_VALIDADA_CADASTRADA_JA_REALIZADA')--NOVO EM 31/8/23
AND X4.STATUS_REGISTRO IN('INCLUIR','EXISTENTE') AND X4.SITUACAO_JORNADA NOT LIKE '%_ERRO_%' --NOVO EM 31/8/23 PEGAR POR VENTURA EXTENSOES QUE EXISTIAM NO ARQUIVO ANTERIOR MAS POR ALGUM MOTIVO NAO INTEGRARAM POREM AGORA DEVEM INTEGRAR VISTO QUE ESTAO VALIDAS E COM DIAS DE TRABALHO

--)GROUP BY OBS_PROCESSAMENTO, SITUACAO_JORNADA  ORDER BY OBS_PROCESSAMENTO,SITUACAO_JORNADA--SINTETICO


)LOOP
vCONTADOR := vCONTADOR +1;
dbms_output.put_line('-----------------------------------');
dbms_output.put_line('--vCONTADOR: '||vCONTADOR ||' C1.ID_HORARIO: '||C1.ID_HORARIO);

INSERT INTO PONTO_ELETRONICO.SUGESP_SGE_JORNADAS_AJUSTES (ID_JORNADA_U, ID_JORNADA_P, STATUS_BM, STATUS_TIPO_JORNADA, STATUS_TURNO, STATUS_HORA_INI_TURNO, STATUS_HORA_FIM_TURNO, STATUS_DURACAO_AULA, STATUS_COD_ORGAO, STATUS_COORDENACAO, STATUS_DATA_INICIO, STATUS_DATA_FIM, STATUS_DATA_CANCELAMENTO, STATUS_DATA_ULT_ALTERACAO, STATUS_SEGUNDA, STATUS_INTERVALO_SEGUNDA, STATUS_TERCA, STATUS_INTERVALO_TERCA, STATUS_QUARTA, STATUS_INTERVALO_QUARTA, STATUS_QUINTA, STATUS_INTERVALO_QUINTA, STATUS_SEXTA, STATUS_INTERVALO_SEXTA, STATUS_REGISTRO, ORDEM_ID_HORARIO, ID_HORARIO, DATA_RECEBEU_ARTE_U, DATA_RECEBEU_ARTE_P, DIA_U, DIA_P, BM_U, BM_P, TIPO_JORNADA_U, TIPO_JORNADA_P, TURNO_U, TURNO_P, HORA_INI_TURNO_U, HORA_INI_TURNO_P, HORA_FIM_TURNO_U, HORA_FIM_TURNO_P, DURACAO_AULA_U, DURACAO_AULA_P, COD_ORGAO_U, COD_ORGAO_P, COORDENACAO_U, COORDENACAO_P, DATA_INICIO_U, DATA_INICIO_P, DATA_FIM_U, DATA_FIM_P, DATA_CANCELAMENTO_U, DATA_CANCELAMENTO_P, DATA_ULT_ALTERACAO_U, DATA_ULT_ALTERACAO_P, SEGUNDA_U, SEGUNDA_P, INTERVALO_SEGUNDA_U, INTERVALO_SEGUNDA_P, TERCA_U, TERCA_P, INTERVALO_TERCA_U, INTERVALO_TERCA_P, QUARTA_U, QUARTA_P, INTERVALO_QUARTA_U, INTERVALO_QUARTA_P, QUINTA_U, QUINTA_P, INTERVALO_QUINTA_U, INTERVALO_QUINTA_P, SEXTA_U, SEXTA_P, INTERVALO_SEXTA_U, INTERVALO_SEXTA_P, JORNADA, CARGA_HORARIA, NOM_OFIC_ESCL, REGIONAL, LOCAL, DATA_PROCESSAMENTO, OBS_PROCESSAMENTO, BM_ULTIMA_ALTERACAO, LARGURA_TODOS_STATUS_CAMPOS
,INICIO_JORNADA_U, INICIO_JORNADA_P, FIM_JORNADA_U, FIM_JORNADA_P--NOVO EM 30/8/23
,STATUS_INICIO_JORNADA, STATUS_FIM_JORNADA--NOVO EM 30/8/23
, TIPO_REGISTRO 
,DT_CANCELAMENTO_USAR_U, DT_CANCELAMENTO_USAR_P

)
VALUES(C1.ID_JORNADA_U, C1.ID_JORNADA_P, C1.STATUS_BM, C1.STATUS_TIPO_JORNADA, C1.STATUS_TURNO, C1.STATUS_HORA_INI_TURNO, C1.STATUS_HORA_FIM_TURNO, C1.STATUS_DURACAO_AULA, C1.STATUS_COD_ORGAO, C1.STATUS_COORDENACAO, C1.STATUS_DATA_INICIO, C1.STATUS_DATA_FIM, C1.STATUS_DATA_CANCELAMENTO, C1.STATUS_DATA_ULT_ALTERACAO, C1.STATUS_SEGUNDA, C1.STATUS_INTERVALO_SEGUNDA, C1.STATUS_TERCA, C1.STATUS_INTERVALO_TERCA, C1.STATUS_QUARTA, C1.STATUS_INTERVALO_QUARTA, C1.STATUS_QUINTA, C1.STATUS_INTERVALO_QUINTA, C1.STATUS_SEXTA, C1.STATUS_INTERVALO_SEXTA, C1.STATUS_REGISTRO, C1.ORDEM_ID_HORARIO, C1.ID_HORARIO, C1.DATA_RECEBEU_ARTE_U, C1.DATA_RECEBEU_ARTE_P, C1.DIA_U, C1.DIA_P, LPAD(C1.BM_U,15,0), LPAD(C1.BM_P,15,0), C1.TIPO_JORNADA_U, C1.TIPO_JORNADA_P, C1.TURNO_U, C1.TURNO_P, C1.HORA_INI_TURNO_U, C1.HORA_INI_TURNO_P, C1.HORA_FIM_TURNO_U, C1.HORA_FIM_TURNO_P, C1.DURACAO_AULA_U, C1.DURACAO_AULA_P, C1.COD_ORGAO_U, C1.COD_ORGAO_P, C1.COORDENACAO_U, C1.COORDENACAO_P, C1.DATA_INICIO_U, C1.DATA_INICIO_P, C1.DATA_FIM_U, C1.DATA_FIM_P, C1.DATA_CANCELAMENTO_U, C1.DATA_CANCELAMENTO_P, C1.DATA_ULT_ALTERACAO_U, C1.DATA_ULT_ALTERACAO_P, C1.SEGUNDA_U, C1.SEGUNDA_P, C1.INTERVALO_SEGUNDA_U, C1.INTERVALO_SEGUNDA_P, C1.TERCA_U, C1.TERCA_P, C1.INTERVALO_TERCA_U, C1.INTERVALO_TERCA_P, C1.QUARTA_U, C1.QUARTA_P, C1.INTERVALO_QUARTA_U, C1.INTERVALO_QUARTA_P, C1.QUINTA_U, C1.QUINTA_P, C1.INTERVALO_QUINTA_U, C1.INTERVALO_QUINTA_P, C1.SEXTA_U, C1.SEXTA_P, C1.INTERVALO_SEXTA_U, C1.INTERVALO_SEXTA_P, C1.TIPO_JORNADA, C1.CARGA_HORARIA, C1.NOM_OFIC_ESCL, C1.REGIONAL, C1.LOCAL, SYSDATE, C1.SITUACAO_JORNADA||'***'||C1.OBS_PROCESSAMENTO, C1.BM_ULTIMA_ALTERACAO, C1.LARGURA_TODOS_STATUS_CAMPOS
,C1.INICIO_JORNADA_U, C1.INICIO_JORNADA_P, C1.FIM_JORNADA_U, C1.FIM_JORNADA_P--NOVO EM 30/8/23
,C1.STATUS_INICIO_JORNADA, C1.STATUS_FIM_JORNADA--NOVO EM 30/8/23
,'DE/PARA_EXTENSOES_2023'
,C1.DT_CANCELAMENTO_USAR_U, C1.DT_CANCELAMENTO_USAR_P

);COMMIT;

END LOOP;

----2ª TAREFA----------FIM----------------------------------DADOS PARA COMPARAR DAS 2 ULTIMAS 2 CARGAS DO SGE

--UPDATE PONTO_ELETRONICO.SUGESP_SGE_JORNADAS_GERAL SET DATA_PROCESSAMENTO = SYSDATE WHERE DATA_PROCESSAMENTO IS NULL; COMMIT;---ATUALIZA OS REGISTROS COMO PROCESSADOS

END;

END;