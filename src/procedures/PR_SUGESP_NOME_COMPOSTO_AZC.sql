
  CREATE OR REPLACE EDITIONABLE PROCEDURE "ARTERH"."PR_SUGESP_NOME_COMPOSTO_AZC" 
AS
--KELLYSSON 17/5/19
BEGIN

for c1 in(


SELECT  X.* FROM  SUGESP_NOME_COMPOSTO_AZC X
left outer join RHORGA_EMPRESA E ON X.CODIGO_EMPRESA = E.CODIGO
WHERE
 X.ATUALIZOU = 'N'
AND X.Dt_Ult_Alter_Usua = (
SELECT  MAX(AUX.Dt_Ult_Alter_Usua) FROM  SUGESP_NOME_COMPOSTO_AZC AUX
WHERE AUX.ATUALIZOU = 'N' AND
AUX.CODIGO_EMPRESA = X.CODIGO_EMPRESA AND AUX.TIPO_CONTRATO = X.TIPO_CONTRATO AND AUX.CODIGO = X.CODIGO AND AUX.CODIGO_PESSOA = X.CODIGO_PESSOA)


)

LOOP
--------------------------------------------------------------------------------UPDATE
--IF C1.TIPO_DML = 'U' THEN-- GABRIEL COMENTADO POIS A REGRA VALE TANTO PARA INSERT QUANTO PAR UPDATE

--DBMS_OUTPUT.PUT_LINE('TIPO UPDATE');

--INICIO------------1ª PARTE -----------ATUALIZA NOME_COMPOSTO RHPESS_CONTR_MEST
update RHPESS_CONTR_MEST MESTRE
set MESTRE.LOGIN_USUARIO = C1.LOGIN_USUARIO, MESTRE.DT_ULT_ALTER_USUA = C1.DT_ULT_ALTER_USUA,

MESTRE.NOME_COMPOSTO =
(
select
C.CODIGO||' - '||NVL(TRIM(P.NOME_SOCIAL),TRIM(P.NOME_ACESSO)) ||' - '||C.TIPO_CONTRATO||' - '|| NVL(TRIM(G.TEXTO_ASSOCIADO),TRIM(G.DESCRICAO))
from
RHPESS_CONTRATO C
left outer join RHPESS_PESSOA P ON P.CODIGO_EMPRESA = C.CODIGO_EMPRESA AND P.CODIGO = C.CODIGO_PESSOA
LEFT OUTER JOIN RHORGA_CUSTO_GEREN G ON C.CODIGO_EMPRESA = G.CODIGO_EMPRESA AND  C.COD_CUSTO_GERENC1 = G.COD_CGERENC1 and C.COD_CUSTO_GERENC2 = G.COD_CGERENC2 and C.COD_CUSTO_GERENC3 = G.COD_CGERENC3 and C.COD_CUSTO_GERENC4= G.COD_CGERENC4 and C.COD_CUSTO_GERENC5 = G.COD_CGERENC5 and C.COD_CUSTO_GERENC6 = G.COD_CGERENC6
WHERE C.ANO_MES_REFERENCIA = (select max(ANO_MES_REFERENCIA) from RHPESS_CONTRATO AUX
                                       where AUX.CODIGO_EMPRESA = C.CODIGO_EMPRESA
                                         and AUX.TIPO_CONTRATO = C.TIPO_CONTRATO
                                         and AUX.CODIGO = C.CODIGo)
and MESTRE.CODIGO_EMPRESA = C.CODIGO_EMPRESA and
MESTRE.TIPO_CONTRATO = C.TIPO_CONTRATO and
MESTRE.CODIGO_CONTRATO = C.CODIGO
)
where MESTRE.CODIGO_EMPRESA = C1.CODIGO_EMPRESA and
MESTRE.TIPO_CONTRATO = C1.TIPO_CONTRATO AND
MESTRE.CODIGO_CONTRATO = C1.CODIGO
;
commit;
-----FIM------------1ª PARTE -----------ATUALIZA NOME_COMPOSTO RHPESS_CONTR_MEST


--INICIO----2ª PARTE -----------ATUALIZA NOME_COMPOSTO RHUSER_PESSOA_RESPONSAVEL
UPDATE RHUSER_PESSOA_RESPONSAVEL SET  UPDATED = C1.DT_ULT_ALTER_USUA, UPDATEDBY = C1.LOGIN_USUARIO,
NOME_COMPOSTO =
(
select
C.CODIGO||' - '||NVL(TRIM(P.NOME_SOCIAL),TRIM(P.NOME_ACESSO)) ||' - '||C.TIPO_CONTRATO||' - '|| NVL(TRIM(G.TEXTO_ASSOCIADO),TRIM(G.DESCRICAO))
from
RHPESS_CONTRATO C
left outer join RHPESS_PESSOA P ON P.CODIGO_EMPRESA = C.CODIGO_EMPRESA AND P.CODIGO = C.CODIGO_PESSOA
LEFT OUTER JOIN RHORGA_CUSTO_GEREN G ON C.CODIGO_EMPRESA = G.CODIGO_EMPRESA AND  C.COD_CUSTO_GERENC1 = G.COD_CGERENC1 and C.COD_CUSTO_GERENC2 = G.COD_CGERENC2 and C.COD_CUSTO_GERENC3 = G.COD_CGERENC3 and C.COD_CUSTO_GERENC4= G.COD_CGERENC4 and C.COD_CUSTO_GERENC5 = G.COD_CGERENC5 and C.COD_CUSTO_GERENC6 = G.COD_CGERENC6
WHERE C.ANO_MES_REFERENCIA = (select max(ANO_MES_REFERENCIA) from RHPESS_CONTRATO AUX
                                       where AUX.CODIGO_EMPRESA = C.CODIGO_EMPRESA
                                         and AUX.TIPO_CONTRATO = C.TIPO_CONTRATO
                                         and AUX.CODIGO = C.CODIGo)

and C.CODIGO_EMPRESA = C1.CODIGO_EMPRESA
and C.TIPO_CONTRATO = C1.TIPO_CONTRATO
and C.CODIGO = C1.CODIGO
)
WHERE ID IN
(SELECT ID FROM RHUSER_PESSOA_RESPONSAVEL WHERE DT_FIM_RESPONSABILIDADE IS NULL AND ID_PROCESSO = 2  AND CODIGO_EMPRESA_PESSOA_RESP = C1.CODIGO_EMPRESA AND
CODIGO_PESSOA_RESP = C1.CODIGO_PESSOA AND CODIGO_EMPRESA_CONTRATO = C1.CODIGO_EMPRESA AND TIPO_CONTRATO_RESP = C1.TIPO_CONTRATO AND CODIGO_CONTRATO_RESP = C1.CODIGO );

commit;
-----FIM----2ª PARTE -----------ATUALIZA NOME_COMPOSTO RHUSER_PESSOA_RESPONSAVEL


--INICIO-3ª PARTE-----------ATUALIZA NOME_COMPOSTO RHUSER_PESSOA_RESP_SUPERVISAO
UPDATE RHUSER_PESSOA_RESP_SUPERVISAO SET  UPDATED = C1.DT_ULT_ALTER_USUA, UPDATEDBY = C1.LOGIN_USUARIO,
NOME_COMPOSTO =
(
select
C.CODIGO||' - '||NVL(TRIM(P.NOME_SOCIAL),TRIM(P.NOME_ACESSO)) ||' - '||C.TIPO_CONTRATO||' - '|| NVL(TRIM(G.TEXTO_ASSOCIADO),TRIM(G.DESCRICAO))
from
RHPESS_CONTRATO C
left outer join RHPESS_PESSOA P ON P.CODIGO_EMPRESA = C.CODIGO_EMPRESA AND P.CODIGO = C.CODIGO_PESSOA
LEFT OUTER JOIN RHORGA_CUSTO_GEREN G ON C.CODIGO_EMPRESA = G.CODIGO_EMPRESA AND  C.COD_CUSTO_GERENC1 = G.COD_CGERENC1 and C.COD_CUSTO_GERENC2 = G.COD_CGERENC2 and C.COD_CUSTO_GERENC3 = G.COD_CGERENC3 and C.COD_CUSTO_GERENC4= G.COD_CGERENC4 and C.COD_CUSTO_GERENC5 = G.COD_CGERENC5 and C.COD_CUSTO_GERENC6 = G.COD_CGERENC6
WHERE C.ANO_MES_REFERENCIA = (select max(ANO_MES_REFERENCIA) from RHPESS_CONTRATO AUX
                                       where AUX.CODIGO_EMPRESA = C.CODIGO_EMPRESA
                                         and AUX.TIPO_CONTRATO = C.TIPO_CONTRATO
                                         and AUX.CODIGO = C.CODIGo)

and C.CODIGO_EMPRESA = C1.CODIGO_EMPRESA
and C.TIPO_CONTRATO = C1.TIPO_CONTRATO
and C.CODIGO = C1.CODIGO
)
WHERE ID IN
(SELECT ID FROM RHUSER_PESSOA_RESP_SUPERVISAO WHERE DT_FIM_SUPERVISAO IS NULL
AND CODIGO_EMPRESA_SUBORDINADO = C1.CODIGO_EMPRESA AND CODIGO_CONTRATO_SUBORDINADO = C1.CODIGO AND CODIGO_PESSOA_SUBORDINADO = C1.CODIGO_PESSOA
AND TIPO_CONTRATO_SUBORDINADO = C1.TIPO_CONTRATO AND CODIGO_EMPRESA_CTR_SUBORDINADO = C1.CODIGO_EMPRESA AND CODIGO_EMPRESA = C1.CODIGO_EMPRESA
);

commit;
--FIM----3ª PARTE-----------ATUALIZA NOME_COMPOSTO RHUSER_PESSOA_RESP_SUPERVISAO

--inicio--------------------------------------4ª PARTE-----------atualizar o log
update SUGESP_NOME_COMPOSTO_AZC set ATUALIZOU = 'S' WHERE CODIGO_EMPRESA = C1.CODIGO_EMPRESA and TIPO_CONTRATO = C1.TIPO_CONTRATO and CODIGO = C1.CODIGO AND CODIGO_PESSOA = C1.CODIGO_PESSOA;

COMMIT;
--fim-----------------------------------------4ª PARTE-----------atualizar o log




--------------------------------------------------------------------------------INSERT
--ELSIF C1.TIPO_DML = 'I' THEN

DBMS_OUTPUT.PUT_LINE('TIPO INSERT');


--END IF;
END LOOP;
END;