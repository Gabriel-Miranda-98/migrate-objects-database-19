
  CREATE OR REPLACE EDITIONABLE PROCEDURE "ARTERH"."PR_MIGRA_DADOS_DESIG" (
    p_CODIGO_EMPRESA     IN CHAR ,
    p_TIPO_CONTRATO      IN CHAR ,
    p_CODIGO_CONTRATO    IN CHAR,
    p_DATA_INICIO_DESVIO IN DATE,
    p_DATA_FIM_DESVIO IN DATE,
    p_ID                 IN PLS_INTEGER,
    p_ACAO IN CHAR,
    p_login IN CHAR)
  
AS

  v1 varchar2(4000 byte);
  v2 varchar2(4000 byte);
  VSQLID varchar2(4000 byte);
  vcomando LONG;
  vID_LOG PLS_INTEGER;
  vcontagem number;
  VTIPO_DML char(3 BYTE);
  vVOID CHAR := null;
  vDATA_SISTEMA DATE;
  vNOME_TABELA VARCHAR2(1000);
  VNOME_TABELA_DESIG VARCHAR2(1000);
  vPROCURAR  VARCHAR2(1000);
  vVALIDA_NOME_TABELA CHAR(2);
  vVALIDA_NOME_TABELA_INSERT CHAR(2);
  vMOTIVO_DESVIO char(4);
  vVERIFICA_MOTIVO NUMBER;
  vOCORRENCIA CHAR(3 BYTE);
  vOCORRENCIA_CARG NUMBER;

  vDOCUMENTO_PUBLIC VARCHAR2(40 BYTE) ;
  vOLD_DATA_INICIO_FUNCAO DATE;
  vOLD_CODIGO_FUNCAO      CHAR(15 BYTE);
  vCODIGO_FUNCAO          CHAR(15 BYTE);
  vOLD_CODIGO_HIST_FUNCAO VARCHAR2(1000);
  vOLD_DT_FIM_TEMP_FUNC DATE;
  vOLD_DOCUMENTO_PUBLIC_FUNCAO VARCHAR2(1000);
  vOLD_TEXTO_ASSOCIADO_FUNCAO VARCHAR2(1000);
  vOLD_ID_LEI_FUNCAO NUMBER;

  vNIVEL_CARGO_COMISS     CHAR(8 BYTE);
  vNIVEL_CARGO_EFETIV     CHAR(8 BYTE);
  vCOD_CARGO_COMIS        CHAR(15 BYTE);
  vCOD_CARGO_EFET         CHAR(15 BYTE);

  vOLD_COD_CARGO_EFET_AT  CHAR(15 BYTE);
  vOLD_NIV_CARGO_EFET_AT  CHAR(8 BYTE);
  vOLD_COD_CARGO_COMIS_AT CHAR(15 BYTE);
  vOLD_NIV_CARGO_COMIS_AT CHAR(8 BYTE);
  vOLD_COD_CARGO_AMPAR_AT CHAR(15 BYTE);
  vOLD_NIV_CARGO_AMPAR_AT CHAR(8 BYTE);
  vOPCAO_SERVIDOR NUMBER;
  vOLD_OPCAO_SERVIDOR CHAR(1 BYTE);
  vPAGAMENTO_SERVIDOR CHAR(1 BYTE);
  vOLD_DT_ALTER_CARGO DATE;
  vOLD_DT_FIM_TEMP_CARGO DATE;
  vDATA_REGULARIZACAO DATE;

  vCOD_UNIDADE1 CHAR(6 BYTE);
  vCOD_UNIDADE2 CHAR(6 BYTE);
  vCOD_UNIDADE3 CHAR(6 BYTE);
  vCOD_UNIDADE4 CHAR(6 BYTE);
  vCOD_UNIDADE5 CHAR(6 BYTE);
  vCOD_UNIDADE6 CHAR(6 BYTE);
  vTIPO_AGRUP CHAR ;

  VTIPO_CONTRATO_TITULAR CHAR(4 BYTE);
  VCONTRATO_TITULAR CHAR(15 BYTE);
  vE_GESTOR_TITULAR CHAR(1 BYTE);
  VCOD_PESSOA CHAR(15 BYTE);
  vE_GESTOR CHAR(3 BYTE);
  vDT_PUBLIC_DOM date;

  VOLD_COD_MOVIMENTACAO CHAR(4 BYTE);
  vOLD_COD_LOTACAO_ATUAL1	CHAR(6 BYTE);
  vOLD_COD_LOTACAO_ATUAL2	CHAR(6 BYTE);
  vOLD_COD_LOTACAO_ATUAL3	CHAR(6 BYTE);
  vOLD_COD_LOTACAO_ATUAL4	CHAR(6 BYTE);
  vOLD_COD_LOTACAO_ATUAL5	CHAR(6 BYTE);
  vOLD_COD_LOTACAO_ATUAL6	CHAR(6 BYTE);
  vOLD_COD_UNIDADE_ATUAL1 CHAR(6 BYTE);
  vOLD_COD_UNIDADE_ATUAL2 CHAR(6 BYTE);
  vOLD_COD_UNIDADE_ATUAL3 CHAR(6 BYTE);
  vOLD_COD_UNIDADE_ATUAL4 CHAR(6 BYTE);
  vOLD_COD_UNIDADE_ATUAL5 CHAR(6 BYTE);
  vOLD_COD_UNIDADE_ATUAL6 CHAR(6 BYTE);
  vOLD_COD_CCONTAB_ATUAL1 CHAR(6 BYTE);
  vOLD_COD_CCONTAB_ATUAL2 CHAR(6 BYTE);
  vOLD_COD_CCONTAB_ATUAL3 CHAR(6 BYTE);
  vOLD_COD_CCONTAB_ATUAL4 CHAR(6 BYTE);
  vOLD_COD_CCONTAB_ATUAL5 CHAR(6 BYTE);
  vOLD_COD_CCONTAB_ATUAL6 CHAR(6 BYTE);
  vOLD_COD_CGERENC_ATUAL1 CHAR(6 BYTE);
  vOLD_COD_CGERENC_ATUAL2 CHAR(6 BYTE);
  vOLD_COD_CGERENC_ATUAL3 CHAR(6 BYTE);
  vOLD_COD_CGERENC_ATUAL4 CHAR(6 BYTE);
  vOLD_COD_CGERENC_ATUAL5 CHAR(6 BYTE);
  vOLD_COD_CGERENC_ATUAL6 CHAR(6 BYTE);
  vOLD_DT_ALT_UNID_CUSTO DATE;
  vOLD_DT_FIM_TEMP_MOVI	DATE;

  vCODIGO_ESCALA CHAR(4 BYTE);
  vOLD_CODIGO_ESCALA CHAR(6 BYTE);
  vOLD_DT_INICIO_TROCA DATE ;
  vOLD_DT_FIM_TROCA DATE;



  -- VARIAVEIS DO CONTRATO ANTERIOR A DESIGNAÇÃO
  vOLD_C_COD_LOCAL1	CHAR(6 BYTE);
  vOLD_C_COD_LOCAL2	CHAR(6 BYTE);
  vOLD_C_COD_LOCAL3	CHAR(6 BYTE);
  vOLD_C_COD_LOCAL4	CHAR(6 BYTE);
  vOLD_C_COD_LOCAL5	CHAR(6 BYTE);
  vOLD_C_COD_LOCAL6	CHAR(6 BYTE);
  vOLD_C_DT_ULT_ALT_LOC	DATE;
  vOLD_C_COD_UNIDADE1	CHAR(6 BYTE);
  vOLD_C_COD_UNIDADE2	CHAR(6 BYTE);
  vOLD_C_COD_UNIDADE3	CHAR(6 BYTE);
  vOLD_C_COD_UNIDADE4	CHAR(6 BYTE);
  vOLD_C_COD_UNIDADE5	CHAR(6 BYTE);
  vOLD_C_COD_UNIDADE6	CHAR(6 BYTE);
  vOLD_C_DT_ULT_ALT_UNID	DATE;
  vOLD_C_COD_CUSTO_CONTAB1	CHAR(6 BYTE);
  vOLD_C_COD_CUSTO_CONTAB2	CHAR(6 BYTE);
  vOLD_C_COD_CUSTO_CONTAB3	CHAR(6 BYTE);
  vOLD_C_COD_CUSTO_CONTAB4	CHAR(6 BYTE);
  vOLD_C_COD_CUSTO_CONTAB5	CHAR(6 BYTE);
  vOLD_C_COD_CUSTO_CONTAB6	CHAR(6 BYTE);
  vOLD_C_DT_ULT_ALT_CONT	DATE;
  vOLD_C_COD_CUSTO_GERENC1	CHAR(6 BYTE);
  vOLD_C_COD_CUSTO_GERENC2	CHAR(6 BYTE);
  vOLD_C_COD_CUSTO_GERENC3	CHAR(6 BYTE);
  vOLD_C_COD_CUSTO_GERENC4	CHAR(6 BYTE);
  vOLD_C_COD_CUSTO_GERENC5	CHAR(6 BYTE);
  vOLD_C_COD_CUSTO_GERENC6	CHAR(6 BYTE);
  vOLD_C_DT_ULT_ALT_GER	DATE;
  VOLD_MOTIVO_ALTERACAO_CARGO CHAR(4 BYTE);
  vOLD_C_SALARIO_PAGTO	CHAR(1 BYTE);
  vOLD_C_COD_CARGO_PAGTO	CHAR(15 BYTE);
  vOLD_C_NIVEL_CARGO_PAGTO	CHAR(8 BYTE);
  vOLD_C_COD_CARGO_EFETIVO	CHAR(15 BYTE);
  vOLD_C_NIVEL_CARGO_EFETIV	CHAR(8 BYTE);
  vOLD_C_DT_ULT_CARGO_EFET	DATE;
  vOLD_C_COD_CARGO_COMISS	CHAR(15 BYTE);
  vOLD_C_NIVEL_CARGO_COMISS	CHAR(8 BYTE);
  vOLD_C_DT_ULT_CARGO_COM	DATE;
  vOLD_C_COD_CARGO_AMPAR	CHAR(15 BYTE);
  vOLD_C_NIVEL_CARGO_AMPAR	CHAR(8 BYTE);
  vOLD_C_DT_ULT_CARGO_AMPAR	DATE;
  vOLD_C_CODIGO_FUNCAO	CHAR(15 BYTE);
  vOLD_C_DT_ULT_FUNCAO	DATE;
  vOLD_C_CODIGO_ESCALA	CHAR(4 BYTE);
  vOLD_C_DT_ULT_ESCALA	DATE;
  VOLD_COD_MOTIVO_ESCALA  CHAR(4 BYTE);
  vOLD_C_LOGIN_USUARIO VARCHAR2(40 BYTE);
  vOLD_C_DT_ULT_ALTER_USUA DATE;
  vSITUACAO_FUNCIONAL VARCHAR(4);
  vE_CESSAO VARCHAR(1);

  -- VARIAVEIS DO CONTRATO ATUAL
  vATUAL_C_COD_LOCAL1	CHAR(6 BYTE);
  vATUAL_C_COD_LOCAL2	CHAR(6 BYTE);
  vATUAL_C_COD_LOCAL3	CHAR(6 BYTE);
  vATUAL_C_COD_LOCAL4	CHAR(6 BYTE);
  vATUAL_C_COD_LOCAL5	CHAR(6 BYTE);
  vATUAL_C_COD_LOCAL6	CHAR(6 BYTE);
  vATUAL_C_DT_ULT_ALT_LOC	DATE;
  vATUAL_C_COD_UNIDADE1	CHAR(6 BYTE);
  vATUAL_C_COD_UNIDADE2	CHAR(6 BYTE);
  vATUAL_C_COD_UNIDADE3	CHAR(6 BYTE);
  vATUAL_C_COD_UNIDADE4	CHAR(6 BYTE);
  vATUAL_C_COD_UNIDADE5	CHAR(6 BYTE);
  vATUAL_C_COD_UNIDADE6	CHAR(6 BYTE);
  vATUAL_C_DT_ULT_ALT_UNID	DATE;
  vATUAL_C_COD_CUSTO_CONTAB1	CHAR(6 BYTE);
  vATUAL_C_COD_CUSTO_CONTAB2	CHAR(6 BYTE);
  vATUAL_C_COD_CUSTO_CONTAB3	CHAR(6 BYTE);
  vATUAL_C_COD_CUSTO_CONTAB4	CHAR(6 BYTE);
  vATUAL_C_COD_CUSTO_CONTAB5	CHAR(6 BYTE);
  vATUAL_C_COD_CUSTO_CONTAB6	CHAR(6 BYTE);
  vATUAL_C_DT_ULT_ALT_CONT	DATE;
  vATUAL_C_COD_CUSTO_GERENC1	CHAR(6 BYTE);
  vATUAL_C_COD_CUSTO_GERENC2	CHAR(6 BYTE);
  vATUAL_C_COD_CUSTO_GERENC3	CHAR(6 BYTE);
  vATUAL_C_COD_CUSTO_GERENC4	CHAR(6 BYTE);
  vATUAL_C_COD_CUSTO_GERENC5	CHAR(6 BYTE);
  vATUAL_C_COD_CUSTO_GERENC6	CHAR(6 BYTE);
  vATUAL_C_DT_ULT_ALT_GER	DATE;
  vATUAL_C_SALARIO_PAGTO	CHAR(1 BYTE);
  vATUAL_C_COD_CARGO_PAGTO	CHAR(15 BYTE);
  vATUAL_C_NIVEL_CARGO_PAGTO	CHAR(8 BYTE);
  vATUAL_C_COD_CARGO_EFETIVO	CHAR(15 BYTE);
  vATUAL_C_NIVEL_CARGO_EFETIV	CHAR(8 BYTE);
  vATUAL_C_DT_ULT_CARGO_EFET	DATE;
  vATUAL_C_COD_CARGO_COMISS	CHAR(15 BYTE);
  vATUAL_C_NIVEL_CARGO_COMISS	CHAR(8 BYTE);
  vATUAL_C_DT_ULT_CARGO_COM	DATE;
  vATUAL_C_COD_CARGO_AMPAR	CHAR(15 BYTE);
  vATUAL_C_NIVEL_CARGO_AMPAR	CHAR(8 BYTE);
  vATUAL_C_DT_ULT_CARGO_AMPAR	DATE;
  vATUAL_C_CODIGO_FUNCAO	CHAR(15 BYTE);
  vATUAL_C_DT_ULT_FUNCAO	DATE;
  vATUAL_C_CODIGO_ESCALA	CHAR(4 BYTE);
  vATUAL_C_DT_ULT_ESCALA	DATE;

  Vativo CHAR(1 BYTE);
  VCONTRATOCERTO	CHAR(15 BYTE);
  VPESSOACERTO CHAR(15 BYTE);
  VTIPOCONTRATOCERTO CHAR(4 BYTE);
  VCOD_EMPRESACERTO CHAR(4 BYTE);
  VLOTACAO CHAR(50 BYTE);

BEGIN
-- criar uma sequencia para o log
-- CREATE SEQUENCE  "ARTERH_PBH"."ID_SEQ_LOG_DESIG"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE CYCLE ;
/*
execute immediate 'alter session flush shared_pool';
execute immediate 'alter session set session_cached_cursors=10000000' ;
*/
DECLARE 


PROCEDURE GRAVA_LOG(TIPO_DML char ,CODIGO_LOG varchar2) AS
BEGIN
SELECT ID_SEQ_LOG_DESIG.NEXTVAL INTO vID_LOG FROM dual;
-- CREATE SEQUENCE  "ARTERH_PBH"."ID_SEQ_LOG_DESIG"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE CYCLE ;
dbms_output.put_line( 'ENTROU');

     INSERT INTO SMARH_INT_DESIGNACAO_LOG (ID_LOG, ID_DESIG, LOGIN_USUARIO, DATA_LOG, DADOS_DA_DESIGNACAO, TIPO_DML, CODIGO_LOG)
     values 
     (vID_LOG,  p_ID, p_login, SYSDATE, 'CODIGO_EMPRESA: '|| p_CODIGO_EMPRESA || ' TIPO_CONTRATO: '|| p_TIPO_CONTRATO  || ' CODIGO_CONTRATO: '||   p_CODIGO_CONTRATO  || ' DATA_INICO_DESIG : '||   p_DATA_INICIO_DESVIO  || ' DATA_FIM_DESIG: '||   p_DATA_FIM_DESVIO,
     TIPO_DML,CODIGO_LOG);
    -- COMMIT;
/*
CREATE SEQUENCE ID_SEQ_LOG_DESIG
  MINVALUE 1
  MAXVALUE 999999999999999999999999999
  START WITH 1
  INCREMENT BY 1
  CACHE 20;

create table SMARH_INT_DESIGNACAO_LOG
(
  ID_LOG          NUMBER not null,
  ID_DESIG        NUMBER(10,0) NOT NULL,
  LOGIN_USUARIO	VARCHAR2(40 BYTE) NOT NULL, 
  DATA_LOG	TIMESTAMP(6), 
  DADOS_DA_DESIGNACAO   VARCHAR2(4000) NOT NULL,
  TIPO_DML            VARCHAR2(40 BYTE) not null,-- SE INSERT, DELETE, UPDATE
  CODIGO_LOG  VARCHAR2(4000 BYTE) NOT NULL -- INSTRUÇAO EXECUTADA
)
*/
END;
/*
FUNCTION FN_RECUPERA_COMANDO_SESSAO RETURN VARCHAR2 AS 
Vsql VARCHAR2(2000 BYTE)

;

BEGIN

GRANT SELECT ON V$SQL TO arterh_pbh;
GRANT SELECT ANY DICTIONARY TO arterh_pbh;


select SQL_FULLTEXT, SQL_ID into VSQL , VSQLID
from v$sql 
where 
ADDRESS = (
SELECT
  PREV_SQL_ADDR
FROM V$SESSION sess
JOIN V$SQL SQL
ON (sess.SQL_ADDRESS      = sql.ADDRESS
AND sess.SQL_HASH_VALUE   = sql.HASH_VALUE
AND sess.SQL_CHILD_NUMBER = sql.CHILD_NUMBER)
WHERE sess.status         = 'ACTIVE'
and  sess.audsid=USERENV('SESSIONID'));
*/
/*
select SQL.SQL_FULLTEXT, SQL.SQL_ID into VSQL , VSQLID
FROM V$SESSION sess
JOIN V$SQL SQL
ON (sess.SQL_ADDRESS      = sql.ADDRESS
AND sess.SQL_HASH_VALUE   = sql.HASH_VALUE
AND sess.SQL_CHILD_NUMBER = sql.CHILD_NUMBER)
WHERE sess.status         = 'ACTIVE'
and  sess.audsid=USERENV('SESSIONID');

   dbms_output.put_line( VSQLID );
     dbms_output.put_line( VSQL );

      select wm_concat( name ) , wm_concat(value_string ) into v1, v2 from V$SQL_BIND_CAPTURE  where SQL_ID = VSQLID ;

       dbms_output.put_line( v1 );
        dbms_output.put_line( v2 );

return VSQL;

END;
*/
--FUNÇÃO PARA VERIFICAR A OPÇÃO DO SERVIDOR
FUNCTION VALIDA_OPÇAO_SERVIDOR ( vOPCAO_SERVIDOR NUMBER ) RETURN char  IS
  vNOVA_OPCAO_SERVIDOR char;
BEGIN
IF (vOPCAO_SERVIDOR = 25 or vOPCAO_SERVIDOR = 223 or vOPCAO_SERVIDOR = 213 ) THEN
  vNOVA_OPCAO_SERVIDOR := 'C';
ELSE vNOVA_OPCAO_SERVIDOR := 'E';
END IF;
RETURN vNOVA_OPCAO_SERVIDOR;
END;

FUNCTION VALIDA_DADO_TABELA (  vPROCURAR VARCHAR, vNOME_TABELA VARCHAR ) RETURN VARCHAR IS
  vDADO VARCHAR(1000);
BEGIN
  SELECT instr(upper(vNOME_TABELA),vPROCURAR) INTO vDADO FROM DUAL;
  RETURN vDADO;
END;

FUNCTION VERIFICA_MOTIVO_DESVIO (vMOTIVO_DESVIO NUMBER, vVALIDA_NOME_TABELA varchar ) RETURN NUMBER IS
vMOTIVO NUMBER;
BEGIN
  IF (vMOTIVO_DESVIO = '0001') then
    IF ( vVALIDA_NOME_TABELA = 'RHPLCS_ALT_CARGO') THEN
      vMOTIVO := '0002';
    ELSIF ( vVALIDA_NOME_TABELA = 'RHPLCS_ALT_FUNCAO') THEN
      vMOTIVO := '0001';
    ELSIF ( vVALIDA_NOME_TABELA = 'RHCGED_TRANSFERENC') THEN
      IF( vCODIGO_FUNCAO = '000000000002000' OR vCODIGO_FUNCAO = '000000000002014' ) THEN
      vMOTIVO := '0124';
      ELSE
      vMOTIVO := '0047';
      END IF;
    ELSIF ( vVALIDA_NOME_TABELA = 'RHPONT_ALT_ESCALA') THEN
      vMOTIVO := '0005' ; 
    END IF;
  ELSIF (vMOTIVO_DESVIO = '0002') then
    IF ( vVALIDA_NOME_TABELA = 'RHPLCS_ALT_CARGO') THEN
      vMOTIVO := '0019';
    ELSIF ( vVALIDA_NOME_TABELA = 'RHPLCS_ALT_FUNCAO') THEN
      vMOTIVO := '0008';
    ELSIF ( vVALIDA_NOME_TABELA = 'RHCGED_TRANSFERENC') THEN
      IF( vCODIGO_FUNCAO = '000000000002000' OR vCODIGO_FUNCAO = '000000000002014' ) THEN
        vMOTIVO := '0124';
      ELSE
        vMOTIVO := '0042';
      END IF;
    ELSIF ( vVALIDA_NOME_TABELA = 'RHPONT_ALT_ESCALA') THEN
      vMOTIVO := '0004' ;
    END IF;
  END IF;
RETURN vMOTIVO;
END;

FUNCTION ATUALIZA_CONTRATO_DESIG(VNOME_TABELA_DESIG VARCHAR , P_ANO_MES_REFERENCIA DATE) RETURN  CHAR  As
BEGIN
   IF  ( ( ( VALIDA_DADO_TABELA ( 'RHPLCS_ALT_CARGO', VNOME_TABELA_DESIG) ) > 0 ) OR ( vCODIGO_FUNCAO is not null AND vOLD_C_COD_CARGO_COMISS <> '000000000000000' )) THEN
             -- UPDATE NOS CAMPOS DE CARGO DO CONTRATO 
                  IF (vPAGAMENTO_SERVIDOR = 'E') THEN
                      UPDATE RHPESS_CONTRATO SET 
                      LOGIN_USUARIO = 	p_login , DT_ULT_ALTER_USUA = SYSDATE, 
                      COD_CARGO_PAGTO = NVL(vOLD_C_COD_CARGO_EFETIVO,'000000000000000'), 
                      NIVEL_CARGO_PAGTO = case when ( vOLD_C_COD_CARGO_EFETIVO is null or vOLD_C_COD_CARGO_EFETIVO = '000000000000000' ) then null else vOLD_C_NIVEL_CARGO_EFETIV end,
                      COD_CARGO_COMISS = case when vCODIGO_FUNCAO is not null then '000000000000000' else (case when vCOD_CARGO_COMIS is not null then vCOD_CARGO_COMIS else vOLD_C_COD_CARGO_COMISS end) end,
                      NIVEL_CARGO_COMISS = case when vCODIGO_FUNCAO is not null then null else (case when vCOD_CARGO_COMIS is not null then '00000' else vOLD_C_NIVEL_CARGO_COMISS end) end,
                      DT_ULT_CARGO_COM = p_DATA_INICIO_DESVIO,
                      SALARIO_PAGTO = vPAGAMENTO_SERVIDOR 
                      WHERE CODIGO_EMPRESA = P_CODIGO_EMPRESA AND TIPO_CONTRATO  = p_TIPO_CONTRATO AND CODIGO =  p_CODIGO_CONTRATO AND ANO_MES_REFERENCIA =TRUNC(P_ANO_MES_REFERENCIA);

                      vcomando := 'UPDATE RHPESS_CONTRATO SET LOGIN_USUARIO = '||p_login||' , DT_ULT_ALTER_USUA = SYSDATE, COD_CARGO_PAGTO = NVL('||vOLD_C_COD_CARGO_EFETIVO||',''000000000000000''), NIVEL_CARGO_PAGTO = case when ( '||vOLD_C_COD_CARGO_EFETIVO||' is null or '||vOLD_C_COD_CARGO_EFETIVO||' = ''000000000000000'' ) then null else '||vOLD_C_NIVEL_CARGO_EFETIV||' end, COD_CARGO_COMISS = case when '||vCODIGO_FUNCAO||' is not null then ''000000000000000'' else (case when '||vCOD_CARGO_COMIS||' is not null then '||vCOD_CARGO_COMIS||' else '||vOLD_C_COD_CARGO_COMISS||' end) end, NIVEL_CARGO_COMISS = case when '||vCODIGO_FUNCAO||' is not null then null else (case when '||vCOD_CARGO_COMIS||' is not null then ''00000'' else '||vOLD_C_NIVEL_CARGO_COMISS||' end) end, DT_ULT_CARGO_COM = '||p_DATA_INICIO_DESVIO||', SALARIO_PAGTO = '||vPAGAMENTO_SERVIDOR||' WHERE CODIGO_EMPRESA = '||P_CODIGO_EMPRESA||' AND TIPO_CONTRATO  = '||p_TIPO_CONTRATO||' AND CODIGO =  '||p_CODIGO_CONTRATO||' AND ANO_MES_REFERENCIA =TRUNC('||P_ANO_MES_REFERENCIA||');';
                      GRAVA_LOG('UPDATE',vcomando);

                  ELSIF (vPAGAMENTO_SERVIDOR = 'C') THEN
                      UPDATE RHPESS_CONTRATO SET 
                      LOGIN_USUARIO = 	p_login , DT_ULT_ALTER_USUA = SYSDATE, 
                      COD_CARGO_PAGTO = NVL(vCOD_CARGO_COMIS,'000000000000000'),
                      NIVEL_CARGO_PAGTO = case when (vCOD_CARGO_COMIS = vOLD_C_COD_CARGO_COMISS) then NVL(vOLD_C_NIVEL_CARGO_COMISS,'00000')  when (vCOD_CARGO_COMIS = '000000000000000' or vCOD_CARGO_COMIS is null) then null else NVL(vNIVEL_CARGO_COMISS,'00000')end, 
                      COD_CARGO_COMISS = case when vCODIGO_FUNCAO is not null then '000000000000000' else (case when vCOD_CARGO_COMIS is not null then vCOD_CARGO_COMIS else vOLD_C_COD_CARGO_COMISS end) end,
                      NIVEL_CARGO_COMISS = case when vCODIGO_FUNCAO is not null then null else (case when vCOD_CARGO_COMIS is not null then '00000' else vOLD_C_NIVEL_CARGO_COMISS end) end,
                      DT_ULT_CARGO_COM = p_DATA_INICIO_DESVIO,
                      SALARIO_PAGTO = vPAGAMENTO_SERVIDOR 
                      WHERE CODIGO_EMPRESA = P_CODIGO_EMPRESA AND TIPO_CONTRATO  = p_TIPO_CONTRATO AND CODIGO =  p_CODIGO_CONTRATO AND ANO_MES_REFERENCIA = TRUNC(P_ANO_MES_REFERENCIA);

                      vcomando := 'UPDATE RHPESS_CONTRATO SET LOGIN_USUARIO = '||p_login||' , DT_ULT_ALTER_USUA = SYSDATE, COD_CARGO_PAGTO = NVL('||vCOD_CARGO_COMIS||',''000000000000000''),NIVEL_CARGO_PAGTO = case when ('||vCOD_CARGO_COMIS||' = '||vOLD_C_COD_CARGO_COMISS||') then NVL('||vOLD_C_NIVEL_CARGO_COMISS||',''00000'')  when ('||vCOD_CARGO_COMIS||' = ''000000000000000'' or '||vCOD_CARGO_COMIS||' is null) then null else NVL('||vNIVEL_CARGO_COMISS||',''00000'')end, COD_CARGO_COMISS = case when '||vCODIGO_FUNCAO||' is not null then ''000000000000000'' else (case when '||vCOD_CARGO_COMIS||' is not null then '||vCOD_CARGO_COMIS||' else '||vOLD_C_COD_CARGO_COMISS||' end) end, NIVEL_CARGO_COMISS = case when '||vCODIGO_FUNCAO||' is not null then null else (case when '||vCOD_CARGO_COMIS||' is not null then ''00000'' else '||vOLD_C_NIVEL_CARGO_COMISS||' end) end, DT_ULT_CARGO_COM = '||p_DATA_INICIO_DESVIO||', SALARIO_PAGTO = '||vPAGAMENTO_SERVIDOR||' WHERE CODIGO_EMPRESA = '||P_CODIGO_EMPRESA||' AND TIPO_CONTRATO  = '||p_TIPO_CONTRATO||' AND CODIGO = '||p_CODIGO_CONTRATO||' AND ANO_MES_REFERENCIA = TRUNC('||P_ANO_MES_REFERENCIA||');';     
                      GRAVA_LOG('UPDATE',vcomando);

                  END IF;

   END IF;
    IF  ( ( ( VALIDA_DADO_TABELA ( 'RHCGED_TRANSFERENC', VNOME_TABELA_DESIG) ) > 0 ) 
    /*
      and 
      (( ( vCOD_UNIDADE1 <> vOLD_COD_UNIDADE_ATUAL1 and vCOD_UNIDADE1 is not null ) or (vCOD_UNIDADE1 is not null and vOLD_COD_UNIDADE_ATUAL1 is null ) )  or ( ( vCOD_UNIDADE2 <> vOLD_COD_UNIDADE_ATUAL2 and vCOD_UNIDADE2 is not null ) or (vCOD_UNIDADE2 is not null and vOLD_COD_UNIDADE_ATUAL2 is null ) )
      or ( ( vCOD_UNIDADE3 <> vOLD_COD_UNIDADE_ATUAL3 and vCOD_UNIDADE3 is not null ) or (vCOD_UNIDADE3 is not null and vOLD_COD_UNIDADE_ATUAL3 is null ) )  or ( ( vCOD_UNIDADE5 <> vOLD_COD_UNIDADE_ATUAL4 and vCOD_UNIDADE4 is not null ) or (vCOD_UNIDADE4 is not null and vOLD_COD_UNIDADE_ATUAL4 is null ) )
      or ( ( vCOD_UNIDADE5 <> vOLD_COD_UNIDADE_ATUAL5 and vCOD_UNIDADE5 is not null ) or (vCOD_UNIDADE5 is not null and vOLD_COD_UNIDADE_ATUAL5 is null ) )  or ( ( vCOD_UNIDADE6 <> vOLD_COD_UNIDADE_ATUAL6 and vCOD_UNIDADE6 is not null ) or (vCOD_UNIDADE6 is not null and vOLD_COD_UNIDADE_ATUAL6 is null ) )
      )
    */
    ) THEN

          IF (vE_CESSAO >= 1) THEN
             -- UPDATE NOS CAMPOS DE LOCAL DO CONTRATO
                UPDATE RHPESS_CONTRATO SET
                LOGIN_USUARIO = 	p_login , DT_ULT_ALTER_USUA = SYSDATE, 
                COD_UNIDADE1 = vCOD_UNIDADE1, COD_UNIDADE2 = vCOD_UNIDADE2, COD_UNIDADE3 = vCOD_UNIDADE3,  COD_UNIDADE4 = vCOD_UNIDADE4, COD_UNIDADE5 = vCOD_UNIDADE5, COD_UNIDADE6 = vCOD_UNIDADE6,DT_ULT_ALT_UNID = p_DATA_INICIO_DESVIO, 
                COD_CUSTO_GERENC1 = vCOD_UNIDADE1, COD_CUSTO_GERENC2 = vCOD_UNIDADE2, COD_CUSTO_GERENC3 = vCOD_UNIDADE3, COD_CUSTO_GERENC4 = vCOD_UNIDADE4, COD_CUSTO_GERENC5 = vCOD_UNIDADE5, COD_CUSTO_GERENC6 = vCOD_UNIDADE6,  DT_ULT_ALT_GER = p_DATA_INICIO_DESVIO 
                WHERE CODIGO_EMPRESA = P_CODIGO_EMPRESA AND TIPO_CONTRATO  = p_TIPO_CONTRATO AND CODIGO =  p_CODIGO_CONTRATO AND  ANO_MES_REFERENCIA =  TRUNC(P_ANO_MES_REFERENCIA);

            vcomando :=  'UPDATE RHPESS_CONTRATO SET LOGIN_USUARIO = '||p_login||' , DT_ULT_ALTER_USUA = SYSDATE, COD_UNIDADE1 = '||vCOD_UNIDADE1||' , COD_UNIDADE2 = '||vCOD_UNIDADE2||' , COD_UNIDADE3 = '||vCOD_UNIDADE3||' ,  COD_UNIDADE4 = '||vCOD_UNIDADE4||' ,COD_UNIDADE5 = '||vCOD_UNIDADE5||' , COD_UNIDADE6 = '|| vCOD_UNIDADE6||' , DT_ULT_ALT_UNID = '||p_DATA_INICIO_DESVIO||' , COD_CUSTO_GERENC1 = '||vCOD_UNIDADE1||' , COD_CUSTO_GERENC2 = '||vCOD_UNIDADE2||' , COD_CUSTO_GERENC3 = '||vCOD_UNIDADE3||' , COD_CUSTO_GERENC4 = '||vCOD_UNIDADE4||' ,  COD_CUSTO_GERENC5 = '||vCOD_UNIDADE5||' , COD_CUSTO_GERENC6 = '||vCOD_UNIDADE6||' ,  DT_ULT_ALT_GER = '||p_DATA_INICIO_DESVIO||'  WHERE CODIGO_EMPRESA = '||P_CODIGO_EMPRESA||'  AND TIPO_CONTRATO  = '||p_TIPO_CONTRATO||'  AND CODIGO = '||p_CODIGO_CONTRATO||'  AND  ANO_MES_REFERENCIA =  TRUNC('||P_ANO_MES_REFERENCIA||' );';
            GRAVA_LOG('UPDATE',vcomando);

         ELSE 
          -- UPDATE NOS CAMPOS DE LOCAL DO CONTRATO
                UPDATE RHPESS_CONTRATO SET
                LOGIN_USUARIO = 	p_login , DT_ULT_ALTER_USUA = SYSDATE, 
                COD_LOCAL1 = vCOD_UNIDADE1, COD_LOCAL2 = vCOD_UNIDADE2, COD_LOCAL3 = vCOD_UNIDADE3, COD_LOCAL4 = vCOD_UNIDADE4, COD_LOCAL5 = vCOD_UNIDADE5, COD_LOCAL6 = vCOD_UNIDADE6, DT_ULT_ALT_LOC = p_DATA_INICIO_DESVIO, 
                COD_UNIDADE1 = vCOD_UNIDADE1, COD_UNIDADE2 = vCOD_UNIDADE2, COD_UNIDADE3 = vCOD_UNIDADE3,  COD_UNIDADE4 = vCOD_UNIDADE4, COD_UNIDADE5 = vCOD_UNIDADE5, COD_UNIDADE6 = vCOD_UNIDADE6,DT_ULT_ALT_UNID = p_DATA_INICIO_DESVIO,        
                COD_CUSTO_GERENC1 = vCOD_UNIDADE1, COD_CUSTO_GERENC2 = vCOD_UNIDADE2, COD_CUSTO_GERENC3 = vCOD_UNIDADE3, COD_CUSTO_GERENC4 = vCOD_UNIDADE4, COD_CUSTO_GERENC5 = vCOD_UNIDADE5, COD_CUSTO_GERENC6 = vCOD_UNIDADE6,  DT_ULT_ALT_GER = p_DATA_INICIO_DESVIO 
                WHERE CODIGO_EMPRESA = P_CODIGO_EMPRESA AND TIPO_CONTRATO  = p_TIPO_CONTRATO AND CODIGO =  p_CODIGO_CONTRATO AND  ANO_MES_REFERENCIA =  TRUNC(P_ANO_MES_REFERENCIA);

            vcomando :=  'UPDATE RHPESS_CONTRATO SET LOGIN_USUARIO = '||p_login||' , DT_ULT_ALTER_USUA = SYSDATE, COD_LOCAL1 = '||vCOD_UNIDADE1||' , COD_LOCAL2 = '||vCOD_UNIDADE2||' , COD_LOCAL3 = '||vCOD_UNIDADE3||' , COD_LOCAL4 = '||vCOD_UNIDADE4||' , COD_LOCAL5 = '||vCOD_UNIDADE5||' , COD_LOCAL6 = '||vCOD_UNIDADE6||' , DT_ULT_ALT_LOC = '||p_DATA_INICIO_DESVIO||', COD_UNIDADE1 = '||vCOD_UNIDADE1||' , COD_UNIDADE2 = '||vCOD_UNIDADE2||' , COD_UNIDADE3 = '||vCOD_UNIDADE3||' ,  COD_UNIDADE4 = '||vCOD_UNIDADE4||' , COD_UNIDADE5 = '||vCOD_UNIDADE5||' , COD_UNIDADE6 = '|| vCOD_UNIDADE6||' , DT_ULT_ALT_UNID = '||p_DATA_INICIO_DESVIO||' , COD_CUSTO_GERENC1 = '||vCOD_UNIDADE1||' , COD_CUSTO_GERENC2 = '||vCOD_UNIDADE2||' , COD_CUSTO_GERENC3 = '||vCOD_UNIDADE3||' , COD_CUSTO_GERENC4 = '||vCOD_UNIDADE4||' , COD_CUSTO_GERENC5 = '||vCOD_UNIDADE5||' , COD_CUSTO_GERENC6 = '||vCOD_UNIDADE6||' ,  DT_ULT_ALT_GER = '||p_DATA_INICIO_DESVIO||' WHERE CODIGO_EMPRESA = '||P_CODIGO_EMPRESA||'  AND TIPO_CONTRATO  = '||p_TIPO_CONTRATO||'  AND CODIGO = '||p_CODIGO_CONTRATO||'  AND  ANO_MES_REFERENCIA =  TRUNC('||P_ANO_MES_REFERENCIA||' );';
            GRAVA_LOG('UPDATE',vcomando);

         END IF;

    END IF;
    IF  ( VALIDA_DADO_TABELA ( 'RHPONT_ALT_ESCALA', VNOME_TABELA_DESIG) ) > 0 THEN
             -- UPDATE NOS CAMPOS DE ESCALA DO CONTRATO
                UPDATE RHPESS_CONTRATO SET 
                LOGIN_USUARIO = 	p_login , DT_ULT_ALTER_USUA = SYSDATE, 
                CODIGO_ESCALA = VCODIGO_ESCALA, DT_ULT_ESCALA = p_DATA_INICIO_DESVIO
                WHERE CODIGO_EMPRESA = P_CODIGO_EMPRESA AND TIPO_CONTRATO  = p_TIPO_CONTRATO AND CODIGO =  p_CODIGO_CONTRATO AND  ANO_MES_REFERENCIA =  TRUNC(P_ANO_MES_REFERENCIA);

     vcomando := 'UPDATE RHPESS_CONTRATO SET LOGIN_USUARIO = '||p_login||' , DT_ULT_ALTER_USUA = SYSDATE, CODIGO_ESCALA = '||VCODIGO_ESCALA||', DT_ULT_ESCALA = '||p_DATA_INICIO_DESVIO||' WHERE CODIGO_EMPRESA = '||P_CODIGO_EMPRESA||' AND TIPO_CONTRATO  = '||p_TIPO_CONTRATO||' AND CODIGO =  '||p_CODIGO_CONTRATO||' AND  ANO_MES_REFERENCIA =  TRUNC('||P_ANO_MES_REFERENCIA||'); ';
    GRAVA_LOG('UPDATE',vcomando);

    END IF;
    IF  ( VALIDA_DADO_TABELA ( 'RHPLCS_ALT_FUNCAO', VNOME_TABELA_DESIG) ) > 0  THEN
             -- UPDATE NOS CAMPOS DE FUNÇÃO DO CONTRATO
                UPDATE RHPESS_CONTRATO SET 
                LOGIN_USUARIO = 	p_login , DT_ULT_ALTER_USUA = SYSDATE, 
                CODIGO_FUNCAO = VCODIGO_FUNCAO, DT_ULT_FUNCAO = p_DATA_INICIO_DESVIO
                WHERE CODIGO_EMPRESA = P_CODIGO_EMPRESA AND TIPO_CONTRATO  = p_TIPO_CONTRATO AND CODIGO =  p_CODIGO_CONTRATO AND ANO_MES_REFERENCIA =  TRUNC(P_ANO_MES_REFERENCIA);

     vcomando := 'UPDATE RHPESS_CONTRATO SET LOGIN_USUARIO = '||p_login||' , DT_ULT_ALTER_USUA = SYSDATE, CODIGO_FUNCAO = '||VCODIGO_FUNCAO||', DT_ULT_FUNCAO = '||p_DATA_INICIO_DESVIO||' WHERE CODIGO_EMPRESA = '||P_CODIGO_EMPRESA||' AND TIPO_CONTRATO  = '||p_TIPO_CONTRATO||' AND CODIGO =  '||p_CODIGO_CONTRATO||' AND ANO_MES_REFERENCIA =  TRUNC('||P_ANO_MES_REFERENCIA||');';         
    GRAVA_LOG('UPDATE',vcomando);


  END IF;
RETURN NULL;
END;

-- ATUALIZA CONTRATO VOLTANDO AS INFORMAÇÕES ANTES DA DESIGNAÇÃO
FUNCTION ATUALIZA_CONTRATO_VOLTA(VNOME_TABELA_DESIG VARCHAR , P_ANO_MES_REFERENCIA DATE) RETURN  CHAR  As
BEGIN
-- P_ACAO ( ENCERRAR OU EXCLUIR )
-- SE O CONTRATO ATUAL ESTÁ DIFERENTE DOS DADOS DA DESIGNAÇÃO SALVOS, DEVE MANTER OS DADOS DO CONTRATO ATUAL
            IF  ( VALIDA_DADO_TABELA ( 'RHPLCS_ALT_CARGO', VNOME_TABELA_DESIG) ) > 0 THEN
             -- UPDATE NOS CAMPOS DE CARGO DO CONTRATO
                IF (vPAGAMENTO_SERVIDOR = 'E') THEN
              -- P_ACAO ( ENCERRAR OU EXCLUIR )  
                  UPDATE RHPESS_CONTRATO SET
                  LOGIN_USUARIO = P_LOGIN, DT_ULT_ALTER_USUA = SYSDATE, 
                  COD_CARGO_PAGTO = NVL((CASE WHEN vATUAL_C_COD_CARGO_PAGTO = vOLD_C_COD_CARGO_EFETIVO THEN vOLD_C_COD_CARGO_PAGTO ELSE vATUAL_C_COD_CARGO_PAGTO END),'000000000000000'), 
                  NIVEL_CARGO_PAGTO = (CASE WHEN vATUAL_C_NIVEL_CARGO_PAGTO = vOLD_C_NIVEL_CARGO_EFETIV THEN vOLD_C_NIVEL_CARGO_PAGTO ELSE vATUAL_C_NIVEL_CARGO_PAGTO END), 
                  COD_CARGO_COMISS = NVL((CASE WHEN vATUAL_C_COD_CARGO_COMISS = vCOD_CARGO_COMIS THEN vOLD_C_COD_CARGO_COMISS ELSE vATUAL_C_COD_CARGO_COMISS END),'000000000000000'),
                  NIVEL_CARGO_COMISS = (CASE WHEN vATUAL_C_NIVEL_CARGO_COMISS =  NVL(vNIVEL_CARGO_COMISS,'00000') THEN vOLD_C_NIVEL_CARGO_COMISS ELSE vATUAL_C_NIVEL_CARGO_COMISS END),
                  DT_ULT_CARGO_COM = CASE WHEN ( vATUAL_C_DT_ULT_CARGO_COM = p_DATA_INICIO_DESVIO ) THEN ( CASE WHEN ( p_ACAO = 'EXCLUIR' OR p_ACAO = 'U-EXCLUIR')  THEN vOLD_C_DT_ULT_CARGO_COM ELSE p_DATA_FIM_DESVIO + 1 END ) ELSE vATUAL_C_DT_ULT_CARGO_COM END,                 
                  SALARIO_PAGTO = (CASE WHEN vATUAL_C_SALARIO_PAGTO = vPAGAMENTO_SERVIDOR THEN vOLD_C_SALARIO_PAGTO ELSE vATUAL_C_SALARIO_PAGTO END)
                  WHERE CODIGO_EMPRESA = P_CODIGO_EMPRESA AND TIPO_CONTRATO  = p_TIPO_CONTRATO AND CODIGO =  p_CODIGO_CONTRATO AND ANO_MES_REFERENCIA =   TRUNC(P_ANO_MES_REFERENCIA);

    vcomando := 'UPDATE RHPESS_CONTRATO SET LOGIN_USUARIO = '||P_LOGIN||', DT_ULT_ALTER_USUA = SYSDATE, COD_CARGO_PAGTO = NVL((CASE WHEN '||vATUAL_C_COD_CARGO_PAGTO||' = '||vOLD_C_COD_CARGO_EFETIVO||' THEN '||vOLD_C_COD_CARGO_PAGTO||' ELSE '||vATUAL_C_COD_CARGO_PAGTO||' END),''000000000000000''), NIVEL_CARGO_PAGTO = (CASE WHEN '||vATUAL_C_NIVEL_CARGO_PAGTO||' = '||vOLD_C_NIVEL_CARGO_EFETIV||' THEN '||vOLD_C_NIVEL_CARGO_PAGTO||' ELSE '||vATUAL_C_NIVEL_CARGO_PAGTO||' END), COD_CARGO_COMISS = NVL((CASE WHEN '||vATUAL_C_COD_CARGO_COMISS||' = '||vCOD_CARGO_COMIS||' THEN '||vOLD_C_COD_CARGO_COMISS||' ELSE '||vATUAL_C_COD_CARGO_COMISS||' END),''000000000000000''),NIVEL_CARGO_COMISS = (CASE WHEN '||vATUAL_C_NIVEL_CARGO_COMISS||' =  NVL('||vNIVEL_CARGO_COMISS||',''00000'') THEN '||vOLD_C_NIVEL_CARGO_COMISS||' ELSE '||vATUAL_C_NIVEL_CARGO_COMISS||' END),
    DT_ULT_CARGO_COM = CASE WHEN ( '||vATUAL_C_DT_ULT_CARGO_COM||' = '||p_DATA_INICIO_DESVIO||' ) THEN ( CASE WHEN ( '||p_ACAO||' = ''EXCLUIR'' OR '||p_ACAO||' = ''U-EXCLUIR'')  THEN '||vOLD_C_DT_ULT_CARGO_COM||' ELSE '||p_DATA_FIM_DESVIO||' + 1 END ) ELSE '||vATUAL_C_DT_ULT_CARGO_COM||' END, SALARIO_PAGTO = (CASE WHEN '||vATUAL_C_SALARIO_PAGTO||' = '||vPAGAMENTO_SERVIDOR||' THEN '||vOLD_C_SALARIO_PAGTO||' ELSE '||vATUAL_C_SALARIO_PAGTO||' END) WHERE CODIGO_EMPRESA = '||P_CODIGO_EMPRESA||' AND TIPO_CONTRATO  = '||p_TIPO_CONTRATO||' AND CODIGO =  '||p_CODIGO_CONTRATO||' AND ANO_MES_REFERENCIA =   TRUNC('||P_ANO_MES_REFERENCIA||');';        
    GRAVA_LOG('UPDATE',vcomando);

              ELSIF (vPAGAMENTO_SERVIDOR = 'C') THEN
                UPDATE RHPESS_CONTRATO SET
                  LOGIN_USUARIO = P_LOGIN , DT_ULT_ALTER_USUA = SYSDATE, 
                  COD_CARGO_PAGTO = NVL((CASE WHEN vATUAL_C_COD_CARGO_PAGTO = vCOD_CARGO_COMIS THEN vOLD_C_COD_CARGO_PAGTO ELSE vATUAL_C_COD_CARGO_PAGTO END),'000000000000000'), 
                  NIVEL_CARGO_PAGTO = (CASE WHEN vATUAL_C_NIVEL_CARGO_PAGTO =  NVL(vNIVEL_CARGO_COMISS,'00000') THEN vOLD_C_NIVEL_CARGO_PAGTO ELSE vATUAL_C_NIVEL_CARGO_PAGTO END), 
                  COD_CARGO_COMISS = case when vCODIGO_FUNCAO is not null AND ( vOLD_C_COD_CARGO_COMISS IS NOT NULL AND vOLD_C_COD_CARGO_COMISS <> '000000000000000' ) THEN (CASE WHEN vATUAL_C_COD_CARGO_COMISS = '000000000000000' THEN vOLD_C_COD_CARGO_COMISS ELSE vATUAL_C_COD_CARGO_COMISS END) END,
                  NIVEL_CARGO_COMISS = CASE WHEN vCODIGO_FUNCAO is not null AND ( vOLD_C_COD_CARGO_COMISS IS NOT NULL AND vOLD_C_COD_CARGO_COMISS <> '000000000000000' ) THEN (CASE WHEN vATUAL_C_NIVEL_CARGO_COMISS IS NULL THEN vOLD_C_NIVEL_CARGO_COMISS ELSE vATUAL_C_NIVEL_CARGO_COMISS END) END,
                  DT_ULT_CARGO_COM = CASE WHEN ( vATUAL_C_DT_ULT_CARGO_COM = p_DATA_INICIO_DESVIO ) THEN ( CASE WHEN ( p_ACAO = 'EXCLUIR' OR p_ACAO = 'U-EXCLUIR')  THEN vOLD_C_DT_ULT_CARGO_COM ELSE p_DATA_FIM_DESVIO + 1 END ) ELSE vATUAL_C_DT_ULT_CARGO_COM END,                 
                  SALARIO_PAGTO = (CASE WHEN vATUAL_C_SALARIO_PAGTO = vPAGAMENTO_SERVIDOR THEN vOLD_C_SALARIO_PAGTO ELSE vATUAL_C_SALARIO_PAGTO END)
                  WHERE CODIGO_EMPRESA = P_CODIGO_EMPRESA AND TIPO_CONTRATO  = p_TIPO_CONTRATO AND CODIGO =  p_CODIGO_CONTRATO AND ANO_MES_REFERENCIA =   TRUNC(P_ANO_MES_REFERENCIA);

   vcomando := 'UPDATE RHPESS_CONTRATO SET LOGIN_USUARIO = '||P_LOGIN||' , DT_ULT_ALTER_USUA = SYSDATE, COD_CARGO_PAGTO = NVL((CASE WHEN '||vATUAL_C_COD_CARGO_PAGTO||' = '||vCOD_CARGO_COMIS||' THEN '||vOLD_C_COD_CARGO_PAGTO||' ELSE '||vATUAL_C_COD_CARGO_PAGTO||' END),''000000000000000''), NIVEL_CARGO_PAGTO = (CASE WHEN '||vATUAL_C_NIVEL_CARGO_PAGTO||' =  NVL('||vNIVEL_CARGO_COMISS||',''00000'') THEN '||vOLD_C_NIVEL_CARGO_PAGTO||' ELSE '||vATUAL_C_NIVEL_CARGO_PAGTO||' END), COD_CARGO_COMISS = case when '||vCODIGO_FUNCAO||' is not null AND ( '||vOLD_C_COD_CARGO_COMISS||' IS NOT NULL AND '||vOLD_C_COD_CARGO_COMISS||' <> ''000000000000000'' ) THEN (CASE WHEN '||vATUAL_C_COD_CARGO_COMISS||' = ''000000000000000'' THEN '||vOLD_C_COD_CARGO_COMISS||' ELSE '||vATUAL_C_COD_CARGO_COMISS||' END) END,
    NIVEL_CARGO_COMISS = CASE WHEN '||vCODIGO_FUNCAO||' is not null AND ( '||vOLD_C_COD_CARGO_COMISS||' IS NOT NULL AND '||vOLD_C_COD_CARGO_COMISS||' <> ''000000000000000'' ) THEN (CASE WHEN '||vATUAL_C_NIVEL_CARGO_COMISS||' IS NULL THEN '||vOLD_C_NIVEL_CARGO_COMISS||' ELSE '||vATUAL_C_NIVEL_CARGO_COMISS||' END) END, DT_ULT_CARGO_COM = CASE WHEN ( '||vATUAL_C_DT_ULT_CARGO_COM||' = '||p_DATA_INICIO_DESVIO||' ) THEN ( CASE WHEN ( '||p_ACAO||'= ''EXCLUIR'' OR '||p_ACAO||' = ''U-EXCLUIR'')  THEN '||vOLD_C_DT_ULT_CARGO_COM||' ELSE '||p_DATA_FIM_DESVIO||' + 1 END ) ELSE '||vATUAL_C_DT_ULT_CARGO_COM||' END, SALARIO_PAGTO = (CASE WHEN '||vATUAL_C_SALARIO_PAGTO||' = '||vPAGAMENTO_SERVIDOR||' THEN '||vOLD_C_SALARIO_PAGTO||' ELSE '||vATUAL_C_SALARIO_PAGTO||' END) WHERE CODIGO_EMPRESA = '||P_CODIGO_EMPRESA||' AND TIPO_CONTRATO  = '||p_TIPO_CONTRATO||' AND CODIGO =  '||p_CODIGO_CONTRATO||' AND ANO_MES_REFERENCIA =   TRUNC('||P_ANO_MES_REFERENCIA||');';
   GRAVA_LOG('UPDATE',vcomando);
              END IF;
            END IF;



   IF  ( VALIDA_DADO_TABELA ( 'RHCGED_TRANSFERENC', VNOME_TABELA_DESIG) ) > 0 THEN
             --UPDATE NOS CAMPOS DE LOCAL DO CONTRATO 

          IF (vE_CESSAO >= 1) THEN
                UPDATE RHPESS_CONTRATO SET 
                LOGIN_USUARIO = P_LOGIN , DT_ULT_ALTER_USUA = SYSDATE, 
                COD_UNIDADE1 = (CASE WHEN vATUAL_C_COD_UNIDADE1 = vCOD_UNIDADE1 THEN vOLD_C_COD_UNIDADE1 ELSE vATUAL_C_COD_UNIDADE1 END),
                COD_UNIDADE2 = (CASE WHEN vATUAL_C_COD_UNIDADE2 = vCOD_UNIDADE2 THEN vOLD_C_COD_UNIDADE2 ELSE vATUAL_C_COD_UNIDADE2 END), 
                COD_UNIDADE3 = (CASE WHEN vATUAL_C_COD_UNIDADE3 = vCOD_UNIDADE3 THEN vOLD_C_COD_UNIDADE3 ELSE vATUAL_C_COD_UNIDADE3 END), 
                COD_UNIDADE4 = (CASE WHEN vATUAL_C_COD_UNIDADE4 = vCOD_UNIDADE4 THEN vOLD_C_COD_UNIDADE4 ELSE vATUAL_C_COD_UNIDADE4 END),
                COD_UNIDADE5 = (CASE WHEN vATUAL_C_COD_UNIDADE5 = vCOD_UNIDADE5 THEN vOLD_C_COD_UNIDADE5 ELSE vATUAL_C_COD_UNIDADE5 END), 
                COD_UNIDADE6 = (CASE WHEN vATUAL_C_COD_UNIDADE6 = vCOD_UNIDADE6 THEN vOLD_C_COD_UNIDADE6 ELSE vATUAL_C_COD_UNIDADE6 END),
                DT_ULT_ALT_UNID = (CASE WHEN ( vATUAL_C_DT_ULT_ALT_UNID = p_DATA_INICIO_DESVIO ) THEN ( CASE WHEN ( p_ACAO = 'EXCLUIR' OR p_ACAO = 'U-EXCLUIR')  THEN vOLD_C_DT_ULT_ALT_UNID ELSE p_DATA_FIM_DESVIO + 1 END )ELSE vATUAL_C_DT_ULT_ALT_UNID END),
                COD_CUSTO_GERENC1 = (CASE WHEN vATUAL_C_COD_CUSTO_GERENC1 = vCOD_UNIDADE1 THEN vOLD_C_COD_CUSTO_GERENC1 ELSE vATUAL_C_COD_CUSTO_GERENC1 END),
                COD_CUSTO_GERENC2 = (CASE WHEN vATUAL_C_COD_CUSTO_GERENC2 = vCOD_UNIDADE2 THEN vOLD_C_COD_CUSTO_GERENC2 ELSE vATUAL_C_COD_CUSTO_GERENC2 END),
                COD_CUSTO_GERENC3 = (CASE WHEN vATUAL_C_COD_CUSTO_GERENC3 = vCOD_UNIDADE3 THEN vOLD_C_COD_CUSTO_GERENC3 ELSE vATUAL_C_COD_CUSTO_GERENC3 END),
                COD_CUSTO_GERENC4 = (CASE WHEN vATUAL_C_COD_CUSTO_GERENC4 = vCOD_UNIDADE4 THEN vOLD_C_COD_CUSTO_GERENC4 ELSE vATUAL_C_COD_CUSTO_GERENC4 END), 
                COD_CUSTO_GERENC5 = (CASE WHEN vATUAL_C_COD_CUSTO_GERENC5 = vCOD_UNIDADE5 THEN vOLD_C_COD_CUSTO_GERENC5 ELSE vATUAL_C_COD_CUSTO_GERENC5 END),
                COD_CUSTO_GERENC6 = (CASE WHEN vATUAL_C_COD_CUSTO_GERENC6 = vCOD_UNIDADE6 THEN vOLD_C_COD_CUSTO_GERENC6 ELSE vATUAL_C_COD_CUSTO_GERENC6 END), 
                DT_ULT_ALT_GER = (CASE WHEN ( vATUAL_C_DT_ULT_ALT_GER = p_DATA_INICIO_DESVIO )THEN ( CASE WHEN ( p_ACAO = 'EXCLUIR' OR p_ACAO = 'U-EXCLUIR')  THEN vOLD_C_DT_ULT_ALT_GER ELSE p_DATA_FIM_DESVIO + 1 END ) ELSE vATUAL_C_DT_ULT_ALT_GER END)              
                WHERE CODIGO_EMPRESA = P_CODIGO_EMPRESA AND TIPO_CONTRATO  = p_TIPO_CONTRATO AND CODIGO =  p_CODIGO_CONTRATO AND ANO_MES_REFERENCIA =  TRUNC(P_ANO_MES_REFERENCIA);

              vcomando :=  'UPDATE RHPESS_CONTRATO SET LOGIN_USUARIO = '||P_LOGIN||' , DT_ULT_ALTER_USUA = SYSDATE, 
                  COD_UNIDADE1 = (CASE WHEN '||vATUAL_C_COD_UNIDADE1||' = '||vCOD_UNIDADE1||' THEN '||vOLD_C_COD_UNIDADE1||' ELSE '||vATUAL_C_COD_UNIDADE1||' END),COD_UNIDADE2 = (CASE WHEN '||vATUAL_C_COD_UNIDADE2||' = '||vCOD_UNIDADE2||' THEN '||vOLD_C_COD_UNIDADE2||' ELSE '||vATUAL_C_COD_UNIDADE2||' END), COD_UNIDADE3 = (CASE WHEN '||vATUAL_C_COD_UNIDADE3||' = '||vCOD_UNIDADE3||' THEN '||vOLD_C_COD_UNIDADE3||' ELSE '||vATUAL_C_COD_UNIDADE3||' END), COD_UNIDADE4 = (CASE WHEN '||vATUAL_C_COD_UNIDADE4||' = '||vCOD_UNIDADE4||' THEN '||vOLD_C_COD_UNIDADE4||' ELSE '||vATUAL_C_COD_UNIDADE4||' END),COD_UNIDADE5 = (CASE WHEN '||vATUAL_C_COD_UNIDADE5||' = '||vCOD_UNIDADE5||' THEN '||vOLD_C_COD_UNIDADE5||' ELSE '||vATUAL_C_COD_UNIDADE5||' END), COD_UNIDADE6 = (CASE WHEN '||vATUAL_C_COD_UNIDADE6||' = '||vCOD_UNIDADE6||' THEN '||vOLD_C_COD_UNIDADE6||' ELSE '||vATUAL_C_COD_UNIDADE6||' END), DT_ULT_ALT_UNID = (CASE WHEN ( '||vATUAL_C_DT_ULT_ALT_UNID||' = '||p_DATA_INICIO_DESVIO||' ) THEN ( CASE WHEN ( '||p_ACAO||' = ''EXCLUIR'' OR '||p_ACAO||' = ''U-EXCLUIR'')  THEN '||vOLD_C_DT_ULT_ALT_UNID||' ELSE '||p_DATA_FIM_DESVIO||' + 1 END )ELSE '||vATUAL_C_DT_ULT_ALT_UNID||' END),
                  COD_CUSTO_GERENC1 = (CASE WHEN '||vATUAL_C_COD_CUSTO_GERENC1||' = '||vCOD_UNIDADE1||' THEN '||vOLD_C_COD_CUSTO_GERENC1||' ELSE '||vATUAL_C_COD_CUSTO_GERENC1||' END),COD_CUSTO_GERENC2 = (CASE WHEN '||vATUAL_C_COD_CUSTO_GERENC2||' = '||vCOD_UNIDADE2||' THEN '||vOLD_C_COD_CUSTO_GERENC2||' ELSE '||vATUAL_C_COD_CUSTO_GERENC2||' END),COD_CUSTO_GERENC3 = (CASE WHEN '||vATUAL_C_COD_CUSTO_GERENC3||' = '||vCOD_UNIDADE3||' THEN '||vOLD_C_COD_CUSTO_GERENC3||' ELSE '||vATUAL_C_COD_CUSTO_GERENC3||' END),COD_CUSTO_GERENC4 = (CASE WHEN '||vATUAL_C_COD_CUSTO_GERENC4||' = '||vCOD_UNIDADE4||' THEN '||vOLD_C_COD_CUSTO_GERENC4||' ELSE '||vATUAL_C_COD_CUSTO_GERENC4||' END), COD_CUSTO_GERENC5 = (CASE WHEN '||vATUAL_C_COD_CUSTO_GERENC5||' = '||vCOD_UNIDADE5||' THEN '||vOLD_C_COD_CUSTO_GERENC5||' ELSE '||vATUAL_C_COD_CUSTO_GERENC5||' END),COD_CUSTO_GERENC6 = (CASE WHEN '||vATUAL_C_COD_CUSTO_GERENC6||' = '||vCOD_UNIDADE6||' THEN '||vOLD_C_COD_CUSTO_GERENC6||' ELSE '||vATUAL_C_COD_CUSTO_GERENC6||' END), DT_ULT_ALT_GER = (CASE WHEN ( '||vATUAL_C_DT_ULT_ALT_GER||' = '||p_DATA_INICIO_DESVIO||' )THEN ( CASE WHEN ( '||p_ACAO||' = ''EXCLUIR'' OR '||p_ACAO||' = ''U-EXCLUIR'')  THEN '||vOLD_C_DT_ULT_ALT_GER||' ELSE '||p_DATA_FIM_DESVIO||' + 1 END ) ELSE '||vATUAL_C_DT_ULT_ALT_GER||' END)              WHERE CODIGO_EMPRESA = '||P_CODIGO_EMPRESA||' AND TIPO_CONTRATO  = '||p_TIPO_CONTRATO||' AND CODIGO =  '||p_CODIGO_CONTRATO||' AND ANO_MES_REFERENCIA =  TRUNC('||P_ANO_MES_REFERENCIA||');';            
              GRAVA_LOG('UPDATE',vcomando);  


         ELSE 
          UPDATE RHPESS_CONTRATO SET 
                LOGIN_USUARIO = P_LOGIN , DT_ULT_ALTER_USUA = SYSDATE, 
                COD_LOCAL1 = (CASE WHEN vATUAL_C_COD_LOCAL1 = vCOD_UNIDADE1 THEN vOLD_C_COD_LOCAL1 ELSE vATUAL_C_COD_LOCAL1 END), 
                COD_LOCAL2 =  (CASE WHEN vATUAL_C_COD_LOCAL2 = vCOD_UNIDADE2 THEN vOLD_C_COD_LOCAL2 ELSE vATUAL_C_COD_LOCAL2 END), 
                COD_LOCAL3 = (CASE WHEN vATUAL_C_COD_LOCAL3 = vCOD_UNIDADE3 THEN vOLD_C_COD_LOCAL3 ELSE vATUAL_C_COD_LOCAL3 END), 
                COD_LOCAL4 = (CASE WHEN vATUAL_C_COD_LOCAL4 = vCOD_UNIDADE4 THEN vOLD_C_COD_LOCAL4 ELSE vATUAL_C_COD_LOCAL4 END), 
                COD_LOCAL5 = (CASE WHEN vATUAL_C_COD_LOCAL5 = vCOD_UNIDADE5 THEN vOLD_C_COD_LOCAL5 ELSE vATUAL_C_COD_LOCAL5 END), 
                COD_LOCAL6 = (CASE WHEN vATUAL_C_COD_LOCAL6 = vCOD_UNIDADE6 THEN vOLD_C_COD_LOCAL6 ELSE vATUAL_C_COD_LOCAL6 END),  
                DT_ULT_ALT_LOC = (CASE WHEN ( vATUAL_C_DT_ULT_ALT_LOC = p_DATA_INICIO_DESVIO )THEN ( CASE WHEN ( p_ACAO = 'EXCLUIR' OR p_ACAO = 'U-EXCLUIR')  THEN vOLD_C_DT_ULT_ALT_LOC ELSE p_DATA_FIM_DESVIO + 1 END ) ELSE vATUAL_C_DT_ULT_ALT_LOC END),
                COD_UNIDADE1 = (CASE WHEN vATUAL_C_COD_UNIDADE1 = vCOD_UNIDADE1 THEN vOLD_C_COD_UNIDADE1 ELSE vATUAL_C_COD_UNIDADE1 END),
                COD_UNIDADE2 = (CASE WHEN vATUAL_C_COD_UNIDADE2 = vCOD_UNIDADE2 THEN vOLD_C_COD_UNIDADE2 ELSE vATUAL_C_COD_UNIDADE2 END), 
                COD_UNIDADE3 = (CASE WHEN vATUAL_C_COD_UNIDADE3 = vCOD_UNIDADE3 THEN vOLD_C_COD_UNIDADE3 ELSE vATUAL_C_COD_UNIDADE3 END), 
                COD_UNIDADE4 = (CASE WHEN vATUAL_C_COD_UNIDADE4 = vCOD_UNIDADE4 THEN vOLD_C_COD_UNIDADE4 ELSE vATUAL_C_COD_UNIDADE4 END),
                COD_UNIDADE5 = (CASE WHEN vATUAL_C_COD_UNIDADE5 = vCOD_UNIDADE5 THEN vOLD_C_COD_UNIDADE5 ELSE vATUAL_C_COD_UNIDADE5 END), 
                COD_UNIDADE6 = (CASE WHEN vATUAL_C_COD_UNIDADE6 = vCOD_UNIDADE6 THEN vOLD_C_COD_UNIDADE6 ELSE vATUAL_C_COD_UNIDADE6 END),
                DT_ULT_ALT_UNID = (CASE WHEN ( vATUAL_C_DT_ULT_ALT_UNID = p_DATA_INICIO_DESVIO ) THEN ( CASE WHEN ( p_ACAO = 'EXCLUIR' OR p_ACAO = 'U-EXCLUIR')  THEN vOLD_C_DT_ULT_ALT_UNID ELSE p_DATA_FIM_DESVIO + 1 END )ELSE vATUAL_C_DT_ULT_ALT_UNID END),
                COD_CUSTO_GERENC1 = (CASE WHEN vATUAL_C_COD_CUSTO_GERENC1 = vCOD_UNIDADE1 THEN vOLD_C_COD_CUSTO_GERENC1 ELSE vATUAL_C_COD_CUSTO_GERENC1 END),
                COD_CUSTO_GERENC2 = (CASE WHEN vATUAL_C_COD_CUSTO_GERENC2 = vCOD_UNIDADE2 THEN vOLD_C_COD_CUSTO_GERENC2 ELSE vATUAL_C_COD_CUSTO_GERENC2 END),
                COD_CUSTO_GERENC3 = (CASE WHEN vATUAL_C_COD_CUSTO_GERENC3 = vCOD_UNIDADE3 THEN vOLD_C_COD_CUSTO_GERENC3 ELSE vATUAL_C_COD_CUSTO_GERENC3 END),
                COD_CUSTO_GERENC4 = (CASE WHEN vATUAL_C_COD_CUSTO_GERENC4 = vCOD_UNIDADE4 THEN vOLD_C_COD_CUSTO_GERENC4 ELSE vATUAL_C_COD_CUSTO_GERENC4 END), 
                COD_CUSTO_GERENC5 = (CASE WHEN vATUAL_C_COD_CUSTO_GERENC5 = vCOD_UNIDADE5 THEN vOLD_C_COD_CUSTO_GERENC5 ELSE vATUAL_C_COD_CUSTO_GERENC5 END),
                COD_CUSTO_GERENC6 = (CASE WHEN vATUAL_C_COD_CUSTO_GERENC6 = vCOD_UNIDADE6 THEN vOLD_C_COD_CUSTO_GERENC6 ELSE vATUAL_C_COD_CUSTO_GERENC6 END), 
                DT_ULT_ALT_GER = (CASE WHEN ( vATUAL_C_DT_ULT_ALT_GER = p_DATA_INICIO_DESVIO )THEN ( CASE WHEN ( p_ACAO = 'EXCLUIR' OR p_ACAO = 'U-EXCLUIR')  THEN vOLD_C_DT_ULT_ALT_GER ELSE p_DATA_FIM_DESVIO + 1 END ) ELSE vATUAL_C_DT_ULT_ALT_GER END)              
                WHERE CODIGO_EMPRESA = P_CODIGO_EMPRESA AND TIPO_CONTRATO  = p_TIPO_CONTRATO AND CODIGO =  p_CODIGO_CONTRATO AND ANO_MES_REFERENCIA =  TRUNC(P_ANO_MES_REFERENCIA);

      vcomando :=  'UPDATE RHPESS_CONTRATO SET LOGIN_USUARIO = '||P_LOGIN||' , DT_ULT_ALTER_USUA = SYSDATE, 
          COD_LOCAL1 = (CASE WHEN '||vATUAL_C_COD_LOCAL1||' = '||vCOD_UNIDADE1||' THEN '||vOLD_C_COD_LOCAL1||' ELSE '||vATUAL_C_COD_LOCAL1||' END), COD_LOCAL2 =  (CASE WHEN '||vATUAL_C_COD_LOCAL2||' = '||vCOD_UNIDADE2||' THEN '||vOLD_C_COD_LOCAL2||' ELSE '||vATUAL_C_COD_LOCAL2||' END), COD_LOCAL3 = (CASE WHEN '||vATUAL_C_COD_LOCAL3||' = '||vCOD_UNIDADE3||' THEN '||vOLD_C_COD_LOCAL3||'ELSE '||vATUAL_C_COD_LOCAL3||' END), COD_LOCAL4 = (CASE WHEN '||vATUAL_C_COD_LOCAL4||' = '||vCOD_UNIDADE4||' THEN '||vOLD_C_COD_LOCAL4||' ELSE '||vATUAL_C_COD_LOCAL4||' END), COD_LOCAL5 = (CASE WHEN '||vATUAL_C_COD_LOCAL5||' = '||vCOD_UNIDADE5||' THEN '||vOLD_C_COD_LOCAL5||' ELSE '||vATUAL_C_COD_LOCAL5||' END), COD_LOCAL6 = (CASE WHEN '||vATUAL_C_COD_LOCAL6||' = '||vCOD_UNIDADE6||' THEN '||vOLD_C_COD_LOCAL6||' ELSE '||vATUAL_C_COD_LOCAL6||' END),  DT_ULT_ALT_LOC = (CASE WHEN ( '||vATUAL_C_DT_ULT_ALT_LOC||' = '||p_DATA_INICIO_DESVIO||' )THEN ( CASE WHEN ( '||p_ACAO||' = ''EXCLUIR'' OR '||p_ACAO||' = ''U-EXCLUIR'')  THEN '||vOLD_C_DT_ULT_ALT_LOC||' ELSE '||p_DATA_FIM_DESVIO||' + 1 END ) ELSE '||vATUAL_C_DT_ULT_ALT_LOC||' END),
          COD_UNIDADE1 = (CASE WHEN '||vATUAL_C_COD_UNIDADE1||' = '||vCOD_UNIDADE1||' THEN '||vOLD_C_COD_UNIDADE1||' ELSE '||vATUAL_C_COD_UNIDADE1||' END),COD_UNIDADE2 = (CASE WHEN '||vATUAL_C_COD_UNIDADE2||' = '||vCOD_UNIDADE2||' THEN '||vOLD_C_COD_UNIDADE2||' ELSE '||vATUAL_C_COD_UNIDADE2||' END), COD_UNIDADE3 = (CASE WHEN '||vATUAL_C_COD_UNIDADE3||' = '||vCOD_UNIDADE3||' THEN '||vOLD_C_COD_UNIDADE3||' ELSE '||vATUAL_C_COD_UNIDADE3||' END), COD_UNIDADE4 = (CASE WHEN '||vATUAL_C_COD_UNIDADE4||' = '||vCOD_UNIDADE4||' THEN '||vOLD_C_COD_UNIDADE4||' ELSE '||vATUAL_C_COD_UNIDADE4||' END),COD_UNIDADE5 = (CASE WHEN '||vATUAL_C_COD_UNIDADE5||' = '||vCOD_UNIDADE5||' THEN '||vOLD_C_COD_UNIDADE5||' ELSE '||vATUAL_C_COD_UNIDADE5||' END), COD_UNIDADE6 = (CASE WHEN '||vATUAL_C_COD_UNIDADE6||' = '||vCOD_UNIDADE6||' THEN '||vOLD_C_COD_UNIDADE6||' ELSE '||vATUAL_C_COD_UNIDADE6||' END), DT_ULT_ALT_UNID = (CASE WHEN ( '||vATUAL_C_DT_ULT_ALT_UNID||' = '||p_DATA_INICIO_DESVIO||' ) THEN ( CASE WHEN ( '||p_ACAO||' = ''EXCLUIR'' OR '||p_ACAO||' = ''U-EXCLUIR'')  THEN '||vOLD_C_DT_ULT_ALT_UNID||' ELSE '||p_DATA_FIM_DESVIO||' + 1 END )ELSE '||vATUAL_C_DT_ULT_ALT_UNID||' END),
          COD_CUSTO_GERENC1 = (CASE WHEN '||vATUAL_C_COD_CUSTO_GERENC1||' = '||vCOD_UNIDADE1||' THEN '||vOLD_C_COD_CUSTO_GERENC1||' ELSE '||vATUAL_C_COD_CUSTO_GERENC1||' END),COD_CUSTO_GERENC2 = (CASE WHEN '||vATUAL_C_COD_CUSTO_GERENC2||' = '||vCOD_UNIDADE2||' THEN '||vOLD_C_COD_CUSTO_GERENC2||' ELSE '||vATUAL_C_COD_CUSTO_GERENC2||' END),COD_CUSTO_GERENC3 = (CASE WHEN '||vATUAL_C_COD_CUSTO_GERENC3||' = '||vCOD_UNIDADE3||' THEN '||vOLD_C_COD_CUSTO_GERENC3||' ELSE '||vATUAL_C_COD_CUSTO_GERENC3||' END),COD_CUSTO_GERENC4 = (CASE WHEN '||vATUAL_C_COD_CUSTO_GERENC4||' = '||vCOD_UNIDADE4||' THEN '||vOLD_C_COD_CUSTO_GERENC4||' ELSE '||vATUAL_C_COD_CUSTO_GERENC4||' END), COD_CUSTO_GERENC5 = (CASE WHEN '||vATUAL_C_COD_CUSTO_GERENC5||' = '||vCOD_UNIDADE5||' THEN '||vOLD_C_COD_CUSTO_GERENC5||' ELSE '||vATUAL_C_COD_CUSTO_GERENC5||' END),COD_CUSTO_GERENC6 = (CASE WHEN '||vATUAL_C_COD_CUSTO_GERENC6||' = '||vCOD_UNIDADE6||' THEN '||vOLD_C_COD_CUSTO_GERENC6||' ELSE '||vATUAL_C_COD_CUSTO_GERENC6||' END), DT_ULT_ALT_GER = (CASE WHEN ( '||vATUAL_C_DT_ULT_ALT_GER||' = '||p_DATA_INICIO_DESVIO||' )THEN ( CASE WHEN ( '||p_ACAO||' = ''EXCLUIR'' OR '||p_ACAO||' = ''U-EXCLUIR'')  THEN '||vOLD_C_DT_ULT_ALT_GER||' ELSE '||p_DATA_FIM_DESVIO||' + 1 END ) ELSE '||vATUAL_C_DT_ULT_ALT_GER||' END)              WHERE CODIGO_EMPRESA = '||P_CODIGO_EMPRESA||' AND TIPO_CONTRATO  = '||p_TIPO_CONTRATO||' AND CODIGO =  '||p_CODIGO_CONTRATO||' AND ANO_MES_REFERENCIA =  TRUNC('||P_ANO_MES_REFERENCIA||');';            
      GRAVA_LOG('UPDATE',vcomando);  
          END IF;

          END IF;
           IF  ( VALIDA_DADO_TABELA ( 'RHPONT_ALT_ESCALA', VNOME_TABELA_DESIG) ) > 0 THEN
             -- UPDATE NOS CAMPOS DE ESCALA DO CONTRATO
                UPDATE RHPESS_CONTRATO SET 
                LOGIN_USUARIO = P_LOGIN , DT_ULT_ALTER_USUA = SYSDATE, 
                CODIGO_ESCALA = (CASE WHEN vATUAL_C_CODIGO_ESCALA = vCODIGO_ESCALA THEN vOLD_C_CODIGO_ESCALA ELSE vATUAL_C_CODIGO_ESCALA END), 
                DT_ULT_ESCALA = (CASE WHEN (vATUAL_C_DT_ULT_ESCALA = p_DATA_INICIO_DESVIO ) THEN ( CASE WHEN ( p_ACAO = 'EXCLUIR' OR p_ACAO = 'U-EXCLUIR')  THEN vOLD_C_DT_ULT_ESCALA ELSE p_DATA_FIM_DESVIO + 1 END )ELSE vATUAL_C_DT_ULT_ESCALA END)
                WHERE CODIGO_EMPRESA = P_CODIGO_EMPRESA AND TIPO_CONTRATO  = p_TIPO_CONTRATO AND CODIGO =  p_CODIGO_CONTRATO AND  ANO_MES_REFERENCIA =  TRUNC(P_ANO_MES_REFERENCIA);

      vcomando := 'UPDATE RHPESS_CONTRATO SET LOGIN_USUARIO = '||P_LOGIN||' , DT_ULT_ALTER_USUA = SYSDATE, CODIGO_ESCALA = (CASE WHEN '||vATUAL_C_CODIGO_ESCALA||' = '||vCODIGO_ESCALA||' THEN '||vOLD_C_CODIGO_ESCALA||' ELSE '||vATUAL_C_CODIGO_ESCALA||' END), DT_ULT_ESCALA = (CASE WHEN ('||vATUAL_C_DT_ULT_ESCALA||' = '||p_DATA_INICIO_DESVIO||' ) THEN ( CASE WHEN ( '||p_ACAO||' = ''EXCLUIR'' OR '||p_ACAO||' = ''U-EXCLUIR'')  THEN '||vOLD_C_DT_ULT_ESCALA||' ELSE '||p_DATA_FIM_DESVIO||' + 1 END )ELSE '||vATUAL_C_DT_ULT_ESCALA||' END) WHERE CODIGO_EMPRESA = '||P_CODIGO_EMPRESA||' AND TIPO_CONTRATO  = '||p_TIPO_CONTRATO||' AND CODIGO =  '||p_CODIGO_CONTRATO||' AND  ANO_MES_REFERENCIA =  TRUNC('||P_ANO_MES_REFERENCIA||');';
      GRAVA_LOG('UPDATE',vcomando);      
            END IF;


            IF  ( VALIDA_DADO_TABELA ( 'RHPLCS_ALT_FUNCAO', VNOME_TABELA_DESIG) ) > 0  THEN
             -- UPDATE NOS CAMPOS DE FUNÇÃO DO CONTRATO
                UPDATE RHPESS_CONTRATO SET 
                LOGIN_USUARIO = P_LOGIN , DT_ULT_ALTER_USUA = SYSDATE,
                CODIGO_FUNCAO = NULL /*(CASE WHEN vATUAL_C_CODIGO_FUNCAO = vCODIGO_FUNCAO THEN vOLD_C_CODIGO_FUNCAO ELSE vATUAL_C_CODIGO_FUNCAO END) */,
                DT_ULT_FUNCAO = NULL /*(CASE WHEN ( vATUAL_C_DT_ULT_FUNCAO = p_DATA_INICIO_DESVIO )THEN ( CASE WHEN ( p_ACAO = 'EXCLUIR' OR p_ACAO = 'U-EXCLUIR')  THEN vOLD_C_DT_ULT_FUNCAO ELSE p_DATA_FIM_DESVIO + 1 END )ELSE vATUAL_C_DT_ULT_FUNCAO END)*/
                WHERE CODIGO_EMPRESA = P_CODIGO_EMPRESA AND TIPO_CONTRATO  = p_TIPO_CONTRATO AND CODIGO =  p_CODIGO_CONTRATO AND  ANO_MES_REFERENCIA =  TRUNC(P_ANO_MES_REFERENCIA);

           vcomando := 'UPDATE RHPESS_CONTRATO SET LOGIN_USUARIO = '||P_LOGIN||' , DT_ULT_ALTER_USUA = SYSDATE,CODIGO_FUNCAO = (CASE WHEN '||vATUAL_C_CODIGO_FUNCAO||' = '||vCODIGO_FUNCAO||' THEN '||vOLD_C_CODIGO_FUNCAO||' ELSE '||vATUAL_C_CODIGO_FUNCAO||' END), DT_ULT_FUNCAO = (CASE WHEN ( '||vATUAL_C_DT_ULT_FUNCAO||' = '||p_DATA_INICIO_DESVIO||' )THEN ( CASE WHEN ( '||p_ACAO||' = ''EXCLUIR'' OR '||p_ACAO||' = ''U-EXCLUIR'')  THEN '||vOLD_C_DT_ULT_FUNCAO||' ELSE '||p_DATA_FIM_DESVIO||' + 1 END )ELSE '||vATUAL_C_DT_ULT_FUNCAO||' END) WHERE CODIGO_EMPRESA = '||P_CODIGO_EMPRESA||' AND TIPO_CONTRATO  = '||p_TIPO_CONTRATO||' AND CODIGO = '||p_CODIGO_CONTRATO||' AND  ANO_MES_REFERENCIA =  TRUNC('||P_ANO_MES_REFERENCIA||');';
            GRAVA_LOG('UPDATE',vcomando);  
            END IF;

            RETURN NULL;
END;


FUNCTION BUSCA_GESTOR_SUPERIOR (LOTAC VARCHAR ) RETURN VARCHAR IS
  vDADO VARCHAR(1000);
begin
     select RHORGA_CUSTO_GEREN.CONTRATO_RESP || ';'|| RHORGA_CUSTO_GEREN.COD_PESSOA_RESP || ';'|| RHORGA_CUSTO_GEREN.COD_EMPRESA_PESS  || ';'|| RHORGA_CUSTO_GEREN.TIPO_CONT_RESP || ';'||  sup.superior  into vDADO
        from
        (
        select CASE WHEN RHORGA_CUSTO_GEREN.COD_CGERENC_SUP1 = '000002' THEN '000061' ELSE RHORGA_CUSTO_GEREN.COD_CGERENC_SUP1  END  || ';' || RHORGA_CUSTO_GEREN.COD_CGERENC_SUP2  || ';' || 
        RHORGA_CUSTO_GEREN.COD_CGERENC_SUP3 || ';' || RHORGA_CUSTO_GEREN.COD_CGERENC_SUP4  || ';' || 
        RHORGA_CUSTO_GEREN.COD_CGERENC_SUP5 || ';' || RHORGA_CUSTO_GEREN.COD_CGERENC_SUP6 as superior , RHORGA_CUSTO_GEREN.codigo_empresa,
        CONTRATO_RESP
        from RHORGA_CUSTO_GEREN
        where RHORGA_CUSTO_GEREN.COD_CGERENC1 = substr(LOTAC,1,6) AND RHORGA_CUSTO_GEREN.COD_CGERENC2 = substr(LOTAC,8,6)  
        AND RHORGA_CUSTO_GEREN.COD_CGERENC3 = substr(LOTAC,15,6)  AND RHORGA_CUSTO_GEREN.COD_CGERENC4 = substr(LOTAC,22,6) 
        AND RHORGA_CUSTO_GEREN.COD_CGERENC5 = substr(LOTAC,29,6) AND RHORGA_CUSTO_GEREN.COD_CGERENC6 = substr(LOTAC,36,6) 
        and RHORGA_CUSTO_GEREN.codigo_empresa = p_CODIGO_EMPRESA
        )  sup 
        inner join RHORGA_CUSTO_GEREN 
        on RHORGA_CUSTO_GEREN.COD_CGERENC1 = substr(sup.superior,1,6) AND RHORGA_CUSTO_GEREN.COD_CGERENC2 = substr(sup.superior,8,6)  AND RHORGA_CUSTO_GEREN.COD_CGERENC3  = substr(sup.superior,15,6) 
        AND RHORGA_CUSTO_GEREN.COD_CGERENC4  = substr(sup.superior,22,6)  AND RHORGA_CUSTO_GEREN.COD_CGERENC5 =  substr(sup.superior,29,6)  AND RHORGA_CUSTO_GEREN.COD_CGERENC6 =  substr(sup.superior,36,6) 
        and RHORGA_CUSTO_GEREN.codigo_empresa = sup.codigo_empresa; 

RETURN vDADO ;
end;

 ------------------------------------------------------------------------------------------------------------INICIO ----------------------------------------------------------------------------------------------------------------
BEGIN
--------------------------------- SELECTS ------------------------------
-----------------------------1° SELECT QUE BUSCA A DATA DO SISTEMA E ARMAZENA EM vDATA_SISTEMA



BEGIN
select DATA_DO_SISTEMA into vDATA_SISTEMA from RHPARM_P_SIST;
EXCEPTION
WHEN OTHERS THEN
raise_application_error (-20003,'NAO FOI POSSIVEL REALIZAR O PROCESSAMENTO DA DESIGNAÇÃO. ENTRE EM CONTATO COM A EQUIPE DE SUPORTE DA PBH.' || 'ENCONTRADO ERRO - '||SQLCODE||' -ERROR- '||SQLERRM || ' 1°S (DATA DO SISTEMA) ');

END;


---------------------------- 2° SELECT QUE BUSCA OS DADOS DA DEGINACAO DA TABELA SMARH_INT_DESIGNACAO
  BEGIN

   dbms_output.put_line( P_CODIGO_EMPRESA || p_TIPO_CONTRATO ||  p_CODIGO_CONTRATO  || p_ID  || p_ACAO );
  SELECT 
    LPAD(d.MOTIVO_DESVIO,4,0),d.OCORRENCIA,d.TIPO_DML,d.CODIGO_FUNCAO,d.NIVEL_CARGO_COMISS,d.NIVEL_CARGO_EFETIV,d.COD_CARGO_COMIS,d.COD_CARGO_EFET ,d.DATA_REGULARIZACAO,
    d.OPCAO_SERVIDOR ,
    CASE WHEN (  U.DATA_EXTINCAO IS NOT NULL AND U.C_LIVRE_DESCR23 IS NOT NULL )  THEN LPAD(SUBSTR(U.C_LIVRE_DESCR23,1,2),6,0)ELSE d.COD_UNIDADE1 END COD_UNIDADE1,
    CASE WHEN (  U.DATA_EXTINCAO IS NOT NULL AND U.C_LIVRE_DESCR23 IS NOT NULL )  THEN LPAD(SUBSTR(U.C_LIVRE_DESCR23,3,2),6,0)ELSE d.COD_UNIDADE2 END COD_UNIDADE2,
    CASE WHEN (  U.DATA_EXTINCAO IS NOT NULL AND U.C_LIVRE_DESCR23 IS NOT NULL )  THEN LPAD(SUBSTR(U.C_LIVRE_DESCR23,5,2),6,0) ELSE d.COD_UNIDADE3 END COD_UNIDADE3,  
    CASE WHEN (  U.DATA_EXTINCAO IS NOT NULL AND U.C_LIVRE_DESCR23 IS NOT NULL )  THEN LPAD(SUBSTR(U.C_LIVRE_DESCR23,7,2),6,0) ELSE d.COD_UNIDADE4 END COD_UNIDADE4,
    CASE WHEN (  U.DATA_EXTINCAO IS NOT NULL AND U.C_LIVRE_DESCR23 IS NOT NULL )  THEN LPAD(SUBSTR(U.C_LIVRE_DESCR23,9,2),6,0) ELSE d.COD_UNIDADE5 END COD_UNIDADE5,
    CASE WHEN (  U.DATA_EXTINCAO IS NOT NULL AND U.C_LIVRE_DESCR23 IS NOT NULL )  THEN LPAD(SUBSTR(U.C_LIVRE_DESCR23,11,3),6,0) ELSE d.COD_UNIDADE6 END COD_UNIDADE6,
    d.TIPO_AGRUP,d.COD_ESCALA,d.TIPO_CONTRATO_TITULAR,
    d.CONTRATO_TITULAR,d.COD_PESSOA,d.NOME_TABELA,d.DOCUMENTO_PUBLIC,
    D.e_gestor, D.DT_PUBLIC_DOM
 INTO
    vMOTIVO_DESVIO,vOCORRENCIA,vTIPO_DML,vCODIGO_FUNCAO,vNIVEL_CARGO_COMISS ,vNIVEL_CARGO_EFETIV ,vCOD_CARGO_COMIS ,vCOD_CARGO_EFET ,VDATA_REGULARIZACAO,
    vOPCAO_SERVIDOR,
    vCOD_UNIDADE1,vCOD_UNIDADE2,vCOD_UNIDADE3,vCOD_UNIDADE4,vCOD_UNIDADE5,vCOD_UNIDADE6,
    vTIPO_AGRUP,vCODIGO_ESCALA,
    VTIPO_CONTRATO_TITULAR,VCONTRATO_TITULAR,VCOD_PESSOA,VNOME_TABELA_DESIG,vDOCUMENTO_PUBLIC, vE_GESTOR, vDT_PUBLIC_DOM
  FROM SMARH_INT_DESIGNACAO d,
  rhorga_unidade u
  where u.cod_unidade1  (+)  = d.Cod_Unidade1  
  AND u.cod_unidade2  (+)  = d.Cod_Unidade2  
  AND u.cod_unidade3  (+)  = d.Cod_Unidade3  
  AND u.cod_unidade4  (+)  = d.Cod_Unidade4 
  AND u.cod_unidade5  (+)  = d.Cod_Unidade5  
  AND u.cod_unidade6  (+)  = d.Cod_Unidade6  
  AND u.codigo_empresa (+) = d.codigo_empresa  
  and d.CODIGO_EMPRESA = P_CODIGO_EMPRESA
  AND d.TIPO_CONTRATO    = p_TIPO_CONTRATO
  AND d.CODIGO_CONTRATO  = p_CODIGO_CONTRATO
  AND d.ID               = p_ID ;
      EXCEPTION
            WHEN OTHERS THEN
            raise_application_error (-20003,'NAO FOI POSSIVEL REALIZAR O PROCESSAMENTO DA DESIGNAÇÃO. ENTRE EM CONTATO COM A EQUIPE DE SUPORTE DA PBH.' || 'ENCONTRADO ERRO - '||SQLCODE||' -ERROR- '||SQLERRM || ' 2°S');
      END;


---------------------------- 3° SELECT QUE BUSCA SE O SUBSTITUTO SERÁ GESTOR OU NÃO E ARMAZENA EM VE_GESTOR_TITULAR
  BEGIN
   SELECT 
    B.E_GESTOR_TITULAR
  INTO
    VE_GESTOR_TITULAR
  FROM SMARH_INT_DESIGNACAO B
  WHERE B.CODIGO_EMPRESA = P_CODIGO_EMPRESA
  AND B.TIPO_CONTRATO    = p_TIPO_CONTRATO
  AND B.codigo_CONTRATO  = p_CODIGO_CONTRATO
  AND B.ID               = p_ID;

  EXCEPTION
            WHEN OTHERS THEN
            raise_application_error (-20003,'NAO FOI POSSIVEL REALIZAR O PROCESSAMENTO DA DESIGNAÇÃO. ENTRE EM CONTATO COM A EQUIPE DE SUPORTE DA PBH.' || 'ENCONTRADO ERRO - '||SQLCODE||' -ERROR- '||SQLERRM || ' 3°S');
  END;


---------------------------- 4° SELECT QUE BUSCA DADOS DA TABELA HISTORICA DA HISTÓRICAS (CARGO, FUNÇÃO, MOVIMENTAÇÃO E ESCALA) E VALIDA SE O CODIGO Da lotacao É VALIDO. CASO A LOTAÇÃO ESTEJA COM DATA DE EXTINÇAO ELE COLOCA O VALOR DO DE PARA!

-- se ocorrer algum erro aqui verifique os agrupadores da movimentacao(todos devem star preenchidos)

   BEGIN
   SELECT 
      B.NOME_TABELA,B.CODIGO_FUNCAO,B.CODIGO_HIST_FUNCAO,B.DATA_INICIO_FUNCAO,B.DT_FIM_TEMP_FUNC,B.DOCUMENTO_PUBLIC_FUNCAO,B.TEXTO_ASSOCIADO_FUNCAO, B.ID_LEI_FUNCAO,
      B.MOTIVO_ALTERACAO_CARGO, B.COD_CARGO_COMIS_AT,B.COD_CARGO_EFET_AT,B.NIV_CARGO_COMIS_AT,B.NIV_CARGO_EFET_AT,B.COD_CARGO_AMPAR_AT,B.NIV_CARGO_AMPAR_AT,B.SALARIO_PAGTO,B.DT_ALTER_CARGO,
      B.DT_FIM_TEMP_CARGO,B.OCORRENCIA,
      B.COD_MOVIMENTACAO,      
    CASE WHEN(  L.DATA_EXTINCAO IS NOT NULL AND L.C_LIVRE_DESCR23 IS NOT NULL ) THEN LPAD(SUBSTR(L.C_LIVRE_DESCR23,1,2),6,0) ELSE B.COD_LOTACAO_ATUAL1   END COD_LOTACAO_ATUAL1  ,
       CASE WHEN(  L.DATA_EXTINCAO IS NOT NULL AND L.C_LIVRE_DESCR23 IS NOT NULL ) THEN LPAD(SUBSTR(L.C_LIVRE_DESCR23,3,2),6,0) ELSE  B.COD_LOTACAO_ATUAL2   END COD_LOTACAO_ATUAL2 ,
       CASE WHEN(  L.DATA_EXTINCAO IS NOT NULL AND L.C_LIVRE_DESCR23 IS NOT NULL ) THEN LPAD(SUBSTR(L.C_LIVRE_DESCR23,5,2),6,0) ELSE  B.COD_LOTACAO_ATUAL3   END COD_LOTACAO_ATUAL3 ,
       CASE WHEN(  L.DATA_EXTINCAO IS NOT NULL AND L.C_LIVRE_DESCR23 IS NOT NULL ) THEN LPAD(SUBSTR(L.C_LIVRE_DESCR23,7,2),6,0) ELSE  B.COD_LOTACAO_ATUAL4   END COD_LOTACAO_ATUAL4 ,
       CASE WHEN(  L.DATA_EXTINCAO IS NOT NULL AND L.C_LIVRE_DESCR23 IS NOT NULL ) THEN LPAD(SUBSTR(L.C_LIVRE_DESCR23,9,2),6,0) ELSE  B.COD_LOTACAO_ATUAL5   END COD_LOTACAO_ATUAL5 ,
       CASE WHEN(  L.DATA_EXTINCAO IS NOT NULL AND L.C_LIVRE_DESCR23 IS NOT NULL ) THEN LPAD(SUBSTR(L.C_LIVRE_DESCR23,11,3),6,0) ELSE  B.COD_LOTACAO_ATUAL6   END COD_LOTACAO_ATUAL6 ,
     CASE WHEN (  U.DATA_EXTINCAO IS NOT NULL AND U.C_LIVRE_DESCR23 IS NOT NULL )  THEN LPAD(SUBSTR(U.C_LIVRE_DESCR23,1,2),6,0)ELSE  B.COD_UNIDADE_ATUAL1   END COD_UNIDADE_ATUAL ,
      CASE WHEN (  U.DATA_EXTINCAO IS NOT NULL AND U.C_LIVRE_DESCR23 IS NOT NULL )  THEN LPAD(SUBSTR(U.C_LIVRE_DESCR23,3,2),6,0)ELSE  B.COD_UNIDADE_ATUAL2   END COD_UNIDADE_ATUAL2 ,
      CASE WHEN (  U.DATA_EXTINCAO IS NOT NULL AND U.C_LIVRE_DESCR23 IS NOT NULL )  THEN LPAD(SUBSTR(U.C_LIVRE_DESCR23,5,2),6,0) ELSE  B.COD_UNIDADE_ATUAL3   END COD_UNIDADE_ATUAL3 ,  
     CASE WHEN (  U.DATA_EXTINCAO IS NOT NULL AND U.C_LIVRE_DESCR23 IS NOT NULL )  THEN LPAD(SUBSTR(U.C_LIVRE_DESCR23,7,2),6,0) ELSE  B.COD_UNIDADE_ATUAL4   END COD_UNIDADE_ATUAL4 ,
     CASE WHEN (  U.DATA_EXTINCAO IS NOT NULL AND U.C_LIVRE_DESCR23 IS NOT NULL )  THEN LPAD(SUBSTR(U.C_LIVRE_DESCR23,9,2),6,0) ELSE  B.COD_UNIDADE_ATUAL5   END COD_UNIDADE_ATUAL5 ,
    CASE WHEN (  U.DATA_EXTINCAO IS NOT NULL AND U.C_LIVRE_DESCR23 IS NOT NULL )  THEN LPAD(SUBSTR(U.C_LIVRE_DESCR23,11,3),6,0) ELSE  B.COD_UNIDADE_ATUAL6   END COD_UNIDADE_ATUAL6 ,
      CASE WHEN (  F.DATA_EXTINCAO IS NOT NULL AND F.C_LIVRE_DESCR23 IS NOT NULL )  THEN LPAD(SUBSTR(F.C_LIVRE_DESCR23,1,2),6,0)ELSE  B.COD_CCONTAB_ATUAL1   END COD_CCONTAB_ATUAL1 ,
      CASE WHEN (  F.DATA_EXTINCAO IS NOT NULL AND F.C_LIVRE_DESCR23 IS NOT NULL )  THEN LPAD(SUBSTR(F.C_LIVRE_DESCR23,3,2),6,0)ELSE  B.COD_CCONTAB_ATUAL2   END COD_CCONTAB_ATUAL2 ,
      CASE WHEN (  F.DATA_EXTINCAO IS NOT NULL AND F.C_LIVRE_DESCR23 IS NOT NULL )  THEN LPAD(SUBSTR(F.C_LIVRE_DESCR23,5,2),6,0)ELSE  B.COD_CCONTAB_ATUAL3   END COD_CCONTAB_ATUAL3 ,
     CASE WHEN (  F.DATA_EXTINCAO IS NOT NULL AND F.C_LIVRE_DESCR23 IS NOT NULL )  THEN LPAD(SUBSTR(F.C_LIVRE_DESCR23,7,2),6,0)ELSE  B.COD_CCONTAB_ATUAL4   END COD_CCONTAB_ATUAL4 ,  
      CASE WHEN (  F.DATA_EXTINCAO IS NOT NULL AND F.C_LIVRE_DESCR23 IS NOT NULL )  THEN LPAD(SUBSTR(F.C_LIVRE_DESCR23,9,2),6,0)ELSE  B.COD_CCONTAB_ATUAL5   END COD_CCONTAB_ATUAL5 ,
      CASE WHEN (  F.DATA_EXTINCAO IS NOT NULL AND F.C_LIVRE_DESCR23 IS NOT NULL )  THEN LPAD(SUBSTR(F.C_LIVRE_DESCR23,11,3),6,0)ELSE  B.COD_CCONTAB_ATUAL6   END COD_CCONTAB_ATUAL6 ,
      CASE WHEN (  G.DATA_EXTINCAO IS NOT NULL AND G.C_LIVRE_DESCR23 IS NOT NULL )  THEN LPAD(SUBSTR(G.C_LIVRE_DESCR23,1,2),6,0)ELSE  B.COD_CGERENC_ATUAL1   END COD_CGERENC_ATUAL1 ,
      CASE WHEN (  G.DATA_EXTINCAO IS NOT NULL AND G.C_LIVRE_DESCR23 IS NOT NULL )  THEN LPAD(SUBSTR(G.C_LIVRE_DESCR23,3,2),6,0)ELSE  B.COD_CGERENC_ATUAL2   END COD_CGERENC_ATUAL2 ,
     CASE WHEN (  G.DATA_EXTINCAO IS NOT NULL AND G.C_LIVRE_DESCR23 IS NOT NULL )  THEN LPAD(SUBSTR(G.C_LIVRE_DESCR23,5,2),6,0)ELSE  B.COD_CGERENC_ATUAL3   END COD_CGERENC_ATUAL3 ,
     CASE WHEN (  G.DATA_EXTINCAO IS NOT NULL AND G.C_LIVRE_DESCR23 IS NOT NULL )  THEN LPAD(SUBSTR(G.C_LIVRE_DESCR23,7,2),6,0)ELSE  B.COD_CGERENC_ATUAL4   END COD_CGERENC_ATUAL4 ,  
     CASE WHEN (  G.DATA_EXTINCAO IS NOT NULL AND G.C_LIVRE_DESCR23 IS NOT NULL )  THEN LPAD(SUBSTR(G.C_LIVRE_DESCR23,9,2),6,0)ELSE  B.COD_CGERENC_ATUAL5   END COD_CGERENC_ATUAL5 ,
      CASE WHEN (  G.DATA_EXTINCAO IS NOT NULL AND G.C_LIVRE_DESCR23 IS NOT NULL )  THEN LPAD(SUBSTR(G.C_LIVRE_DESCR23,11,3),6,0)ELSE  B.COD_CGERENC_ATUAL6   END COD_CGERENC_ATUAL6 ,
    B.DT_FIM_TEMP_MOVI, B.DT_ALT_UNID_CUSTO,B.COD_ESCALA ,B.DT_INICIO_TROCA ,B.DT_FIM_TROCA , B.COD_MOTIVO
      INTO 
      vNOME_TABELA,vOLD_CODIGO_FUNCAO,vOLD_CODIGO_HIST_FUNCAO,vOLD_DATA_INICIO_FUNCAO,vOLD_DT_FIM_TEMP_FUNC,vOLD_DOCUMENTO_PUBLIC_FUNCAO,vOLD_TEXTO_ASSOCIADO_FUNCAO, vOLD_ID_LEI_FUNCAO,
      VOLD_MOTIVO_ALTERACAO_CARGO,vOLD_COD_CARGO_COMIS_AT,vOLD_COD_CARGO_EFET_AT,vOLD_NIV_CARGO_COMIS_AT,vOLD_NIV_CARGO_EFET_AT,vOLD_COD_CARGO_AMPAR_AT,vOLD_NIV_CARGO_AMPAR_AT,vOLD_OPCAO_SERVIDOR,
      vOLD_DT_ALTER_CARGO,vOLD_DT_FIM_TEMP_CARGO,vOCORRENCIA_CARG, VOLD_COD_MOVIMENTACAO,
      vOLD_COD_LOTACAO_ATUAL1,vOLD_COD_LOTACAO_ATUAL2,vOLD_COD_LOTACAO_ATUAL3,vOLD_COD_LOTACAO_ATUAL4,vOLD_COD_LOTACAO_ATUAL5,vOLD_COD_LOTACAO_ATUAL6,
      vOLD_COD_UNIDADE_ATUAL1,vOLD_COD_UNIDADE_ATUAL2,vOLD_COD_UNIDADE_ATUAL3,vOLD_COD_UNIDADE_ATUAL4,vOLD_COD_UNIDADE_ATUAL5,vOLD_COD_UNIDADE_ATUAL6,
      vOLD_COD_CCONTAB_ATUAL1,vOLD_COD_CCONTAB_ATUAL2,vOLD_COD_CCONTAB_ATUAL3,vOLD_COD_CCONTAB_ATUAL4, vOLD_COD_CCONTAB_ATUAL5,vOLD_COD_CCONTAB_ATUAL6,
      vOLD_COD_CGERENC_ATUAL1,vOLD_COD_CGERENC_ATUAL2,vOLD_COD_CGERENC_ATUAL3,vOLD_COD_CGERENC_ATUAL4,vOLD_COD_CGERENC_ATUAL5, vOLD_COD_CGERENC_ATUAL6,
      vOLD_DT_FIM_TEMP_MOVI,vOLD_DT_ALT_UNID_CUSTO,vOLD_CODIGO_ESCALA ,vOLD_DT_INICIO_TROCA ,vOLD_DT_FIM_TROCA , VOLD_COD_MOTIVO_ESCALA

  FROM SMARH_INT_DESIGNACAO_HIST B ,
  RHORGA_LOTACAO L,
  rhorga_unidade u,
  RHORGA_CUSTO_CONT f, 
  RHORGA_CUSTO_GEREN g
  WHERE 
  L.cod_lotacao1  = B.COD_LOTACAO_ATUAL1     
  and L.cod_lotacao2  = B.COD_LOTACAO_ATUAL2     
  and L.cod_lotacao3  = B.COD_LOTACAO_ATUAL3     
  and L.cod_lotacao4  = B.COD_LOTACAO_ATUAL4     
  and L.cod_lotacao5  = B.COD_LOTACAO_ATUAL5     
  and L.cod_lotacao6  = B.COD_LOTACAO_ATUAL6  
  and l.codigo_empresa   = B.codigo_empresa 
  AND u.cod_unidade1    = B.COD_UNIDADE_ATUAL1  
  AND u.cod_unidade2    = B.COD_UNIDADE_ATUAL2  
  AND u.cod_unidade3    = B.COD_UNIDADE_ATUAL3  
  AND u.cod_unidade4    = B.COD_UNIDADE_ATUAL4  
  AND u.cod_unidade5    = B.COD_UNIDADE_ATUAL5  
  AND u.cod_unidade6    = B.COD_UNIDADE_ATUAL6  
  AND u.codigo_empresa  = B.codigo_empresa   
  AND  f.COD_CCONTAB1  = B.COD_CCONTAB_ATUAL1    
  AND  f.COD_CCONTAB2 = B.COD_CCONTAB_ATUAL2   
  AND  f.COD_CCONTAB3 = B.COD_CCONTAB_ATUAL3    
  AND f.COD_CCONTAB4 = B.COD_CCONTAB_ATUAL4    
  AND f.COD_CCONTAB5 = B.COD_CCONTAB_ATUAL5     
  AND  f.COD_CCONTAB6  = B.COD_CCONTAB_ATUAL6   
  AND f.codigo_empresa = B.codigo_empresa      
  AND  g.COD_CGERENC1 = B.COD_CGERENC_ATUAL1   
  AND g.COD_CGERENC2 = B.COD_CGERENC_ATUAL2    
  AND  g.COD_CGERENC3 = B.COD_CGERENC_ATUAL3   
  AND g.COD_CGERENC4 = B.COD_CGERENC_ATUAL4    
  AND  g.COD_CGERENC5 = B.COD_CGERENC_ATUAL5  
  AND g.COD_CGERENC6 =  B.COD_CGERENC_ATUAL6  
  AND g.codigo_empresa = B.codigo_empresa  

  and  B.CODIGO_EMPRESA = p_CODIGO_EMPRESA
  AND B.TIPO_CONTRATO    = p_TIPO_CONTRATO
  AND B.CODIGO = p_CODIGO_CONTRATO
  AND B.CONSIDERAR = 'S'
  and b.ocorrencia_desig = VOCORRENCIA
  /*
  AND B.ID             = (select min(c.ID) from SMARH_INT_DESIGNACAO_HIST c where B.CODIGO_EMPRESA = c.CODIGO_EMPRESA
  AND B.TIPO_CONTRATO    = c.TIPO_CONTRATO
  AND B.CODIGO = c.codigo)
*/
 ;
  EXCEPTION
            WHEN OTHERS THEN
            raise_application_error (-20003,'NAO FOI POSSIVEL REALIZAR O PROCESSAMENTO DA DESIGNAÇÃO. ENTRE EM CONTATO COM A EQUIPE DE SUPORTE DA PBH.' || 'ENCONTRADO ERRO - '||SQLCODE||' -ERROR- '||SQLERRM || ' 4°S');

  END;


---------------------------- 5° SELECT QUE RECUPERA OS DADOS DO CONTRATO ANTERIOR A DESIGNAÇÃO( PEGANDO O MAX ) E VALIDA SE O CODIGO DO CUSTO É VALIDO. CASO A LOTAÇÃO ESTEJA COM DATA DE EXTINÇAO ELE COLOCA O VALOR DO DE PARA!
BEGIN 
SELECT 
    CASE WHEN(  L.DATA_EXTINCAO IS NOT NULL AND L.C_LIVRE_DESCR23 IS NOT NULL ) THEN LPAD(SUBSTR(L.C_LIVRE_DESCR23,1,2),6,0) ELSE C.COD_LOCAL1 END COD_LOCAL1 ,
     CASE WHEN(  L.DATA_EXTINCAO IS NOT NULL AND L.C_LIVRE_DESCR23 IS NOT NULL ) THEN LPAD(SUBSTR(L.C_LIVRE_DESCR23,3,2),6,0) ELSE C.COD_LOCAL2 END COD_LOCAL2,
     CASE WHEN(  L.DATA_EXTINCAO IS NOT NULL AND L.C_LIVRE_DESCR23 IS NOT NULL ) THEN LPAD(SUBSTR(L.C_LIVRE_DESCR23,5,2),6,0) ELSE C.COD_LOCAL3 END COD_LOCAL3,
     CASE WHEN(  L.DATA_EXTINCAO IS NOT NULL AND L.C_LIVRE_DESCR23 IS NOT NULL ) THEN LPAD(SUBSTR(L.C_LIVRE_DESCR23,7,2),6,0) ELSE C.COD_LOCAL4 END COD_LOCAL4,
     CASE WHEN(  L.DATA_EXTINCAO IS NOT NULL AND L.C_LIVRE_DESCR23 IS NOT NULL ) THEN LPAD(SUBSTR(L.C_LIVRE_DESCR23,9,2),6,0) ELSE C.COD_LOCAL5 END COD_LOCAL5,
     CASE WHEN(  L.DATA_EXTINCAO IS NOT NULL AND L.C_LIVRE_DESCR23 IS NOT NULL ) THEN LPAD(SUBSTR(L.C_LIVRE_DESCR23,11,3),6,0) ELSE C.COD_LOCAL6 END COD_LOCAL6,
     C.DT_ULT_ALT_LOC,
    CASE WHEN (  U.DATA_EXTINCAO IS NOT NULL AND U.C_LIVRE_DESCR23 IS NOT NULL )  THEN LPAD(SUBSTR(U.C_LIVRE_DESCR23,1,2),6,0)ELSE C.COD_UNIDADE1 END COD_UNIDADE1,
    CASE WHEN (  U.DATA_EXTINCAO IS NOT NULL AND U.C_LIVRE_DESCR23 IS NOT NULL )  THEN LPAD(SUBSTR(U.C_LIVRE_DESCR23,3,2),6,0)ELSE C.COD_UNIDADE2 END COD_UNIDADE2,
    CASE WHEN (  U.DATA_EXTINCAO IS NOT NULL AND U.C_LIVRE_DESCR23 IS NOT NULL )  THEN LPAD(SUBSTR(U.C_LIVRE_DESCR23,5,2),6,0) ELSE C.COD_UNIDADE3 END COD_UNIDADE3,  
    CASE WHEN (  U.DATA_EXTINCAO IS NOT NULL AND U.C_LIVRE_DESCR23 IS NOT NULL )  THEN LPAD(SUBSTR(U.C_LIVRE_DESCR23,7,2),6,0) ELSE C.COD_UNIDADE4 END COD_UNIDADE4,
    CASE WHEN (  U.DATA_EXTINCAO IS NOT NULL AND U.C_LIVRE_DESCR23 IS NOT NULL )  THEN LPAD(SUBSTR(U.C_LIVRE_DESCR23,9,2),6,0) ELSE C.COD_UNIDADE5 END COD_UNIDADE5,
    CASE WHEN (  U.DATA_EXTINCAO IS NOT NULL AND U.C_LIVRE_DESCR23 IS NOT NULL )  THEN LPAD(SUBSTR(U.C_LIVRE_DESCR23,11,3),6,0) ELSE C.COD_UNIDADE6 END COD_UNIDADE6,
    C.DT_ULT_ALT_UNID,
    CASE WHEN (  F.DATA_EXTINCAO IS NOT NULL AND F.C_LIVRE_DESCR23 IS NOT NULL )  THEN LPAD(SUBSTR(F.C_LIVRE_DESCR23,1,2),6,0)ELSE C.COD_CUSTO_CONTAB1 END COD_CUSTO_CONTAB1,
    CASE WHEN (  F.DATA_EXTINCAO IS NOT NULL AND F.C_LIVRE_DESCR23 IS NOT NULL )  THEN LPAD(SUBSTR(F.C_LIVRE_DESCR23,3,2),6,0)ELSE C.COD_CUSTO_CONTAB2 END COD_CUSTO_CONTAB2,
    CASE WHEN (  F.DATA_EXTINCAO IS NOT NULL AND F.C_LIVRE_DESCR23 IS NOT NULL )  THEN LPAD(SUBSTR(F.C_LIVRE_DESCR23,5,2),6,0)ELSE C.COD_CUSTO_CONTAB3 END COD_CUSTO_CONTAB3,
    CASE WHEN (  F.DATA_EXTINCAO IS NOT NULL AND F.C_LIVRE_DESCR23 IS NOT NULL )  THEN LPAD(SUBSTR(F.C_LIVRE_DESCR23,7,2),6,0)ELSE C.COD_CUSTO_CONTAB4 END COD_CUSTO_CONTAB4,  
    CASE WHEN (  F.DATA_EXTINCAO IS NOT NULL AND F.C_LIVRE_DESCR23 IS NOT NULL )  THEN LPAD(SUBSTR(F.C_LIVRE_DESCR23,9,2),6,0)ELSE C.COD_CUSTO_CONTAB5 END COD_CUSTO_CONTAB5,
    CASE WHEN (  F.DATA_EXTINCAO IS NOT NULL AND F.C_LIVRE_DESCR23 IS NOT NULL )  THEN LPAD(SUBSTR(F.C_LIVRE_DESCR23,11,3),6,0)ELSE C.COD_CUSTO_CONTAB6 END COD_CUSTO_CONTAB6,
    C.DT_ULT_ALT_CONT,
    CASE WHEN (  G.DATA_EXTINCAO IS NOT NULL AND G.C_LIVRE_DESCR23 IS NOT NULL )  THEN LPAD(SUBSTR(G.C_LIVRE_DESCR23,1,2),6,0)ELSE C.COD_CUSTO_GERENC1 END COD_CUSTO_GERENC1,
    CASE WHEN (  G.DATA_EXTINCAO IS NOT NULL AND G.C_LIVRE_DESCR23 IS NOT NULL )  THEN LPAD(SUBSTR(G.C_LIVRE_DESCR23,3,2),6,0)ELSE C.COD_CUSTO_GERENC2 END COD_CUSTO_GERENC2,
    CASE WHEN (  G.DATA_EXTINCAO IS NOT NULL AND G.C_LIVRE_DESCR23 IS NOT NULL )  THEN LPAD(SUBSTR(G.C_LIVRE_DESCR23,5,2),6,0)ELSE C.COD_CUSTO_GERENC3 END COD_CUSTO_GERENC3,
    CASE WHEN (  G.DATA_EXTINCAO IS NOT NULL AND G.C_LIVRE_DESCR23 IS NOT NULL )  THEN LPAD(SUBSTR(G.C_LIVRE_DESCR23,7,2),6,0)ELSE C.COD_CUSTO_GERENC4 END COD_CUSTO_GERENC4,  
    CASE WHEN (  G.DATA_EXTINCAO IS NOT NULL AND G.C_LIVRE_DESCR23 IS NOT NULL )  THEN LPAD(SUBSTR(G.C_LIVRE_DESCR23,9,2),6,0)ELSE C.COD_CUSTO_GERENC5 END COD_CUSTO_GERENC5,
    CASE WHEN (  G.DATA_EXTINCAO IS NOT NULL AND G.C_LIVRE_DESCR23 IS NOT NULL )  THEN LPAD(SUBSTR(G.C_LIVRE_DESCR23,11,3),6,0)ELSE C.COD_CUSTO_GERENC6 END COD_CUSTO_GERENC6,
    C.DT_ULT_ALT_GER,C.SALARIO_PAGTO,C.COD_CARGO_PAGTO,C.NIVEL_CARGO_PAGTO,C.COD_CARGO_EFETIVO,  
    C.NIVEL_CARGO_EFETIV,C.LT_ULT_CARGO_EFET,C.COD_CARGO_COMISS,C.NIVEL_CARGO_COMISS,C.DT_ULT_CARGO_COM,C.COD_CARGO_AMPAR,C.NIVEL_CARGO_AMPAR	,  
    C.DT_ULT_CARGO_AMPAR,C.CODIGO_FUNCAO,C.DT_ULT_FUNCAO,C.CODIGO_ESCALA,C.DT_ULT_ESCALA, C.SITUACAO_FUNCIONAL
     INTO     
    vOLD_C_COD_LOCAL1,vOLD_C_COD_LOCAL2,vOLD_C_COD_LOCAL3,  vOLD_C_COD_LOCAL4,  vOLD_C_COD_LOCAL5,  vOLD_C_COD_LOCAL6	,  
    vOLD_C_DT_ULT_ALT_LOC,vOLD_C_COD_UNIDADE1,vOLD_C_COD_UNIDADE2,vOLD_C_COD_UNIDADE3,vOLD_C_COD_UNIDADE4,vOLD_C_COD_UNIDADE5	,  
    vOLD_C_COD_UNIDADE6,vOLD_C_DT_ULT_ALT_UNID,vOLD_C_COD_CUSTO_CONTAB1,vOLD_C_COD_CUSTO_CONTAB2,vOLD_C_COD_CUSTO_CONTAB3,vOLD_C_COD_CUSTO_CONTAB4	,  
    vOLD_C_COD_CUSTO_CONTAB5,vOLD_C_COD_CUSTO_CONTAB6,vOLD_C_DT_ULT_ALT_CONT,vOLD_C_COD_CUSTO_GERENC1,vOLD_C_COD_CUSTO_GERENC2	,  
    vOLD_C_COD_CUSTO_GERENC3,vOLD_C_COD_CUSTO_GERENC4,vOLD_C_COD_CUSTO_GERENC5,vOLD_C_COD_CUSTO_GERENC6,vOLD_C_DT_ULT_ALT_GER	,  
    vOLD_C_SALARIO_PAGTO,vOLD_C_COD_CARGO_PAGTO,vOLD_C_NIVEL_CARGO_PAGTO,vOLD_C_COD_CARGO_EFETIVO,vOLD_C_NIVEL_CARGO_EFETIV,vOLD_C_DT_ULT_CARGO_EFET	,  
    vOLD_C_COD_CARGO_COMISS,vOLD_C_NIVEL_CARGO_COMISS,vOLD_C_DT_ULT_CARGO_COM,vOLD_C_COD_CARGO_AMPAR,vOLD_C_NIVEL_CARGO_AMPAR,
    vOLD_C_DT_ULT_CARGO_AMPAR,vOLD_C_CODIGO_FUNCAO, vOLD_C_DT_ULT_FUNCAO,vOLD_C_CODIGO_ESCALA,vOLD_C_DT_ULT_ESCALA , vSITUACAO_FUNCIONAL
  FROM SMARH_INT_DESIGNACAO_CONTR C ,
  RHORGA_LOTACAO L,
  rhorga_unidade u,
  RHORGA_CUSTO_CONT f, 
  RHORGA_CUSTO_GEREN g
  WHERE 
   L.cod_lotacao1  = c.cod_local1     
  and L.cod_lotacao2  = c.cod_local2     
  and L.cod_lotacao3  = c.cod_local3     
  and L.cod_lotacao4  = c.cod_local4     
  and L.cod_lotacao5  = c.cod_local5     
  and L.cod_lotacao6  = c.cod_local6  
  AND u.cod_unidade1    = c.Cod_Unidade1  
  AND u.cod_unidade2    = c.Cod_Unidade2  
  AND u.cod_unidade3    = c.Cod_Unidade3  
  AND u.cod_unidade4    = c.Cod_Unidade4  
  AND u.cod_unidade5    = c.Cod_Unidade5  
  AND u.cod_unidade6    = c.Cod_Unidade6  
  AND u.codigo_empresa  = c.codigo_empresa   
  AND  f.COD_CCONTAB1  = c.COD_CUSTO_CONTAB1    
  AND  f.COD_CCONTAB2 = c.COD_CUSTO_CONTAB2   
  AND  f.COD_CCONTAB3 = c.COD_CUSTO_CONTAB3    
  AND f.COD_CCONTAB4 = c.COD_CUSTO_CONTAB4    
  AND f.COD_CCONTAB5 = c.COD_CUSTO_CONTAB5     
  AND  f.COD_CCONTAB6  = c.COD_CUSTO_CONTAB6   
  AND f.codigo_empresa = c.codigo_empresa      
  AND  g.COD_CGERENC1 = c.COD_CUSTO_GERENC1   
  AND g.COD_CGERENC2 = c.COD_CUSTO_GERENC2    
  AND  g.COD_CGERENC3 = c.COD_CUSTO_GERENC3   
  AND g.COD_CGERENC4 = c.COD_CUSTO_GERENC4    
  AND  g.COD_CGERENC5 = c.COD_CUSTO_GERENC5  
  AND g.COD_CGERENC6 =  c.COD_CUSTO_GERENC6  
  AND g.codigo_empresa = c.codigo_empresa  
  and l.codigo_empresa   = c.codigo_empresa 
  AND C.CODIGO_EMPRESA = P_CODIGO_EMPRESA
  AND C.TIPO_CONTRATO    = p_TIPO_CONTRATO
  AND C.CODIGO = p_CODIGO_CONTRATO
  AND C.CONSIDERAR = 'S'
  and c.ocorrencia = vOCORRENCIA
    /*and rownum <2

  AND C.ID             = (select min(A.ID) from SMARH_INT_DESIGNACAO_CONTR A where C.CODIGO_EMPRESA = A.CODIGO_EMPRESA
  AND C.TIPO_CONTRATO    = A.TIPO_CONTRATO
  AND C.CODIGO = a.codigo )*/
  ;
  EXCEPTION
           WHEN OTHERS THEN
            raise_application_error (-20003,'NAO FOI POSSIVEL REALIZAR O PROCESSAMENTO DA DESIGNAÇÃO. ENTRE EM CONTATO COM A EQUIPE DE SUPORTE DA PBH.' || 'ENCONTRADO ERRO - '||SQLCODE||' -ERROR- '||SQLERRM || ' 5°S');

      END;


---------------------------- 6° SELECT QUE RECUPERA OS DADOS DO CONTRATO MAIS ATUAL menor que a data fim desvio( <= vDATA_SISTEMA)
BEGIN 
   SELECT 
      CT.COD_LOCAL1,CT.COD_LOCAL2,CT.COD_LOCAL3,CT.COD_LOCAL4,CT.COD_LOCAL5,CT.COD_LOCAL6,CT.DT_ULT_ALT_LOC,CT.COD_UNIDADE1	,
      CT.COD_UNIDADE2,CT.COD_UNIDADE3,CT.COD_UNIDADE4,CT.COD_UNIDADE5,CT.COD_UNIDADE6,CT.DT_ULT_ALT_UNID,
      CT.COD_CUSTO_CONTAB1,CT.COD_CUSTO_CONTAB2,CT.COD_CUSTO_CONTAB3,CT.COD_CUSTO_CONTAB4,CT.COD_CUSTO_CONTAB5,CT.COD_CUSTO_CONTAB6	,
      CT.DT_ULT_ALT_CONT,CT.COD_CUSTO_GERENC1,CT.COD_CUSTO_GERENC2,CT.COD_CUSTO_GERENC3,CT.COD_CUSTO_GERENC4,CT.COD_CUSTO_GERENC5,
      CT.COD_CUSTO_GERENC6,CT.DT_ULT_ALT_GER,CT.SALARIO_PAGTO,CT.COD_CARGO_PAGTO	,CT.NIVEL_CARGO_PAGTO,CT.COD_CARGO_EFETIVO,CT.NIVEL_CARGO_EFETIV,
      CT.DT_ULT_CARGO_EFET,CT.COD_CARGO_COMISS,CT.NIVEL_CARGO_COMISS,CT.DT_ULT_CARGO_COM,CT.COD_CARGO_AMPAR,
      CT.NIVEL_CARGO_AMPAR,CT.DT_ULT_CARGO_AMPAR,CT.CODIGO_FUNCAO,CT.DT_ULT_FUNCAO,CT.CODIGO_ESCALA,CT.DT_ULT_ESCALA
  INTO 
      vATUAL_C_COD_LOCAL1,vATUAL_C_COD_LOCAL2,vATUAL_C_COD_LOCAL3,vATUAL_C_COD_LOCAL4,vATUAL_C_COD_LOCAL5,vATUAL_C_COD_LOCAL6,vATUAL_C_DT_ULT_ALT_LOC,
      vATUAL_C_COD_UNIDADE1	,vATUAL_C_COD_UNIDADE2,vATUAL_C_COD_UNIDADE3,vATUAL_C_COD_UNIDADE4,vATUAL_C_COD_UNIDADE5,vATUAL_C_COD_UNIDADE6,
      vATUAL_C_DT_ULT_ALT_UNID,vATUAL_C_COD_CUSTO_CONTAB1,vATUAL_C_COD_CUSTO_CONTAB2,vATUAL_C_COD_CUSTO_CONTAB3,vATUAL_C_COD_CUSTO_CONTAB4,
      vATUAL_C_COD_CUSTO_CONTAB5,vATUAL_C_COD_CUSTO_CONTAB6	,vATUAL_C_DT_ULT_ALT_CONT,vATUAL_C_COD_CUSTO_GERENC1,vATUAL_C_COD_CUSTO_GERENC2,
      vATUAL_C_COD_CUSTO_GERENC3,vATUAL_C_COD_CUSTO_GERENC4,vATUAL_C_COD_CUSTO_GERENC5,vATUAL_C_COD_CUSTO_GERENC6,vATUAL_C_DT_ULT_ALT_GER,
      vATUAL_C_SALARIO_PAGTO,vATUAL_C_COD_CARGO_PAGTO	,vATUAL_C_NIVEL_CARGO_PAGTO,vATUAL_C_COD_CARGO_EFETIVO,vATUAL_C_NIVEL_CARGO_EFETIV,
      vATUAL_C_DT_ULT_CARGO_EFET,vATUAL_C_COD_CARGO_COMISS,vATUAL_C_NIVEL_CARGO_COMISS,vATUAL_C_DT_ULT_CARGO_COM,vATUAL_C_COD_CARGO_AMPAR,
      vATUAL_C_NIVEL_CARGO_AMPAR,vATUAL_C_DT_ULT_CARGO_AMPAR,vATUAL_C_CODIGO_FUNCAO,vATUAL_C_DT_ULT_FUNCAO,vATUAL_C_CODIGO_ESCALA,vATUAL_C_DT_ULT_ESCALA 
    FROM RHPESS_CONTRATO CT
    WHERE CT.ANO_MES_REFERENCIA =
            (SELECT MAX(AUX.ANO_MES_REFERENCIA)
            FROM RHPESS_CONTRATO AUX
            WHERE AUX.CODIGO_EMPRESA    = CT.CODIGO_EMPRESA
            AND AUX.TIPO_CONTRATO       = CT.TIPO_CONTRATO
            AND AUX.CODIGO              = CT.CODIGO
            AND AUX.ANO_MES_REFERENCIA <= NVL(p_DATA_FIM_DESVIO,vDATA_SISTEMA)
            )          
          AND CT.CODIGO_EMPRESA = p_CODIGO_EMPRESA
          AND CT.TIPO_CONTRATO  = p_TIPO_CONTRATO
          AND CT.CODIGO         = p_CODIGO_CONTRATO;
EXCEPTION
            WHEN OTHERS THEN
            raise_application_error (-20003,'NAO FOI POSSIVEL REALIZAR O PROCESSAMENTO DA DESIGNAÇÃO. ENTRE EM CONTATO COM A EQUIPE DE SUPORTE DA PBH.' || 'ENCONTRADO ERRO - '||SQLCODE||' -ERROR- '||SQLERRM || ' 6°S');

      END;

vPAGAMENTO_SERVIDOR:= VALIDA_OPÇAO_SERVIDOR(vOPCAO_SERVIDOR); -- PODE RETORNAR E OU C (EFETIVO OU COMISSIONADO)


---------------------------- 7° SELECT QUE VERIFICA SE A SITUAÇAO FUNCIONAL DO CONTRATO É CESSAO

select COUNT(1) INTO vE_CESSAO from RHINTE_ED_IT_CONV where CODIGO_CONVERSAO = 'CESS' AND DADO_ORIGEM = vSITUACAO_FUNCIONAL;


  ---------------------------------------------------------------------------------------------------------FUNÇÃO---------------------------------------------------------------------------------------------------------

  vPROCURAR := 'RHPLCS_ALT_FUNCAO';
  vVALIDA_NOME_TABELA := VALIDA_DADO_TABELA ( vPROCURAR, vNOME_TABELA); -- se retorno = 0 não possui registro na histórica, se retorno >= 1 possui registro na histórica
  vVERIFICA_MOTIVO := VERIFICA_MOTIVO_DESVIO( vMOTIVO_DESVIO, vPROCURAR );
  vVALIDA_NOME_TABELA_INSERT := VALIDA_DADO_TABELA ( vPROCURAR, vNOME_TABELA_DESIG); 

  IF ( ( vVALIDA_NOME_TABELA_INSERT > 0 )  --VALIDA SE ESSA DESIGNAÇÃO RECEBEU UMA FUNÇÃO
  AND (( vOLD_DT_FIM_TEMP_FUNC <> p_DATA_FIM_DESVIO) or ( vOLD_DT_FIM_TEMP_FUNC is null and p_DATA_FIM_DESVIO is not null) or (vOLD_DT_FIM_TEMP_FUNC is not null and p_DATA_FIM_DESVIO is null) or (vOLD_DT_FIM_TEMP_FUNC is null and p_DATA_FIM_DESVIO is null))
  AND ( p_DATA_INICIO_DESVIO <> vOLD_DATA_INICIO_FUNCAO or (p_DATA_INICIO_DESVIO is not null and vOLD_DATA_INICIO_FUNCAO is null))
  and ( p_ACAO = 'INSERIR' OR p_ACAO = 'U-INSERIR')
  ) THEN 

    IF( vVALIDA_NOME_TABELA = 0 ) THEN -- VALIDA SE JÁ EXISTE UMA FUNÇÃO NA TABELA HISTÓRICA
        INSERT INTO RHPLCS_ALT_FUNCAO (CODIGO_EMPRESA, TIPO_CONTRATO,CODIGO_CONTRATO,DATA_INICIO_FUNCAO,CODIGO_FUNCAO,DT_FIM_TEMP,CODIGO_HIST_FUNCAO,DOCUMENTO_PUBLIC,TEXTO_ASSOCIADO,LOGIN_USUARIO,DT_ULT_ALTER_USUA,DATA_PUBLIC) 
        VALUES (P_CODIGO_EMPRESA, p_TIPO_CONTRATO, p_CODIGO_CONTRATO, p_DATA_INICIO_DESVIO, vCODIGO_FUNCAO, case when ( p_DATA_FIM_DESVIO is null or p_DATA_FIM_DESVIO > sysdate )then null else p_DATA_FIM_DESVIO end,LPAD(vVERIFICA_MOTIVO,4,0),vDOCUMENTO_PUBLIC, null,p_login,SYSDATE,vDT_PUBLIC_DOM);

        vcomando := 'INSERT INTO RHPLCS_ALT_FUNCAO (CODIGO_EMPRESA, TIPO_CONTRATO,CODIGO_CONTRATO,DATA_INICIO_FUNCAO,CODIGO_FUNCAO,DT_FIM_TEMP,CODIGO_HIST_FUNCAO,DOCUMENTO_PUBLIC,TEXTO_ASSOCIADO,LOGIN_USUARIO,DT_ULT_ALTER_USUA,DATA_PUBLIC) 
        VALUES ('||P_CODIGO_EMPRESA||','|| p_TIPO_CONTRATO||','|| p_CODIGO_CONTRATO||','|| p_DATA_INICIO_DESVIO||','|| vCODIGO_FUNCAO||','||'case when ( '||p_DATA_FIM_DESVIO|| 'is null or '|| p_DATA_FIM_DESVIO||' > sysdate )then null else'|| p_DATA_FIM_DESVIO || 'end,
        LPAD('||vVERIFICA_MOTIVO||',4,0),'||vDOCUMENTO_PUBLIC||', null,' ||p_login || ',SYSDATE'||','||vDT_PUBLIC_DOM||');';
        GRAVA_LOG('INSERT',vcomando);

    ELSIF ( vVALIDA_NOME_TABELA > 0 ) THEN
    IF  ( vOLD_DT_FIM_TEMP_FUNC IS NULL OR vOLD_DT_FIM_TEMP_FUNC >= p_DATA_INICIO_DESVIO )THEN
    --UPDATE NA TABELA DE FUNÇÃO FINALIZANDO O REGISTRO ANTERIOR
      UPDATE RHPLCS_ALT_FUNCAO B
      SET B.DT_FIM_TEMP      = ( p_DATA_INICIO_DESVIO - 1),
      LOGIN_USUARIO = 	p_login , DT_ULT_ALTER_USUA = SYSDATE
      WHERE B.CODIGO_EMPRESA = P_CODIGO_EMPRESA
      AND B.TIPO_CONTRATO    = p_TIPO_CONTRATO
      AND B.CODIGO_CONTRATO  = p_CODIGO_CONTRATO
      AND B.DATA_INICIO_FUNCAO  = vOLD_DATA_INICIO_FUNCAO; 

        vcomando :=  'UPDATE RHPLCS_ALT_FUNCAO B SET B.DT_FIM_TEMP = ( '||p_DATA_INICIO_DESVIO ||'- 1), LOGIN_USUARIO = '||p_login||', DT_ULT_ALTER_USUA = SYSDATE WHERE B.CODIGO_EMPRESA = '||P_CODIGO_EMPRESA||' AND B.TIPO_CONTRATO = '||p_TIPO_CONTRATO||' AND B.CODIGO_CONTRATO = '||p_CODIGO_CONTRATO||' AND B.DATA_INICIO_FUNCAO = '||vOLD_DATA_INICIO_FUNCAO||';'; 
        GRAVA_LOG('UPDATE',vcomando);

      INSERT INTO RHPLCS_ALT_FUNCAO (CODIGO_EMPRESA, TIPO_CONTRATO,CODIGO_CONTRATO,DATA_INICIO_FUNCAO,CODIGO_FUNCAO,DT_FIM_TEMP,CODIGO_HIST_FUNCAO,DOCUMENTO_PUBLIC,TEXTO_ASSOCIADO,LOGIN_USUARIO,DT_ULT_ALTER_USUA,DATA_PUBLIC) 
      VALUES (P_CODIGO_EMPRESA, p_TIPO_CONTRATO, p_CODIGO_CONTRATO, p_DATA_INICIO_DESVIO, vCODIGO_FUNCAO,  case when ( p_DATA_FIM_DESVIO is null or p_DATA_FIM_DESVIO > sysdate )then null else p_DATA_FIM_DESVIO end ,LPAD(vVERIFICA_MOTIVO,4,0),vDOCUMENTO_PUBLIC,null,p_login,SYSDATE,vDT_PUBLIC_DOM);

      vcomando := 'INSERT INTO RHPLCS_ALT_FUNCAO (CODIGO_EMPRESA, TIPO_CONTRATO,CODIGO_CONTRATO,DATA_INICIO_FUNCAO,CODIGO_FUNCAO,DT_FIM_TEMP,CODIGO_HIST_FUNCAO,DOCUMENTO_PUBLIC,
      TEXTO_ASSOCIADO,LOGIN_USUARIO,DT_ULT_ALTER_USUA,DATA_PUBLIC) VALUES ('||P_CODIGO_EMPRESA||','|| p_TIPO_CONTRATO||','|| p_CODIGO_CONTRATO||','|| p_DATA_INICIO_DESVIO||','|| vCODIGO_FUNCAO||','||'case when ( '||p_DATA_FIM_DESVIO|| 'is null or '|| p_DATA_FIM_DESVIO||' > sysdate )then null else'|| p_DATA_FIM_DESVIO || 'end,
      LPAD('||vVERIFICA_MOTIVO||',4,0),'||vDOCUMENTO_PUBLIC||', null,' ||p_login || ',SYSDATE,'||vDT_PUBLIC_DOM||');';
      GRAVA_LOG('INSERT',vcomando);

           /* COMENTADO POR LETÍCIA EM 29/07/2022 APÓS PEDIDO DA STEPHANIE, POIS AS FUNÇÕES NÃO PRECISAM SER RETORNADAS
           IF ( p_DATA_FIM_DESVIO < trunc(sysdate)) THEN
            -- INSERT VOLTANDO O HISTÓRICO
                INSERT INTO RHPLCS_ALT_FUNCAO (CODIGO_EMPRESA, TIPO_CONTRATO,CODIGO_CONTRATO,DATA_INICIO_FUNCAO,CODIGO_FUNCAO,DT_FIM_TEMP,CODIGO_HIST_FUNCAO,DOCUMENTO_PUBLIC,
                TEXTO_ASSOCIADO,LOGIN_USUARIO,DT_ULT_ALTER_USUA) VALUES (P_CODIGO_EMPRESA, p_TIPO_CONTRATO, p_CODIGO_CONTRATO, p_DATA_FIM_DESVIO + 1 , VOLD_CODIGO_FUNCAO, vOLD_DT_FIM_TEMP_FUNC,
                vold_CODIGO_HIST_FUNCAO,vOLD_DOCUMENTO_PUBLIC_FUNCAO,null,p_login,SYSDATE);

                vcomando := 'INSERT INTO RHPLCS_ALT_FUNCAO (CODIGO_EMPRESA, TIPO_CONTRATO,CODIGO_CONTRATO,DATA_INICIO_FUNCAO,CODIGO_FUNCAO,DT_FIM_TEMP,CODIGO_HIST_FUNCAO,DOCUMENTO_PUBLIC,
                TEXTO_ASSOCIADO,LOGIN_USUARIO,DT_ULT_ALTER_USUA) VALUES ('||P_CODIGO_EMPRESA||','|| p_TIPO_CONTRATO||','|| p_CODIGO_CONTRATO||','||  p_DATA_FIM_DESVIO  ||'+ 1,'|| VOLD_CODIGO_FUNCAO||
                ','|| VOLD_CODIGO_FUNCAO||','|| vOLD_DT_FIM_TEMP_FUNC||','|| vold_CODIGO_HIST_FUNCAO||','||vOLD_DOCUMENTO_PUBLIC_FUNCAO||',NULL,'||p_login||',SYSDATE);';
                GRAVA_LOG('INSERT',vcomando);

            END IF;
            */
          ELSIF (vOLD_DT_FIM_TEMP_FUNC < p_DATA_INICIO_DESVIO) THEN 

              INSERT INTO RHPLCS_ALT_FUNCAO (CODIGO_EMPRESA, TIPO_CONTRATO,CODIGO_CONTRATO,DATA_INICIO_FUNCAO,CODIGO_FUNCAO,DT_FIM_TEMP,CODIGO_HIST_FUNCAO,DOCUMENTO_PUBLIC,TEXTO_ASSOCIADO,LOGIN_USUARIO,DT_ULT_ALTER_USUA,DATA_PUBLIC) 
              VALUES (P_CODIGO_EMPRESA, p_TIPO_CONTRATO, p_CODIGO_CONTRATO, p_DATA_INICIO_DESVIO, vCODIGO_FUNCAO,  case when ( p_DATA_FIM_DESVIO is null or p_DATA_FIM_DESVIO > sysdate )then null else p_DATA_FIM_DESVIO end ,LPAD(vVERIFICA_MOTIVO,4,0),vDOCUMENTO_PUBLIC,null,p_login,SYSDATE,vDT_PUBLIC_DOM);

              vcomando := 'INSERT INTO RHPLCS_ALT_FUNCAO (CODIGO_EMPRESA, TIPO_CONTRATO,CODIGO_CONTRATO,DATA_INICIO_FUNCAO,CODIGO_FUNCAO,DT_FIM_TEMP,CODIGO_HIST_FUNCAO,DOCUMENTO_PUBLIC,
              TEXTO_ASSOCIADO,LOGIN_USUARIO,DT_ULT_ALTER_USUA,DATA_PUBLIC) VALUES ('||P_CODIGO_EMPRESA||','|| p_TIPO_CONTRATO||','|| p_CODIGO_CONTRATO||','|| p_DATA_INICIO_DESVIO||','|| vCODIGO_FUNCAO||','||'case when ( '||p_DATA_FIM_DESVIO|| 'is null or '|| p_DATA_FIM_DESVIO||' > sysdate )then null else'|| p_DATA_FIM_DESVIO || 'end,
              LPAD('||vVERIFICA_MOTIVO||',4,0),'||vDOCUMENTO_PUBLIC||', null,' ||p_login || ',SYSDATE,'||vDT_PUBLIC_DOM||');';
              GRAVA_LOG('INSERT',vcomando);

          END IF;
    END IF;
  END IF;


 -- inserido em 09/11/2020  FAZ O RETORNO NA HISTÓRICA QUANDO A DESIGNAÇÃO FINDA
 IF ( ( p_ACAO = 'ENCERRAR' ) AND ( vVALIDA_NOME_TABELA_INSERT > 0 )) -- VALIDA SE A PESSOA RECEBEU UMA FUNÇÃO  
   THEN
       IF ( vOLD_CODIGO_FUNCAO = vCODIGO_FUNCAO and vOLD_DATA_INICIO_FUNCAO = p_DATA_INICIO_DESVIO ) THEN
           dbms_output.put_line('Entrou no Encerrar Função');
          UPDATE RHPLCS_ALT_FUNCAO B
          SET B.DT_FIM_TEMP      = p_DATA_FIM_DESVIO,
          LOGIN_USUARIO = p_login , DT_ULT_ALTER_USUA = SYSDATE
          WHERE B.CODIGO_EMPRESA = P_CODIGO_EMPRESA
          AND B.TIPO_CONTRATO    = p_TIPO_CONTRATO
          AND B.CODIGO_CONTRATO  = p_CODIGO_CONTRATO
          AND B.DATA_INICIO_FUNCAO  = p_DATA_INICIO_DESVIO; 

      vcomando := 'UPDATE RHPLCS_ALT_FUNCAO B SET B.DT_FIM_TEMP = '||p_DATA_FIM_DESVIO||', LOGIN_USUARIO = '||p_login||' , DT_ULT_ALTER_USUA = '||SYSDATE||' WHERE B.CODIGO_EMPRESA = '||P_CODIGO_EMPRESA||' AND B.TIPO_CONTRATO    = '||p_TIPO_CONTRATO||' AND B.CODIGO_CONTRATO  = '||p_CODIGO_CONTRATO||' AND B.DATA_INICIO_FUNCAO  = '||p_DATA_INICIO_DESVIO||';';
      GRAVA_LOG('UPDATE',vcomando);

      /*BEGIN
              SELECT 
              B.CODIGO_FUNCAO,B.CODIGO_HIST_FUNCAO,B.DATA_INICIO_FUNCAO,B.DT_FIM_TEMP_FUNC,B.DOCUMENTO_PUBLIC_FUNCAO,B.TEXTO_ASSOCIADO_FUNCAO, B.ID_LEI_FUNCAO
              INTO 
              vOLD_CODIGO_FUNCAO,vOLD_CODIGO_HIST_FUNCAO,vOLD_DATA_INICIO_FUNCAO,vOLD_DT_FIM_TEMP_FUNC,vOLD_DOCUMENTO_PUBLIC_FUNCAO,vOLD_TEXTO_ASSOCIADO_FUNCAO, vOLD_ID_LEI_FUNCAO
              FROM SMARH_INT_DESIGNACAO_HIST B
              WHERE  B.CODIGO_EMPRESA = p_CODIGO_EMPRESA
              AND B.TIPO_CONTRATO    = p_TIPO_CONTRATO
              AND B.CODIGO = p_CODIGO_CONTRATO
              AND B.ID             = (select min(c.ID) from SMARH_INT_DESIGNACAO_HIST c where B.CODIGO_EMPRESA = c.CODIGO_EMPRESA
              AND B.TIPO_CONTRATO    = c.TIPO_CONTRATO
              AND B.CODIGO = c.codigo
              AND c.CONSIDERAR = 'N'
              AND C.OCORRENCIA_DESIG = vOCORRENCIA);
      EXCEPTION
           WHEN OTHERS THEN
            raise_application_error (-20003,'NAO FOI POSSIVEL REALIZAR O PROCESSAMENTO DA DESIGNAÇÃO. ENTRE EM CONTATO COM A EQUIPE DE SUPORTE DA PBH.' || 'ENCONTRADO ERRO - '||SQLCODE||' -ERROR- '||SQLERRM || ' 6°S');     
      END;
    */

    /* COMENTADO POR LETÍCIA EM 29/07/2022 APÓE PEDIDO DA STEPHANIE, POIS AS FUNÇÕES NÃO PRECISAM SER RETORNADAS
            -- INSERT VOLTANDO HISTÓRICO
               INSERT INTO RHPLCS_ALT_FUNCAO (CODIGO_EMPRESA, TIPO_CONTRATO,CODIGO_CONTRATO,DATA_INICIO_FUNCAO,CODIGO_FUNCAO,DT_FIM_TEMP,CODIGO_HIST_FUNCAO,DOCUMENTO_PUBLIC,
               TEXTO_ASSOCIADO,LOGIN_USUARIO,DT_ULT_ALTER_USUA) VALUES (P_CODIGO_EMPRESA, p_TIPO_CONTRATO, p_CODIGO_CONTRATO, p_DATA_FIM_DESVIO + 1 , VOLD_CODIGO_FUNCAO, vOLD_DT_FIM_TEMP_FUNC,
               vold_CODIGO_HIST_FUNCAO,vOLD_DOCUMENTO_PUBLIC_FUNCAO,null, p_login ,SYSDATE);

        vcomando := 'INSERT INTO RHPLCS_ALT_FUNCAO (CODIGO_EMPRESA, TIPO_CONTRATO,CODIGO_CONTRATO,DATA_INICIO_FUNCAO,CODIGO_FUNCAO,DT_FIM_TEMP,CODIGO_HIST_FUNCAO,DOCUMENTO_PUBLIC,
        TEXTO_ASSOCIADO,LOGIN_USUARIO,DT_ULT_ALTER_USUA) VALUES ('||P_CODIGO_EMPRESA||','|| p_TIPO_CONTRATO||','|| p_CODIGO_CONTRATO||','|| p_DATA_FIM_DESVIO  ||'+ 1,'|| VOLD_CODIGO_FUNCAO||','|| VOLD_CODIGO_FUNCAO||','|| vOLD_DT_FIM_TEMP_FUNC||','|| vold_CODIGO_HIST_FUNCAO||','||vOLD_DOCUMENTO_PUBLIC_FUNCAO||',NULL,'||p_login||',SYSDATE);';
        GRAVA_LOG('INSERT',vcomando);
        */
      END IF;
 END IF;
 -- fim 09/11/2020


 -- EXCLUI TODOS OS DADOS QUE FORAM INSERIDOS PELA DESIGNAÇÃO
 IF ( ( p_ACAO = 'EXCLUIR' OR p_ACAO = 'U-EXCLUIR') AND p_DATA_INICIO_DESVIO <= trunc(sysdate) )  THEN
  IF ( vVALIDA_NOME_TABELA_INSERT > 0 ) THEN -- VALIDA SE A PESSOA RECEBEU UMA FUNÇÃO
      IF ( vVALIDA_NOME_TABELA = 0 ) THEN -- VALIDA SE NÃO TINHA REGISTRO NA TABELA DE FUNÇÃO
          DELETE FROM RHPLCS_ALT_FUNCAO WHERE CODIGO_EMPRESA = P_CODIGO_EMPRESA AND TIPO_CONTRATO    = p_TIPO_CONTRATO AND CODIGO_CONTRATO  = p_CODIGO_CONTRATO AND DATA_INICIO_FUNCAO  = p_DATA_INICIO_DESVIO; 
          vcomando := 'DELETE FROM RHPLCS_ALT_FUNCAO WHERE CODIGO_EMPRESA = '||P_CODIGO_EMPRESA||' AND TIPO_CONTRATO = '||p_TIPO_CONTRATO||' AND CODIGO_CONTRATO  = '||p_CODIGO_CONTRATO||' AND DATA_INICIO_FUNCAO  = '||p_DATA_INICIO_DESVIO||'; ';
          GRAVA_LOG('DELETE',vcomando);
      ELSIF ( vVALIDA_NOME_TABELA > 0 ) THEN -- VALIDA SE JÁ TINHA REGISTRO NA TABELA DE FUNÇÃO
          IF  ( vOLD_DT_FIM_TEMP_FUNC IS NULL OR vOLD_DT_FIM_TEMP_FUNC >= p_DATA_INICIO_DESVIO )THEN
            --UPDATE NA TABELA DE FUNÇÃO FINALIZANDO O REGISTRO ANTERIOR
              UPDATE RHPLCS_ALT_FUNCAO B
              SET B.DT_FIM_TEMP      = vOLD_DT_FIM_TEMP_FUNC,
              LOGIN_USUARIO = 	 p_login  , DT_ULT_ALTER_USUA = SYSDATE
              WHERE B.CODIGO_EMPRESA = P_CODIGO_EMPRESA
              AND B.TIPO_CONTRATO    = p_TIPO_CONTRATO
              AND B.CODIGO_CONTRATO  = p_CODIGO_CONTRATO
              AND B.DATA_INICIO_FUNCAO  = vOLD_DATA_INICIO_FUNCAO; 
              vcomando := 'UPDATE RHPLCS_ALT_FUNCAO B SET B.DT_FIM_TEMP = '||vOLD_DT_FIM_TEMP_FUNC||', LOGIN_USUARIO = '||p_login||'  , DT_ULT_ALTER_USUA = SYSDATE WHERE B.CODIGO_EMPRESA = '||P_CODIGO_EMPRESA||' AND B.TIPO_CONTRATO = '||p_TIPO_CONTRATO||' AND B.CODIGO_CONTRATO  = '||p_CODIGO_CONTRATO||' AND B.DATA_INICIO_FUNCAO  = '||vOLD_DATA_INICIO_FUNCAO||'; ';
              GRAVA_LOG('UPDATE',vcomando);

              DELETE FROM RHPLCS_ALT_FUNCAO WHERE  CODIGO_EMPRESA = P_CODIGO_EMPRESA AND TIPO_CONTRATO    = p_TIPO_CONTRATO AND CODIGO_CONTRATO  = p_CODIGO_CONTRATO AND DATA_INICIO_FUNCAO  = p_DATA_INICIO_DESVIO;
              vcomando := 'DELETE FROM RHPLCS_ALT_FUNCAO WHERE  CODIGO_EMPRESA = '||P_CODIGO_EMPRESA||' AND TIPO_CONTRATO    = '||p_TIPO_CONTRATO||' AND CODIGO_CONTRATO  = '||p_CODIGO_CONTRATO||' AND DATA_INICIO_FUNCAO  = '||p_DATA_INICIO_DESVIO||';';
              GRAVA_LOG('DELETE',vcomando);

              DELETE FROM RHPLCS_ALT_FUNCAO WHERE  CODIGO_EMPRESA = P_CODIGO_EMPRESA AND TIPO_CONTRATO    = p_TIPO_CONTRATO AND CODIGO_CONTRATO  = p_CODIGO_CONTRATO AND DATA_INICIO_FUNCAO  = p_DATA_FIM_DESVIO + 1; 
              vcomando := 'DELETE FROM RHPLCS_ALT_FUNCAO WHERE  CODIGO_EMPRESA = '||P_CODIGO_EMPRESA||' AND TIPO_CONTRATO    = '||p_TIPO_CONTRATO||' AND CODIGO_CONTRATO  = '||p_CODIGO_CONTRATO||' AND DATA_INICIO_FUNCAO  = '||p_DATA_FIM_DESVIO ||'+ 1;';
              GRAVA_LOG('DELETE',vcomando);

            ELSIF ( vOLD_DT_FIM_TEMP_FUNC < p_DATA_INICIO_DESVIO ) THEN 

                DELETE FROM RHPLCS_ALT_FUNCAO WHERE  CODIGO_EMPRESA = P_CODIGO_EMPRESA AND TIPO_CONTRATO    = p_TIPO_CONTRATO AND CODIGO_CONTRATO  = p_CODIGO_CONTRATO AND DATA_INICIO_FUNCAO  = p_DATA_INICIO_DESVIO;
                vcomando := 'DELETE FROM RHPLCS_ALT_FUNCAO WHERE  CODIGO_EMPRESA = '||P_CODIGO_EMPRESA||' AND TIPO_CONTRATO    = '||p_TIPO_CONTRATO||' AND CODIGO_CONTRATO  = '||p_CODIGO_CONTRATO||' AND DATA_INICIO_FUNCAO  = '||p_DATA_INICIO_DESVIO||';';
                GRAVA_LOG('DELETE',vcomando);

                /* 24/02/2022 - Removido
                DELETE FROM RHPLCS_ALT_FUNCAO WHERE  CODIGO_EMPRESA = P_CODIGO_EMPRESA AND TIPO_CONTRATO    = p_TIPO_CONTRATO AND CODIGO_CONTRATO  = p_CODIGO_CONTRATO AND DATA_INICIO_FUNCAO  = p_DATA_FIM_DESVIO + 1; 
                vcomando := 'DELETE FROM RHPLCS_ALT_FUNCAO WHERE  CODIGO_EMPRESA = '||P_CODIGO_EMPRESA||' AND TIPO_CONTRATO    = '||p_TIPO_CONTRATO||' AND CODIGO_CONTRATO  = '||p_CODIGO_CONTRATO||' AND DATA_INICIO_FUNCAO  = '||p_DATA_FIM_DESVIO||' + 1;';  
                GRAVA_LOG('DELETE',vcomando);
                */
            END IF;
     END IF;
     END IF;   

  END IF;

 --------------------------------------------------------------------------------------------------------CARGO-------------------------------------------------------------------------------------------------------------

  vPROCURAR := 'RHPLCS_ALT_CARGO';
  vVALIDA_NOME_TABELA :=VALIDA_DADO_TABELA ( vPROCURAR,vNOME_TABELA);
  vVERIFICA_MOTIVO := VERIFICA_MOTIVO_DESVIO( vMOTIVO_DESVIO, vPROCURAR );
  vVALIDA_NOME_TABELA_INSERT := VALIDA_DADO_TABELA ( vPROCURAR, vNOME_TABELA_DESIG); 

    IF (/*( p_DATA_INICIO_DESVIO <> vOLD_DT_ALTER_CARGO OR (p_DATA_INICIO_DESVIO is not null and vOLD_DT_ALTER_CARGO is null) )
    AND (vOLD_DT_FIM_TEMP_CARGO <> p_DATA_FIM_DESVIO or (vOLD_DT_FIM_TEMP_CARGO is null and p_DATA_FIM_DESVIO is not null) or (vOLD_DT_FIM_TEMP_CARGO is not null and p_DATA_FIM_DESVIO is null)or (vOLD_DT_FIM_TEMP_CARGO is null and p_DATA_FIM_DESVIO is null) )
    and */( p_ACAO = 'INSERIR' OR p_ACAO = 'U-INSERIR' )AND ( vVALIDA_NOME_TABELA_INSERT > 0 ) ) THEN 

  --vOLD_DT_ALTER_CARGO,vOLD_DT_FIM_TEMP_CARGO,vOCORRENCIA_CARG,

  IF ( vVALIDA_NOME_TABELA = 0 )   THEN  -- fazer verificação por nome de tabela 
      -- ALTERADO EM 12/11 PARA INSERIR COM O NÍVEL CORRETO!
      INSERT INTO RHPLCS_ALT_CARGO
      (CODIGO_EMPRESA, TIPO_CONTRATO,CODIGO_CONTRATO, DT_ALTER_CARGO,	MOTIVO_ALTERACAO, COD_CARGO_EFET_AT,	NIV_CARGO_EFET_AT	,COD_CARGO_COMIS_AT,	NIV_CARGO_COMIS_AT,	COD_CARGO_AMPAR_AT,	NIV_CARGO_AMPAR_AT,	
      LOGIN_USUARIO,	DT_ULT_ALTER_USUA,	DT_FIM_TEMP	, OCORRENCIA, SALARIO_PAGTO, DATA_PUBLIC ) VALUES
      (P_CODIGO_EMPRESA,p_TIPO_CONTRATO, p_CODIGO_CONTRATO, p_DATA_INICIO_DESVIO, LPAD(vVERIFICA_MOTIVO,4,0), 
      NVL(vOLD_C_COD_CARGO_EFETIVO,'000000000000000'), 
      vOLD_C_NIVEL_CARGO_EFETIV, 
      case when vCODIGO_FUNCAO is not null then '000000000000000' else vCOD_CARGO_COMIS end, 
      case when vCODIGO_FUNCAO is not null then null else  '00000'  end,
      NVL(vOLD_COD_CARGO_AMPAR_AT,'000000000000000'), vOLD_C_NIVEL_CARGO_AMPAR,
      p_login ,SYSDATE,  case when ( p_DATA_FIM_DESVIO is null or p_DATA_FIM_DESVIO > sysdate )then null else p_DATA_FIM_DESVIO end ,
      case when ( vOLD_DT_ALTER_CARGO = p_DATA_INICIO_DESVIO ) then vOCORRENCIA_CARG + 1 else 1 end 
      , vPAGAMENTO_SERVIDOR,vDT_PUBLIC_DOM);

      vcomando := 'INSERT INTO RHPLCS_ALT_CARGO (CODIGO_EMPRESA, TIPO_CONTRATO,CODIGO_CONTRATO, DT_ALTER_CARGO,	MOTIVO_ALTERACAO, COD_CARGO_EFET_AT,	NIV_CARGO_EFET_AT	,COD_CARGO_COMIS_AT,	NIV_CARGO_COMIS_AT,	COD_CARGO_AMPAR_AT,	NIV_CARGO_AMPAR_AT,	LOGIN_USUARIO,	DT_ULT_ALTER_USUA,	DT_FIM_TEMP	, OCORRENCIA, SALARIO_PAGTO,DATA_PUBLIC) VALUES ('||P_CODIGO_EMPRESA||','||p_TIPO_CONTRATO||', '||p_CODIGO_CONTRATO||', '||p_DATA_INICIO_DESVIO||', LPAD('||vVERIFICA_MOTIVO||',4,0), NVL('||vOLD_C_COD_CARGO_EFETIVO||',''000000000000000''), '||vOLD_C_NIVEL_CARGO_EFETIV||', case when '||vCODIGO_FUNCAO||' is not null then ''000000000000000'' else '||vCOD_CARGO_COMIS||' end, case when '||vCODIGO_FUNCAO||' is not null then null else  ''00000''  end, NVL('||vOLD_COD_CARGO_AMPAR_AT||',''000000000000000''), '||vOLD_C_NIVEL_CARGO_AMPAR||', '||p_login||' ,SYSDATE,  case when ( '||p_DATA_FIM_DESVIO||' is null or '||p_DATA_FIM_DESVIO||' > sysdate )then null else '||p_DATA_FIM_DESVIO||' end , case when ( '||vOLD_DT_ALTER_CARGO||' = '||p_DATA_INICIO_DESVIO||' ) then '||vOCORRENCIA_CARG||' + 1 else 1 end , '||vPAGAMENTO_SERVIDOR||', '||vDT_PUBLIC_DOM||');';
      GRAVA_LOG('INSERT',vcomando);

      IF  ( p_DATA_FIM_DESVIO < trunc(sysdate) ) THEN
          -- VOLTANDO HISTÒRICO
                IF (vMOTIVO_DESVIO = '0001') then
                  INSERT INTO RHPLCS_ALT_CARGO
                  (CODIGO_EMPRESA,TIPO_CONTRATO,CODIGO_CONTRATO,DT_ALTER_CARGO,	MOTIVO_ALTERACAO,COD_CARGO_EFET_AT,	NIV_CARGO_EFET_AT	,COD_CARGO_COMIS_AT,	NIV_CARGO_COMIS_AT,	COD_CARGO_AMPAR_AT,	NIV_CARGO_AMPAR_AT,	
                  LOGIN_USUARIO,	DT_ULT_ALTER_USUA,	DT_FIM_TEMP	, OCORRENCIA, SALARIO_PAGTO) VALUES
                  (P_CODIGO_EMPRESA,p_TIPO_CONTRATO, p_CODIGO_CONTRATO,  p_DATA_FIM_DESVIO + 1 ,'0020' , NVL(vOLD_C_COD_CARGO_EFETIVO,'000000000000000'), vOLD_C_NIVEL_CARGO_EFETIV, NVL(vOLD_C_COD_CARGO_COMISS,'000000000000000'), vOLD_C_NIVEL_CARGO_COMISS , NVL(vOLD_C_COD_CARGO_AMPAR,'000000000000000'),vOLD_C_NIVEL_CARGO_AMPAR,
                    p_login ,SYSDATE, vOLD_DT_FIM_TEMP_CARGO ,'1', vPAGAMENTO_SERVIDOR);

        vcomando := 'INSERT INTO RHPLCS_ALT_CARGO (CODIGO_EMPRESA,TIPO_CONTRATO,CODIGO_CONTRATO,DT_ALTER_CARGO,	MOTIVO_ALTERACAO,COD_CARGO_EFET_AT,	NIV_CARGO_EFET_AT	,COD_CARGO_COMIS_AT,	NIV_CARGO_COMIS_AT,	COD_CARGO_AMPAR_AT,	NIV_CARGO_AMPAR_AT,	LOGIN_USUARIO,	DT_ULT_ALTER_USUA,	DT_FIM_TEMP	, OCORRENCIA, SALARIO_PAGTO) VALUES ('||P_CODIGO_EMPRESA||','||p_TIPO_CONTRATO||', '||p_CODIGO_CONTRATO||',  '||p_DATA_FIM_DESVIO||' + 1 ,''0020'' , NVL('||vOLD_C_COD_CARGO_EFETIVO||',''000000000000000''), '||vOLD_C_NIVEL_CARGO_EFETIV||', NVL('||vOLD_C_COD_CARGO_COMISS||',''000000000000000''), '||vOLD_C_NIVEL_CARGO_COMISS||', NVL('||vOLD_C_COD_CARGO_AMPAR||',''000000000000000''),'||vOLD_C_NIVEL_CARGO_AMPAR||', '||p_login||' ,SYSDATE, '||vOLD_DT_FIM_TEMP_CARGO||' ,''1'', '||vPAGAMENTO_SERVIDOR||');';
        GRAVA_LOG('INSERT',vcomando);

                elsIF (vMOTIVO_DESVIO = '0002') then  
                  INSERT INTO RHPLCS_ALT_CARGO
                  (CODIGO_EMPRESA,TIPO_CONTRATO,CODIGO_CONTRATO,DT_ALTER_CARGO,	MOTIVO_ALTERACAO,COD_CARGO_EFET_AT,	NIV_CARGO_EFET_AT	,COD_CARGO_COMIS_AT,	NIV_CARGO_COMIS_AT,	COD_CARGO_AMPAR_AT,	NIV_CARGO_AMPAR_AT,	
                  LOGIN_USUARIO,	DT_ULT_ALTER_USUA,	DT_FIM_TEMP	, OCORRENCIA, SALARIO_PAGTO) VALUES
                  (P_CODIGO_EMPRESA,p_TIPO_CONTRATO, p_CODIGO_CONTRATO,  p_DATA_FIM_DESVIO + 1 ,'0009' , NVL(vOLD_C_COD_CARGO_EFETIVO,'000000000000000'), vOLD_C_NIVEL_CARGO_EFETIV, NVL(vOLD_C_COD_CARGO_COMISS,'000000000000000'), vOLD_C_NIVEL_CARGO_COMISS , NVL(vOLD_C_COD_CARGO_AMPAR,'000000000000000'),vOLD_C_NIVEL_CARGO_AMPAR,
                    p_login ,SYSDATE, vOLD_DT_FIM_TEMP_CARGO ,'1', vPAGAMENTO_SERVIDOR);

        vcomando := 'INSERT INTO RHPLCS_ALT_CARGO (CODIGO_EMPRESA,TIPO_CONTRATO,CODIGO_CONTRATO,DT_ALTER_CARGO,	MOTIVO_ALTERACAO,COD_CARGO_EFET_AT,	NIV_CARGO_EFET_AT	,COD_CARGO_COMIS_AT,	NIV_CARGO_COMIS_AT,	COD_CARGO_AMPAR_AT,	NIV_CARGO_AMPAR_AT,	LOGIN_USUARIO,	DT_ULT_ALTER_USUA,	DT_FIM_TEMP	, OCORRENCIA, SALARIO_PAGTO) VALUES ('||P_CODIGO_EMPRESA||','||p_TIPO_CONTRATO||', '||p_CODIGO_CONTRATO||',  '||p_DATA_FIM_DESVIO||' + 1 ,''0009'' , NVL('||vOLD_C_COD_CARGO_EFETIVO||',''000000000000000''), '||vOLD_C_NIVEL_CARGO_EFETIV||', NVL('||vOLD_C_COD_CARGO_COMISS||',''000000000000000''), '||vOLD_C_NIVEL_CARGO_COMISS||' , NVL('||vOLD_C_COD_CARGO_AMPAR||',''000000000000000''),'||vOLD_C_NIVEL_CARGO_AMPAR||', '||p_login||' ,SYSDATE, '||vOLD_DT_FIM_TEMP_CARGO||',''1'', '||vPAGAMENTO_SERVIDOR||');';
        GRAVA_LOG('INSERT',vcomando);
              END IF;

      END IF;

  ELSIF ( vVALIDA_NOME_TABELA > 0 ) THEN
    --FINALIZAR E INSERIR
      IF  ( vOLD_DT_FIM_TEMP_CARGO is null OR vOLD_DT_FIM_TEMP_CARGO > p_DATA_INICIO_DESVIO  )THEN
    --UPDATE NA TABELA DE FUNÇÃO FINALIZANDO O REGISTRO ANTERIOR
      UPDATE RHPLCS_ALT_CARGO B
      SET B.DT_FIM_TEMP      = ( p_DATA_INICIO_DESVIO - 1),
      LOGIN_USUARIO = 	 p_login  , DT_ULT_ALTER_USUA = SYSDATE
      WHERE B.CODIGO_EMPRESA = P_CODIGO_EMPRESA
      AND B.TIPO_CONTRATO    = p_TIPO_CONTRATO
      AND B.CODIGO_CONTRATO  = p_CODIGO_CONTRATO
      AND B.dt_alter_cargo   = vOLD_DT_ALTER_CARGO
      AND B.OCORRENCIA = vOCORRENCIA_CARG;

      vcomando := 'UPDATE RHPLCS_ALT_CARGO B SET B.DT_FIM_TEMP = ( '||p_DATA_INICIO_DESVIO||' - 1),LOGIN_USUARIO = 	 '||p_login||'  , DT_ULT_ALTER_USUA = SYSDATE WHERE B.CODIGO_EMPRESA = '||P_CODIGO_EMPRESA||'AND B.TIPO_CONTRATO    = '||p_TIPO_CONTRATO||' AND B.CODIGO_CONTRATO  = '||p_CODIGO_CONTRATO||' AND B.dt_alter_cargo   = '||vOLD_DT_ALTER_CARGO||' AND B.OCORRENCIA = '||vOCORRENCIA_CARG||';';
      GRAVA_LOG('UPDATE',vcomando);

      -- ALTERADO EM 12/11 PARA INSERIR COM O NÍVEL CORRETO!
      INSERT INTO RHPLCS_ALT_CARGO
      (CODIGO_EMPRESA, TIPO_CONTRATO,CODIGO_CONTRATO, DT_ALTER_CARGO,	MOTIVO_ALTERACAO, COD_CARGO_EFET_AT,	NIV_CARGO_EFET_AT	,COD_CARGO_COMIS_AT,	NIV_CARGO_COMIS_AT,	COD_CARGO_AMPAR_AT,	NIV_CARGO_AMPAR_AT,	
      LOGIN_USUARIO,	DT_ULT_ALTER_USUA,	DT_FIM_TEMP	, OCORRENCIA, SALARIO_PAGTO,DATA_PUBLIC) VALUES
      (P_CODIGO_EMPRESA,p_TIPO_CONTRATO, p_CODIGO_CONTRATO, p_DATA_INICIO_DESVIO, LPAD(vVERIFICA_MOTIVO,4,0), 
      NVL(vOLD_C_COD_CARGO_EFETIVO,'000000000000000'), 
      vOLD_C_NIVEL_CARGO_EFETIV, 
      case when vCODIGO_FUNCAO is not null then '000000000000000' else vCOD_CARGO_COMIS end, 
      case when vCODIGO_FUNCAO is not null then null else  '00000'  end,
      NVL(vOLD_COD_CARGO_AMPAR_AT,'000000000000000'), vOLD_C_NIVEL_CARGO_AMPAR,
      p_login ,SYSDATE,  case when ( p_DATA_FIM_DESVIO is null or p_DATA_FIM_DESVIO > sysdate )then null else p_DATA_FIM_DESVIO end ,
      case when ( vOLD_DT_ALTER_CARGO = p_DATA_INICIO_DESVIO ) then vOCORRENCIA_CARG + 1 else 1 end 
      , vPAGAMENTO_SERVIDOR,vDT_PUBLIC_DOM);

      vcomando := 'INSERT INTO RHPLCS_ALT_CARGO (CODIGO_EMPRESA, TIPO_CONTRATO,CODIGO_CONTRATO, DT_ALTER_CARGO,	MOTIVO_ALTERACAO, COD_CARGO_EFET_AT,	NIV_CARGO_EFET_AT	,COD_CARGO_COMIS_AT,	NIV_CARGO_COMIS_AT,	COD_CARGO_AMPAR_AT,	NIV_CARGO_AMPAR_AT,	LOGIN_USUARIO,	DT_ULT_ALTER_USUA,	DT_FIM_TEMP	, OCORRENCIA, SALARIO_PAGTO,DATA_PUBLIC) VALUES ('||P_CODIGO_EMPRESA||','||p_TIPO_CONTRATO||', '||p_CODIGO_CONTRATO||', '||p_DATA_INICIO_DESVIO||', LPAD('||vVERIFICA_MOTIVO||',4,0), NVL('||vOLD_C_COD_CARGO_EFETIVO||',''000000000000000''), '||vOLD_C_NIVEL_CARGO_EFETIV||', case when '||vCODIGO_FUNCAO||' is not null then ''000000000000000'' else '||vCOD_CARGO_COMIS||' end, case when '||vCODIGO_FUNCAO||' is not null then null else  ''00000''  end, NVL('||vOLD_COD_CARGO_AMPAR_AT||',''000000000000000''), '||vOLD_C_NIVEL_CARGO_AMPAR||', '||p_login||' ,SYSDATE,  case when ( '||p_DATA_FIM_DESVIO||' is null or '||p_DATA_FIM_DESVIO||' > sysdate )then null else '||p_DATA_FIM_DESVIO||' end , case when ( '||vOLD_DT_ALTER_CARGO||' = '||p_DATA_INICIO_DESVIO||' ) then '||vOCORRENCIA_CARG||' + 1 else 1 end , '||vPAGAMENTO_SERVIDOR||','||vDT_PUBLIC_DOM||');';
      GRAVA_LOG('INSERT',vcomando);

          IF  ( p_DATA_FIM_DESVIO < trunc(sysdate) ) THEN
          -- VOLTANDO HISTÒRICO
                IF (vMOTIVO_DESVIO = '0001') then
                  INSERT INTO RHPLCS_ALT_CARGO
                  (CODIGO_EMPRESA,TIPO_CONTRATO,CODIGO_CONTRATO,DT_ALTER_CARGO,	MOTIVO_ALTERACAO,COD_CARGO_EFET_AT,	NIV_CARGO_EFET_AT	,COD_CARGO_COMIS_AT,	NIV_CARGO_COMIS_AT,	COD_CARGO_AMPAR_AT,	NIV_CARGO_AMPAR_AT,	
                  LOGIN_USUARIO,	DT_ULT_ALTER_USUA,	DT_FIM_TEMP	, OCORRENCIA, SALARIO_PAGTO) VALUES
                  (P_CODIGO_EMPRESA,p_TIPO_CONTRATO, p_CODIGO_CONTRATO,  p_DATA_FIM_DESVIO + 1 ,'0020' , NVL(vOLD_C_COD_CARGO_EFETIVO,'000000000000000'), vOLD_C_NIVEL_CARGO_EFETIV, NVL(vOLD_C_COD_CARGO_COMISS,'000000000000000'), vOLD_C_NIVEL_CARGO_COMISS , NVL(vOLD_C_COD_CARGO_AMPAR,'000000000000000'),vOLD_C_NIVEL_CARGO_AMPAR,
                    p_login ,SYSDATE, vOLD_DT_FIM_TEMP_CARGO ,'1', vPAGAMENTO_SERVIDOR);

        vcomando := 'INSERT INTO RHPLCS_ALT_CARGO (CODIGO_EMPRESA,TIPO_CONTRATO,CODIGO_CONTRATO,DT_ALTER_CARGO,	MOTIVO_ALTERACAO,COD_CARGO_EFET_AT,	NIV_CARGO_EFET_AT	,COD_CARGO_COMIS_AT,	NIV_CARGO_COMIS_AT,	COD_CARGO_AMPAR_AT,	NIV_CARGO_AMPAR_AT,	LOGIN_USUARIO,	DT_ULT_ALTER_USUA,	DT_FIM_TEMP	, OCORRENCIA, SALARIO_PAGTO) VALUES ('||P_CODIGO_EMPRESA||','||p_TIPO_CONTRATO||', '||p_CODIGO_CONTRATO||',  '||p_DATA_FIM_DESVIO||' + 1 ,''0020'' , NVL('||vOLD_C_COD_CARGO_EFETIVO||',''000000000000000''), '||vOLD_C_NIVEL_CARGO_EFETIV||', NVL('||vOLD_C_COD_CARGO_COMISS||',''000000000000000''), '||vOLD_C_NIVEL_CARGO_COMISS||', NVL('||vOLD_C_COD_CARGO_AMPAR||',''000000000000000''),'||vOLD_C_NIVEL_CARGO_AMPAR||', '||p_login||' ,SYSDATE, '||vOLD_DT_FIM_TEMP_CARGO||' ,''1'', '||vPAGAMENTO_SERVIDOR||');';
        GRAVA_LOG('INSERT',vcomando);

                ELSIF (vMOTIVO_DESVIO = '0002') then  
                  INSERT INTO RHPLCS_ALT_CARGO
                  (CODIGO_EMPRESA,TIPO_CONTRATO,CODIGO_CONTRATO,DT_ALTER_CARGO,	MOTIVO_ALTERACAO,COD_CARGO_EFET_AT,	NIV_CARGO_EFET_AT	,COD_CARGO_COMIS_AT,	NIV_CARGO_COMIS_AT,	COD_CARGO_AMPAR_AT,	NIV_CARGO_AMPAR_AT,	
                  LOGIN_USUARIO,	DT_ULT_ALTER_USUA,	DT_FIM_TEMP	, OCORRENCIA, SALARIO_PAGTO) VALUES
                  (P_CODIGO_EMPRESA,p_TIPO_CONTRATO, p_CODIGO_CONTRATO,  p_DATA_FIM_DESVIO + 1 ,'0009' , NVL(vOLD_C_COD_CARGO_EFETIVO,'000000000000000'), vOLD_C_NIVEL_CARGO_EFETIV, NVL(vOLD_C_COD_CARGO_COMISS,'000000000000000'), vOLD_C_NIVEL_CARGO_COMISS , NVL(vOLD_C_COD_CARGO_AMPAR,'000000000000000'),vOLD_C_NIVEL_CARGO_AMPAR,
                    p_login ,SYSDATE, vOLD_DT_FIM_TEMP_CARGO ,'1', vPAGAMENTO_SERVIDOR);

        vcomando := 'INSERT INTO RHPLCS_ALT_CARGO (CODIGO_EMPRESA,TIPO_CONTRATO,CODIGO_CONTRATO,DT_ALTER_CARGO,	MOTIVO_ALTERACAO,COD_CARGO_EFET_AT,	NIV_CARGO_EFET_AT	,COD_CARGO_COMIS_AT,	NIV_CARGO_COMIS_AT,	COD_CARGO_AMPAR_AT,	NIV_CARGO_AMPAR_AT,	LOGIN_USUARIO,	DT_ULT_ALTER_USUA,	DT_FIM_TEMP	, OCORRENCIA, SALARIO_PAGTO) VALUES ('||P_CODIGO_EMPRESA||','||p_TIPO_CONTRATO||', '||p_CODIGO_CONTRATO||',  '||p_DATA_FIM_DESVIO||' + 1 ,''0009'' , NVL('||vOLD_C_COD_CARGO_EFETIVO||',''000000000000000''), '||vOLD_C_NIVEL_CARGO_EFETIV||', NVL('||vOLD_C_COD_CARGO_COMISS||',''000000000000000''), '||vOLD_C_NIVEL_CARGO_COMISS||' , NVL('||vOLD_C_COD_CARGO_AMPAR||',''000000000000000''),'||vOLD_C_NIVEL_CARGO_AMPAR||', '||p_login||' ,SYSDATE, '||vOLD_DT_FIM_TEMP_CARGO||',''1'', '||vPAGAMENTO_SERVIDOR||');';
        GRAVA_LOG('INSERT',vcomando);

                END IF;
          END IF;
      ELSIF (vOLD_DT_FIM_TEMP_CARGO <  p_DATA_INICIO_DESVIO ) THEN 
      -- não é necessário finalizar o registro anterior, apenas fazer insert com o dado da designação

      -- ALTERADO EM 12/11 PARA INSERIR COM O NÍVEL CORRETO!
      INSERT INTO RHPLCS_ALT_CARGO
      (CODIGO_EMPRESA, TIPO_CONTRATO,CODIGO_CONTRATO, DT_ALTER_CARGO,	MOTIVO_ALTERACAO, COD_CARGO_EFET_AT,	NIV_CARGO_EFET_AT	,COD_CARGO_COMIS_AT,	NIV_CARGO_COMIS_AT,	COD_CARGO_AMPAR_AT,	NIV_CARGO_AMPAR_AT,	
      LOGIN_USUARIO,	DT_ULT_ALTER_USUA,	DT_FIM_TEMP	, OCORRENCIA, SALARIO_PAGTO,DATA_PUBLIC) VALUES
      (P_CODIGO_EMPRESA,p_TIPO_CONTRATO, p_CODIGO_CONTRATO, p_DATA_INICIO_DESVIO, LPAD(vVERIFICA_MOTIVO,4,0), 
      NVL(vOLD_C_COD_CARGO_EFETIVO,'000000000000000'), 
      vOLD_C_NIVEL_CARGO_EFETIV, 
      case when vCODIGO_FUNCAO is not null then '000000000000000' else vCOD_CARGO_COMIS end, 
      case when vCODIGO_FUNCAO is not null then null else  '00000'  end,
      NVL(vOLD_COD_CARGO_AMPAR_AT,'000000000000000'), vOLD_C_NIVEL_CARGO_AMPAR,
      p_login ,SYSDATE,  case when ( p_DATA_FIM_DESVIO is null or p_DATA_FIM_DESVIO > sysdate )then null else p_DATA_FIM_DESVIO end ,
      case when ( vOLD_DT_ALTER_CARGO = p_DATA_INICIO_DESVIO ) then vOCORRENCIA_CARG + 1 else 1 end 
      , vPAGAMENTO_SERVIDOR ,vDT_PUBLIC_DOM);

      vcomando := 'INSERT INTO RHPLCS_ALT_CARGO (CODIGO_EMPRESA, TIPO_CONTRATO,CODIGO_CONTRATO, DT_ALTER_CARGO,	MOTIVO_ALTERACAO, COD_CARGO_EFET_AT,	NIV_CARGO_EFET_AT	,COD_CARGO_COMIS_AT,	NIV_CARGO_COMIS_AT,	COD_CARGO_AMPAR_AT,	NIV_CARGO_AMPAR_AT,	LOGIN_USUARIO,	DT_ULT_ALTER_USUA,	DT_FIM_TEMP	, OCORRENCIA, SALARIO_PAGTO,DATA_PUBLIC) VALUES ('||P_CODIGO_EMPRESA||','||p_TIPO_CONTRATO||', '||p_CODIGO_CONTRATO||', '||p_DATA_INICIO_DESVIO||', LPAD('||vVERIFICA_MOTIVO||',4,0), NVL('||vOLD_C_COD_CARGO_EFETIVO||',''000000000000000''), '||vOLD_C_NIVEL_CARGO_EFETIV||', case when '||vCODIGO_FUNCAO||' is not null then ''000000000000000'' else '||vCOD_CARGO_COMIS||' end, case when '||vCODIGO_FUNCAO||' is not null then null else  ''00000''  end, NVL('||vOLD_COD_CARGO_AMPAR_AT||',''000000000000000''), '||vOLD_C_NIVEL_CARGO_AMPAR||', '||p_login||' ,SYSDATE,  case when ( '||p_DATA_FIM_DESVIO||' is null or '||p_DATA_FIM_DESVIO||' > sysdate )then null else '||p_DATA_FIM_DESVIO||' end , case when ( '||vOLD_DT_ALTER_CARGO||' = '||p_DATA_INICIO_DESVIO||' ) then '||vOCORRENCIA_CARG||' + 1 else 1 end , '||vPAGAMENTO_SERVIDOR||', '||vDT_PUBLIC_DOM||');';
      GRAVA_LOG('INSERT',vcomando);

      --O SCRIPT ABAIXO ESTAVA INCORRETO . POIS NESTES CASOS HÁ LACUNAS NO INTERVALO QUE ME IMPEDE DE FAZER O RETORNO DO HISTÓRICO CORRETO
     /* 
      IF  ( p_DATA_FIM_DESVIO < trunc(sysdate) ) THEN
          -- VOLTANDO HISTÒRICO
                IF (vMOTIVO_DESVIO = '0001') then
                  INSERT INTO RHPLCS_ALT_CARGO
                  (CODIGO_EMPRESA,TIPO_CONTRATO,CODIGO_CONTRATO,DT_ALTER_CARGO,	MOTIVO_ALTERACAO,COD_CARGO_EFET_AT,	NIV_CARGO_EFET_AT	,COD_CARGO_COMIS_AT,	NIV_CARGO_COMIS_AT,	COD_CARGO_AMPAR_AT,	NIV_CARGO_AMPAR_AT,	
                  LOGIN_USUARIO,	DT_ULT_ALTER_USUA,	DT_FIM_TEMP	, OCORRENCIA, SALARIO_PAGTO) VALUES
                  (P_CODIGO_EMPRESA,p_TIPO_CONTRATO, p_CODIGO_CONTRATO,  p_DATA_FIM_DESVIO + 1 ,'0020' , NVL(vOLD_C_COD_CARGO_EFETIVO,'000000000000000'), vOLD_C_NIVEL_CARGO_EFETIV, NVL(vOLD_C_COD_CARGO_COMISS,'000000000000000'), vOLD_C_NIVEL_CARGO_COMISS , NVL(vOLD_C_COD_CARGO_AMPAR,'000000000000000'),vOLD_C_NIVEL_CARGO_AMPAR,
                    p_login ,SYSDATE, vOLD_DT_FIM_TEMP_CARGO ,'1', vPAGAMENTO_SERVIDOR);

      vcomando := 'INSERT INTO RHPLCS_ALT_CARGO (CODIGO_EMPRESA,TIPO_CONTRATO,CODIGO_CONTRATO,DT_ALTER_CARGO,	MOTIVO_ALTERACAO,COD_CARGO_EFET_AT,	NIV_CARGO_EFET_AT	,COD_CARGO_COMIS_AT,	NIV_CARGO_COMIS_AT,	COD_CARGO_AMPAR_AT,	NIV_CARGO_AMPAR_AT,	LOGIN_USUARIO,	DT_ULT_ALTER_USUA,	DT_FIM_TEMP	, OCORRENCIA, SALARIO_PAGTO) VALUES ('||P_CODIGO_EMPRESA||','||p_TIPO_CONTRATO||', '||p_CODIGO_CONTRATO||',  '||p_DATA_FIM_DESVIO||' + 1 ,''0020'' , NVL('||vOLD_C_COD_CARGO_EFETIVO||',''000000000000000''), '||vOLD_C_NIVEL_CARGO_EFETIV||', NVL('||vOLD_C_COD_CARGO_COMISS||',''000000000000000''), '||vOLD_C_NIVEL_CARGO_COMISS||', NVL('||vOLD_C_COD_CARGO_AMPAR||',''000000000000000''),'||vOLD_C_NIVEL_CARGO_AMPAR||', '||p_login||' ,SYSDATE, '||vOLD_DT_FIM_TEMP_CARGO||' ,''1'', '||vPAGAMENTO_SERVIDOR||');';
        GRAVA_LOG('INSERT',vcomando);

                elsIF (vMOTIVO_DESVIO = '0002') then  
                  INSERT INTO RHPLCS_ALT_CARGO
                  (CODIGO_EMPRESA,TIPO_CONTRATO,CODIGO_CONTRATO,DT_ALTER_CARGO,	MOTIVO_ALTERACAO,COD_CARGO_EFET_AT,	NIV_CARGO_EFET_AT	,COD_CARGO_COMIS_AT,	NIV_CARGO_COMIS_AT,	COD_CARGO_AMPAR_AT,	NIV_CARGO_AMPAR_AT,	
                  LOGIN_USUARIO,	DT_ULT_ALTER_USUA,	DT_FIM_TEMP	, OCORRENCIA, SALARIO_PAGTO) VALUES
                  (P_CODIGO_EMPRESA,p_TIPO_CONTRATO, p_CODIGO_CONTRATO,  p_DATA_FIM_DESVIO + 1 ,'0009' , NVL(vOLD_C_COD_CARGO_EFETIVO,'000000000000000'), vOLD_C_NIVEL_CARGO_EFETIV, NVL(vOLD_C_COD_CARGO_COMISS,'000000000000000'), vOLD_C_NIVEL_CARGO_COMISS , NVL(vOLD_C_COD_CARGO_AMPAR,'000000000000000'),vOLD_C_NIVEL_CARGO_AMPAR,
                    p_login ,SYSDATE, vOLD_DT_FIM_TEMP_CARGO ,'1', vPAGAMENTO_SERVIDOR);

        vcomando := 'INSERT INTO RHPLCS_ALT_CARGO (CODIGO_EMPRESA,TIPO_CONTRATO,CODIGO_CONTRATO,DT_ALTER_CARGO,	MOTIVO_ALTERACAO,COD_CARGO_EFET_AT,	NIV_CARGO_EFET_AT	,COD_CARGO_COMIS_AT,	NIV_CARGO_COMIS_AT,	COD_CARGO_AMPAR_AT,	NIV_CARGO_AMPAR_AT,	LOGIN_USUARIO,	DT_ULT_ALTER_USUA,	DT_FIM_TEMP	, OCORRENCIA, SALARIO_PAGTO) VALUES ('||P_CODIGO_EMPRESA||','||p_TIPO_CONTRATO||', '||p_CODIGO_CONTRATO||',  '||p_DATA_FIM_DESVIO||' + 1 ,''0009'' , NVL('||vOLD_C_COD_CARGO_EFETIVO||',''000000000000000''), '||vOLD_C_NIVEL_CARGO_EFETIV||', NVL('||vOLD_C_COD_CARGO_COMISS||',''000000000000000''), '||vOLD_C_NIVEL_CARGO_COMISS||' , NVL('||vOLD_C_COD_CARGO_AMPAR||',''000000000000000''),'||vOLD_C_NIVEL_CARGO_AMPAR||', '||p_login||' ,SYSDATE, '||vOLD_DT_FIM_TEMP_CARGO||',''1'', '||vPAGAMENTO_SERVIDOR||');';
        GRAVA_LOG('INSERT',vcomando);

                END IF;
          END IF;
      */
      END IF;

  END IF; 

END IF;


-- inserido em 09/11/2020 FAZ O RETORNO NA HISTÓRICA QUANDO A DESIGNAÇÃO FINDA
 IF ( ( p_ACAO = 'ENCERRAR' ) AND ( vVALIDA_NOME_TABELA_INSERT > 0 )) -- VALIDA SE A PESSOA RECEBEU UM CARGO  
   THEN
       IF ( ( vCOD_CARGO_EFET = vOLD_COD_CARGO_EFET_AT and vOLD_dt_alter_cargo = p_DATA_INICIO_DESVIO ) or (vCOD_CARGO_COMIS = vOLD_COD_CARGO_COMIS_AT and vOLD_dt_alter_cargo = p_DATA_INICIO_DESVIO) ) THEN
             dbms_output.put_line('Entrou no Encerrar Cargo');
          UPDATE RHPLCS_ALT_CARGO B
          SET B.DT_FIM_TEMP      = p_DATA_FIM_DESVIO,
          LOGIN_USUARIO = 	 p_login  , DT_ULT_ALTER_USUA = SYSDATE
          WHERE B.CODIGO_EMPRESA = P_CODIGO_EMPRESA
          AND B.TIPO_CONTRATO    = p_TIPO_CONTRATO
          AND B.CODIGO_CONTRATO  = p_CODIGO_CONTRATO
          AND B.dt_alter_cargo   = p_DATA_INICIO_DESVIO
          AND B.OCORRENCIA = case when ( vOLD_DT_ALTER_CARGO = p_DATA_INICIO_DESVIO ) then vOCORRENCIA_CARG else vOCORRENCIA_CARG + 1 end;

      vcomando := 'UPDATE RHPLCS_ALT_CARGO B SET B.DT_FIM_TEMP = ( '||p_DATA_FIM_DESVIO||', LOGIN_USUARIO = '||p_login||', DT_ULT_ALTER_USUA = SYSDATE WHERE B.CODIGO_EMPRESA = '||P_CODIGO_EMPRESA||' AND B.TIPO_CONTRATO    = '||p_TIPO_CONTRATO||' AND B.CODIGO_CONTRATO  = '||p_CODIGO_CONTRATO||' AND B.dt_alter_cargo   = '||vOLD_DT_ALTER_CARGO||' AND B.OCORRENCIA = case when ( '||vOLD_DT_ALTER_CARGO||' = '||p_DATA_INICIO_DESVIO||' ) then '||vOCORRENCIA_CARG||' + 1 else 1 end;';
      GRAVA_LOG('UPDATE',vcomando);
             -- VOLTANDO HISTÒRICO
                IF (vMOTIVO_DESVIO = '0001') then
                  INSERT INTO RHPLCS_ALT_CARGO
                  (CODIGO_EMPRESA,TIPO_CONTRATO,CODIGO_CONTRATO,DT_ALTER_CARGO,	MOTIVO_ALTERACAO,COD_CARGO_EFET_AT,	NIV_CARGO_EFET_AT	,COD_CARGO_COMIS_AT,	NIV_CARGO_COMIS_AT,	COD_CARGO_AMPAR_AT,	NIV_CARGO_AMPAR_AT,	
                  LOGIN_USUARIO,	DT_ULT_ALTER_USUA,	DT_FIM_TEMP	, OCORRENCIA, SALARIO_PAGTO) VALUES
                  (P_CODIGO_EMPRESA,p_TIPO_CONTRATO, p_CODIGO_CONTRATO,  p_DATA_FIM_DESVIO + 1 ,'0020' , NVL(vOLD_C_COD_CARGO_EFETIVO,'000000000000000'), vOLD_C_NIVEL_CARGO_EFETIV, NVL(vOLD_C_COD_CARGO_COMISS,'000000000000000'), vOLD_C_NIVEL_CARGO_COMISS , NVL(vOLD_C_COD_CARGO_AMPAR,'000000000000000'),vOLD_C_NIVEL_CARGO_AMPAR,
                    p_login ,SYSDATE, vOLD_DT_FIM_TEMP_CARGO ,'1', vPAGAMENTO_SERVIDOR);

      vcomando := 'INSERT INTO RHPLCS_ALT_CARGO (CODIGO_EMPRESA,TIPO_CONTRATO,CODIGO_CONTRATO,DT_ALTER_CARGO,	MOTIVO_ALTERACAO,COD_CARGO_EFET_AT,	NIV_CARGO_EFET_AT	,COD_CARGO_COMIS_AT,	NIV_CARGO_COMIS_AT,	COD_CARGO_AMPAR_AT,	NIV_CARGO_AMPAR_AT,	 LOGIN_USUARIO,	DT_ULT_ALTER_USUA,	DT_FIM_TEMP	, OCORRENCIA, SALARIO_PAGTO) VALUES ('||P_CODIGO_EMPRESA||','||p_TIPO_CONTRATO||', '||p_CODIGO_CONTRATO||',  '||p_DATA_FIM_DESVIO||' + 1 ,''0020'' , NVL('||vOLD_C_COD_CARGO_EFETIVO||',''000000000000000''), '||vOLD_C_NIVEL_CARGO_EFETIV||', NVL('||vOLD_C_COD_CARGO_COMISS||',''000000000000000''), '||vOLD_C_NIVEL_CARGO_COMISS||', NVL('||vOLD_C_COD_CARGO_AMPAR||',''000000000000000''),'||vOLD_C_NIVEL_CARGO_AMPAR||', '||p_login||' ,SYSDATE, '||vOLD_DT_FIM_TEMP_CARGO||' ,''1'', '||vPAGAMENTO_SERVIDOR||');'; 			
      GRAVA_LOG('INSERT',vcomando);

                ELSIF (vMOTIVO_DESVIO = '0002') then  
                  INSERT INTO RHPLCS_ALT_CARGO
                  (CODIGO_EMPRESA,TIPO_CONTRATO,CODIGO_CONTRATO,DT_ALTER_CARGO,	MOTIVO_ALTERACAO,COD_CARGO_EFET_AT,	NIV_CARGO_EFET_AT	,COD_CARGO_COMIS_AT,	NIV_CARGO_COMIS_AT,	COD_CARGO_AMPAR_AT,	NIV_CARGO_AMPAR_AT,	
                  LOGIN_USUARIO,	DT_ULT_ALTER_USUA,	DT_FIM_TEMP	, OCORRENCIA, SALARIO_PAGTO) VALUES
                  (P_CODIGO_EMPRESA,p_TIPO_CONTRATO, p_CODIGO_CONTRATO,  p_DATA_FIM_DESVIO + 1 ,'0009' , NVL(vOLD_C_COD_CARGO_EFETIVO,'000000000000000'), vOLD_C_NIVEL_CARGO_EFETIV, NVL(vOLD_C_COD_CARGO_COMISS,'000000000000000'), vOLD_C_NIVEL_CARGO_COMISS , NVL(vOLD_C_COD_CARGO_AMPAR,'000000000000000'),vOLD_C_NIVEL_CARGO_AMPAR,
                    p_login ,SYSDATE, vOLD_DT_FIM_TEMP_CARGO ,'1', vPAGAMENTO_SERVIDOR);

      vcomando := 'INSERT INTO RHPLCS_ALT_CARGO  (CODIGO_EMPRESA,TIPO_CONTRATO,CODIGO_CONTRATO,DT_ALTER_CARGO,	MOTIVO_ALTERACAO,COD_CARGO_EFET_AT,	NIV_CARGO_EFET_AT	,COD_CARGO_COMIS_AT,	NIV_CARGO_COMIS_AT,	COD_CARGO_AMPAR_AT,	NIV_CARGO_AMPAR_AT,	 LOGIN_USUARIO,	DT_ULT_ALTER_USUA,	DT_FIM_TEMP	, OCORRENCIA, SALARIO_PAGTO) VALUES ('||P_CODIGO_EMPRESA||','||p_TIPO_CONTRATO||', '||p_CODIGO_CONTRATO||',  '||p_DATA_FIM_DESVIO||' + 1 ,''0009'' , NVL('||vOLD_C_COD_CARGO_EFETIVO||',''000000000000000''), '||vOLD_C_NIVEL_CARGO_EFETIV||', NVL('||vOLD_C_COD_CARGO_COMISS||',''000000000000000''), '||vOLD_C_NIVEL_CARGO_COMISS||' , NVL('||vOLD_C_COD_CARGO_AMPAR||',''000000000000000''),'||vOLD_C_NIVEL_CARGO_AMPAR||', '||p_login||' ,SYSDATE, '||vOLD_DT_FIM_TEMP_CARGO||',''1'', '||vPAGAMENTO_SERVIDOR||');';				
      GRAVA_LOG('INSERT',vcomando);

              END IF;
      END IF;
 END IF;
 --FIM 09/11


--DELETE
 IF ( ( p_ACAO = 'EXCLUIR' OR p_ACAO = 'U-EXCLUIR')  AND p_DATA_INICIO_DESVIO <= trunc(sysdate) )  THEN
  IF ( vVALIDA_NOME_TABELA_INSERT > 0 ) THEN
    IF( vVALIDA_NOME_TABELA = 0) THEN
            DELETE FROM RHPLCS_ALT_CARGO WHERE CODIGO_EMPRESA = P_CODIGO_EMPRESA AND TIPO_CONTRATO    = p_TIPO_CONTRATO AND CODIGO_CONTRATO  = p_CODIGO_CONTRATO AND DT_ALTER_CARGO  = p_DATA_INICIO_DESVIO AND OCORRENCIA = case when ( vOLD_DT_ALTER_CARGO = p_DATA_INICIO_DESVIO ) then vOCORRENCIA_CARG + 1 else 1 end;

      vcomando := 'DELETE FROM RHPLCS_ALT_CARGO WHERE CODIGO_EMPRESA = '||P_CODIGO_EMPRESA||' AND TIPO_CONTRATO    = '||p_TIPO_CONTRATO||' AND CODIGO_CONTRATO  = '||p_CODIGO_CONTRATO||' AND DT_ALTER_CARGO  = '||p_DATA_INICIO_DESVIO||' AND OCORRENCIA = case when ( '||vOLD_DT_ALTER_CARGO||' = '||p_DATA_INICIO_DESVIO||' ) then '||vOCORRENCIA_CARG||' + 1 else 1 end ;';
      GRAVA_LOG('DELETE',vcomando);

    ELSIF ( vVALIDA_NOME_TABELA > 0) THEN
      IF( vOLD_DT_FIM_TEMP_CARGO IS NULL OR vOLD_DT_FIM_TEMP_CARGO > p_DATA_INICIO_DESVIO )THEN
    --UPDATE NA TABELA DE CARGO FINALIZANDO O REGISTRO ANTERIOR
            UPDATE RHPLCS_ALT_CARGO B
            SET B.DT_FIM_TEMP      = vOLD_DT_FIM_TEMP_CARGO,
            LOGIN_USUARIO = 	 p_login  , DT_ULT_ALTER_USUA = SYSDATE
            WHERE B.CODIGO_EMPRESA = P_CODIGO_EMPRESA
            AND B.TIPO_CONTRATO    = p_TIPO_CONTRATO
            AND B.CODIGO_CONTRATO  = p_CODIGO_CONTRATO
            AND B.DT_ALTER_CARGO  = vOLD_DATA_INICIO_FUNCAO
            AND B.OCORRENCIA = vOCORRENCIA_CARG;

      vcomando := 'UPDATE RHPLCS_ALT_CARGO B  SET B.DT_FIM_TEMP = '||vOLD_DT_FIM_TEMP_CARGO||', LOGIN_USUARIO = '||p_login||' , DT_ULT_ALTER_USUA = SYSDATE WHERE B.CODIGO_EMPRESA = '||P_CODIGO_EMPRESA||' AND B.TIPO_CONTRATO = '||p_TIPO_CONTRATO||' AND B.CODIGO_CONTRATO  = '||p_CODIGO_CONTRATO||' AND B.DT_ALTER_CARGO  = '||vOLD_DATA_INICIO_FUNCAO||' AND B.OCORRENCIA = '||vOCORRENCIA_CARG||';';
      GRAVA_LOG('UPDATE',vcomando);


            DELETE FROM RHPLCS_ALT_CARGO WHERE CODIGO_EMPRESA = P_CODIGO_EMPRESA AND TIPO_CONTRATO    = p_TIPO_CONTRATO AND CODIGO_CONTRATO  = p_CODIGO_CONTRATO AND DT_ALTER_CARGO  = p_DATA_INICIO_DESVIO AND OCORRENCIA = case when ( vOLD_DT_ALTER_CARGO = p_DATA_INICIO_DESVIO ) then vOCORRENCIA_CARG + 1 else 1 end;

      vcomando := 'DELETE FROM RHPLCS_ALT_CARGO WHERE CODIGO_EMPRESA = '||P_CODIGO_EMPRESA||' AND TIPO_CONTRATO    = '||p_TIPO_CONTRATO||' AND CODIGO_CONTRATO  = '||p_CODIGO_CONTRATO||' AND DT_ALTER_CARGO  = '||p_DATA_INICIO_DESVIO||' AND OCORRENCIA = case when ( '||vOLD_DT_ALTER_CARGO||' = '||p_DATA_INICIO_DESVIO||' ) then '||vOCORRENCIA_CARG||' + 1 else 1 end ;';
      GRAVA_LOG('DELETE',vcomando);

            DELETE FROM RHPLCS_ALT_CARGO WHERE  CODIGO_EMPRESA = P_CODIGO_EMPRESA AND TIPO_CONTRATO    = p_TIPO_CONTRATO AND CODIGO_CONTRATO  = p_CODIGO_CONTRATO AND DT_ALTER_CARGO  = p_DATA_FIM_DESVIO + 1  AND OCORRENCIA = '1'; 
      vcomando := 'DELETE FROM RHPLCS_ALT_CARGO WHERE  CODIGO_EMPRESA = '||P_CODIGO_EMPRESA||' AND TIPO_CONTRATO    = '||p_TIPO_CONTRATO||' AND CODIGO_CONTRATO  = '||p_CODIGO_CONTRATO||' AND DT_ALTER_CARGO   = '||p_DATA_FIM_DESVIO||' + 1  AND OCORRENCIA = ''1''; ';
      GRAVA_LOG('DELETE',vcomando);

      ELSIF ( vOLD_DT_FIM_TEMP_CARGO < p_DATA_INICIO_DESVIO) THEN 
          DELETE FROM RHPLCS_ALT_CARGO WHERE  CODIGO_EMPRESA = '||P_CODIGO_EMPRESA||' AND TIPO_CONTRATO    = '||p_TIPO_CONTRATO||' AND CODIGO_CONTRATO  = '||p_CODIGO_CONTRATO||' AND DT_ALTER_CARGO  = p_DATA_INICIO_DESVIO  AND OCORRENCIA = case when ( vOLD_DT_ALTER_CARGO = p_DATA_INICIO_DESVIO ) then vOCORRENCIA_CARG + 1 else 1 end;
      vcomando := 'DELETE FROM RHPLCS_ALT_CARGO WHERE CODIGO_EMPRESA = '||P_CODIGO_EMPRESA||' AND TIPO_CONTRATO    = '||p_TIPO_CONTRATO||' AND CODIGO_CONTRATO  = '||p_CODIGO_CONTRATO||' AND DT_ALTER_CARGO  = '||p_DATA_INICIO_DESVIO||' AND OCORRENCIA = case when ( '||vOLD_DT_ALTER_CARGO||' = '||p_DATA_INICIO_DESVIO||' ) then '||vOCORRENCIA_CARG||' + 1 else 1 end ;';
      GRAVA_LOG('DELETE',vcomando);
      /*
          DELETE FROM RHPLCS_ALT_CARGO WHERE  CODIGO_EMPRESA = P_CODIGO_EMPRESA AND TIPO_CONTRATO    = p_TIPO_CONTRATO AND CODIGO_CONTRATO  = p_CODIGO_CONTRATO AND DT_ALTER_CARGO  = p_DATA_FIM_DESVIO + 1  AND OCORRENCIA = '1'; 
      vcomando := FN_RECUPERA_COMANDO_SESSAO();
        dbms_output.put_line( vcomando );
      GRAVA_LOG('DELETE',vcomando);
      */
      END IF; 

     END IF;   
    END IF;   
  END IF;

--------------------------------------------------------------------------------------------------MOVIMENTAÇÃO-------------------------------------------------------------------------------------------------

  vPROCURAR := 'RHCGED_TRANSFERENC';
  vVALIDA_NOME_TABELA :=VALIDA_DADO_TABELA ( vPROCURAR,vNOME_TABELA);
  vVERIFICA_MOTIVO := VERIFICA_MOTIVO_DESVIO( vMOTIVO_DESVIO, vPROCURAR );
  vVALIDA_NOME_TABELA_INSERT := VALIDA_DADO_TABELA ( vPROCURAR, vNOME_TABELA_DESIG); 

  IF (( p_DATA_INICIO_DESVIO <> vOLD_DT_ALT_UNID_CUSTO OR (p_DATA_INICIO_DESVIO is not null and vOLD_DT_ALT_UNID_CUSTO is null) )
  AND (vOLD_DT_FIM_TEMP_MOVI <> p_DATA_FIM_DESVIO or (vOLD_DT_FIM_TEMP_MOVI is null and p_DATA_FIM_DESVIO is not null) or (vOLD_DT_FIM_TEMP_MOVI is not null and p_DATA_FIM_DESVIO is null) or (vOLD_DT_FIM_TEMP_MOVI is null and p_DATA_FIM_DESVIO is null))
  and ( p_ACAO = 'INSERIR' or p_ACAO = 'U-INSERIR' )AND  ( vVALIDA_NOME_TABELA_INSERT > 0 ) 
  /*
  and 
  (( ( vCOD_UNIDADE1 <> vOLD_COD_UNIDADE_ATUAL1 and vCOD_UNIDADE1 is not null ) or (vCOD_UNIDADE1 is not null and vOLD_COD_UNIDADE_ATUAL1 is null ) )  or ( ( vCOD_UNIDADE2 <> vOLD_COD_UNIDADE_ATUAL2 and vCOD_UNIDADE2 is not null ) or (vCOD_UNIDADE2 is not null and vOLD_COD_UNIDADE_ATUAL2 is null ) )
  or ( ( vCOD_UNIDADE3 <> vOLD_COD_UNIDADE_ATUAL3 and vCOD_UNIDADE3 is not null ) or (vCOD_UNIDADE3 is not null and vOLD_COD_UNIDADE_ATUAL3 is null ) )  or ( ( vCOD_UNIDADE5 <> vOLD_COD_UNIDADE_ATUAL4 and vCOD_UNIDADE4 is not null ) or (vCOD_UNIDADE4 is not null and vOLD_COD_UNIDADE_ATUAL4 is null ) )
  or ( ( vCOD_UNIDADE5 <> vOLD_COD_UNIDADE_ATUAL5 and vCOD_UNIDADE5 is not null ) or (vCOD_UNIDADE5 is not null and vOLD_COD_UNIDADE_ATUAL5 is null ) )  or ( ( vCOD_UNIDADE6 <> vOLD_COD_UNIDADE_ATUAL6 and vCOD_UNIDADE6 is not null ) or (vCOD_UNIDADE6 is not null and vOLD_COD_UNIDADE_ATUAL6 is null ) )
  )
  */  
  )
    THEN 
    IF( vVALIDA_NOME_TABELA = 0 ) THEN

              IF (vE_CESSAO >= 1) THEN
                    INSERT INTO RHCGED_TRANSFERENC 
                    (CODIGO_EMPRESA,TIPO_CONTRATO, CODIGO, DT_ALT_UNID_CUSTO,COD_MOVIMENTACAO,
                    COD_LOTACAO_ATUAL1,COD_LOTACAO_ATUAL2, COD_LOTACAO_ATUAL3, COD_LOTACAO_ATUAL4,COD_LOTACAO_ATUAL5,COD_LOTACAO_ATUAL6,
                    COD_UNIDADE_ATUAL1, COD_UNIDADE_ATUAL2, COD_UNIDADE_ATUAL3, COD_UNIDADE_ATUAL4, COD_UNIDADE_ATUAL5, COD_UNIDADE_ATUAL6, 
                    COD_CCONTAB_ATUAL1, COD_CCONTAB_ATUAL2, COD_CCONTAB_ATUAL3, COD_CCONTAB_ATUAL4, COD_CCONTAB_ATUAL5, COD_CCONTAB_ATUAL6,
                    COD_CGERENC_ATUAL1 ,COD_CGERENC_ATUAL2, COD_CGERENC_ATUAL3 ,COD_CGERENC_ATUAL4, COD_CGERENC_ATUAL5 ,COD_CGERENC_ATUAL6, 
                    LOGIN_USUARIO, DT_ULT_ALTER_USUA, DT_FIM_TEMP)
                    VALUES (P_CODIGO_EMPRESA, p_TIPO_CONTRATO, p_CODIGO_CONTRATO, p_DATA_INICIO_DESVIO,  LPAD(vVERIFICA_MOTIVO,4,0), 
                    vOLD_COD_LOTACAO_ATUAL1, vOLD_COD_LOTACAO_ATUAL2, vOLD_COD_LOTACAO_ATUAL3, vOLD_COD_LOTACAO_ATUAL4, vOLD_COD_LOTACAO_ATUAL5, vOLD_COD_LOTACAO_ATUAL6,
                    vCOD_UNIDADE1, vCOD_UNIDADE2, vCOD_UNIDADE3, vCOD_UNIDADE4, vCOD_UNIDADE5, vCOD_UNIDADE6,
                    vOLD_COD_CCONTAB_ATUAL1,vOLD_COD_CCONTAB_ATUAL2,vOLD_COD_CCONTAB_ATUAL3,vOLD_COD_CCONTAB_ATUAL4,vOLD_COD_CCONTAB_ATUAL5,vOLD_COD_CCONTAB_ATUAL6,
                    vCOD_UNIDADE1, vCOD_UNIDADE2, vCOD_UNIDADE3, vCOD_UNIDADE4, vCOD_UNIDADE5, vCOD_UNIDADE6,
                    p_login ,SYSDATE,  case when ( p_DATA_FIM_DESVIO is null or p_DATA_FIM_DESVIO > sysdate )then null else p_DATA_FIM_DESVIO end );

                  vcomando :=  'INSERT INTO RHCGED_TRANSFERENC (CODIGO_EMPRESA,TIPO_CONTRATO, CODIGO, DT_ALT_UNID_CUSTO,COD_MOVIMENTACAO,  COD_LOTACAO_ATUAL1,COD_LOTACAO_ATUAL2, COD_LOTACAO_ATUAL3, COD_LOTACAO_ATUAL4,COD_LOTACAO_ATUAL5,COD_LOTACAO_ATUAL6, COD_UNIDADE_ATUAL1, COD_UNIDADE_ATUAL2, COD_UNIDADE_ATUAL3, COD_UNIDADE_ATUAL4, COD_UNIDADE_ATUAL5, COD_UNIDADE_ATUAL6, COD_CCONTAB_ATUAL1, COD_CCONTAB_ATUAL2, COD_CCONTAB_ATUAL3, COD_CCONTAB_ATUAL4, COD_CCONTAB_ATUAL5, COD_CCONTAB_ATUAL6, COD_CGERENC_ATUAL1 ,COD_CGERENC_ATUAL2, COD_CGERENC_ATUAL3 ,COD_CGERENC_ATUAL4, COD_CGERENC_ATUAL5 ,COD_CGERENC_ATUAL6, LOGIN_USUARIO, DT_ULT_ALTER_USUA, DT_FIM_TEMP) VALUES 
                  ('||P_CODIGO_EMPRESA||', '||p_TIPO_CONTRATO||', '||p_CODIGO_CONTRATO||', '||p_DATA_INICIO_DESVIO||',  LPAD('||vVERIFICA_MOTIVO||',4,0),
                  '||vOLD_COD_LOTACAO_ATUAL1||', '||vOLD_COD_LOTACAO_ATUAL2||', '||vOLD_COD_LOTACAO_ATUAL3||', '||vOLD_COD_LOTACAO_ATUAL4||', '||vOLD_COD_LOTACAO_ATUAL5||', '||vOLD_COD_LOTACAO_ATUAL6||', 
                  '||vCOD_UNIDADE1||', '||vCOD_UNIDADE2||', '||vCOD_UNIDADE3||', '||vCOD_UNIDADE4||', '||vCOD_UNIDADE5||', '||vCOD_UNIDADE6||', 
                  '||vOLD_COD_CCONTAB_ATUAL1||','||vOLD_COD_CCONTAB_ATUAL2||','||vOLD_COD_CCONTAB_ATUAL3||','||vOLD_COD_CCONTAB_ATUAL4||','||vOLD_COD_CCONTAB_ATUAL5||','||vOLD_COD_CCONTAB_ATUAL6||',
                  '||vCOD_UNIDADE1||', '||vCOD_UNIDADE2||', '||vCOD_UNIDADE3||', '||vCOD_UNIDADE4||', '||vCOD_UNIDADE5||', '||vCOD_UNIDADE6||',
                  '||p_login||' ,SYSDATE,  case when ( '||p_DATA_FIM_DESVIO||' is null or '||p_DATA_FIM_DESVIO||' > sysdate )then null else '||p_DATA_FIM_DESVIO||' end );'  ;
                  GRAVA_LOG('INSERT',vcomando); 
          ELSE

                    INSERT INTO RHCGED_TRANSFERENC 
                    (CODIGO_EMPRESA,TIPO_CONTRATO, CODIGO, DT_ALT_UNID_CUSTO,COD_MOVIMENTACAO,
                    COD_LOTACAO_ATUAL1,COD_LOTACAO_ATUAL2, COD_LOTACAO_ATUAL3, COD_LOTACAO_ATUAL4,COD_LOTACAO_ATUAL5,COD_LOTACAO_ATUAL6,
                    COD_UNIDADE_ATUAL1, COD_UNIDADE_ATUAL2, COD_UNIDADE_ATUAL3, COD_UNIDADE_ATUAL4, COD_UNIDADE_ATUAL5, COD_UNIDADE_ATUAL6, 
                    COD_CCONTAB_ATUAL1, COD_CCONTAB_ATUAL2, COD_CCONTAB_ATUAL3, COD_CCONTAB_ATUAL4, COD_CCONTAB_ATUAL5, COD_CCONTAB_ATUAL6,
                    COD_CGERENC_ATUAL1 ,COD_CGERENC_ATUAL2, COD_CGERENC_ATUAL3 ,COD_CGERENC_ATUAL4, COD_CGERENC_ATUAL5 ,COD_CGERENC_ATUAL6, 
                    LOGIN_USUARIO, DT_ULT_ALTER_USUA, DT_FIM_TEMP)
                    VALUES (P_CODIGO_EMPRESA, p_TIPO_CONTRATO, p_CODIGO_CONTRATO, p_DATA_INICIO_DESVIO,  LPAD(vVERIFICA_MOTIVO,4,0), 
                    vCOD_UNIDADE1, vCOD_UNIDADE2, vCOD_UNIDADE3, vCOD_UNIDADE4, vCOD_UNIDADE5, vCOD_UNIDADE6,
                    vCOD_UNIDADE1, vCOD_UNIDADE2, vCOD_UNIDADE3, vCOD_UNIDADE4, vCOD_UNIDADE5, vCOD_UNIDADE6,
                    vOLD_COD_CCONTAB_ATUAL1, vOLD_COD_CCONTAB_ATUAL2, vOLD_COD_CCONTAB_ATUAL3,vOLD_COD_CCONTAB_ATUAL4,vOLD_COD_CCONTAB_ATUAL5,vOLD_COD_CCONTAB_ATUAL6,
                    vCOD_UNIDADE1, vCOD_UNIDADE2, vCOD_UNIDADE3, vCOD_UNIDADE4, vCOD_UNIDADE5, vCOD_UNIDADE6,
                    p_login ,SYSDATE,  case when ( p_DATA_FIM_DESVIO is null or p_DATA_FIM_DESVIO > sysdate )then null else p_DATA_FIM_DESVIO end );

                  vcomando :=  'INSERT INTO RHCGED_TRANSFERENC (CODIGO_EMPRESA,TIPO_CONTRATO, CODIGO, DT_ALT_UNID_CUSTO,COD_MOVIMENTACAO,  COD_LOTACAO_ATUAL1,COD_LOTACAO_ATUAL2, COD_LOTACAO_ATUAL3, COD_LOTACAO_ATUAL4,COD_LOTACAO_ATUAL5,COD_LOTACAO_ATUAL6, COD_UNIDADE_ATUAL1, COD_UNIDADE_ATUAL2, COD_UNIDADE_ATUAL3, COD_UNIDADE_ATUAL4, COD_UNIDADE_ATUAL5, COD_UNIDADE_ATUAL6, COD_CCONTAB_ATUAL1, COD_CCONTAB_ATUAL2, COD_CCONTAB_ATUAL3, COD_CCONTAB_ATUAL4, COD_CCONTAB_ATUAL5, COD_CCONTAB_ATUAL6, COD_CGERENC_ATUAL1 ,COD_CGERENC_ATUAL2, COD_CGERENC_ATUAL3 ,COD_CGERENC_ATUAL4, COD_CGERENC_ATUAL5 ,COD_CGERENC_ATUAL6, LOGIN_USUARIO, DT_ULT_ALTER_USUA, DT_FIM_TEMP) VALUES 
                  ('||P_CODIGO_EMPRESA||', '||p_TIPO_CONTRATO||', '||p_CODIGO_CONTRATO||', '||p_DATA_INICIO_DESVIO||',  LPAD('||vVERIFICA_MOTIVO||',4,0),
                  '||vCOD_UNIDADE1||', '||vCOD_UNIDADE2||', '||vCOD_UNIDADE3||', '||vCOD_UNIDADE4||', '||vCOD_UNIDADE5||', '||vCOD_UNIDADE6||', 
                  '||vCOD_UNIDADE1||', '||vCOD_UNIDADE2||', '||vCOD_UNIDADE3||', '||vCOD_UNIDADE4||', '||vCOD_UNIDADE5||', '||vCOD_UNIDADE6||', 
                  '||vOLD_COD_CCONTAB_ATUAL1||','||vOLD_COD_CCONTAB_ATUAL2||','||vOLD_COD_CCONTAB_ATUAL3||','||vOLD_COD_CCONTAB_ATUAL4||','||vOLD_COD_CCONTAB_ATUAL5||','||vOLD_COD_CCONTAB_ATUAL6||',
                  '||vCOD_UNIDADE1||', '||vCOD_UNIDADE2||', '||vCOD_UNIDADE3||', '||vCOD_UNIDADE4||', '||vCOD_UNIDADE5||', '||vCOD_UNIDADE6||',
                  '||p_login||' ,SYSDATE,  case when ( '||p_DATA_FIM_DESVIO||' is null or '||p_DATA_FIM_DESVIO||' > sysdate )then null else '||p_DATA_FIM_DESVIO||' end );'  ;
                  GRAVA_LOG('INSERT',vcomando); 


          END IF;



         IF( p_DATA_FIM_DESVIO < trunc(sysdate) ) then
               -- insert voltando o histórico 
                INSERT INTO RHCGED_TRANSFERENC (CODIGO_EMPRESA,TIPO_CONTRATO, CODIGO, DT_ALT_UNID_CUSTO, COD_MOVIMENTACAO,
                COD_LOTACAO_ATUAL1,COD_LOTACAO_ATUAL2, COD_LOTACAO_ATUAL3, COD_LOTACAO_ATUAL4,COD_LOTACAO_ATUAL5,COD_LOTACAO_ATUAL6,
                COD_UNIDADE_ATUAL1, COD_UNIDADE_ATUAL2, COD_UNIDADE_ATUAL3, COD_UNIDADE_ATUAL4, COD_UNIDADE_ATUAL5, COD_UNIDADE_ATUAL6, 
                COD_CCONTAB_ATUAL1, COD_CCONTAB_ATUAL2, COD_CCONTAB_ATUAL3, COD_CCONTAB_ATUAL4, COD_CCONTAB_ATUAL5, COD_CCONTAB_ATUAL6,
                COD_CGERENC_ATUAL1 ,COD_CGERENC_ATUAL2, COD_CGERENC_ATUAL3 ,COD_CGERENC_ATUAL4, COD_CGERENC_ATUAL5 ,COD_CGERENC_ATUAL6,
                LOGIN_USUARIO, DT_ULT_ALTER_USUA, DT_FIM_TEMP)
                VALUES (P_CODIGO_EMPRESA, p_TIPO_CONTRATO, p_CODIGO_CONTRATO, p_DATA_FIM_DESVIO +1, '0051',
                vOLD_C_COD_LOCAL1,vOLD_C_COD_LOCAL2,vOLD_C_COD_LOCAL3,vOLD_C_COD_LOCAL4,vOLD_C_COD_LOCAL5, vOLD_C_COD_LOCAL6	, 
                vOLD_C_COD_UNIDADE1,vOLD_C_COD_UNIDADE2,vOLD_C_COD_UNIDADE3,vOLD_C_COD_UNIDADE4,vOLD_C_COD_UNIDADE5,vOLD_C_COD_UNIDADE6,
                vOLD_C_COD_CUSTO_CONTAB1,vOLD_C_COD_CUSTO_CONTAB2,vOLD_C_COD_CUSTO_CONTAB3,vOLD_C_COD_CUSTO_CONTAB4,vOLD_C_COD_CUSTO_CONTAB5,vOLD_C_COD_CUSTO_CONTAB6,
                vOLD_C_COD_CUSTO_GERENC1,vOLD_C_COD_CUSTO_GERENC2,vOLD_C_COD_CUSTO_GERENC3,vOLD_C_COD_CUSTO_GERENC4,vOLD_C_COD_CUSTO_GERENC5,vOLD_C_COD_CUSTO_GERENC6,
                 p_login ,SYSDATE, vOLD_DT_FIM_TEMP_MOVI);

            vcomando :=  'INSERT INTO RHCGED_TRANSFERENC (CODIGO_EMPRESA,TIPO_CONTRATO, CODIGO, DT_ALT_UNID_CUSTO, COD_MOVIMENTACAO, COD_LOTACAO_ATUAL1,COD_LOTACAO_ATUAL2, COD_LOTACAO_ATUAL3, COD_LOTACAO_ATUAL4,COD_LOTACAO_ATUAL5,COD_LOTACAO_ATUAL6, COD_UNIDADE_ATUAL1, COD_UNIDADE_ATUAL2, COD_UNIDADE_ATUAL3, COD_UNIDADE_ATUAL4, COD_UNIDADE_ATUAL5, COD_UNIDADE_ATUAL6, COD_CCONTAB_ATUAL1, COD_CCONTAB_ATUAL2, COD_CCONTAB_ATUAL3, COD_CCONTAB_ATUAL4, COD_CCONTAB_ATUAL5, COD_CCONTAB_ATUAL6,COD_CGERENC_ATUAL1 ,COD_CGERENC_ATUAL2, COD_CGERENC_ATUAL3 ,COD_CGERENC_ATUAL4, COD_CGERENC_ATUAL5 ,COD_CGERENC_ATUAL6, LOGIN_USUARIO, DT_ULT_ALTER_USUA, DT_FIM_TEMP) VALUES ('||P_CODIGO_EMPRESA||', '||p_TIPO_CONTRATO||', '||p_CODIGO_CONTRATO||', '||p_DATA_FIM_DESVIO||' +1, ''0051'', '||vOLD_C_COD_LOCAL1||','||vOLD_C_COD_LOCAL2||','||vOLD_C_COD_LOCAL3||','||vOLD_C_COD_LOCAL4||','||vOLD_C_COD_LOCAL5||','||vOLD_C_COD_LOCAL6||', '||vOLD_C_COD_UNIDADE1||','||vOLD_C_COD_UNIDADE2||','||vOLD_C_COD_UNIDADE3||','||vOLD_C_COD_UNIDADE4||','||vOLD_C_COD_UNIDADE5||','||vOLD_C_COD_UNIDADE6||', '||vOLD_C_COD_CUSTO_CONTAB1||','||vOLD_C_COD_CUSTO_CONTAB2||','||vOLD_C_COD_CUSTO_CONTAB3||','||vOLD_C_COD_CUSTO_CONTAB4||','||vOLD_C_COD_CUSTO_CONTAB5||','||vOLD_C_COD_CUSTO_CONTAB6||', '||vOLD_C_COD_CUSTO_GERENC1||','||vOLD_C_COD_CUSTO_GERENC2||','||vOLD_C_COD_CUSTO_GERENC3||','||vOLD_C_COD_CUSTO_GERENC4||','||vOLD_C_COD_CUSTO_GERENC5||','||vOLD_C_COD_CUSTO_GERENC6||','||p_login||' ,SYSDATE, '||vOLD_DT_FIM_TEMP_MOVI||');';   
            GRAVA_LOG('INSERT',vcomando);   
      END IF;


    ELSIF ( vVALIDA_NOME_TABELA > 0 ) THEN
    IF  ( vOLD_DT_FIM_TEMP_MOVI IS NULL  OR vOLD_DT_FIM_TEMP_MOVI >= p_DATA_INICIO_DESVIO )THEN
    --UPDATE NA TABELA DE MOVIMENTAÇÃO FINALIZANDO O REGISTRO ANTERIOR
      UPDATE RHCGED_TRANSFERENC B
      SET B.DT_FIM_TEMP      =  ( p_DATA_INICIO_DESVIO - 1),
      LOGIN_USUARIO =  p_login  , DT_ULT_ALTER_USUA = SYSDATE
      WHERE B.CODIGO_EMPRESA = P_CODIGO_EMPRESA
      AND B.TIPO_CONTRATO    = p_TIPO_CONTRATO
      AND B.CODIGO  = p_CODIGO_CONTRATO
      AND B.DT_ALT_UNID_CUSTO  = vOLD_DT_ALT_UNID_CUSTO; 

      vcomando := 'UPDATE RHCGED_TRANSFERENC B SET B.DT_FIM_TEMP      =  ( '||p_DATA_INICIO_DESVIO||' - 1), LOGIN_USUARIO =  '||p_login||'  , DT_ULT_ALTER_USUA = SYSDATE WHERE B.CODIGO_EMPRESA = '||P_CODIGO_EMPRESA||' AND B.TIPO_CONTRATO    = '||p_TIPO_CONTRATO||' AND B.CODIGO  = '||p_CODIGO_CONTRATO||' AND B.DT_ALT_UNID_CUSTO  = '||vOLD_DT_ALT_UNID_CUSTO||'; ';
      GRAVA_LOG('UPDATE',vcomando);   

      -- INSERINDO DESIGNAÇÃO
               IF (vE_CESSAO >= 1) THEN
                      INSERT INTO RHCGED_TRANSFERENC 
                      (CODIGO_EMPRESA,TIPO_CONTRATO, CODIGO, DT_ALT_UNID_CUSTO,COD_MOVIMENTACAO,
                      COD_LOTACAO_ATUAL1,COD_LOTACAO_ATUAL2, COD_LOTACAO_ATUAL3, COD_LOTACAO_ATUAL4,COD_LOTACAO_ATUAL5,COD_LOTACAO_ATUAL6,
                      COD_UNIDADE_ATUAL1, COD_UNIDADE_ATUAL2, COD_UNIDADE_ATUAL3, COD_UNIDADE_ATUAL4, COD_UNIDADE_ATUAL5, COD_UNIDADE_ATUAL6, 
                      COD_CCONTAB_ATUAL1, COD_CCONTAB_ATUAL2, COD_CCONTAB_ATUAL3, COD_CCONTAB_ATUAL4, COD_CCONTAB_ATUAL5, COD_CCONTAB_ATUAL6,
                      COD_CGERENC_ATUAL1 ,COD_CGERENC_ATUAL2, COD_CGERENC_ATUAL3 ,COD_CGERENC_ATUAL4, COD_CGERENC_ATUAL5 ,COD_CGERENC_ATUAL6, 
                      LOGIN_USUARIO, DT_ULT_ALTER_USUA, DT_FIM_TEMP)
                      VALUES (P_CODIGO_EMPRESA, p_TIPO_CONTRATO, p_CODIGO_CONTRATO, p_DATA_INICIO_DESVIO,  LPAD(vVERIFICA_MOTIVO,4,0), 
                      vOLD_COD_LOTACAO_ATUAL1, vOLD_COD_LOTACAO_ATUAL2, vOLD_COD_LOTACAO_ATUAL3, vOLD_COD_LOTACAO_ATUAL4, vOLD_COD_LOTACAO_ATUAL5, vOLD_COD_LOTACAO_ATUAL6,
                      vCOD_UNIDADE1, vCOD_UNIDADE2, vCOD_UNIDADE3, vCOD_UNIDADE4, vCOD_UNIDADE5, vCOD_UNIDADE6,
                      vOLD_COD_CCONTAB_ATUAL1,vOLD_COD_CCONTAB_ATUAL2,vOLD_COD_CCONTAB_ATUAL3,vOLD_COD_CCONTAB_ATUAL4,vOLD_COD_CCONTAB_ATUAL5,vOLD_COD_CCONTAB_ATUAL6,
                      vCOD_UNIDADE1, vCOD_UNIDADE2, vCOD_UNIDADE3, vCOD_UNIDADE4, vCOD_UNIDADE5, vCOD_UNIDADE6,
                      p_login ,SYSDATE,  case when ( p_DATA_FIM_DESVIO is null or p_DATA_FIM_DESVIO > sysdate )then null else p_DATA_FIM_DESVIO end );

                    vcomando :=  'INSERT INTO RHCGED_TRANSFERENC (CODIGO_EMPRESA,TIPO_CONTRATO, CODIGO, DT_ALT_UNID_CUSTO,COD_MOVIMENTACAO,  COD_LOTACAO_ATUAL1,COD_LOTACAO_ATUAL2, COD_LOTACAO_ATUAL3, COD_LOTACAO_ATUAL4,COD_LOTACAO_ATUAL5,COD_LOTACAO_ATUAL6, COD_UNIDADE_ATUAL1, COD_UNIDADE_ATUAL2, COD_UNIDADE_ATUAL3, COD_UNIDADE_ATUAL4, COD_UNIDADE_ATUAL5, COD_UNIDADE_ATUAL6, COD_CCONTAB_ATUAL1, COD_CCONTAB_ATUAL2, COD_CCONTAB_ATUAL3, COD_CCONTAB_ATUAL4, COD_CCONTAB_ATUAL5, COD_CCONTAB_ATUAL6, COD_CGERENC_ATUAL1 ,COD_CGERENC_ATUAL2, COD_CGERENC_ATUAL3 ,COD_CGERENC_ATUAL4, COD_CGERENC_ATUAL5 ,COD_CGERENC_ATUAL6, LOGIN_USUARIO, DT_ULT_ALTER_USUA, DT_FIM_TEMP) VALUES 
                    ('||P_CODIGO_EMPRESA||', '||p_TIPO_CONTRATO||', '||p_CODIGO_CONTRATO||', '||p_DATA_INICIO_DESVIO||',  LPAD('||vVERIFICA_MOTIVO||',4,0),
                    '||vOLD_COD_LOTACAO_ATUAL1||', '||vOLD_COD_LOTACAO_ATUAL2||', '||vOLD_COD_LOTACAO_ATUAL3||', '||vOLD_COD_LOTACAO_ATUAL4||', '||vOLD_COD_LOTACAO_ATUAL5||', '||vOLD_COD_LOTACAO_ATUAL6||', 
                    '||vCOD_UNIDADE1||', '||vCOD_UNIDADE2||', '||vCOD_UNIDADE3||', '||vCOD_UNIDADE4||', '||vCOD_UNIDADE5||', '||vCOD_UNIDADE6||', 
                    '||vOLD_COD_CCONTAB_ATUAL1||','||vOLD_COD_CCONTAB_ATUAL2||','||vOLD_COD_CCONTAB_ATUAL3||','||vOLD_COD_CCONTAB_ATUAL4||','||vOLD_COD_CCONTAB_ATUAL5||','||vOLD_COD_CCONTAB_ATUAL6||',
                    '||vCOD_UNIDADE1||', '||vCOD_UNIDADE2||', '||vCOD_UNIDADE3||', '||vCOD_UNIDADE4||', '||vCOD_UNIDADE5||', '||vCOD_UNIDADE6||',
                    '||p_login||' ,SYSDATE,  case when ( '||p_DATA_FIM_DESVIO||' is null or '||p_DATA_FIM_DESVIO||' > sysdate )then null else '||p_DATA_FIM_DESVIO||' end );'  ;
                    GRAVA_LOG('INSERT',vcomando); 
            ELSE

                      INSERT INTO RHCGED_TRANSFERENC 
                      (CODIGO_EMPRESA,TIPO_CONTRATO, CODIGO, DT_ALT_UNID_CUSTO,COD_MOVIMENTACAO,
                      COD_LOTACAO_ATUAL1,COD_LOTACAO_ATUAL2, COD_LOTACAO_ATUAL3, COD_LOTACAO_ATUAL4,COD_LOTACAO_ATUAL5,COD_LOTACAO_ATUAL6,
                      COD_UNIDADE_ATUAL1, COD_UNIDADE_ATUAL2, COD_UNIDADE_ATUAL3, COD_UNIDADE_ATUAL4, COD_UNIDADE_ATUAL5, COD_UNIDADE_ATUAL6, 
                      COD_CCONTAB_ATUAL1, COD_CCONTAB_ATUAL2, COD_CCONTAB_ATUAL3, COD_CCONTAB_ATUAL4, COD_CCONTAB_ATUAL5, COD_CCONTAB_ATUAL6,
                      COD_CGERENC_ATUAL1 ,COD_CGERENC_ATUAL2, COD_CGERENC_ATUAL3 ,COD_CGERENC_ATUAL4, COD_CGERENC_ATUAL5 ,COD_CGERENC_ATUAL6, 
                      LOGIN_USUARIO, DT_ULT_ALTER_USUA, DT_FIM_TEMP)
                      VALUES (P_CODIGO_EMPRESA, p_TIPO_CONTRATO, p_CODIGO_CONTRATO, p_DATA_INICIO_DESVIO,  LPAD(vVERIFICA_MOTIVO,4,0), 
                      vCOD_UNIDADE1, vCOD_UNIDADE2, vCOD_UNIDADE3, vCOD_UNIDADE4, vCOD_UNIDADE5, vCOD_UNIDADE6,
                      vCOD_UNIDADE1, vCOD_UNIDADE2, vCOD_UNIDADE3, vCOD_UNIDADE4, vCOD_UNIDADE5, vCOD_UNIDADE6,
                      vOLD_COD_CCONTAB_ATUAL1, vOLD_COD_CCONTAB_ATUAL2, vOLD_COD_CCONTAB_ATUAL3,vOLD_COD_CCONTAB_ATUAL4,vOLD_COD_CCONTAB_ATUAL5,vOLD_COD_CCONTAB_ATUAL6,
                      vCOD_UNIDADE1, vCOD_UNIDADE2, vCOD_UNIDADE3, vCOD_UNIDADE4, vCOD_UNIDADE5, vCOD_UNIDADE6,
                      p_login ,SYSDATE,  case when ( p_DATA_FIM_DESVIO is null or p_DATA_FIM_DESVIO > sysdate )then null else p_DATA_FIM_DESVIO end );

                    vcomando :=  'INSERT INTO RHCGED_TRANSFERENC (CODIGO_EMPRESA,TIPO_CONTRATO, CODIGO, DT_ALT_UNID_CUSTO,COD_MOVIMENTACAO,  COD_LOTACAO_ATUAL1,COD_LOTACAO_ATUAL2, COD_LOTACAO_ATUAL3, COD_LOTACAO_ATUAL4,COD_LOTACAO_ATUAL5,COD_LOTACAO_ATUAL6, COD_UNIDADE_ATUAL1, COD_UNIDADE_ATUAL2, COD_UNIDADE_ATUAL3, COD_UNIDADE_ATUAL4, COD_UNIDADE_ATUAL5, COD_UNIDADE_ATUAL6, COD_CCONTAB_ATUAL1, COD_CCONTAB_ATUAL2, COD_CCONTAB_ATUAL3, COD_CCONTAB_ATUAL4, COD_CCONTAB_ATUAL5, COD_CCONTAB_ATUAL6, COD_CGERENC_ATUAL1 ,COD_CGERENC_ATUAL2, COD_CGERENC_ATUAL3 ,COD_CGERENC_ATUAL4, COD_CGERENC_ATUAL5 ,COD_CGERENC_ATUAL6, LOGIN_USUARIO, DT_ULT_ALTER_USUA, DT_FIM_TEMP) VALUES 
                    ('||P_CODIGO_EMPRESA||', '||p_TIPO_CONTRATO||', '||p_CODIGO_CONTRATO||', '||p_DATA_INICIO_DESVIO||',  LPAD('||vVERIFICA_MOTIVO||',4,0),
                    '||vCOD_UNIDADE1||', '||vCOD_UNIDADE2||', '||vCOD_UNIDADE3||', '||vCOD_UNIDADE4||', '||vCOD_UNIDADE5||', '||vCOD_UNIDADE6||', 
                    '||vCOD_UNIDADE1||', '||vCOD_UNIDADE2||', '||vCOD_UNIDADE3||', '||vCOD_UNIDADE4||', '||vCOD_UNIDADE5||', '||vCOD_UNIDADE6||', 
                    '||vOLD_COD_CCONTAB_ATUAL1||','||vOLD_COD_CCONTAB_ATUAL2||','||vOLD_COD_CCONTAB_ATUAL3||','||vOLD_COD_CCONTAB_ATUAL4||','||vOLD_COD_CCONTAB_ATUAL5||','||vOLD_COD_CCONTAB_ATUAL6||',
                    '||vCOD_UNIDADE1||', '||vCOD_UNIDADE2||', '||vCOD_UNIDADE3||', '||vCOD_UNIDADE4||', '||vCOD_UNIDADE5||', '||vCOD_UNIDADE6||',
                    '||p_login||' ,SYSDATE,  case when ( '||p_DATA_FIM_DESVIO||' is null or '||p_DATA_FIM_DESVIO||' > sysdate )then null else '||p_DATA_FIM_DESVIO||' end );'  ;
                    GRAVA_LOG('INSERT',vcomando); 

            END IF;


            IF( p_DATA_FIM_DESVIO < trunc(sysdate) ) then
           -- insert voltando o histórico 
                 INSERT INTO RHCGED_TRANSFERENC (CODIGO_EMPRESA,TIPO_CONTRATO, CODIGO, DT_ALT_UNID_CUSTO, COD_MOVIMENTACAO,
                COD_LOTACAO_ATUAL1,COD_LOTACAO_ATUAL2, COD_LOTACAO_ATUAL3, COD_LOTACAO_ATUAL4,COD_LOTACAO_ATUAL5,COD_LOTACAO_ATUAL6,
                COD_UNIDADE_ATUAL1, COD_UNIDADE_ATUAL2, COD_UNIDADE_ATUAL3, COD_UNIDADE_ATUAL4, COD_UNIDADE_ATUAL5, COD_UNIDADE_ATUAL6, 
                COD_CCONTAB_ATUAL1, COD_CCONTAB_ATUAL2, COD_CCONTAB_ATUAL3, COD_CCONTAB_ATUAL4, COD_CCONTAB_ATUAL5, COD_CCONTAB_ATUAL6,
                COD_CGERENC_ATUAL1 ,COD_CGERENC_ATUAL2, COD_CGERENC_ATUAL3 ,COD_CGERENC_ATUAL4, COD_CGERENC_ATUAL5 ,COD_CGERENC_ATUAL6,
                LOGIN_USUARIO, DT_ULT_ALTER_USUA, DT_FIM_TEMP)
                VALUES (P_CODIGO_EMPRESA, p_TIPO_CONTRATO, p_CODIGO_CONTRATO, p_DATA_FIM_DESVIO +1, '0051',
                vOLD_C_COD_LOCAL1,vOLD_C_COD_LOCAL2,vOLD_C_COD_LOCAL3,vOLD_C_COD_LOCAL4,vOLD_C_COD_LOCAL5, vOLD_C_COD_LOCAL6	, 
                vOLD_C_COD_UNIDADE1,vOLD_C_COD_UNIDADE2,vOLD_C_COD_UNIDADE3,vOLD_C_COD_UNIDADE4,vOLD_C_COD_UNIDADE5,vOLD_C_COD_UNIDADE6,
                vOLD_C_COD_CUSTO_CONTAB1,vOLD_C_COD_CUSTO_CONTAB2,vOLD_C_COD_CUSTO_CONTAB3,vOLD_C_COD_CUSTO_CONTAB4,vOLD_C_COD_CUSTO_CONTAB5,vOLD_C_COD_CUSTO_CONTAB6,
                vOLD_C_COD_CUSTO_GERENC1,vOLD_C_COD_CUSTO_GERENC2,vOLD_C_COD_CUSTO_GERENC3,vOLD_C_COD_CUSTO_GERENC4,vOLD_C_COD_CUSTO_GERENC5,vOLD_C_COD_CUSTO_GERENC6,
                 p_login ,SYSDATE, vOLD_DT_FIM_TEMP_MOVI);


            vcomando :=  'INSERT INTO RHCGED_TRANSFERENC (CODIGO_EMPRESA,TIPO_CONTRATO, CODIGO, DT_ALT_UNID_CUSTO, COD_MOVIMENTACAO, COD_LOTACAO_ATUAL1,COD_LOTACAO_ATUAL2, COD_LOTACAO_ATUAL3, COD_LOTACAO_ATUAL4,COD_LOTACAO_ATUAL5,COD_LOTACAO_ATUAL6, COD_UNIDADE_ATUAL1, COD_UNIDADE_ATUAL2, COD_UNIDADE_ATUAL3, COD_UNIDADE_ATUAL4, COD_UNIDADE_ATUAL5, COD_UNIDADE_ATUAL6, COD_CCONTAB_ATUAL1, COD_CCONTAB_ATUAL2, COD_CCONTAB_ATUAL3, COD_CCONTAB_ATUAL4, COD_CCONTAB_ATUAL5, COD_CCONTAB_ATUAL6,COD_CGERENC_ATUAL1 ,COD_CGERENC_ATUAL2, COD_CGERENC_ATUAL3 ,COD_CGERENC_ATUAL4, COD_CGERENC_ATUAL5 ,COD_CGERENC_ATUAL6, LOGIN_USUARIO, DT_ULT_ALTER_USUA, DT_FIM_TEMP) VALUES ('||P_CODIGO_EMPRESA||', '||p_TIPO_CONTRATO||', '||p_CODIGO_CONTRATO||', '||p_DATA_FIM_DESVIO||' +1, ''0051'', '||vOLD_C_COD_LOCAL1||','||vOLD_C_COD_LOCAL2||','||vOLD_C_COD_LOCAL3||','||vOLD_C_COD_LOCAL4||','||vOLD_C_COD_LOCAL5||','||vOLD_C_COD_LOCAL6||', '||vOLD_C_COD_UNIDADE1||','||vOLD_C_COD_UNIDADE2||','||vOLD_C_COD_UNIDADE3||','||vOLD_C_COD_UNIDADE4||','||vOLD_C_COD_UNIDADE5||','||vOLD_C_COD_UNIDADE6||', '||vOLD_C_COD_CUSTO_CONTAB1||','||vOLD_C_COD_CUSTO_CONTAB2||','||vOLD_C_COD_CUSTO_CONTAB3||','||vOLD_C_COD_CUSTO_CONTAB4||','||vOLD_C_COD_CUSTO_CONTAB5||','||vOLD_C_COD_CUSTO_CONTAB6||', '||vOLD_C_COD_CUSTO_GERENC1||','||vOLD_C_COD_CUSTO_GERENC2||','||vOLD_C_COD_CUSTO_GERENC3||','||vOLD_C_COD_CUSTO_GERENC4||','||vOLD_C_COD_CUSTO_GERENC5||','||vOLD_C_COD_CUSTO_GERENC6||','||p_login||' ,SYSDATE, '||vOLD_DT_FIM_TEMP_MOVI||');';   
            GRAVA_LOG('INSERT',vcomando); 

            END IF;
    ELSIF (vOLD_DT_FIM_TEMP_MOVI < p_DATA_INICIO_DESVIO) THEN 
    -- INSERINDO A DESIGNACAO
                IF (vE_CESSAO >= 1) THEN
                      INSERT INTO RHCGED_TRANSFERENC 
                      (CODIGO_EMPRESA,TIPO_CONTRATO, CODIGO, DT_ALT_UNID_CUSTO,COD_MOVIMENTACAO,
                      COD_LOTACAO_ATUAL1,COD_LOTACAO_ATUAL2, COD_LOTACAO_ATUAL3, COD_LOTACAO_ATUAL4,COD_LOTACAO_ATUAL5,COD_LOTACAO_ATUAL6,
                      COD_UNIDADE_ATUAL1, COD_UNIDADE_ATUAL2, COD_UNIDADE_ATUAL3, COD_UNIDADE_ATUAL4, COD_UNIDADE_ATUAL5, COD_UNIDADE_ATUAL6, 
                      COD_CCONTAB_ATUAL1, COD_CCONTAB_ATUAL2, COD_CCONTAB_ATUAL3, COD_CCONTAB_ATUAL4, COD_CCONTAB_ATUAL5, COD_CCONTAB_ATUAL6,
                      COD_CGERENC_ATUAL1 ,COD_CGERENC_ATUAL2, COD_CGERENC_ATUAL3 ,COD_CGERENC_ATUAL4, COD_CGERENC_ATUAL5 ,COD_CGERENC_ATUAL6, 
                      LOGIN_USUARIO, DT_ULT_ALTER_USUA, DT_FIM_TEMP)
                      VALUES (P_CODIGO_EMPRESA, p_TIPO_CONTRATO, p_CODIGO_CONTRATO, p_DATA_INICIO_DESVIO,  LPAD(vVERIFICA_MOTIVO,4,0), 
                      vOLD_COD_LOTACAO_ATUAL1, vOLD_COD_LOTACAO_ATUAL2, vOLD_COD_LOTACAO_ATUAL3, vOLD_COD_LOTACAO_ATUAL4, vOLD_COD_LOTACAO_ATUAL5, vOLD_COD_LOTACAO_ATUAL6,
                      vCOD_UNIDADE1, vCOD_UNIDADE2, vCOD_UNIDADE3, vCOD_UNIDADE4, vCOD_UNIDADE5, vCOD_UNIDADE6,
                      vOLD_COD_CCONTAB_ATUAL1,vOLD_COD_CCONTAB_ATUAL2,vOLD_COD_CCONTAB_ATUAL3,vOLD_COD_CCONTAB_ATUAL4,vOLD_COD_CCONTAB_ATUAL5,vOLD_COD_CCONTAB_ATUAL6,
                      vCOD_UNIDADE1, vCOD_UNIDADE2, vCOD_UNIDADE3, vCOD_UNIDADE4, vCOD_UNIDADE5, vCOD_UNIDADE6,
                      p_login ,SYSDATE,  case when ( p_DATA_FIM_DESVIO is null or p_DATA_FIM_DESVIO > sysdate )then null else p_DATA_FIM_DESVIO end );

                    vcomando :=  'INSERT INTO RHCGED_TRANSFERENC (CODIGO_EMPRESA,TIPO_CONTRATO, CODIGO, DT_ALT_UNID_CUSTO,COD_MOVIMENTACAO,  COD_LOTACAO_ATUAL1,COD_LOTACAO_ATUAL2, COD_LOTACAO_ATUAL3, COD_LOTACAO_ATUAL4,COD_LOTACAO_ATUAL5,COD_LOTACAO_ATUAL6, COD_UNIDADE_ATUAL1, COD_UNIDADE_ATUAL2, COD_UNIDADE_ATUAL3, COD_UNIDADE_ATUAL4, COD_UNIDADE_ATUAL5, COD_UNIDADE_ATUAL6, COD_CCONTAB_ATUAL1, COD_CCONTAB_ATUAL2, COD_CCONTAB_ATUAL3, COD_CCONTAB_ATUAL4, COD_CCONTAB_ATUAL5, COD_CCONTAB_ATUAL6, COD_CGERENC_ATUAL1 ,COD_CGERENC_ATUAL2, COD_CGERENC_ATUAL3 ,COD_CGERENC_ATUAL4, COD_CGERENC_ATUAL5 ,COD_CGERENC_ATUAL6, LOGIN_USUARIO, DT_ULT_ALTER_USUA, DT_FIM_TEMP) VALUES 
                    ('||P_CODIGO_EMPRESA||', '||p_TIPO_CONTRATO||', '||p_CODIGO_CONTRATO||', '||p_DATA_INICIO_DESVIO||',  LPAD('||vVERIFICA_MOTIVO||',4,0),
                    '||vOLD_COD_LOTACAO_ATUAL1||', '||vOLD_COD_LOTACAO_ATUAL2||', '||vOLD_COD_LOTACAO_ATUAL3||', '||vOLD_COD_LOTACAO_ATUAL4||', '||vOLD_COD_LOTACAO_ATUAL5||', '||vOLD_COD_LOTACAO_ATUAL6||', 
                    '||vCOD_UNIDADE1||', '||vCOD_UNIDADE2||', '||vCOD_UNIDADE3||', '||vCOD_UNIDADE4||', '||vCOD_UNIDADE5||', '||vCOD_UNIDADE6||', 
                    '||vOLD_COD_CCONTAB_ATUAL1||','||vOLD_COD_CCONTAB_ATUAL2||','||vOLD_COD_CCONTAB_ATUAL3||','||vOLD_COD_CCONTAB_ATUAL4||','||vOLD_COD_CCONTAB_ATUAL5||','||vOLD_COD_CCONTAB_ATUAL6||',
                    '||vCOD_UNIDADE1||', '||vCOD_UNIDADE2||', '||vCOD_UNIDADE3||', '||vCOD_UNIDADE4||', '||vCOD_UNIDADE5||', '||vCOD_UNIDADE6||',
                    '||p_login||' ,SYSDATE,  case when ( '||p_DATA_FIM_DESVIO||' is null or '||p_DATA_FIM_DESVIO||' > sysdate )then null else '||p_DATA_FIM_DESVIO||' end );'  ;
                    GRAVA_LOG('INSERT',vcomando); 
            ELSE

              INSERT INTO RHCGED_TRANSFERENC 
                      (CODIGO_EMPRESA,TIPO_CONTRATO, CODIGO, DT_ALT_UNID_CUSTO,COD_MOVIMENTACAO,
                      COD_LOTACAO_ATUAL1,COD_LOTACAO_ATUAL2, COD_LOTACAO_ATUAL3, COD_LOTACAO_ATUAL4,COD_LOTACAO_ATUAL5,COD_LOTACAO_ATUAL6,
                      COD_UNIDADE_ATUAL1, COD_UNIDADE_ATUAL2, COD_UNIDADE_ATUAL3, COD_UNIDADE_ATUAL4, COD_UNIDADE_ATUAL5, COD_UNIDADE_ATUAL6, 
                      COD_CCONTAB_ATUAL1, COD_CCONTAB_ATUAL2, COD_CCONTAB_ATUAL3, COD_CCONTAB_ATUAL4, COD_CCONTAB_ATUAL5, COD_CCONTAB_ATUAL6,
                      COD_CGERENC_ATUAL1 ,COD_CGERENC_ATUAL2, COD_CGERENC_ATUAL3 ,COD_CGERENC_ATUAL4, COD_CGERENC_ATUAL5 ,COD_CGERENC_ATUAL6, 
                      LOGIN_USUARIO, DT_ULT_ALTER_USUA, DT_FIM_TEMP)
                      VALUES (P_CODIGO_EMPRESA, p_TIPO_CONTRATO, p_CODIGO_CONTRATO, p_DATA_INICIO_DESVIO,  LPAD(vVERIFICA_MOTIVO,4,0), 
                      vCOD_UNIDADE1, vCOD_UNIDADE2, vCOD_UNIDADE3, vCOD_UNIDADE4, vCOD_UNIDADE5, vCOD_UNIDADE6,
                      vCOD_UNIDADE1, vCOD_UNIDADE2, vCOD_UNIDADE3, vCOD_UNIDADE4, vCOD_UNIDADE5, vCOD_UNIDADE6,
                      vOLD_COD_CCONTAB_ATUAL1, vOLD_COD_CCONTAB_ATUAL2, vOLD_COD_CCONTAB_ATUAL3,vOLD_COD_CCONTAB_ATUAL4,vOLD_COD_CCONTAB_ATUAL5,vOLD_COD_CCONTAB_ATUAL6,
                      vCOD_UNIDADE1, vCOD_UNIDADE2, vCOD_UNIDADE3, vCOD_UNIDADE4, vCOD_UNIDADE5, vCOD_UNIDADE6,
                      p_login ,SYSDATE,  case when ( p_DATA_FIM_DESVIO is null or p_DATA_FIM_DESVIO > sysdate )then null else p_DATA_FIM_DESVIO end );

                    vcomando :=  'INSERT INTO RHCGED_TRANSFERENC (CODIGO_EMPRESA,TIPO_CONTRATO, CODIGO, DT_ALT_UNID_CUSTO,COD_MOVIMENTACAO,  COD_LOTACAO_ATUAL1,COD_LOTACAO_ATUAL2, COD_LOTACAO_ATUAL3, COD_LOTACAO_ATUAL4,COD_LOTACAO_ATUAL5,COD_LOTACAO_ATUAL6, COD_UNIDADE_ATUAL1, COD_UNIDADE_ATUAL2, COD_UNIDADE_ATUAL3, COD_UNIDADE_ATUAL4, COD_UNIDADE_ATUAL5, COD_UNIDADE_ATUAL6, COD_CCONTAB_ATUAL1, COD_CCONTAB_ATUAL2, COD_CCONTAB_ATUAL3, COD_CCONTAB_ATUAL4, COD_CCONTAB_ATUAL5, COD_CCONTAB_ATUAL6, COD_CGERENC_ATUAL1 ,COD_CGERENC_ATUAL2, COD_CGERENC_ATUAL3 ,COD_CGERENC_ATUAL4, COD_CGERENC_ATUAL5 ,COD_CGERENC_ATUAL6, LOGIN_USUARIO, DT_ULT_ALTER_USUA, DT_FIM_TEMP) VALUES 
                    ('||P_CODIGO_EMPRESA||', '||p_TIPO_CONTRATO||', '||p_CODIGO_CONTRATO||', '||p_DATA_INICIO_DESVIO||',  LPAD('||vVERIFICA_MOTIVO||',4,0),
                    '||vCOD_UNIDADE1||', '||vCOD_UNIDADE2||', '||vCOD_UNIDADE3||', '||vCOD_UNIDADE4||', '||vCOD_UNIDADE5||', '||vCOD_UNIDADE6||', 
                    '||vCOD_UNIDADE1||', '||vCOD_UNIDADE2||', '||vCOD_UNIDADE3||', '||vCOD_UNIDADE4||', '||vCOD_UNIDADE5||', '||vCOD_UNIDADE6||', 
                    '||vOLD_COD_CCONTAB_ATUAL1||','||vOLD_COD_CCONTAB_ATUAL2||','||vOLD_COD_CCONTAB_ATUAL3||','||vOLD_COD_CCONTAB_ATUAL4||','||vOLD_COD_CCONTAB_ATUAL5||','||vOLD_COD_CCONTAB_ATUAL6||',
                    '||vCOD_UNIDADE1||', '||vCOD_UNIDADE2||', '||vCOD_UNIDADE3||', '||vCOD_UNIDADE4||', '||vCOD_UNIDADE5||', '||vCOD_UNIDADE6||',
                    '||p_login||' ,SYSDATE,  case when ( '||p_DATA_FIM_DESVIO||' is null or '||p_DATA_FIM_DESVIO||' > sysdate )then null else '||p_DATA_FIM_DESVIO||' end );'  ;
                    GRAVA_LOG('INSERT',vcomando); 


            END IF; 

        /* 
         IF( p_DATA_FIM_DESVIO < trunc(sysdate) ) then
                  -- insert voltando o histórico 
                INSERT INTO RHCGED_TRANSFERENC (CODIGO_EMPRESA,TIPO_CONTRATO, CODIGO, DT_ALT_UNID_CUSTO, COD_MOVIMENTACAO,
                COD_LOTACAO_ATUAL1,COD_LOTACAO_ATUAL2, COD_LOTACAO_ATUAL3, COD_LOTACAO_ATUAL4,COD_LOTACAO_ATUAL5,COD_LOTACAO_ATUAL6,
                COD_UNIDADE_ATUAL1, COD_UNIDADE_ATUAL2, COD_UNIDADE_ATUAL3, COD_UNIDADE_ATUAL4, COD_UNIDADE_ATUAL5, COD_UNIDADE_ATUAL6, 
                COD_CCONTAB_ATUAL1, COD_CCONTAB_ATUAL2, COD_CCONTAB_ATUAL3, COD_CCONTAB_ATUAL4, COD_CCONTAB_ATUAL5, COD_CCONTAB_ATUAL6,
                COD_CGERENC_ATUAL1 ,COD_CGERENC_ATUAL2, COD_CGERENC_ATUAL3 ,COD_CGERENC_ATUAL4, COD_CGERENC_ATUAL5 ,COD_CGERENC_ATUAL6,
                LOGIN_USUARIO, DT_ULT_ALTER_USUA, DT_FIM_TEMP)
                VALUES (P_CODIGO_EMPRESA, p_TIPO_CONTRATO, p_CODIGO_CONTRATO, p_DATA_FIM_DESVIO +1, '0051',
                vOLD_C_COD_LOCAL1,vOLD_C_COD_LOCAL2,vOLD_C_COD_LOCAL3,vOLD_C_COD_LOCAL4,vOLD_C_COD_LOCAL5, vOLD_C_COD_LOCAL6	, 
                vOLD_C_COD_UNIDADE1,vOLD_C_COD_UNIDADE2,vOLD_C_COD_UNIDADE3,vOLD_C_COD_UNIDADE4,vOLD_C_COD_UNIDADE5,vOLD_C_COD_UNIDADE6,
                vOLD_C_COD_CUSTO_CONTAB1,vOLD_C_COD_CUSTO_CONTAB2,vOLD_C_COD_CUSTO_CONTAB3,vOLD_C_COD_CUSTO_CONTAB4,vOLD_C_COD_CUSTO_CONTAB5,vOLD_C_COD_CUSTO_CONTAB6,
                vOLD_C_COD_CUSTO_GERENC1,vOLD_C_COD_CUSTO_GERENC2,vOLD_C_COD_CUSTO_GERENC3,vOLD_C_COD_CUSTO_GERENC4,vOLD_C_COD_CUSTO_GERENC5,vOLD_C_COD_CUSTO_GERENC6,
                 p_login ,SYSDATE, vOLD_DT_FIM_TEMP_MOVI);
      END IF;
      */   
  END IF;
  END IF;  
END IF;



 -- inserido em 09/11/2020  FAZ O RETORNO NA HISTÓRICA QUANDO A DESIGNAÇÃO FINDA
 IF ( ( p_ACAO = 'ENCERRAR' )AND ( vVALIDA_NOME_TABELA_INSERT > 0 )) -- VALIDA SE A PESSOA RECEBEU UMA MOVIMENTAÇÃO  
   THEN
       IF (  vCOD_UNIDADE1 = vOLD_COD_UNIDADE_ATUAL1 and vCOD_UNIDADE2 = vOLD_COD_UNIDADE_ATUAL2 and  vCOD_UNIDADE3 = vOLD_COD_UNIDADE_ATUAL3 and vCOD_UNIDADE4 = vOLD_COD_UNIDADE_ATUAL4 
       and vCOD_UNIDADE5 = vOLD_COD_UNIDADE_ATUAL5 and vCOD_UNIDADE6 = vOLD_COD_UNIDADE_ATUAL6  and vOLD_DT_ALT_UNID_CUSTO = p_DATA_INICIO_DESVIO ) THEN
    dbms_output.put_line('Entrou no Encerrar Movimentação');
          UPDATE RHCGED_TRANSFERENC B
          SET B.DT_FIM_TEMP       = p_DATA_FIM_DESVIO,
          LOGIN_USUARIO =  p_login  , DT_ULT_ALTER_USUA = SYSDATE
          WHERE B.CODIGO_EMPRESA = P_CODIGO_EMPRESA
          AND B.TIPO_CONTRATO    = p_TIPO_CONTRATO
          AND B.CODIGO  = p_CODIGO_CONTRATO
          AND B.DT_ALT_UNID_CUSTO  = p_DATA_INICIO_DESVIO;

         vcomando:=   'UPDATE RHCGED_TRANSFERENC B SET B.DT_FIM_TEMP  =  ( '||p_DATA_FIM_DESVIO||', LOGIN_USUARIO =  '||p_login||'  , DT_ULT_ALTER_USUA = SYSDATE WHERE B.CODIGO_EMPRESA = '||P_CODIGO_EMPRESA||' AND B.TIPO_CONTRATO    = '||p_TIPO_CONTRATO||' AND B.CODIGO  = '||p_CODIGO_CONTRATO||' AND B.DT_ALT_UNID_CUSTO  = '||p_DATA_INICIO_DESVIO||';';
            GRAVA_LOG ('UPDATE',vcomando);

           -- insert voltando o histórico 
                INSERT INTO RHCGED_TRANSFERENC (CODIGO_EMPRESA,TIPO_CONTRATO, CODIGO, DT_ALT_UNID_CUSTO, COD_MOVIMENTACAO,
                COD_LOTACAO_ATUAL1,COD_LOTACAO_ATUAL2, COD_LOTACAO_ATUAL3, COD_LOTACAO_ATUAL4,COD_LOTACAO_ATUAL5,COD_LOTACAO_ATUAL6,
                COD_UNIDADE_ATUAL1, COD_UNIDADE_ATUAL2, COD_UNIDADE_ATUAL3, COD_UNIDADE_ATUAL4, COD_UNIDADE_ATUAL5, COD_UNIDADE_ATUAL6, 
                COD_CCONTAB_ATUAL1, COD_CCONTAB_ATUAL2, COD_CCONTAB_ATUAL3, COD_CCONTAB_ATUAL4, COD_CCONTAB_ATUAL5, COD_CCONTAB_ATUAL6,
                COD_CGERENC_ATUAL1 ,COD_CGERENC_ATUAL2, COD_CGERENC_ATUAL3 ,COD_CGERENC_ATUAL4, COD_CGERENC_ATUAL5 ,COD_CGERENC_ATUAL6,
                LOGIN_USUARIO, DT_ULT_ALTER_USUA, DT_FIM_TEMP)
                VALUES (P_CODIGO_EMPRESA, p_TIPO_CONTRATO, p_CODIGO_CONTRATO, p_DATA_FIM_DESVIO +1,'0051',
                vOLD_C_COD_LOCAL1,vOLD_C_COD_LOCAL2,vOLD_C_COD_LOCAL3,vOLD_C_COD_LOCAL4,vOLD_C_COD_LOCAL5, vOLD_C_COD_LOCAL6	, 
                vOLD_C_COD_UNIDADE1,vOLD_C_COD_UNIDADE2,vOLD_C_COD_UNIDADE3,vOLD_C_COD_UNIDADE4,vOLD_C_COD_UNIDADE5,vOLD_C_COD_UNIDADE6,
                vOLD_C_COD_CUSTO_CONTAB1,vOLD_C_COD_CUSTO_CONTAB2,vOLD_C_COD_CUSTO_CONTAB3,vOLD_C_COD_CUSTO_CONTAB4,vOLD_C_COD_CUSTO_CONTAB5,vOLD_C_COD_CUSTO_CONTAB6,
                vOLD_C_COD_CUSTO_GERENC1,vOLD_C_COD_CUSTO_GERENC2,vOLD_C_COD_CUSTO_GERENC3,vOLD_C_COD_CUSTO_GERENC4,vOLD_C_COD_CUSTO_GERENC5,vOLD_C_COD_CUSTO_GERENC6,
                p_login ,SYSDATE, vOLD_DT_FIM_TEMP_MOVI);

        vcomando :=  'INSERT INTO RHCGED_TRANSFERENC (CODIGO_EMPRESA,TIPO_CONTRATO, CODIGO, DT_ALT_UNID_CUSTO, COD_MOVIMENTACAO, COD_LOTACAO_ATUAL1,COD_LOTACAO_ATUAL2, COD_LOTACAO_ATUAL3, COD_LOTACAO_ATUAL4,COD_LOTACAO_ATUAL5,COD_LOTACAO_ATUAL6, COD_UNIDADE_ATUAL1, COD_UNIDADE_ATUAL2, COD_UNIDADE_ATUAL3, COD_UNIDADE_ATUAL4, COD_UNIDADE_ATUAL5, COD_UNIDADE_ATUAL6, COD_CCONTAB_ATUAL1, COD_CCONTAB_ATUAL2, COD_CCONTAB_ATUAL3, COD_CCONTAB_ATUAL4, COD_CCONTAB_ATUAL5, COD_CCONTAB_ATUAL6,COD_CGERENC_ATUAL1 ,COD_CGERENC_ATUAL2, COD_CGERENC_ATUAL3 ,COD_CGERENC_ATUAL4, COD_CGERENC_ATUAL5 ,COD_CGERENC_ATUAL6, LOGIN_USUARIO, DT_ULT_ALTER_USUA, DT_FIM_TEMP) VALUES ('||P_CODIGO_EMPRESA||', '||p_TIPO_CONTRATO||', '||p_CODIGO_CONTRATO||', '||p_DATA_FIM_DESVIO||' +1, ''0051'', '||vOLD_C_COD_LOCAL1||','||vOLD_C_COD_LOCAL2||','||vOLD_C_COD_LOCAL3||','||vOLD_C_COD_LOCAL4||','||vOLD_C_COD_LOCAL5||','||vOLD_C_COD_LOCAL6||', '||vOLD_C_COD_UNIDADE1||','||vOLD_C_COD_UNIDADE2||','||vOLD_C_COD_UNIDADE3||','||vOLD_C_COD_UNIDADE4||','||vOLD_C_COD_UNIDADE5||','||vOLD_C_COD_UNIDADE6||', '||vOLD_C_COD_CUSTO_CONTAB1||','||vOLD_C_COD_CUSTO_CONTAB2||','||vOLD_C_COD_CUSTO_CONTAB3||','||vOLD_C_COD_CUSTO_CONTAB4||','||vOLD_C_COD_CUSTO_CONTAB5||','||vOLD_C_COD_CUSTO_CONTAB6||', '||vOLD_C_COD_CUSTO_GERENC1||','||vOLD_C_COD_CUSTO_GERENC2||','||vOLD_C_COD_CUSTO_GERENC3||','||vOLD_C_COD_CUSTO_GERENC4||','||vOLD_C_COD_CUSTO_GERENC5||','||vOLD_C_COD_CUSTO_GERENC6||','||p_login||' ,SYSDATE, '||vOLD_DT_FIM_TEMP_MOVI||');';   
        GRAVA_LOG('INSERT',vcomando); 

      END IF;
 END IF;
 -- fim 09/11/2020


 --------------------------DELETE
 IF ( ( p_ACAO = 'EXCLUIR' OR p_ACAO = 'U-EXCLUIR')   AND p_DATA_INICIO_DESVIO <= trunc(sysdate) )  THEN
  IF ( vVALIDA_NOME_TABELA_INSERT > 0 ) THEN
    IF( vVALIDA_NOME_TABELA = 0 ) THEN
          DELETE FROM RHCGED_TRANSFERENC WHERE  CODIGO_EMPRESA = P_CODIGO_EMPRESA AND TIPO_CONTRATO  = p_TIPO_CONTRATO AND CODIGO = p_CODIGO_CONTRATO AND DT_ALT_UNID_CUSTO  = p_DATA_INICIO_DESVIO;
          vcomando := 'DELETE FROM RHCGED_TRANSFERENC WHERE CODIGO_EMPRESA = '||P_CODIGO_EMPRESA||' AND TIPO_CONTRATO = '||p_TIPO_CONTRATO||' AND CODIGO = '||p_CODIGO_CONTRATO||' AND DT_ALT_UNID_CUSTO  = '||p_DATA_INICIO_DESVIO||';';
          GRAVA_LOG('DELETE',vcomando); 
    ELSIF (vVALIDA_NOME_TABELA > 0 ) THEN
    IF  ( vOLD_DT_FIM_TEMP_MOVI IS NULL OR vOLD_DT_FIM_TEMP_MOVI >= p_DATA_INICIO_DESVIO )THEN
    --UPDATE NA TABELA DE CARGO FINALIZANDO O REGISTRO ANTERIOR
          UPDATE RHCGED_TRANSFERENC B
          SET B.DT_FIM_TEMP      = vOLD_DT_FIM_TEMP_MOVI,
          LOGIN_USUARIO = 	 p_login  , DT_ULT_ALTER_USUA = SYSDATE
          WHERE B.CODIGO_EMPRESA = P_CODIGO_EMPRESA
          AND B.TIPO_CONTRATO    = p_TIPO_CONTRATO
          AND B.CODIGO  = p_CODIGO_CONTRATO
          AND B.DT_ALT_UNID_CUSTO  = VOLD_DT_ALT_UNID_CUSTO; 

          vcomando := ' UPDATE RHCGED_TRANSFERENC B SET B.DT_FIM_TEMP = '||vOLD_DT_FIM_TEMP_MOVI||', LOGIN_USUARIO = '||p_login||', DT_ULT_ALTER_USUA = SYSDATE WHERE B.CODIGO_EMPRESA = '||P_CODIGO_EMPRESA||' AND B.TIPO_CONTRATO = '||p_TIPO_CONTRATO||' AND B.CODIGO  = '||p_CODIGO_CONTRATO||' AND B.DT_ALT_UNID_CUSTO  = '||VOLD_DT_ALT_UNID_CUSTO||'; ';
           GRAVA_LOG('UPDATE',vcomando); 

          DELETE FROM RHCGED_TRANSFERENC WHERE  CODIGO_EMPRESA = P_CODIGO_EMPRESA AND TIPO_CONTRATO    = p_TIPO_CONTRATO AND CODIGO = p_CODIGO_CONTRATO AND DT_ALT_UNID_CUSTO  = p_DATA_INICIO_DESVIO;
          vcomando := 'DELETE FROM RHCGED_TRANSFERENC WHERE CODIGO_EMPRESA = '||P_CODIGO_EMPRESA||' AND TIPO_CONTRATO = '||p_TIPO_CONTRATO||' AND CODIGO = '||p_CODIGO_CONTRATO||' AND DT_ALT_UNID_CUSTO  = '||p_DATA_INICIO_DESVIO||';';
          GRAVA_LOG('DELETE',vcomando); 

          DELETE FROM RHCGED_TRANSFERENC WHERE  CODIGO_EMPRESA = P_CODIGO_EMPRESA AND TIPO_CONTRATO    = p_TIPO_CONTRATO AND CODIGO  = p_CODIGO_CONTRATO AND DT_ALT_UNID_CUSTO  = p_DATA_FIM_DESVIO + 1; 
          vcomando := 'DELETE FROM RHCGED_TRANSFERENC WHERE CODIGO_EMPRESA = '||P_CODIGO_EMPRESA||' AND TIPO_CONTRATO = '||p_TIPO_CONTRATO||' AND CODIGO = '||p_CODIGO_CONTRATO||' AND DT_ALT_UNID_CUSTO  = '||p_DATA_FIM_DESVIO||' + 1;';
           GRAVA_LOG('DELETE',vcomando); 

          ELSIF ( vOLD_DT_FIM_TEMP_MOVI < p_DATA_INICIO_DESVIO) THEN 
              DELETE FROM RHCGED_TRANSFERENC WHERE  CODIGO_EMPRESA = P_CODIGO_EMPRESA AND TIPO_CONTRATO    = p_TIPO_CONTRATO AND CODIGO = p_CODIGO_CONTRATO AND DT_ALT_UNID_CUSTO  = p_DATA_INICIO_DESVIO;
              vcomando := 'DELETE FROM RHCGED_TRANSFERENC WHERE CODIGO_EMPRESA = '||P_CODIGO_EMPRESA||' AND TIPO_CONTRATO = '||p_TIPO_CONTRATO||' AND CODIGO = '||p_CODIGO_CONTRATO||' AND DT_ALT_UNID_CUSTO  = '||p_DATA_INICIO_DESVIO||';';
               GRAVA_LOG('DELETE',vcomando); 
       /*
          DELETE FROM RHCGED_TRANSFERENC WHERE  CODIGO_EMPRESA = P_CODIGO_EMPRESA AND TIPO_CONTRATO    = p_TIPO_CONTRATO AND CODIGO  = p_CODIGO_CONTRATO AND DT_ALT_UNID_CUSTO  = p_DATA_FIM_DESVIO + 1; 
      */
          END IF; 
     END IF;   
  END IF;
  END IF;

----------------------------------------------------------------------------------------ESCALA-----------------------------------------------------------------------------------------------------

  vPROCURAR := 'RHPONT_ALT_ESCALA';
  vVALIDA_NOME_TABELA :=VALIDA_DADO_TABELA ( vPROCURAR,vNOME_TABELA);
  vVERIFICA_MOTIVO := VERIFICA_MOTIVO_DESVIO( vMOTIVO_DESVIO, vPROCURAR );
  vVALIDA_NOME_TABELA_INSERT := VALIDA_DADO_TABELA ( vPROCURAR, vNOME_TABELA_DESIG); 


  IF (( p_DATA_INICIO_DESVIO <> vOLD_DT_INICIO_TROCA OR (p_DATA_INICIO_DESVIO is not null and vOLD_DT_INICIO_TROCA is null) )
  AND (vOLD_DT_FIM_TROCA <> p_DATA_FIM_DESVIO or (vOLD_DT_FIM_TROCA is null and p_DATA_FIM_DESVIO is not null) or (vOLD_DT_FIM_TROCA is not null and p_DATA_FIM_DESVIO is null)or (vOLD_DT_FIM_TROCA is null and p_DATA_FIM_DESVIO is null) )
  and ( p_ACAO = 'INSERIR'  or p_ACAO = 'U-INSERIR')
  AND ( vVALIDA_NOME_TABELA_INSERT > 0 ) 
  )
    THEN 
    IF( vVALIDA_NOME_TABELA = 0 ) THEN
        INSERT INTO RHPONT_ALT_ESCALA(CODIGO_EMPRESA, TIPO_CONTRATO,CODIGO_CONTRATO, DT_INICIO_TROCA, DT_FIM_TROCA, COD_ESCALA, COD_MOTIVO, ORIGEM_PROGRAMACAO, ALTER_DEFINITIVA, LOGIN_USUARIO, DT_ULT_ALTER_USUA)
        VALUES(P_CODIGO_EMPRESA, p_TIPO_CONTRATO, p_CODIGO_CONTRATO, p_DATA_INICIO_DESVIO, case when ( p_DATA_FIM_DESVIO is null or p_DATA_FIM_DESVIO > sysdate )then null else p_DATA_FIM_DESVIO end , vCODIGO_ESCALA, LPAD(vVERIFICA_MOTIVO,4,0), NULL, 'S',  p_login ,SYSDATE);

         vcomando := 'INSERT INTO RHPONT_ALT_ESCALA(CODIGO_EMPRESA, TIPO_CONTRATO,CODIGO_CONTRATO, DT_INICIO_TROCA, DT_FIM_TROCA, COD_ESCALA, COD_MOTIVO, ORIGEM_PROGRAMACAO, ALTER_DEFINITIVA, LOGIN_USUARIO, DT_ULT_ALTER_USUA) VALUES('||P_CODIGO_EMPRESA||', '||p_TIPO_CONTRATO||', '||p_CODIGO_CONTRATO||', '||p_DATA_INICIO_DESVIO||', case when ( '||p_DATA_FIM_DESVIO||' is null or '||p_DATA_FIM_DESVIO||' > sysdate )then null else '||p_DATA_FIM_DESVIO||' end , '||vCODIGO_ESCALA||', LPAD('||vVERIFICA_MOTIVO||',4,0), NULL, ''S'',  '||p_login||' ,SYSDATE);';
        GRAVA_LOG('INSERT',vcomando);

         IF ( p_DATA_FIM_DESVIO < trunc(sysdate)) THEN
            -- insert voltando o histórico 
               INSERT INTO RHPONT_ALT_ESCALA(CODIGO_EMPRESA, TIPO_CONTRATO,CODIGO_CONTRATO, DT_INICIO_TROCA, DT_FIM_TROCA, COD_ESCALA, COD_MOTIVO, ORIGEM_PROGRAMACAO, ALTER_DEFINITIVA, LOGIN_USUARIO, DT_ULT_ALTER_USUA)
              VALUES(P_CODIGO_EMPRESA, p_TIPO_CONTRATO, p_CODIGO_CONTRATO, p_DATA_FIM_DESVIO +1 , NULL, LPAD(vOLD_C_CODIGO_ESCALA,4,0) , VOLD_COD_MOTIVO_ESCALA , NULL, 'S',  p_login ,SYSDATE);  

         vcomando := 'INSERT INTO RHPONT_ALT_ESCALA(CODIGO_EMPRESA, TIPO_CONTRATO,CODIGO_CONTRATO, DT_INICIO_TROCA, DT_FIM_TROCA, COD_ESCALA, COD_MOTIVO, ORIGEM_PROGRAMACAO, ALTER_DEFINITIVA, LOGIN_USUARIO, DT_ULT_ALTER_USUA) VALUES('||P_CODIGO_EMPRESA||', '||p_TIPO_CONTRATO||', '||p_CODIGO_CONTRATO||', '||p_DATA_FIM_DESVIO||' +1 , NULL, LPAD('||vOLD_C_CODIGO_ESCALA||',4,0) , '||VOLD_COD_MOTIVO_ESCALA||' , NULL, ''S'',  '||p_login||' ,SYSDATE); '; 
        GRAVA_LOG('INSERT',vcomando);

         END IF;

    ELSIF ( vVALIDA_NOME_TABELA > 0 ) THEN
    IF  ( vOLD_DT_FIM_TROCA IS NULL  OR vOLD_DT_FIM_TROCA >= p_DATA_INICIO_DESVIO )THEN
    --UPDATE NA TABELA FINALIZANDO O REGISTRO ANTERIOR
      UPDATE RHPONT_ALT_ESCALA B
      SET B.DT_FIM_TROCA      =  ( p_DATA_INICIO_DESVIO - 1),
      LOGIN_USUARIO =  p_login  , DT_ULT_ALTER_USUA = SYSDATE
      WHERE B.CODIGO_EMPRESA = P_CODIGO_EMPRESA
      AND B.TIPO_CONTRATO    = p_TIPO_CONTRATO
      AND B.CODIGO_CONTRATO  = p_CODIGO_CONTRATO
      AND B.DT_INICIO_TROCA  = vOLD_DT_INICIO_TROCA; 

        vcomando := 'UPDATE RHPONT_ALT_ESCALA B SET B.DT_FIM_TROCA  =  ( '||p_DATA_INICIO_DESVIO||' - 1), LOGIN_USUARIO =  '||p_login||'  , DT_ULT_ALTER_USUA = SYSDATE WHERE B.CODIGO_EMPRESA = '||P_CODIGO_EMPRESA||' AND B.TIPO_CONTRATO    = '||p_TIPO_CONTRATO||' AND B.CODIGO_CONTRATO  = '||p_CODIGO_CONTRATO||' AND B.DT_INICIO_TROCA  = '||vOLD_DT_INICIO_TROCA||'; ';
        GRAVA_LOG('UPDATE',vcomando);

      INSERT INTO RHPONT_ALT_ESCALA(CODIGO_EMPRESA, TIPO_CONTRATO,CODIGO_CONTRATO, DT_INICIO_TROCA, DT_FIM_TROCA, COD_ESCALA, COD_MOTIVO, ORIGEM_PROGRAMACAO, ALTER_DEFINITIVA, LOGIN_USUARIO, DT_ULT_ALTER_USUA)
      VALUES(P_CODIGO_EMPRESA, p_TIPO_CONTRATO, p_CODIGO_CONTRATO, p_DATA_INICIO_DESVIO, case when ( p_DATA_FIM_DESVIO is null or p_DATA_FIM_DESVIO > sysdate )then null else p_DATA_FIM_DESVIO end , vCODIGO_ESCALA, LPAD(vVERIFICA_MOTIVO,4,0), NULL, 'S',  p_login ,SYSDATE);

        vcomando := 'INSERT INTO RHPONT_ALT_ESCALA(CODIGO_EMPRESA, TIPO_CONTRATO,CODIGO_CONTRATO, DT_INICIO_TROCA, DT_FIM_TROCA, COD_ESCALA, COD_MOTIVO, ORIGEM_PROGRAMACAO, ALTER_DEFINITIVA, LOGIN_USUARIO, DT_ULT_ALTER_USUA) VALUES('||P_CODIGO_EMPRESA||', '||p_TIPO_CONTRATO||', '||p_CODIGO_CONTRATO||', '||p_DATA_INICIO_DESVIO||', case when ( '||p_DATA_FIM_DESVIO||' is null or '||p_DATA_FIM_DESVIO||' > sysdate )then null else '||p_DATA_FIM_DESVIO||' end , '||vCODIGO_ESCALA||', LPAD('||vVERIFICA_MOTIVO||',4,0), NULL, ''S'',  '||p_login||' ,SYSDATE);';
        GRAVA_LOG('INSERT',vcomando);

          IF( p_DATA_FIM_DESVIO < trunc(sysdate)) then
          -- insert voltando o histórico 
               INSERT INTO RHPONT_ALT_ESCALA(CODIGO_EMPRESA, TIPO_CONTRATO,CODIGO_CONTRATO, DT_INICIO_TROCA, DT_FIM_TROCA, COD_ESCALA, COD_MOTIVO, ORIGEM_PROGRAMACAO, ALTER_DEFINITIVA, LOGIN_USUARIO, DT_ULT_ALTER_USUA)
              VALUES(P_CODIGO_EMPRESA, p_TIPO_CONTRATO, p_CODIGO_CONTRATO, p_DATA_FIM_DESVIO +1 ,
              (SELECT MIN(DT_INICIO_TROCA - 1)  FROM RHPONT_ALT_ESCALA WHERE DT_INICIO_TROCA > p_DATA_FIM_DESVIO AND CODIGO_EMPRESA = P_CODIGO_EMPRESA  AND TIPO_CONTRATO    = p_TIPO_CONTRATO AND CODIGO_CONTRATO  = p_CODIGO_CONTRATO), 
              LPAD(vOLD_C_CODIGO_ESCALA,4,0) , VOLD_COD_MOTIVO_ESCALA , NULL, 'S',  p_login ,SYSDATE);

        vcomando:= 'INSERT INTO RHPONT_ALT_ESCALA(CODIGO_EMPRESA, TIPO_CONTRATO,CODIGO_CONTRATO, DT_INICIO_TROCA, DT_FIM_TROCA, COD_ESCALA, COD_MOTIVO, ORIGEM_PROGRAMACAO, ALTER_DEFINITIVA, LOGIN_USUARIO, DT_ULT_ALTER_USUA) VALUES('||P_CODIGO_EMPRESA||', '||p_TIPO_CONTRATO||', '||p_CODIGO_CONTRATO||', '||p_DATA_FIM_DESVIO||' +1 , (SELECT MIN(DT_INICIO_TROCA - 1)  FROM RHPONT_ALT_ESCALA WHERE DT_INICIO_TROCA > '||p_DATA_FIM_DESVIO||' AND CODIGO_EMPRESA = '||P_CODIGO_EMPRESA||'  AND TIPO_CONTRATO    = '||p_TIPO_CONTRATO||' AND CODIGO_CONTRATO  = '||p_CODIGO_CONTRATO||'), LPAD('||vOLD_C_CODIGO_ESCALA||',4,0) , '||VOLD_COD_MOTIVO_ESCALA||' , NULL, ''S'',  '||p_login||' ,SYSDATE);';
        GRAVA_LOG('INSERT',vcomando);

          END IF;  
      ELSIF (vOLD_DT_FIM_TROCA < p_DATA_INICIO_DESVIO) THEN 
            INSERT INTO RHPONT_ALT_ESCALA(CODIGO_EMPRESA, TIPO_CONTRATO,CODIGO_CONTRATO, DT_INICIO_TROCA, DT_FIM_TROCA, COD_ESCALA, COD_MOTIVO, ORIGEM_PROGRAMACAO, ALTER_DEFINITIVA, LOGIN_USUARIO, DT_ULT_ALTER_USUA)
            VALUES(P_CODIGO_EMPRESA, p_TIPO_CONTRATO, p_CODIGO_CONTRATO, p_DATA_INICIO_DESVIO, case when ( p_DATA_FIM_DESVIO is null or p_DATA_FIM_DESVIO > sysdate )then null else p_DATA_FIM_DESVIO end , vCODIGO_ESCALA, LPAD(vVERIFICA_MOTIVO,4,0), NULL, 'S',  p_login ,SYSDATE);       

            vcomando:=  'INSERT INTO RHPONT_ALT_ESCALA(CODIGO_EMPRESA, TIPO_CONTRATO,CODIGO_CONTRATO, DT_INICIO_TROCA, DT_FIM_TROCA, COD_ESCALA, COD_MOTIVO, ORIGEM_PROGRAMACAO, ALTER_DEFINITIVA, LOGIN_USUARIO, DT_ULT_ALTER_USUA) VALUES('||P_CODIGO_EMPRESA||', '||p_TIPO_CONTRATO||', '||p_CODIGO_CONTRATO||', '||p_DATA_INICIO_DESVIO||', case when ( '||p_DATA_FIM_DESVIO||' is null or '||p_DATA_FIM_DESVIO||' > sysdate )then null else '||p_DATA_FIM_DESVIO||' end , '||vCODIGO_ESCALA||', LPAD('||vVERIFICA_MOTIVO||',4,0), NULL, ''S'',  '||p_login||' ,SYSDATE);';
            GRAVA_LOG ('INSERT',vcomando);
--10/11/2020
            IF ( p_DATA_FIM_DESVIO < trunc(sysdate)) THEN
            -- insert voltando o histórico 
               INSERT INTO RHPONT_ALT_ESCALA(CODIGO_EMPRESA, TIPO_CONTRATO,CODIGO_CONTRATO, DT_INICIO_TROCA, DT_FIM_TROCA, COD_ESCALA, COD_MOTIVO, ORIGEM_PROGRAMACAO, ALTER_DEFINITIVA, LOGIN_USUARIO, DT_ULT_ALTER_USUA)
              VALUES(P_CODIGO_EMPRESA, p_TIPO_CONTRATO, p_CODIGO_CONTRATO, p_DATA_FIM_DESVIO +1 ,
              (SELECT MIN(DT_INICIO_TROCA - 1)  FROM RHPONT_ALT_ESCALA WHERE DT_INICIO_TROCA > p_DATA_FIM_DESVIO AND CODIGO_EMPRESA = P_CODIGO_EMPRESA  AND TIPO_CONTRATO = p_TIPO_CONTRATO AND CODIGO_CONTRATO  = p_CODIGO_CONTRATO), 
              LPAD(vOLD_C_CODIGO_ESCALA,4,0) , VOLD_COD_MOTIVO_ESCALA , NULL, 'S',  p_login ,SYSDATE);

            vcomando:= 'INSERT INTO RHPONT_ALT_ESCALA(CODIGO_EMPRESA, TIPO_CONTRATO,CODIGO_CONTRATO, DT_INICIO_TROCA, DT_FIM_TROCA, COD_ESCALA, COD_MOTIVO, ORIGEM_PROGRAMACAO, ALTER_DEFINITIVA, LOGIN_USUARIO, DT_ULT_ALTER_USUA) VALUES('||P_CODIGO_EMPRESA||', '||p_TIPO_CONTRATO||', '||p_CODIGO_CONTRATO||', '||p_DATA_FIM_DESVIO||' +1 , (SELECT MIN(DT_INICIO_TROCA - 1)  FROM RHPONT_ALT_ESCALA WHERE DT_INICIO_TROCA > '||p_DATA_FIM_DESVIO||' AND CODIGO_EMPRESA = '||P_CODIGO_EMPRESA||'  AND TIPO_CONTRATO = '||p_TIPO_CONTRATO||' AND CODIGO_CONTRATO  = '||p_CODIGO_CONTRATO||'), LPAD('||vOLD_C_CODIGO_ESCALA||',4,0) , '||VOLD_COD_MOTIVO_ESCALA||' , NULL, ''S'',  '||p_login||' ,SYSDATE);';
            GRAVA_LOG ('INSERT',vcomando);

            END IF;  

      END IF;

    END IF;    
  END IF;

   -- inserido em 09/11/2020  FAZ O RETORNO NA HISTÓRICA QUANDO A DESIGNAÇÃO FINDA
 IF ( ( p_ACAO = 'ENCERRAR' )  AND ( vVALIDA_NOME_TABELA_INSERT > 0 )) -- VALIDA SE A PESSOA RECEBEU UMA ESCALA  
   THEN
       IF ( vCODIGO_ESCALA = vOLD_CODIGO_ESCALA  and vOLD_DT_INICIO_TROCA = p_DATA_INICIO_DESVIO ) THEN
          dbms_output.put_line('Entrou no Encerrar Escala');

          UPDATE RHPONT_ALT_ESCALA B
          SET B.DT_FIM_TROCA      = p_DATA_FIM_DESVIO,
          B.DT_INICIO_TROCA = p_DATA_INICIO_DESVIO,
          LOGIN_USUARIO =  p_login  , DT_ULT_ALTER_USUA = SYSDATE
          WHERE B.CODIGO_EMPRESA = P_CODIGO_EMPRESA
          AND B.TIPO_CONTRATO    = p_TIPO_CONTRATO
          AND B.CODIGO_CONTRATO  = p_CODIGO_CONTRATO
          AND B.DT_INICIO_TROCA  = p_DATA_INICIO_DESVIO; 


            vcomando:= 'UPDATE RHPONT_ALT_ESCALA B SET B.DT_FIM_TROCA      = '||p_DATA_FIM_DESVIO||', B.DT_INICIO_TROCA = '||p_DATA_INICIO_DESVIO||', LOGIN_USUARIO =  '||p_login||'  , DT_ULT_ALTER_USUA = SYSDATE WHERE B.CODIGO_EMPRESA = '||P_CODIGO_EMPRESA||' AND B.TIPO_CONTRATO    = '||p_TIPO_CONTRATO||' AND B.CODIGO_CONTRATO  = '||p_CODIGO_CONTRATO||' AND B.DT_INICIO_TROCA  = '||p_DATA_INICIO_DESVIO||'; ';
            GRAVA_LOG ('UPDATE',vcomando);

            -- insert voltando o histórico 
                INSERT INTO RHPONT_ALT_ESCALA(CODIGO_EMPRESA, TIPO_CONTRATO,CODIGO_CONTRATO, DT_INICIO_TROCA, DT_FIM_TROCA, COD_ESCALA, COD_MOTIVO, ORIGEM_PROGRAMACAO, ALTER_DEFINITIVA, LOGIN_USUARIO, DT_ULT_ALTER_USUA)
              VALUES(P_CODIGO_EMPRESA, p_TIPO_CONTRATO, p_CODIGO_CONTRATO, p_DATA_FIM_DESVIO +1 ,
              (SELECT MIN(DT_INICIO_TROCA - 1)  FROM RHPONT_ALT_ESCALA WHERE DT_INICIO_TROCA > p_DATA_FIM_DESVIO AND CODIGO_EMPRESA = P_CODIGO_EMPRESA  AND TIPO_CONTRATO    = p_TIPO_CONTRATO AND CODIGO_CONTRATO  = p_CODIGO_CONTRATO), 
              LPAD(vOLD_C_CODIGO_ESCALA,4,0) , VOLD_COD_MOTIVO_ESCALA , NULL, 'S',  p_login ,SYSDATE); 

          vcomando:= 'INSERT INTO RHPONT_ALT_ESCALA(CODIGO_EMPRESA, TIPO_CONTRATO,CODIGO_CONTRATO, DT_INICIO_TROCA, DT_FIM_TROCA, COD_ESCALA, COD_MOTIVO, ORIGEM_PROGRAMACAO, ALTER_DEFINITIVA, LOGIN_USUARIO, DT_ULT_ALTER_USUA) VALUES('||P_CODIGO_EMPRESA||', '||p_TIPO_CONTRATO||', '||p_CODIGO_CONTRATO||', '||p_DATA_FIM_DESVIO||' +1 , (SELECT MIN(DT_INICIO_TROCA - 1)  FROM RHPONT_ALT_ESCALA WHERE DT_INICIO_TROCA > '||p_DATA_FIM_DESVIO||' AND CODIGO_EMPRESA = '||P_CODIGO_EMPRESA||'  AND TIPO_CONTRATO    = '||p_TIPO_CONTRATO||' AND CODIGO_CONTRATO  = '||p_CODIGO_CONTRATO||'),  LPAD('||vOLD_C_CODIGO_ESCALA||',4,0) , '||VOLD_COD_MOTIVO_ESCALA||' , NULL, ''S'',  '||p_login||' ,SYSDATE); ';
         GRAVA_LOG ('INSERT',vcomando);
      END IF;
 END IF;
 -- fim 09/11/2020


----------------------DELETE
 IF ( ( p_ACAO = 'EXCLUIR' OR p_ACAO = 'U-EXCLUIR')  AND p_DATA_INICIO_DESVIO <= trunc(sysdate) )  THEN
  IF ( vVALIDA_NOME_TABELA_INSERT > 0 ) THEN
      IF ( vVALIDA_NOME_TABELA = 0 ) THEN
          DELETE FROM RHPONT_ALT_ESCALA WHERE  CODIGO_EMPRESA = P_CODIGO_EMPRESA AND TIPO_CONTRATO    = p_TIPO_CONTRATO AND CODIGO_CONTRATO  = p_CODIGO_CONTRATO AND DT_FIM_TROCA  = p_DATA_FIM_DESVIO; 
      vcomando:= 'DELETE FROM RHPONT_ALT_ESCALA WHERE  CODIGO_EMPRESA = '||P_CODIGO_EMPRESA||' AND TIPO_CONTRATO    = '||p_TIPO_CONTRATO||' AND CODIGO_CONTRATO  = '||p_CODIGO_CONTRATO||' AND DT_FIM_TROCA  = '||p_DATA_FIM_DESVIO||'; ';
       GRAVA_LOG ('DELETE',vcomando);
      ELSIF ( vVALIDA_NOME_TABELA > 0 ) THEN
      IF  ( vOLD_DT_FIM_TROCA IS NULL OR vOLD_DT_FIM_TROCA >= p_DATA_INICIO_DESVIO )THEN
    --UPDATE NA TABELA DE CARGO FINALIZANDO O REGISTRO ANTERIOR
              UPDATE RHPONT_ALT_ESCALA B
              SET B.DT_FIM_TROCA      = vOLD_DT_FIM_TROCA,
              LOGIN_USUARIO = 	 p_login  , DT_ULT_ALTER_USUA = SYSDATE
              WHERE B.CODIGO_EMPRESA = P_CODIGO_EMPRESA
              AND B.TIPO_CONTRATO    = p_TIPO_CONTRATO
              AND B.CODIGO_CONTRATO  = p_CODIGO_CONTRATO
              AND B.DT_INICIO_TROCA  = vOLD_DT_INICIO_TROCA; 

             vcomando:= 'UPDATE RHPONT_ALT_ESCALA B  SET B.DT_FIM_TROCA      = '||vOLD_DT_FIM_TROCA||', LOGIN_USUARIO = 	 '||p_login||'  , DT_ULT_ALTER_USUA = SYSDATE WHERE B.CODIGO_EMPRESA = '||P_CODIGO_EMPRESA||' AND B.TIPO_CONTRATO    = '||p_TIPO_CONTRATO||' AND B.CODIGO_CONTRATO  = '||p_CODIGO_CONTRATO||' AND B.DT_INICIO_TROCA  = '||vOLD_DT_INICIO_TROCA||';'; 
             GRAVA_LOG ('UPDATE',vcomando);

              DELETE FROM RHPONT_ALT_ESCALA WHERE  CODIGO_EMPRESA = P_CODIGO_EMPRESA AND TIPO_CONTRATO    = p_TIPO_CONTRATO AND CODIGO_CONTRATO  = p_CODIGO_CONTRATO AND DT_INICIO_TROCA  = p_DATA_INICIO_DESVIO;
              vcomando:= 'DELETE FROM RHPONT_ALT_ESCALA WHERE  CODIGO_EMPRESA = '||P_CODIGO_EMPRESA||' AND TIPO_CONTRATO    = '||p_TIPO_CONTRATO||' AND CODIGO_CONTRATO  = '||p_CODIGO_CONTRATO||' AND DT_INICIO_TROCA  = '||p_DATA_INICIO_DESVIO||';';
             GRAVA_LOG ('DELETE',vcomando);

              DELETE FROM RHPONT_ALT_ESCALA WHERE  CODIGO_EMPRESA = P_CODIGO_EMPRESA AND TIPO_CONTRATO    = p_TIPO_CONTRATO AND CODIGO_CONTRATO  = p_CODIGO_CONTRATO AND DT_INICIO_TROCA  = p_DATA_FIM_DESVIO + 1; 
             vcomando:= 'DELETE FROM RHPONT_ALT_ESCALA WHERE  CODIGO_EMPRESA = '||P_CODIGO_EMPRESA||' AND TIPO_CONTRATO    = '||p_TIPO_CONTRATO||' AND CODIGO_CONTRATO  = '||p_CODIGO_CONTRATO||' AND DT_INICIO_TROCA  = '||p_DATA_FIM_DESVIO||' + 1; ';
             GRAVA_LOG ('DELETE',vcomando);

     ELSIF ( vOLD_DT_FIM_TROCA < p_DATA_INICIO_DESVIO) THEN 
              DELETE FROM RHPONT_ALT_ESCALA WHERE  CODIGO_EMPRESA = P_CODIGO_EMPRESA AND TIPO_CONTRATO    = p_TIPO_CONTRATO AND CODIGO_CONTRATO  = p_CODIGO_CONTRATO AND DT_INICIO_TROCA  = p_DATA_INICIO_DESVIO;   
            vcomando:= 'DELETE FROM RHPONT_ALT_ESCALA WHERE  CODIGO_EMPRESA = '||P_CODIGO_EMPRESA||' AND TIPO_CONTRATO    = '||p_TIPO_CONTRATO||' AND CODIGO_CONTRATO  = '||p_CODIGO_CONTRATO||' AND DT_INICIO_TROCA  = '||p_DATA_INICIO_DESVIO||';   ';
           GRAVA_LOG ('DELETE',vcomando);

          /*
          REMOVIDO EM 24/02/2022
          DELETE FROM RHPONT_ALT_ESCALA WHERE  CODIGO_EMPRESA = P_CODIGO_EMPRESA AND TIPO_CONTRATO    = p_TIPO_CONTRATO AND CODIGO_CONTRATO  = p_CODIGO_CONTRATO AND DT_INICIO_TROCA  = p_DATA_FIM_DESVIO + 1; 
           vcomando:= 'DELETE FROM RHPONT_ALT_ESCALA WHERE  CODIGO_EMPRESA = '||P_CODIGO_EMPRESA||' AND TIPO_CONTRATO    = '||p_TIPO_CONTRATO||' AND CODIGO_CONTRATO  = '||p_CODIGO_CONTRATO||' AND DT_INICIO_TROCA  = '||p_DATA_FIM_DESVIO||' + 1; ';
           GRAVA_LOG ('DELETE',vcomando);
           */
      END IF;  
      END IF;   
     END IF;   
  END IF; 
 --------------------------------------------------------------------------------------------------GESTOR---------------------------------------------------------------------------------------
 -- SE O TITULAR FOR GESTOR O SUBSTITUTO ASSUME A GERENCIA DO LOCAL SE A DATA FIM DA DESISGAÇÃO FOR MAIOR QUE A DATA ATUAL.
 -- O GESTOR TAMBÉM É ALTERADO SE A DESIGNAÇÃO POSSUIR MOTIVO = 0001 E A DATA FIM FOR MAIOR QUE A DATA DE HOJE!
 IF ( ( vMOTIVO_DESVIO = '0002' ) or (vMOTIVO_DESVIO = '0001' )) THEN
 -- VAI
    IF ( ( p_ACAO = 'INSERIR' or p_ACAO = 'U-INSERIR') AND ( p_DATA_FIM_DESVIO > trunc(sysdate) OR p_DATA_FIM_DESVIO IS NULL) ) THEN
    dbms_output.put_line( 'entrou no inserir gestor');
     IF( vMOTIVO_DESVIO = '0002' AND VE_GESTOR_TITULAR = 'S' )THEN /*DESIGNAÇÃO EM SUBSTITUIÇÃO*/
        FOR GEST IN ( select COD_CGERENC1,COD_CGERENC2,COD_CGERENC3,COD_CGERENC4,COD_CGERENC5,COD_CGERENC6, CODIGO_EMPRESA from RHORGA_CUSTO_GEREN WHERE CONTRATO_RESP = VCONTRATO_TITULAR AND TIPO_CONT_RESP = VTIPO_CONTRATO_TITULAR AND data_extincao IS NULL ) 
        LOOP 
        --insert na tabela SMARH_DESIG_CUST_GEREN para salvar a histórico
         INSERT INTO SMARH_DESIG_CUST_GEREN values ( vTIPO_DML, p_ID, SYSDATE, p_CODIGO_EMPRESA, VCOD_PESSOA, p_TIPO_CONTRATO, p_CODIGO_CONTRATO, 
          (SELECT B.CODIGO_PESSOA FROM RHPESS_CONTRATO B WHERE B.CODIGO_EMPRESA = p_CODIGO_EMPRESA AND B.TIPO_CONTRATO = VTIPO_CONTRATO_TITULAR AND B.CODIGO = VCONTRATO_TITULAR AND B.ANO_MES_REFERENCIA =  (SELECT MAX(ANO_MES_REFERENCIA)  FROM RHPESS_CONTRATO AUX  WHERE AUX.CODIGO_EMPRESA = B.CODIGO_EMPRESA  AND AUX.TIPO_CONTRATO = B.TIPO_CONTRATO  AND AUX.CODIGO = B.CODIGO  )),
          VTIPO_CONTRATO_TITULAR , VCONTRATO_TITULAR , GEST.COD_CGERENC1, GEST.COD_CGERENC2,GEST.COD_CGERENC3, GEST.COD_CGERENC4, GEST.COD_CGERENC5, GEST.COD_CGERENC6 , GEST.codigo_empresa) ;

          UPDATE RHORGA_CUSTO_GEREN SET CONTRATO_RESP = p_CODIGO_CONTRATO , TIPO_CONT_RESP = p_TIPO_CONTRATO, COD_PESSOA_RESP = VCOD_PESSOA, COD_EMPRESA_PESS = p_CODIGO_EMPRESA,
          LOGIN_USUARIO = 	p_login , DT_ULT_ALTER_USUA = SYSDATE  WHERE COD_CGERENC1 = GEST.COD_CGERENC1 AND COD_CGERENC2 = GEST.COD_CGERENC2 AND COD_CGERENC3  = GEST.COD_CGERENC3 
          AND COD_CGERENC4  = GEST.COD_CGERENC4 AND COD_CGERENC5 =  GEST.COD_CGERENC5 AND COD_CGERENC6 =  GEST.COD_CGERENC6  AND CODIGO_EMPRESA = GEST.CODIGO_EMPRESA AND data_extincao IS NULL ;

          vcomando:= 'UPDATE RHORGA_CUSTO_GEREN SET CONTRATO_RESP = '||p_CODIGO_CONTRATO||' , TIPO_CONT_RESP = '||p_TIPO_CONTRATO||', COD_PESSOA_RESP = '||VCOD_PESSOA||', COD_EMPRESA_PESS = '||p_CODIGO_EMPRESA||', LOGIN_USUARIO = '||p_login||' , DT_ULT_ALTER_USUA = SYSDATE  WHERE COD_CGERENC1 = '||GEST.COD_CGERENC1||' AND COD_CGERENC2 = '||GEST.COD_CGERENC2||' AND COD_CGERENC3  = '||GEST.COD_CGERENC3||' AND COD_CGERENC4  = '||GEST.COD_CGERENC4||' AND COD_CGERENC5 =  '||GEST.COD_CGERENC5||' AND COD_CGERENC6 =  '||GEST.COD_CGERENC6||'  AND CODIGO_EMPRESA = '||GEST.CODIGO_EMPRESA||' AND data_extincao IS NULL ;';
          GRAVA_LOG ('UPDATE',vcomando);

          UPDATE RHORGA_AGRUPADOR SET CONTRATO_RESP = p_CODIGO_CONTRATO , TIPO_CONT_RESP = p_TIPO_CONTRATO, COD_PESSOA_RESP = VCOD_PESSOA, COD_EMPRESA_PESS = p_CODIGO_EMPRESA,
          LOGIN_USUARIO = 	p_login , DT_ULT_ALTER_USUA = SYSDATE  WHERE COD_AGRUP1  = GEST.COD_CGERENC1 AND COD_AGRUP2 = GEST.COD_CGERENC2 AND COD_AGRUP3  = GEST.COD_CGERENC3 
          AND COD_AGRUP4  = GEST.COD_CGERENC4 AND COD_AGRUP5 =  GEST.COD_CGERENC5 AND COD_AGRUP6 =  GEST.COD_CGERENC6  AND CODIGO_EMPRESA = GEST.CODIGO_EMPRESA AND data_extincao IS NULL and TIPO_AGRUP  = 'G';

          vcomando:='UPDATE RHORGA_AGRUPADOR SET CONTRATO_RESP = '||p_CODIGO_CONTRATO||' , TIPO_CONT_RESP = '||p_TIPO_CONTRATO||', COD_PESSOA_RESP = '||VCOD_PESSOA||', COD_EMPRESA_PESS = '||p_CODIGO_EMPRESA||', LOGIN_USUARIO = '||p_login||' , DT_ULT_ALTER_USUA = SYSDATE  WHERE COD_AGRUP1  = '||GEST.COD_CGERENC1||' AND COD_AGRUP2 = '||GEST.COD_CGERENC2||' AND COD_AGRUP3  = '||GEST.COD_CGERENC3||' AND COD_AGRUP4  = '||GEST.COD_CGERENC4||' AND COD_AGRUP5 =  '||GEST.COD_CGERENC5||' AND COD_AGRUP6 =  '||GEST.COD_CGERENC6||'  AND CODIGO_EMPRESA = '||GEST.CODIGO_EMPRESA||' AND data_extincao IS NULL ;';
          GRAVA_LOG ('UPDATE',vcomando);


            /* INICIO ---  inserido em 25/02/2022 para fazer insert tambem na tabela RHORGA_AGRUPADOR_H */
            SELECT COUNT(1) into vcontagem 
            FROM RHORGA_AGRUPADOR_H WHERE 
            COD_AGRUP1  = GEST.COD_CGERENC1 AND COD_AGRUP2 = GEST.COD_CGERENC2 AND COD_AGRUP3  = GEST.COD_CGERENC3 
            AND COD_AGRUP4  = GEST.COD_CGERENC4 AND COD_AGRUP5 =  GEST.COD_CGERENC5 AND COD_AGRUP6 =  GEST.COD_CGERENC6  
            AND CODIGO_EMPRESA = p_CODIGO_EMPRESA AND data_extincao IS NULL and TIPO_AGRUP      = 'G'
            AND ano_mes_referencia = trunc(vDATA_SISTEMA,'MM');

                if( vcontagem <= 0 ) then
                     INSERT INTO RHORGA_AGRUPADOR_H 
                     select CODIGO_EMPRESA,TIPO_AGRUP,COD_AGRUP1,COD_AGRUP2,COD_AGRUP3,COD_AGRUP4,COD_AGRUP5,COD_AGRUP6,trunc(vDATA_SISTEMA,'MM'),DESCRICAO,ABREVIACAO,RAZAO_SOCIAL,CGC,CEI,CGC_CEI_ANT,CPF,COD_AGRUP_SUP1,COD_AGRUP_SUP2,COD_AGRUP_SUP3,COD_AGRUP_SUP4,COD_AGRUP_SUP5,COD_AGRUP_SUP6,COD_PESSOA_RESP,AREA_DE_RISCO,COD_ENDERECO,COMPLEMENTO,TELEFONE,FAX,TELEX,BANCO_CC,CONTA_CORRENTE,BANCO_FGTS,CONTA_FGTS,CODIGO_FGTS_CEF,CODIGO_ATIVIDADE,CODIGO_CNAE,NATUREZA_ESTAB,NATUREZA_JURIDICA,COD_CALENDARIO,COD_PARM_DEF_EMP,COD_PARM_GUIA_INSS,COD_PARM_CALCULO,COD_PARM_FERIAS,COD_PARM_RESCISAO,COD_SINDICATO,GRUPO_TAB_SAL,NRO_SOCIOS,NRO_AUTONOMOS,NRO_TERCEIROS,NRO_FAMILIARES,NRO_MAO_OBRA_CONTR,NRO_EMPREG_ATIVOS,NRO_EMPREG_INATIV,NRO_EMP_PREVISTOS,EXISTE_INICIO_MES,ADM_1_EMPREGO,ADM_REEMPREGO,TRANSF_ENTRADA,TRANSF_SAIDA,RESC_DISP_CJC,RESC_DISP_SJC,RESC_ESPONTANEOS,RESC_MORTE,APOSENTADOS,AFASTADOS,REINTEGRADOS,TERMINO_CONTRATO,C_LIVRE_SELEC01,C_LIVRE_SELEC02,C_LIVRE_SELEC03,C_LIVRE_VALOR04,C_LIVRE_VALOR05,C_LIVRE_VALOR06,C_LIVRE_DESCR07,C_LIVRE_DESCR08,COD_PARM_PROVISAO,DATA_IMPLANT,DATA_EXTINCAO,MOTIVO_EXTINCAO,TEXTO_ASSOCIADO,COD_TAB_MESES,COD_EMPRESA_PESS,COD_EMPR_PESS_INF,COD_PESS_INFORMAL,OPTANTE_SIMPLES,CGC_CONSOL,LOGO_QUADRADO,LOGO_RETANGULAR,PARTICIPA_PAT,MICROEMPRESA,EMPRESA_PEQ_PORTE,COD_CNAE_FISCAL,INSCR_MUNICIPAL,INSCR_ESTADUAL,CEI_VALIDO,ID_AGRUP,COD_TOMADOR,LOGIN_USUARIO,DT_ULT_ALTER_USUA,NIVEL_AGRUP_ESTRUT,COD_RECOLHIMENTO,COD_SIND_PATRONAL,PREFIXO_RAIS,CODIGO_TP_NEGOCIO,C_LIVRE_SELEC09,C_LIVRE_SELEC10,C_LIVRE_SELEC11,C_LIVRE_OPCAO12,C_LIVRE_OPCAO13,C_LIVRE_OPCAO14,C_LIVRE_DATA15,C_LIVRE_DATA16,C_LIVRE_DATA17,CAPITAL_SOCIAL,FATURAMENTO_BRUTO,TIPO_CONT_RESP,CONTRATO_RESP,TIPO_CONT_RESP_INF,CONTRATO_RESP_INF,PARM_EXAMES_MED,SINDICALIZADO,COD_CNAE_PREPOND,INSCR_SUFRAMA,MISSAO,VISAO,VALORES,POLITICA_QUALIDADE,DATA_ABERTURA_CNPJ,C_LIVRE_SELEC18,C_LIVRE_SELEC19,C_LIVRE_VALOR20,C_LIVRE_VALOR21,C_LIVRE_DESCR22,C_LIVRE_DESCR23,C_LIVRE_OPCAO24,C_LIVRE_OPCAO25,C_LIVRE_DATA26,C_LIVRE_DATA27,TP_LOTACAO_ESOCIAL,TP_INSC_CONTRA_ESOCIAL,NRO_INSC_CONTRA_ESOCIAL,TP_INSC_PROPR_ESOCIAL,NRO_INSC_PROPR_ESOCIAL,DT_PROC_ESOCIAL,IND_SUB_PATRONAL_OBRA_ESOCIAL,TIPO_CTRL_PONTO,CODIGO_USUARIO,IND_DESONERA_FOLHA,NRO_SIAFI,CODIGO_P_RPPS,IND_SIMPLES,IND_SIT_PJ,CODIGO_EMPRESA_ERP,NOME_AGRUPADOR,IND_OP_REG_ELETRON_ESOCIAL,IND_AC_ISEN_MULTA_ESOCIAL,IND_ETT_ESOCIAL,NR_REG_ETT_ESOCIAL,CONT_APR_ESOCIAL,CONT_ENT_ED_ESOCIAL,CONT_PCD_ESOCIAL,ENTE_FED_RESP_ESOCIAL,ID_ENTE_FEDERA,LOGO,COD_EMPRESA_GRP_EMP,COD_AGRUP_GRP_EMP1,COD_AGRUP_GRP_EMP2,COD_AGRUP_GRP_EMP3,COD_AGRUP_GRP_EMP4,COD_AGRUP_GRP_EMP5,COD_AGRUP_GRP_EMP6,ID_FONTE_RECURSO,LOCALIZADOR,ID_AGRUP_SUP,DT_TRANSF_EBAS_SCFL
                     from RHORGA_AGRUPADOR WHERE 
                      COD_AGRUP1  = GEST.COD_CGERENC1 AND COD_AGRUP2 = GEST.COD_CGERENC2 AND COD_AGRUP3  = GEST.COD_CGERENC3 
                      AND COD_AGRUP4  = GEST.COD_CGERENC4 AND COD_AGRUP5 =  GEST.COD_CGERENC5 AND COD_AGRUP6 =  GEST.COD_CGERENC6  
                      AND CODIGO_EMPRESA = p_CODIGO_EMPRESA AND data_extincao IS NULL and TIPO_AGRUP = 'G';

                      vcomando := 'INSERT INTO RHORGA_AGRUPADOR_H select CODIGO_EMPRESA,TIPO_AGRUP,COD_AGRUP1,COD_AGRUP2,COD_AGRUP3,COD_AGRUP4,COD_AGRUP5,COD_AGRUP6,trunc('||vDATA_SISTEMA||',''MM''),DESCRICAO,ABREVIACAO,RAZAO_SOCIAL,CGC,CEI,CGC_CEI_ANT,CPF,COD_AGRUP_SUP1,COD_AGRUP_SUP2,COD_AGRUP_SUP3,COD_AGRUP_SUP4,COD_AGRUP_SUP5,COD_AGRUP_SUP6,COD_PESSOA_RESP,AREA_DE_RISCO,COD_ENDERECO,COMPLEMENTO,TELEFONE,FAX,TELEX,BANCO_CC,CONTA_CORRENTE,BANCO_FGTS,CONTA_FGTS,CODIGO_FGTS_CEF,CODIGO_ATIVIDADE,CODIGO_CNAE,NATUREZA_ESTAB,NATUREZA_JURIDICA,COD_CALENDARIO,COD_PARM_DEF_EMP,COD_PARM_GUIA_INSS,COD_PARM_CALCULO,COD_PARM_FERIAS,COD_PARM_RESCISAO,COD_SINDICATO,GRUPO_TAB_SAL,NRO_SOCIOS,NRO_AUTONOMOS,NRO_TERCEIROS,NRO_FAMILIARES,NRO_MAO_OBRA_CONTR,NRO_EMPREG_ATIVOS,NRO_EMPREG_INATIV,NRO_EMP_PREVISTOS,EXISTE_INICIO_MES,ADM_1_EMPREGO,ADM_REEMPREGO,TRANSF_ENTRADA,TRANSF_SAIDA,RESC_DISP_CJC,RESC_DISP_SJC,RESC_ESPONTANEOS,RESC_MORTE,APOSENTADOS,AFASTADOS,REINTEGRADOS,TERMINO_CONTRATO,C_LIVRE_SELEC01,C_LIVRE_SELEC02,C_LIVRE_SELEC03,C_LIVRE_VALOR04,C_LIVRE_VALOR05,C_LIVRE_VALOR06,C_LIVRE_DESCR07,C_LIVRE_DESCR08,COD_PARM_PROVISAO,DATA_IMPLANT,DATA_EXTINCAO,MOTIVO_EXTINCAO,TEXTO_ASSOCIADO,COD_TAB_MESES,COD_EMPRESA_PESS,COD_EMPR_PESS_INF,COD_PESS_INFORMAL,OPTANTE_SIMPLES,CGC_CONSOL,LOGO_QUADRADO,LOGO_RETANGULAR,PARTICIPA_PAT,MICROEMPRESA,EMPRESA_PEQ_PORTE,COD_CNAE_FISCAL,INSCR_MUNICIPAL,INSCR_ESTADUAL,CEI_VALIDO,ID_AGRUP,COD_TOMADOR,LOGIN_USUARIO,DT_ULT_ALTER_USUA,NIVEL_AGRUP_ESTRUT,COD_RECOLHIMENTO,COD_SIND_PATRONAL,PREFIXO_RAIS,CODIGO_TP_NEGOCIO,C_LIVRE_SELEC09,C_LIVRE_SELEC10,C_LIVRE_SELEC11,C_LIVRE_OPCAO12,C_LIVRE_OPCAO13,C_LIVRE_OPCAO14,C_LIVRE_DATA15,C_LIVRE_DATA16,C_LIVRE_DATA17,CAPITAL_SOCIAL,FATURAMENTO_BRUTO,TIPO_CONT_RESP,CONTRATO_RESP,TIPO_CONT_RESP_INF,CONTRATO_RESP_INF,PARM_EXAMES_MED,SINDICALIZADO,COD_CNAE_PREPOND,INSCR_SUFRAMA,MISSAO,VISAO,VALORES,POLITICA_QUALIDADE,DATA_ABERTURA_CNPJ,C_LIVRE_SELEC18,C_LIVRE_SELEC19,C_LIVRE_VALOR20,C_LIVRE_VALOR21,C_LIVRE_DESCR22,C_LIVRE_DESCR23,C_LIVRE_OPCAO24,C_LIVRE_OPCAO25,C_LIVRE_DATA26,C_LIVRE_DATA27,TP_LOTACAO_ESOCIAL,TP_INSC_CONTRA_ESOCIAL,NRO_INSC_CONTRA_ESOCIAL,TP_INSC_PROPR_ESOCIAL,NRO_INSC_PROPR_ESOCIAL,DT_PROC_ESOCIAL,IND_SUB_PATRONAL_OBRA_ESOCIAL,TIPO_CTRL_PONTO,CODIGO_USUARIO,IND_DESONERA_FOLHA,NRO_SIAFI,CODIGO_P_RPPS,IND_SIMPLES,IND_SIT_PJ,CODIGO_EMPRESA_ERP,NOME_AGRUPADOR,IND_OP_REG_ELETRON_ESOCIAL,IND_AC_ISEN_MULTA_ESOCIAL,IND_ETT_ESOCIAL,NR_REG_ETT_ESOCIAL,CONT_APR_ESOCIAL,CONT_ENT_ED_ESOCIAL,CONT_PCD_ESOCIAL,ENTE_FED_RESP_ESOCIAL,ID_ENTE_FEDERA,LOGO,COD_EMPRESA_GRP_EMP,COD_AGRUP_GRP_EMP1,COD_AGRUP_GRP_EMP2,COD_AGRUP_GRP_EMP3,COD_AGRUP_GRP_EMP4,COD_AGRUP_GRP_EMP5,COD_AGRUP_GRP_EMP6,ID_FONTE_RECURSO,LOCALIZADOR,ID_AGRUP_SUP,DT_TRANSF_EBAS_SCFL from RHORGA_AGRUPADOR 
                      WHERE COD_AGRUP1  = '||GEST.COD_CGERENC1||' AND COD_AGRUP2 = '||GEST.COD_CGERENC2||' AND COD_AGRUP3  = '||GEST.COD_CGERENC3||' AND COD_AGRUP4  = '||GEST.COD_CGERENC4||' AND COD_AGRUP5 =  '||GEST.COD_CGERENC5||' AND COD_AGRUP6 =  '||GEST.COD_CGERENC6||'  
                      AND CODIGO_EMPRESA = '||p_CODIGO_EMPRESA||' AND data_extincao IS NULL and TIPO_AGRUP = ''G'';
                      ';
                      GRAVA_LOG('INSERT', vcomando);   

               else
                     UPDATE RHORGA_AGRUPADOR_H SET CONTRATO_RESP = p_CODIGO_CONTRATO , TIPO_CONT_RESP = p_TIPO_CONTRATO, COD_PESSOA_RESP = VCOD_PESSOA, COD_EMPRESA_PESS = p_CODIGO_EMPRESA, LOGIN_USUARIO = 	p_login , DT_ULT_ALTER_USUA = SYSDATE 
                      WHERE COD_AGRUP1  = GEST.COD_CGERENC1 AND COD_AGRUP2 = GEST.COD_CGERENC2 AND COD_AGRUP3  = GEST.COD_CGERENC3 
                      AND COD_AGRUP4  = GEST.COD_CGERENC4 AND COD_AGRUP5 =  GEST.COD_CGERENC5 AND COD_AGRUP6 =  GEST.COD_CGERENC6 
                      AND CODIGO_EMPRESA = p_CODIGO_EMPRESA AND data_extincao IS NULL and TIPO_AGRUP = 'G' AND ano_mes_referencia = trunc(vDATA_SISTEMA,'MM');

                     vcomando :=  'UPDATE RHORGA_AGRUPADOR_H SET SET CONTRATO_RESP = '||p_CODIGO_CONTRATO||' , TIPO_CONT_RESP = '||p_TIPO_CONTRATO||', COD_PESSOA_RESP = '||VCOD_PESSOA||', COD_EMPRESA_PESS = '||p_CODIGO_EMPRESA||', LOGIN_USUARIO = '||p_login||' , DT_ULT_ALTER_USUA = SYSDATE WHERE COD_AGRUP1  = '||GEST.COD_CGERENC1||' AND COD_AGRUP2 = '||GEST.COD_CGERENC2||' AND COD_AGRUP3  = '||GEST.COD_CGERENC3||' AND COD_AGRUP4  = '||GEST.COD_CGERENC4||' AND COD_AGRUP5 =  '||GEST.COD_CGERENC5||' AND COD_AGRUP6 =  '||GEST.COD_CGERENC6||' AND CODIGO_EMPRESA = '||p_CODIGO_EMPRESA||' AND data_extincao IS NULL and TIPO_AGRUP = ''G'' AND ano_mes_referencia = trunc('||vDATA_SISTEMA||',''MM'');';
                    GRAVA_LOG('UPDATE', vcomando); 

              end if;
            /* FIM --- inserido em 25/02/2022 para fazer insert tambem na tabela RHORGA_AGRUPADOR_H */


        END LOOP;
     END IF;

     IF( vMOTIVO_DESVIO = '0001' AND vE_GESTOR = 'S' )THEN 
      FOR GEST_LOT IN ( 
         select TIPO_CONT_RESP, cod_pessoa_resp, CONTRATO_RESP , CODIGO_EMPRESA from RHORGA_CUSTO_GEREN 
         WHERE COD_CGERENC1 = ( case when vCOD_UNIDADE1 is null then vATUAL_C_COD_LOCAL1 else vCOD_UNIDADE1 end ) AND COD_CGERENC2 = ( case when vCOD_UNIDADE2  is null then vATUAL_C_COD_LOCAL2 else vCOD_UNIDADE2 end )
         AND COD_CGERENC3  = ( case when vCOD_UNIDADE3  is null then vATUAL_C_COD_LOCAL3 else vCOD_UNIDADE3 end ) AND COD_CGERENC4  = ( case when vCOD_UNIDADE4  is null then vATUAL_C_COD_LOCAL4 else vCOD_UNIDADE4 end )
         AND COD_CGERENC5 =  ( case when vCOD_UNIDADE5  is null then vATUAL_C_COD_LOCAL5 else vCOD_UNIDADE5 end ) AND COD_CGERENC6 =  ( case when vCOD_UNIDADE6  is null then vATUAL_C_COD_LOCAL6 else vCOD_UNIDADE6 end )
         and codigo_empresa = p_CODIGO_EMPRESA and data_extincao IS NULL ) 
         LOOP 
              INSERT INTO SMARH_DESIG_CUST_GEREN values ( vTIPO_DML, p_ID, SYSDATE, p_CODIGO_EMPRESA, VCOD_PESSOA, p_TIPO_CONTRATO, p_CODIGO_CONTRATO, 
              GEST_LOT.cod_pessoa_resp, GEST_LOT.TIPO_CONT_RESP , GEST_LOT.CONTRATO_RESP , 
              ( case when vCOD_UNIDADE1 is null then vATUAL_C_COD_LOCAL1 else vCOD_UNIDADE1 end ), ( case when vCOD_UNIDADE2  is null then vATUAL_C_COD_LOCAL2 else vCOD_UNIDADE2 end ),
              ( case when vCOD_UNIDADE3  is null then vATUAL_C_COD_LOCAL3 else vCOD_UNIDADE3 end ), ( case when vCOD_UNIDADE4  is null then vATUAL_C_COD_LOCAL4 else vCOD_UNIDADE4 end ),
              ( case when vCOD_UNIDADE5  is null then vATUAL_C_COD_LOCAL5 else vCOD_UNIDADE5 end ), ( case when vCOD_UNIDADE6  is null then vATUAL_C_COD_LOCAL6 else vCOD_UNIDADE6 end ),
              GEST_LOT.CODIGO_EMPRESA ) ;

              UPDATE RHORGA_CUSTO_GEREN SET CONTRATO_RESP = p_CODIGO_CONTRATO , TIPO_CONT_RESP = p_TIPO_CONTRATO, COD_PESSOA_RESP = VCOD_PESSOA, COD_EMPRESA_PESS = p_CODIGO_EMPRESA,
              LOGIN_USUARIO = 	p_login , DT_ULT_ALTER_USUA = SYSDATE
              WHERE COD_CGERENC1 = ( case when vCOD_UNIDADE1 is null then vATUAL_C_COD_LOCAL1 else vCOD_UNIDADE1 end ) AND COD_CGERENC2 = ( case when vCOD_UNIDADE2  is null then vATUAL_C_COD_LOCAL2 else vCOD_UNIDADE2 end )
               AND COD_CGERENC3  = ( case when vCOD_UNIDADE3  is null then vATUAL_C_COD_LOCAL3 else vCOD_UNIDADE3 end ) AND COD_CGERENC4  = ( case when vCOD_UNIDADE4  is null then vATUAL_C_COD_LOCAL4 else vCOD_UNIDADE4 end )
               AND COD_CGERENC5 =  ( case when vCOD_UNIDADE5  is null then vATUAL_C_COD_LOCAL5 else vCOD_UNIDADE5 end ) AND COD_CGERENC6 =  ( case when vCOD_UNIDADE6  is null then vATUAL_C_COD_LOCAL6 else vCOD_UNIDADE6 end )
               AND CODIGO_EMPRESA = p_CODIGO_EMPRESA AND data_extincao IS NULL;

                vcomando:= 'UPDATE RHORGA_CUSTO_GEREN SET CONTRATO_RESP = '||p_CODIGO_CONTRATO||' , TIPO_CONT_RESP = '||p_TIPO_CONTRATO||', COD_PESSOA_RESP = '||VCOD_PESSOA||', COD_EMPRESA_PESS = '||p_CODIGO_EMPRESA||', LOGIN_USUARIO = '||p_login||' , DT_ULT_ALTER_USUA = SYSDATE WHERE COD_CGERENC1 = ( case when '||vCOD_UNIDADE1||' is null then '||vATUAL_C_COD_LOCAL1||' else '||vCOD_UNIDADE1||' end ) AND COD_CGERENC2 = ( case when '||vCOD_UNIDADE2||'  is null then '||vATUAL_C_COD_LOCAL2||' else '||vCOD_UNIDADE2||' end ) AND COD_CGERENC3  = ( case when '||vCOD_UNIDADE3||'  is null then '||vATUAL_C_COD_LOCAL3||' else '||vCOD_UNIDADE3||' end ) AND COD_CGERENC4  = ( case when '||vCOD_UNIDADE4||'  is null then '||vATUAL_C_COD_LOCAL4||' else '||vCOD_UNIDADE4||' end ) AND COD_CGERENC5 =  ( case when '||vCOD_UNIDADE5||'  is null then '||vATUAL_C_COD_LOCAL5||' else '||vCOD_UNIDADE5||' end ) AND COD_CGERENC6 =  ( case when '||vCOD_UNIDADE6||'  is null then '||vATUAL_C_COD_LOCAL6||' else '||vCOD_UNIDADE6||' end ) AND CODIGO_EMPRESA = '||p_CODIGO_EMPRESA||' AND data_extincao IS NULL;';
                GRAVA_LOG ('UPDATE',vcomando);

                UPDATE RHORGA_AGRUPADOR SET CONTRATO_RESP = p_CODIGO_CONTRATO , TIPO_CONT_RESP = p_TIPO_CONTRATO, COD_PESSOA_RESP = VCOD_PESSOA, COD_EMPRESA_PESS = p_CODIGO_EMPRESA,
                LOGIN_USUARIO = 	p_login , DT_ULT_ALTER_USUA = SYSDATE 
                WHERE COD_AGRUP1 = ( case when vCOD_UNIDADE1 is null then vATUAL_C_COD_LOCAL1 else vCOD_UNIDADE1 end ) AND COD_AGRUP2 = ( case when vCOD_UNIDADE2  is null then vATUAL_C_COD_LOCAL2 else vCOD_UNIDADE2 end )
                AND COD_AGRUP3  = ( case when vCOD_UNIDADE3  is null then vATUAL_C_COD_LOCAL3 else vCOD_UNIDADE3 end ) AND COD_AGRUP4  = ( case when vCOD_UNIDADE4  is null then vATUAL_C_COD_LOCAL4 else vCOD_UNIDADE4 end )
                AND COD_AGRUP5 =  ( case when vCOD_UNIDADE5  is null then vATUAL_C_COD_LOCAL5 else vCOD_UNIDADE5 end ) AND COD_AGRUP6 =  ( case when vCOD_UNIDADE6  is null then vATUAL_C_COD_LOCAL6 else vCOD_UNIDADE6 end )
                AND CODIGO_EMPRESA = p_CODIGO_EMPRESA AND data_extincao IS NULL and TIPO_AGRUP      = 'G';

               vcomando:= 'UPDATE RHORGA_AGRUPADOR SET CONTRATO_RESP = '||p_CODIGO_CONTRATO||' , TIPO_CONT_RESP = '||p_TIPO_CONTRATO||', COD_PESSOA_RESP = '||VCOD_PESSOA||', COD_EMPRESA_PESS = '||p_CODIGO_EMPRESA||', LOGIN_USUARIO = '||p_login||' , DT_ULT_ALTER_USUA = SYSDATE WHERE COD_AGRUP1 = ( case when '||vCOD_UNIDADE1||' is null then '||vATUAL_C_COD_LOCAL1||' else '||vCOD_UNIDADE1||' end ) AND COD_AGRUP2 = ( case when '||vCOD_UNIDADE2||'  is null then '||vATUAL_C_COD_LOCAL2||' else '||vCOD_UNIDADE2||' end ) AND COD_AGRUP3  = ( case when '||vCOD_UNIDADE3||'  is null then '||vATUAL_C_COD_LOCAL3||' else '||vCOD_UNIDADE3||' end ) AND COD_AGRUP4  = ( case when '||vCOD_UNIDADE4||'  is null then '||vATUAL_C_COD_LOCAL4||' else '||vCOD_UNIDADE4||' end ) AND COD_AGRUP5 =  ( case when '||vCOD_UNIDADE5||'  is null then '||vATUAL_C_COD_LOCAL5||' else '||vCOD_UNIDADE5||' end ) AND COD_AGRUP6 =  ( case when '||vCOD_UNIDADE6||'  is null then '||vATUAL_C_COD_LOCAL6||' else '||vCOD_UNIDADE6||' end ) AND CODIGO_EMPRESA = '||p_CODIGO_EMPRESA||' AND data_extincao IS NULL and TIPO_AGRUP      = ''G'';';
                GRAVA_LOG ('UPDATE',vcomando);

                /* INICIO ---  inserido em 25/02/2022 para fazer insert tambem na tabela RHORGA_AGRUPADOR_H */
                  SELECT COUNT(1) into vcontagem 
                  FROM RHORGA_AGRUPADOR_H WHERE 
                  COD_AGRUP1 = ( case when vCOD_UNIDADE1 is null then vATUAL_C_COD_LOCAL1 else vCOD_UNIDADE1 end ) AND COD_AGRUP2 = ( case when vCOD_UNIDADE2  is null then vATUAL_C_COD_LOCAL2 else vCOD_UNIDADE2 end )
                  AND COD_AGRUP3  = ( case when vCOD_UNIDADE3  is null then vATUAL_C_COD_LOCAL3 else vCOD_UNIDADE3 end ) AND COD_AGRUP4  = ( case when vCOD_UNIDADE4  is null then vATUAL_C_COD_LOCAL4 else vCOD_UNIDADE4 end )
                  AND COD_AGRUP5 =  ( case when vCOD_UNIDADE5  is null then vATUAL_C_COD_LOCAL5 else vCOD_UNIDADE5 end ) AND COD_AGRUP6 =  ( case when vCOD_UNIDADE6  is null then vATUAL_C_COD_LOCAL6 else vCOD_UNIDADE6 end )
                  AND CODIGO_EMPRESA = p_CODIGO_EMPRESA AND data_extincao IS NULL and TIPO_AGRUP      = 'G'
                  AND ano_mes_referencia = trunc(vDATA_SISTEMA,'MM');

                      if( vcontagem <= 0 ) then
                           INSERT INTO RHORGA_AGRUPADOR_H 
                           select CODIGO_EMPRESA,TIPO_AGRUP,COD_AGRUP1,COD_AGRUP2,COD_AGRUP3,COD_AGRUP4,COD_AGRUP5,COD_AGRUP6,trunc(vDATA_SISTEMA,'MM'),DESCRICAO,ABREVIACAO,RAZAO_SOCIAL,CGC,CEI,CGC_CEI_ANT,CPF,COD_AGRUP_SUP1,COD_AGRUP_SUP2,COD_AGRUP_SUP3,COD_AGRUP_SUP4,COD_AGRUP_SUP5,COD_AGRUP_SUP6,COD_PESSOA_RESP,AREA_DE_RISCO,COD_ENDERECO,COMPLEMENTO,TELEFONE,FAX,TELEX,BANCO_CC,CONTA_CORRENTE,BANCO_FGTS,CONTA_FGTS,CODIGO_FGTS_CEF,CODIGO_ATIVIDADE,CODIGO_CNAE,NATUREZA_ESTAB,NATUREZA_JURIDICA,COD_CALENDARIO,COD_PARM_DEF_EMP,COD_PARM_GUIA_INSS,COD_PARM_CALCULO,COD_PARM_FERIAS,COD_PARM_RESCISAO,COD_SINDICATO,GRUPO_TAB_SAL,NRO_SOCIOS,NRO_AUTONOMOS,NRO_TERCEIROS,NRO_FAMILIARES,NRO_MAO_OBRA_CONTR,NRO_EMPREG_ATIVOS,NRO_EMPREG_INATIV,NRO_EMP_PREVISTOS,EXISTE_INICIO_MES,ADM_1_EMPREGO,ADM_REEMPREGO,TRANSF_ENTRADA,TRANSF_SAIDA,RESC_DISP_CJC,RESC_DISP_SJC,RESC_ESPONTANEOS,RESC_MORTE,APOSENTADOS,AFASTADOS,REINTEGRADOS,TERMINO_CONTRATO,C_LIVRE_SELEC01,C_LIVRE_SELEC02,C_LIVRE_SELEC03,C_LIVRE_VALOR04,C_LIVRE_VALOR05,C_LIVRE_VALOR06,C_LIVRE_DESCR07,C_LIVRE_DESCR08,COD_PARM_PROVISAO,DATA_IMPLANT,DATA_EXTINCAO,MOTIVO_EXTINCAO,TEXTO_ASSOCIADO,COD_TAB_MESES,COD_EMPRESA_PESS,COD_EMPR_PESS_INF,COD_PESS_INFORMAL,OPTANTE_SIMPLES,CGC_CONSOL,LOGO_QUADRADO,LOGO_RETANGULAR,PARTICIPA_PAT,MICROEMPRESA,EMPRESA_PEQ_PORTE,COD_CNAE_FISCAL,INSCR_MUNICIPAL,INSCR_ESTADUAL,CEI_VALIDO,ID_AGRUP,COD_TOMADOR,LOGIN_USUARIO,DT_ULT_ALTER_USUA,NIVEL_AGRUP_ESTRUT,COD_RECOLHIMENTO,COD_SIND_PATRONAL,PREFIXO_RAIS,CODIGO_TP_NEGOCIO,C_LIVRE_SELEC09,C_LIVRE_SELEC10,C_LIVRE_SELEC11,C_LIVRE_OPCAO12,C_LIVRE_OPCAO13,C_LIVRE_OPCAO14,C_LIVRE_DATA15,C_LIVRE_DATA16,C_LIVRE_DATA17,CAPITAL_SOCIAL,FATURAMENTO_BRUTO,TIPO_CONT_RESP,CONTRATO_RESP,TIPO_CONT_RESP_INF,CONTRATO_RESP_INF,PARM_EXAMES_MED,SINDICALIZADO,COD_CNAE_PREPOND,INSCR_SUFRAMA,MISSAO,VISAO,VALORES,POLITICA_QUALIDADE,DATA_ABERTURA_CNPJ,C_LIVRE_SELEC18,C_LIVRE_SELEC19,C_LIVRE_VALOR20,C_LIVRE_VALOR21,C_LIVRE_DESCR22,C_LIVRE_DESCR23,C_LIVRE_OPCAO24,C_LIVRE_OPCAO25,C_LIVRE_DATA26,C_LIVRE_DATA27,TP_LOTACAO_ESOCIAL,TP_INSC_CONTRA_ESOCIAL,NRO_INSC_CONTRA_ESOCIAL,TP_INSC_PROPR_ESOCIAL,NRO_INSC_PROPR_ESOCIAL,DT_PROC_ESOCIAL,IND_SUB_PATRONAL_OBRA_ESOCIAL,TIPO_CTRL_PONTO,CODIGO_USUARIO,IND_DESONERA_FOLHA,NRO_SIAFI,CODIGO_P_RPPS,IND_SIMPLES,IND_SIT_PJ,CODIGO_EMPRESA_ERP,NOME_AGRUPADOR,IND_OP_REG_ELETRON_ESOCIAL,IND_AC_ISEN_MULTA_ESOCIAL,IND_ETT_ESOCIAL,NR_REG_ETT_ESOCIAL,CONT_APR_ESOCIAL,CONT_ENT_ED_ESOCIAL,CONT_PCD_ESOCIAL,ENTE_FED_RESP_ESOCIAL,ID_ENTE_FEDERA,LOGO,COD_EMPRESA_GRP_EMP,COD_AGRUP_GRP_EMP1,COD_AGRUP_GRP_EMP2,COD_AGRUP_GRP_EMP3,COD_AGRUP_GRP_EMP4,COD_AGRUP_GRP_EMP5,COD_AGRUP_GRP_EMP6,ID_FONTE_RECURSO,LOCALIZADOR,ID_AGRUP_SUP,DT_TRANSF_EBAS_SCFL
                           from RHORGA_AGRUPADOR WHERE 
                            COD_AGRUP1 = ( case when vCOD_UNIDADE1 is null then vATUAL_C_COD_LOCAL1 else vCOD_UNIDADE1 end ) AND COD_AGRUP2 = ( case when vCOD_UNIDADE2  is null then vATUAL_C_COD_LOCAL2 else vCOD_UNIDADE2 end )
                            AND COD_AGRUP3  = ( case when vCOD_UNIDADE3  is null then vATUAL_C_COD_LOCAL3 else vCOD_UNIDADE3 end ) AND COD_AGRUP4  = ( case when vCOD_UNIDADE4  is null then vATUAL_C_COD_LOCAL4 else vCOD_UNIDADE4 end )
                            AND COD_AGRUP5 =  ( case when vCOD_UNIDADE5  is null then vATUAL_C_COD_LOCAL5 else vCOD_UNIDADE5 end ) AND COD_AGRUP6 =  ( case when vCOD_UNIDADE6  is null then vATUAL_C_COD_LOCAL6 else vCOD_UNIDADE6 end )
                            AND CODIGO_EMPRESA = p_CODIGO_EMPRESA AND data_extincao IS NULL and TIPO_AGRUP = 'G';

                            vcomando := 'INSERT INTO RHORGA_AGRUPADOR_H select CODIGO_EMPRESA,TIPO_AGRUP,COD_AGRUP1,COD_AGRUP2,COD_AGRUP3,COD_AGRUP4,COD_AGRUP5,COD_AGRUP6,trunc('||vDATA_SISTEMA||',''MM''),DESCRICAO,ABREVIACAO,RAZAO_SOCIAL,CGC,CEI,CGC_CEI_ANT,CPF,COD_AGRUP_SUP1,COD_AGRUP_SUP2,COD_AGRUP_SUP3,COD_AGRUP_SUP4,COD_AGRUP_SUP5,COD_AGRUP_SUP6,COD_PESSOA_RESP,AREA_DE_RISCO,COD_ENDERECO,COMPLEMENTO,TELEFONE,FAX,TELEX,BANCO_CC,CONTA_CORRENTE,BANCO_FGTS,CONTA_FGTS,CODIGO_FGTS_CEF,CODIGO_ATIVIDADE,CODIGO_CNAE,NATUREZA_ESTAB,NATUREZA_JURIDICA,COD_CALENDARIO,COD_PARM_DEF_EMP,COD_PARM_GUIA_INSS,COD_PARM_CALCULO,COD_PARM_FERIAS,COD_PARM_RESCISAO,COD_SINDICATO,GRUPO_TAB_SAL,NRO_SOCIOS,NRO_AUTONOMOS,NRO_TERCEIROS,NRO_FAMILIARES,NRO_MAO_OBRA_CONTR,NRO_EMPREG_ATIVOS,NRO_EMPREG_INATIV,NRO_EMP_PREVISTOS,EXISTE_INICIO_MES,ADM_1_EMPREGO,ADM_REEMPREGO,TRANSF_ENTRADA,TRANSF_SAIDA,RESC_DISP_CJC,RESC_DISP_SJC,RESC_ESPONTANEOS,RESC_MORTE,APOSENTADOS,AFASTADOS,REINTEGRADOS,TERMINO_CONTRATO,C_LIVRE_SELEC01,C_LIVRE_SELEC02,C_LIVRE_SELEC03,C_LIVRE_VALOR04,C_LIVRE_VALOR05,C_LIVRE_VALOR06,C_LIVRE_DESCR07,C_LIVRE_DESCR08,COD_PARM_PROVISAO,DATA_IMPLANT,DATA_EXTINCAO,MOTIVO_EXTINCAO,TEXTO_ASSOCIADO,COD_TAB_MESES,COD_EMPRESA_PESS,COD_EMPR_PESS_INF,COD_PESS_INFORMAL,OPTANTE_SIMPLES,CGC_CONSOL,LOGO_QUADRADO,LOGO_RETANGULAR,PARTICIPA_PAT,MICROEMPRESA,EMPRESA_PEQ_PORTE,COD_CNAE_FISCAL,INSCR_MUNICIPAL,INSCR_ESTADUAL,CEI_VALIDO,ID_AGRUP,COD_TOMADOR,LOGIN_USUARIO,DT_ULT_ALTER_USUA,NIVEL_AGRUP_ESTRUT,COD_RECOLHIMENTO,COD_SIND_PATRONAL,PREFIXO_RAIS,CODIGO_TP_NEGOCIO,C_LIVRE_SELEC09,C_LIVRE_SELEC10,C_LIVRE_SELEC11,C_LIVRE_OPCAO12,C_LIVRE_OPCAO13,C_LIVRE_OPCAO14,C_LIVRE_DATA15,C_LIVRE_DATA16,C_LIVRE_DATA17,CAPITAL_SOCIAL,FATURAMENTO_BRUTO,TIPO_CONT_RESP,CONTRATO_RESP,TIPO_CONT_RESP_INF,CONTRATO_RESP_INF,PARM_EXAMES_MED,SINDICALIZADO,COD_CNAE_PREPOND,INSCR_SUFRAMA,MISSAO,VISAO,VALORES,POLITICA_QUALIDADE,DATA_ABERTURA_CNPJ,C_LIVRE_SELEC18,C_LIVRE_SELEC19,C_LIVRE_VALOR20,C_LIVRE_VALOR21,C_LIVRE_DESCR22,C_LIVRE_DESCR23,C_LIVRE_OPCAO24,C_LIVRE_OPCAO25,C_LIVRE_DATA26,C_LIVRE_DATA27,TP_LOTACAO_ESOCIAL,TP_INSC_CONTRA_ESOCIAL,NRO_INSC_CONTRA_ESOCIAL,TP_INSC_PROPR_ESOCIAL,NRO_INSC_PROPR_ESOCIAL,DT_PROC_ESOCIAL,IND_SUB_PATRONAL_OBRA_ESOCIAL,TIPO_CTRL_PONTO,CODIGO_USUARIO,IND_DESONERA_FOLHA,NRO_SIAFI,CODIGO_P_RPPS,IND_SIMPLES,IND_SIT_PJ,CODIGO_EMPRESA_ERP,NOME_AGRUPADOR,IND_OP_REG_ELETRON_ESOCIAL,IND_AC_ISEN_MULTA_ESOCIAL,IND_ETT_ESOCIAL,NR_REG_ETT_ESOCIAL,CONT_APR_ESOCIAL,CONT_ENT_ED_ESOCIAL,CONT_PCD_ESOCIAL,ENTE_FED_RESP_ESOCIAL,ID_ENTE_FEDERA,LOGO,COD_EMPRESA_GRP_EMP,COD_AGRUP_GRP_EMP1,COD_AGRUP_GRP_EMP2,COD_AGRUP_GRP_EMP3,COD_AGRUP_GRP_EMP4,COD_AGRUP_GRP_EMP5,COD_AGRUP_GRP_EMP6,ID_FONTE_RECURSO,LOCALIZADOR,ID_AGRUP_SUP,DT_TRANSF_EBAS_SCFL from RHORGA_AGRUPADOR WHERE COD_AGRUP1 = ( case when '||vCOD_UNIDADE1||' is null then '||vATUAL_C_COD_LOCAL1||' else '||vCOD_UNIDADE1||' end ) AND COD_AGRUP2 = ( case when '||vCOD_UNIDADE2||'  is null then '||vATUAL_C_COD_LOCAL2||' else '||vCOD_UNIDADE2||' end ) AND COD_AGRUP3  = ( case when '||vCOD_UNIDADE3||'  is null then '||vATUAL_C_COD_LOCAL3||' else '||vCOD_UNIDADE3||' end ) AND COD_AGRUP4  = ( case when '||vCOD_UNIDADE4||'  is null then '||vATUAL_C_COD_LOCAL4||' else '||vCOD_UNIDADE4||' end ) AND COD_AGRUP5 =  ( case when '||vCOD_UNIDADE5||'  is null then '||vATUAL_C_COD_LOCAL5||' else '||vCOD_UNIDADE5||' end ) AND COD_AGRUP6 =  ( case when '||vCOD_UNIDADE6||'  is null then '||vATUAL_C_COD_LOCAL6||' else '||vCOD_UNIDADE6||' end ) AND CODIGO_EMPRESA = '||p_CODIGO_EMPRESA||' AND data_extincao IS NULL and TIPO_AGRUP = ''G'';';
                            GRAVA_LOG('INSERT', vcomando);   

                     else
                           UPDATE RHORGA_AGRUPADOR_H SET CONTRATO_RESP = p_CODIGO_CONTRATO , TIPO_CONT_RESP = p_TIPO_CONTRATO, COD_PESSOA_RESP = VCOD_PESSOA, COD_EMPRESA_PESS = p_CODIGO_EMPRESA, LOGIN_USUARIO = 	p_login , DT_ULT_ALTER_USUA = SYSDATE 
                            WHERE COD_AGRUP1 = ( case when vCOD_UNIDADE1 is null then vATUAL_C_COD_LOCAL1 else vCOD_UNIDADE1 end ) AND COD_AGRUP2 = ( case when vCOD_UNIDADE2  is null then vATUAL_C_COD_LOCAL2 else vCOD_UNIDADE2 end )
                            AND COD_AGRUP3  = ( case when vCOD_UNIDADE3  is null then vATUAL_C_COD_LOCAL3 else vCOD_UNIDADE3 end ) AND COD_AGRUP4  = ( case when vCOD_UNIDADE4  is null then vATUAL_C_COD_LOCAL4 else vCOD_UNIDADE4 end )
                            AND COD_AGRUP5 =  ( case when vCOD_UNIDADE5  is null then vATUAL_C_COD_LOCAL5 else vCOD_UNIDADE5 end ) AND COD_AGRUP6 =  ( case when vCOD_UNIDADE6  is null then vATUAL_C_COD_LOCAL6 else vCOD_UNIDADE6 end )
                            AND CODIGO_EMPRESA = p_CODIGO_EMPRESA AND data_extincao IS NULL and TIPO_AGRUP = 'G' AND ano_mes_referencia = trunc(vDATA_SISTEMA,'MM');

                           vcomando :=  'UPDATE RHORGA_AGRUPADOR_H SET SET CONTRATO_RESP = '||p_CODIGO_CONTRATO||' , TIPO_CONT_RESP = '||p_TIPO_CONTRATO||', COD_PESSOA_RESP = '||VCOD_PESSOA||', COD_EMPRESA_PESS = '||p_CODIGO_EMPRESA||', LOGIN_USUARIO = '||p_login||' , DT_ULT_ALTER_USUA = SYSDATE WHERE COD_AGRUP1 = ( case when '||vCOD_UNIDADE1||' is null then '||vATUAL_C_COD_LOCAL1||' else '||vCOD_UNIDADE1||' end ) AND COD_AGRUP2 = ( case when '||vCOD_UNIDADE2||'  is null then '||vATUAL_C_COD_LOCAL2||' else '||vCOD_UNIDADE2||' end ) AND COD_AGRUP3  = ( case when '||vCOD_UNIDADE3||'  is null then '||vATUAL_C_COD_LOCAL3||' else '||vCOD_UNIDADE3||' end ) AND COD_AGRUP4  = ( case when '||vCOD_UNIDADE4||'  is null then '||vATUAL_C_COD_LOCAL4||' else '||vCOD_UNIDADE4||' end ) AND COD_AGRUP5 =  ( case when '||vCOD_UNIDADE5||'  is null then '||vATUAL_C_COD_LOCAL5||' else '||vCOD_UNIDADE5||' end ) AND COD_AGRUP6 =  ( case when '||vCOD_UNIDADE6||'  is null then '||vATUAL_C_COD_LOCAL6||' else '||vCOD_UNIDADE6||' end ) AND CODIGO_EMPRESA = '||p_CODIGO_EMPRESA||' AND data_extincao IS NULL and TIPO_AGRUP = ''G'' AND ano_mes_referencia = trunc('||vDATA_SISTEMA||',''MM'');';
                          GRAVA_LOG('UPDATE', vcomando); 

                    end if;
                  /* FIM --- inserido em 25/02/2022 para fazer insert tambem na tabela RHORGA_AGRUPADOR_H */
          END LOOP;
        END IF;

ELSIF  ( p_ACAO = 'ENCERRAR' or   p_ACAO = 'EXCLUIR' OR p_ACAO = 'U-EXCLUIR'  )  THEN
-- VOLTA
 dbms_output.put_line('Entrou no Encerrar Gestor');
         IF( vMOTIVO_DESVIO = '0002' )THEN 
               FOR GEST_VOLTA IN (
               select COD_CGERENC1,COD_CGERENC2,COD_CGERENC3,COD_CGERENC4,COD_CGERENC5,COD_CGERENC6, COD_EMPRESA , COD_PESSOA_TITULAR  from SMARH_DESIG_CUST_GEREN WHERE 
               CONTRATO_TITULAR = VCONTRATO_TITULAR AND TIPO_CONTRATO_TITULAR = VTIPO_CONTRATO_TITULAR AND COD_EMPRESA = p_CODIGO_EMPRESA and ID = 
                ( select max (id) from 
                SMARH_DESIG_CUST_GEREN geren where 
                geren.COD_CGERENC1 = SMARH_DESIG_CUST_GEREN.COD_CGERENC1 
                AND geren.COD_CGERENC2 = SMARH_DESIG_CUST_GEREN.COD_CGERENC2 
                AND geren.COD_CGERENC3  = SMARH_DESIG_CUST_GEREN.COD_CGERENC3 
                AND geren.COD_CGERENC4  = SMARH_DESIG_CUST_GEREN.COD_CGERENC4 
                AND geren.COD_CGERENC5 =  SMARH_DESIG_CUST_GEREN.COD_CGERENC5 
                AND geren.COD_CGERENC6 = SMARH_DESIG_CUST_GEREN.COD_CGERENC6 
                and geren.COD_EMPRESA = SMARH_DESIG_CUST_GEREN.COD_EMPRESA )
               )
            LOOP 
        --VERIFICA SE O VCONTRATO_TITULAR DA DESIGNAÇÃO ESTÁ ATIVO. SE NÃO ESTIVER ATIVO, BUSCA O CONTRATO SUPERIOR DA LOTAÇÃO EM QUESTÃO!
          VLOTACAO := GEST_VOLTA.COD_CGERENC1||';'||GEST_VOLTA.COD_CGERENC2||';'||GEST_VOLTA.COD_CGERENC3||';'||GEST_VOLTA.COD_CGERENC4||';'||GEST_VOLTA.COD_CGERENC5||';'||GEST_VOLTA.COD_CGERENC6;
          VTIPOCONTRATOCERTO:= VTIPO_CONTRATO_TITULAR;
          VCONTRATOCERTO:= VCONTRATO_TITULAR;
          VCOD_EMPRESACERTO := p_CODIGO_EMPRESA;
          VPESSOACERTO := gest_volta.COD_PESSOA_TITULAR ;

          SELECT RHPARM_SIT_FUNC.CONTROLE_FOLHA into Vativo
          FROM RHPESS_CONTRATO 
          INNER JOIN RHPARM_SIT_FUNC ON RHPESS_CONTRATO.SITUACAO_FUNCIONAL = RHPARM_SIT_FUNC.CODIGO WHERE
          RHPESS_CONTRATO.ANO_MES_REFERENCIA =
            (SELECT MAX(ANO_MES_REFERENCIA)
            FROM RHPESS_CONTRATO AUX
            WHERE AUX.CODIGO_EMPRESA = RHPESS_CONTRATO.CODIGO_EMPRESA
            AND AUX.TIPO_CONTRATO    = RHPESS_CONTRATO.TIPO_CONTRATO
            AND AUX.CODIGO           = RHPESS_CONTRATO.CODIGO
          )and RHPESS_CONTRATO.codigo =  VCONTRATO_TITULAR 
          AND RHPESS_CONTRATO.TIPO_CONTRATO =  VTIPO_CONTRATO_TITULAR  
          AND RHPESS_CONTRATO.CODIGO_EMPRESA = p_CODIGO_EMPRESA;


          WHILE (Vativo NOT in ('N','M','L')) LOOP
          BEGIN  
                VTIPOCONTRATOCERTO:= substr(BUSCA_GESTOR_SUPERIOR(VLOTACAO),38,4);
                VCONTRATOCERTO:= substr(BUSCA_GESTOR_SUPERIOR(VLOTACAO),1,15);
                VCOD_EMPRESACERTO := substr(BUSCA_GESTOR_SUPERIOR(VLOTACAO),33,4);
                VPESSOACERTO :=substr(BUSCA_GESTOR_SUPERIOR(VLOTACAO),17,15);

                SELECT RHPARM_SIT_FUNC.CONTROLE_FOLHA into Vativo
                FROM RHPESS_CONTRATO 
                INNER JOIN RHPARM_SIT_FUNC ON RHPESS_CONTRATO.SITUACAO_FUNCIONAL = RHPARM_SIT_FUNC.CODIGO WHERE
                RHPESS_CONTRATO.ANO_MES_REFERENCIA =
                  (SELECT MAX(ANO_MES_REFERENCIA)
                  FROM RHPESS_CONTRATO AUX
                  WHERE AUX.CODIGO_EMPRESA = RHPESS_CONTRATO.CODIGO_EMPRESA
                  AND AUX.TIPO_CONTRATO    = RHPESS_CONTRATO.TIPO_CONTRATO
                  AND AUX.CODIGO           = RHPESS_CONTRATO.CODIGO
                  )and RHPESS_CONTRATO.codigo =  VCONTRATOCERTO 
                  AND RHPESS_CONTRATO.TIPO_CONTRATO =  VTIPOCONTRATOCERTO  
                  AND RHPESS_CONTRATO.CODIGO_EMPRESA = VCOD_EMPRESACERTO;

                  VLOTACAO := substr(BUSCA_GESTOR_SUPERIOR(VLOTACAO),43,41);

                  IF (VLOTACAO = '000061;000000;000000;000000;000000;000000' AND Vativo NOT in ('N','M','L') ) THEN
                    EXIT;
                  END IF;              
          END;
          END LOOP;

              UPDATE RHORGA_CUSTO_GEREN SET CONTRATO_RESP = VCONTRATOCERTO , TIPO_CONT_RESP = VTIPOCONTRATOCERTO, COD_PESSOA_RESP = VPESSOACERTO , COD_EMPRESA_PESS = VCOD_EMPRESACERTO,
              LOGIN_USUARIO = 	p_login , DT_ULT_ALTER_USUA = SYSDATE
              WHERE COD_CGERENC1 = GEST_VOLTA.COD_CGERENC1 AND COD_CGERENC2 = GEST_VOLTA.COD_CGERENC2 AND COD_CGERENC3  = GEST_VOLTA.COD_CGERENC3 
              AND COD_CGERENC4  = GEST_VOLTA.COD_CGERENC4 AND COD_CGERENC5 =  GEST_VOLTA.COD_CGERENC5 AND COD_CGERENC6 =  GEST_VOLTA.COD_CGERENC6
              AND CODIGO_EMPRESA = GEST_VOLTA.COD_EMPRESA
              AND data_extincao IS NULL;

              vcomando := 'UPDATE RHORGA_CUSTO_GEREN SET CONTRATO_RESP = '||VCONTRATOCERTO||' , TIPO_CONT_RESP = '||VTIPOCONTRATOCERTO||', COD_PESSOA_RESP = '||VPESSOACERTO||' , COD_EMPRESA_PESS = '||VCOD_EMPRESACERTO||', LOGIN_USUARIO = '||p_login||' , DT_ULT_ALTER_USUA = SYSDATE WHERE COD_CGERENC1 = '||GEST_VOLTA.COD_CGERENC1||' AND COD_CGERENC2 = '||GEST_VOLTA.COD_CGERENC2||' AND COD_CGERENC3  = '||GEST_VOLTA.COD_CGERENC3||' AND COD_CGERENC4  = '||GEST_VOLTA.COD_CGERENC4||' AND COD_CGERENC5 =  '||GEST_VOLTA.COD_CGERENC5||' AND COD_CGERENC6 =  '||GEST_VOLTA.COD_CGERENC6||' AND CODIGO_EMPRESA = '||GEST_VOLTA.COD_EMPRESA||' AND data_extincao IS NULL;';
              GRAVA_LOG ('UPDATE',vcomando);

              UPDATE RHORGA_AGRUPADOR SET CONTRATO_RESP = VCONTRATOCERTO , TIPO_CONT_RESP = VTIPOCONTRATOCERTO, COD_PESSOA_RESP = VPESSOACERTO , COD_EMPRESA_PESS = VCOD_EMPRESACERTO,
              LOGIN_USUARIO = p_login, DT_ULT_ALTER_USUA = SYSDATE
              WHERE COD_AGRUP1 = GEST_VOLTA.COD_CGERENC1 AND COD_AGRUP2 = GEST_VOLTA.COD_CGERENC2 AND COD_AGRUP3  = GEST_VOLTA.COD_CGERENC3 
              AND COD_AGRUP4  = GEST_VOLTA.COD_CGERENC4 AND COD_AGRUP5 =  GEST_VOLTA.COD_CGERENC5 AND COD_AGRUP6 =  GEST_VOLTA.COD_CGERENC6
              AND CODIGO_EMPRESA = GEST_VOLTA.COD_EMPRESA
              AND data_extincao IS NULL and TIPO_AGRUP      = 'G';

              vcomando := 'UPDATE RHORGA_AGRUPADOR SET SET CONTRATO_RESP = '||VCONTRATOCERTO||' , TIPO_CONT_RESP = '||VTIPOCONTRATOCERTO||', COD_PESSOA_RESP = '||VPESSOACERTO||' , COD_EMPRESA_PESS = '||VCOD_EMPRESACERTO||', LOGIN_USUARIO = '||p_login||' , DT_ULT_ALTER_USUA = SYSDATE WHERE COD_AGRUP1 = '||GEST_VOLTA.COD_CGERENC1||' AND COD_AGRUP2 = '||GEST_VOLTA.COD_CGERENC2||' AND COD_AGRUP3  = '||GEST_VOLTA.COD_CGERENC3||' AND COD_AGRUP4  = '||GEST_VOLTA.COD_CGERENC4||' AND COD_AGRUP5 =  '||GEST_VOLTA.COD_CGERENC5||' AND COD_AGRUP6 =  '||GEST_VOLTA.COD_CGERENC6||' AND CODIGO_EMPRESA = '||GEST_VOLTA.COD_EMPRESA||' AND data_extincao IS NULL;';
              GRAVA_LOG ('UPDATE',vcomando);

              /* INICIO ---  inserido em 25/02/2022 para fazer insert tambem na tabela RHORGA_AGRUPADOR_H */
            SELECT COUNT(1) into vcontagem 
            FROM RHORGA_AGRUPADOR_H WHERE 
            COD_AGRUP1  = GEST_VOLTA.COD_CGERENC1 AND COD_AGRUP2 = GEST_VOLTA.COD_CGERENC2 AND COD_AGRUP3  = GEST_VOLTA.COD_CGERENC3 
            AND COD_AGRUP4  = GEST_VOLTA.COD_CGERENC4 AND COD_AGRUP5 =  GEST_VOLTA.COD_CGERENC5 AND COD_AGRUP6 =  GEST_VOLTA.COD_CGERENC6  
            AND CODIGO_EMPRESA = p_CODIGO_EMPRESA AND data_extincao IS NULL and TIPO_AGRUP      = 'G'
            AND ano_mes_referencia = trunc(vDATA_SISTEMA,'MM');

                if( vcontagem <= 0 ) then
                     INSERT INTO RHORGA_AGRUPADOR_H 
                     select CODIGO_EMPRESA,TIPO_AGRUP,COD_AGRUP1,COD_AGRUP2,COD_AGRUP3,COD_AGRUP4,COD_AGRUP5,COD_AGRUP6,trunc(vDATA_SISTEMA,'MM'),DESCRICAO,ABREVIACAO,RAZAO_SOCIAL,CGC,CEI,CGC_CEI_ANT,CPF,COD_AGRUP_SUP1,COD_AGRUP_SUP2,COD_AGRUP_SUP3,COD_AGRUP_SUP4,COD_AGRUP_SUP5,COD_AGRUP_SUP6,COD_PESSOA_RESP,AREA_DE_RISCO,COD_ENDERECO,COMPLEMENTO,TELEFONE,FAX,TELEX,BANCO_CC,CONTA_CORRENTE,BANCO_FGTS,CONTA_FGTS,CODIGO_FGTS_CEF,CODIGO_ATIVIDADE,CODIGO_CNAE,NATUREZA_ESTAB,NATUREZA_JURIDICA,COD_CALENDARIO,COD_PARM_DEF_EMP,COD_PARM_GUIA_INSS,COD_PARM_CALCULO,COD_PARM_FERIAS,COD_PARM_RESCISAO,COD_SINDICATO,GRUPO_TAB_SAL,NRO_SOCIOS,NRO_AUTONOMOS,NRO_TERCEIROS,NRO_FAMILIARES,NRO_MAO_OBRA_CONTR,NRO_EMPREG_ATIVOS,NRO_EMPREG_INATIV,NRO_EMP_PREVISTOS,EXISTE_INICIO_MES,ADM_1_EMPREGO,ADM_REEMPREGO,TRANSF_ENTRADA,TRANSF_SAIDA,RESC_DISP_CJC,RESC_DISP_SJC,RESC_ESPONTANEOS,RESC_MORTE,APOSENTADOS,AFASTADOS,REINTEGRADOS,TERMINO_CONTRATO,C_LIVRE_SELEC01,C_LIVRE_SELEC02,C_LIVRE_SELEC03,C_LIVRE_VALOR04,C_LIVRE_VALOR05,C_LIVRE_VALOR06,C_LIVRE_DESCR07,C_LIVRE_DESCR08,COD_PARM_PROVISAO,DATA_IMPLANT,DATA_EXTINCAO,MOTIVO_EXTINCAO,TEXTO_ASSOCIADO,COD_TAB_MESES,COD_EMPRESA_PESS,COD_EMPR_PESS_INF,COD_PESS_INFORMAL,OPTANTE_SIMPLES,CGC_CONSOL,LOGO_QUADRADO,LOGO_RETANGULAR,PARTICIPA_PAT,MICROEMPRESA,EMPRESA_PEQ_PORTE,COD_CNAE_FISCAL,INSCR_MUNICIPAL,INSCR_ESTADUAL,CEI_VALIDO,ID_AGRUP,COD_TOMADOR,LOGIN_USUARIO,DT_ULT_ALTER_USUA,NIVEL_AGRUP_ESTRUT,COD_RECOLHIMENTO,COD_SIND_PATRONAL,PREFIXO_RAIS,CODIGO_TP_NEGOCIO,C_LIVRE_SELEC09,C_LIVRE_SELEC10,C_LIVRE_SELEC11,C_LIVRE_OPCAO12,C_LIVRE_OPCAO13,C_LIVRE_OPCAO14,C_LIVRE_DATA15,C_LIVRE_DATA16,C_LIVRE_DATA17,CAPITAL_SOCIAL,FATURAMENTO_BRUTO,TIPO_CONT_RESP,CONTRATO_RESP,TIPO_CONT_RESP_INF,CONTRATO_RESP_INF,PARM_EXAMES_MED,SINDICALIZADO,COD_CNAE_PREPOND,INSCR_SUFRAMA,MISSAO,VISAO,VALORES,POLITICA_QUALIDADE,DATA_ABERTURA_CNPJ,C_LIVRE_SELEC18,C_LIVRE_SELEC19,C_LIVRE_VALOR20,C_LIVRE_VALOR21,C_LIVRE_DESCR22,C_LIVRE_DESCR23,C_LIVRE_OPCAO24,C_LIVRE_OPCAO25,C_LIVRE_DATA26,C_LIVRE_DATA27,TP_LOTACAO_ESOCIAL,TP_INSC_CONTRA_ESOCIAL,NRO_INSC_CONTRA_ESOCIAL,TP_INSC_PROPR_ESOCIAL,NRO_INSC_PROPR_ESOCIAL,DT_PROC_ESOCIAL,IND_SUB_PATRONAL_OBRA_ESOCIAL,TIPO_CTRL_PONTO,CODIGO_USUARIO,IND_DESONERA_FOLHA,NRO_SIAFI,CODIGO_P_RPPS,IND_SIMPLES,IND_SIT_PJ,CODIGO_EMPRESA_ERP,NOME_AGRUPADOR,IND_OP_REG_ELETRON_ESOCIAL,IND_AC_ISEN_MULTA_ESOCIAL,IND_ETT_ESOCIAL,NR_REG_ETT_ESOCIAL,CONT_APR_ESOCIAL,CONT_ENT_ED_ESOCIAL,CONT_PCD_ESOCIAL,ENTE_FED_RESP_ESOCIAL,ID_ENTE_FEDERA,LOGO,COD_EMPRESA_GRP_EMP,COD_AGRUP_GRP_EMP1,COD_AGRUP_GRP_EMP2,COD_AGRUP_GRP_EMP3,COD_AGRUP_GRP_EMP4,COD_AGRUP_GRP_EMP5,COD_AGRUP_GRP_EMP6,ID_FONTE_RECURSO,LOCALIZADOR,ID_AGRUP_SUP,DT_TRANSF_EBAS_SCFL
                     from RHORGA_AGRUPADOR WHERE 
                      COD_AGRUP1  = GEST_VOLTA.COD_CGERENC1 AND COD_AGRUP2 = GEST_VOLTA.COD_CGERENC2 AND COD_AGRUP3  = GEST_VOLTA.COD_CGERENC3 
                      AND COD_AGRUP4  = GEST_VOLTA.COD_CGERENC4 AND COD_AGRUP5 =  GEST_VOLTA.COD_CGERENC5 AND COD_AGRUP6 =  GEST_VOLTA.COD_CGERENC6  
                      AND CODIGO_EMPRESA = p_CODIGO_EMPRESA AND data_extincao IS NULL and TIPO_AGRUP = 'G';

                      vcomando := 'INSERT INTO RHORGA_AGRUPADOR_H select CODIGO_EMPRESA,TIPO_AGRUP,COD_AGRUP1,COD_AGRUP2,COD_AGRUP3,COD_AGRUP4,COD_AGRUP5,COD_AGRUP6,trunc('||vDATA_SISTEMA||',''MM''),DESCRICAO,ABREVIACAO,RAZAO_SOCIAL,CGC,CEI,CGC_CEI_ANT,CPF,COD_AGRUP_SUP1,COD_AGRUP_SUP2,COD_AGRUP_SUP3,COD_AGRUP_SUP4,COD_AGRUP_SUP5,COD_AGRUP_SUP6,COD_PESSOA_RESP,AREA_DE_RISCO,COD_ENDERECO,COMPLEMENTO,TELEFONE,FAX,TELEX,BANCO_CC,CONTA_CORRENTE,BANCO_FGTS,CONTA_FGTS,CODIGO_FGTS_CEF,CODIGO_ATIVIDADE,CODIGO_CNAE,NATUREZA_ESTAB,NATUREZA_JURIDICA,COD_CALENDARIO,COD_PARM_DEF_EMP,COD_PARM_GUIA_INSS,COD_PARM_CALCULO,COD_PARM_FERIAS,COD_PARM_RESCISAO,COD_SINDICATO,GRUPO_TAB_SAL,NRO_SOCIOS,NRO_AUTONOMOS,NRO_TERCEIROS,NRO_FAMILIARES,NRO_MAO_OBRA_CONTR,NRO_EMPREG_ATIVOS,NRO_EMPREG_INATIV,NRO_EMP_PREVISTOS,EXISTE_INICIO_MES,ADM_1_EMPREGO,ADM_REEMPREGO,TRANSF_ENTRADA,TRANSF_SAIDA,RESC_DISP_CJC,RESC_DISP_SJC,RESC_ESPONTANEOS,RESC_MORTE,APOSENTADOS,AFASTADOS,REINTEGRADOS,TERMINO_CONTRATO,C_LIVRE_SELEC01,C_LIVRE_SELEC02,C_LIVRE_SELEC03,C_LIVRE_VALOR04,C_LIVRE_VALOR05,C_LIVRE_VALOR06,C_LIVRE_DESCR07,C_LIVRE_DESCR08,COD_PARM_PROVISAO,DATA_IMPLANT,DATA_EXTINCAO,MOTIVO_EXTINCAO,TEXTO_ASSOCIADO,COD_TAB_MESES,COD_EMPRESA_PESS,COD_EMPR_PESS_INF,COD_PESS_INFORMAL,OPTANTE_SIMPLES,CGC_CONSOL,LOGO_QUADRADO,LOGO_RETANGULAR,PARTICIPA_PAT,MICROEMPRESA,EMPRESA_PEQ_PORTE,COD_CNAE_FISCAL,INSCR_MUNICIPAL,INSCR_ESTADUAL,CEI_VALIDO,ID_AGRUP,COD_TOMADOR,LOGIN_USUARIO,DT_ULT_ALTER_USUA,NIVEL_AGRUP_ESTRUT,COD_RECOLHIMENTO,COD_SIND_PATRONAL,PREFIXO_RAIS,CODIGO_TP_NEGOCIO,C_LIVRE_SELEC09,C_LIVRE_SELEC10,C_LIVRE_SELEC11,C_LIVRE_OPCAO12,C_LIVRE_OPCAO13,C_LIVRE_OPCAO14,C_LIVRE_DATA15,C_LIVRE_DATA16,C_LIVRE_DATA17,CAPITAL_SOCIAL,FATURAMENTO_BRUTO,TIPO_CONT_RESP,CONTRATO_RESP,TIPO_CONT_RESP_INF,CONTRATO_RESP_INF,PARM_EXAMES_MED,SINDICALIZADO,COD_CNAE_PREPOND,INSCR_SUFRAMA,MISSAO,VISAO,VALORES,POLITICA_QUALIDADE,DATA_ABERTURA_CNPJ,C_LIVRE_SELEC18,C_LIVRE_SELEC19,C_LIVRE_VALOR20,C_LIVRE_VALOR21,C_LIVRE_DESCR22,C_LIVRE_DESCR23,C_LIVRE_OPCAO24,C_LIVRE_OPCAO25,C_LIVRE_DATA26,C_LIVRE_DATA27,TP_LOTACAO_ESOCIAL,TP_INSC_CONTRA_ESOCIAL,NRO_INSC_CONTRA_ESOCIAL,TP_INSC_PROPR_ESOCIAL,NRO_INSC_PROPR_ESOCIAL,DT_PROC_ESOCIAL,IND_SUB_PATRONAL_OBRA_ESOCIAL,TIPO_CTRL_PONTO,CODIGO_USUARIO,IND_DESONERA_FOLHA,NRO_SIAFI,CODIGO_P_RPPS,IND_SIMPLES,IND_SIT_PJ,CODIGO_EMPRESA_ERP,NOME_AGRUPADOR,IND_OP_REG_ELETRON_ESOCIAL,IND_AC_ISEN_MULTA_ESOCIAL,IND_ETT_ESOCIAL,NR_REG_ETT_ESOCIAL,CONT_APR_ESOCIAL,CONT_ENT_ED_ESOCIAL,CONT_PCD_ESOCIAL,ENTE_FED_RESP_ESOCIAL,ID_ENTE_FEDERA,LOGO,COD_EMPRESA_GRP_EMP,COD_AGRUP_GRP_EMP1,COD_AGRUP_GRP_EMP2,COD_AGRUP_GRP_EMP3,COD_AGRUP_GRP_EMP4,COD_AGRUP_GRP_EMP5,COD_AGRUP_GRP_EMP6,ID_FONTE_RECURSO,LOCALIZADOR,ID_AGRUP_SUP,DT_TRANSF_EBAS_SCFL from RHORGA_AGRUPADOR 
                      WHERE COD_AGRUP1  = '||GEST_VOLTA.COD_CGERENC1||' AND COD_AGRUP2 = '||GEST_VOLTA.COD_CGERENC2||' AND COD_AGRUP3  = '||GEST_VOLTA.COD_CGERENC3||' AND COD_AGRUP4  = '||GEST_VOLTA.COD_CGERENC4||' AND COD_AGRUP5 =  '||GEST_VOLTA.COD_CGERENC5||' AND COD_AGRUP6 =  '||GEST_VOLTA.COD_CGERENC6||'  
                      AND CODIGO_EMPRESA = '||p_CODIGO_EMPRESA||' AND data_extincao IS NULL and TIPO_AGRUP = ''G'';
                      ';
                      GRAVA_LOG('INSERT', vcomando);   

               else
                     UPDATE RHORGA_AGRUPADOR_H SET CONTRATO_RESP = p_CODIGO_CONTRATO , TIPO_CONT_RESP = p_TIPO_CONTRATO, COD_PESSOA_RESP = VCOD_PESSOA, COD_EMPRESA_PESS = p_CODIGO_EMPRESA, LOGIN_USUARIO = 	p_login , DT_ULT_ALTER_USUA = SYSDATE 
                      WHERE COD_AGRUP1  = GEST_VOLTA.COD_CGERENC1 AND COD_AGRUP2 = GEST_VOLTA.COD_CGERENC2 AND COD_AGRUP3  = GEST_VOLTA.COD_CGERENC3 
                      AND COD_AGRUP4  = GEST_VOLTA.COD_CGERENC4 AND COD_AGRUP5 =  GEST_VOLTA.COD_CGERENC5 AND COD_AGRUP6 =  GEST_VOLTA.COD_CGERENC6 
                      AND CODIGO_EMPRESA = p_CODIGO_EMPRESA AND data_extincao IS NULL and TIPO_AGRUP = 'G' AND ano_mes_referencia = trunc(vDATA_SISTEMA,'MM');

                     vcomando :=  'UPDATE RHORGA_AGRUPADOR_H SET SET CONTRATO_RESP = '||p_CODIGO_CONTRATO||' , TIPO_CONT_RESP = '||p_TIPO_CONTRATO||', COD_PESSOA_RESP = '||VCOD_PESSOA||', COD_EMPRESA_PESS = '||p_CODIGO_EMPRESA||', LOGIN_USUARIO = '||p_login||' , DT_ULT_ALTER_USUA = SYSDATE WHERE COD_AGRUP1  = '||GEST_VOLTA.COD_CGERENC1||' AND COD_AGRUP2 = '||GEST_VOLTA.COD_CGERENC2||' AND COD_AGRUP3  = '||GEST_VOLTA.COD_CGERENC3||' AND COD_AGRUP4  = '||GEST_VOLTA.COD_CGERENC4||' AND COD_AGRUP5 =  '||GEST_VOLTA.COD_CGERENC5||' AND COD_AGRUP6 =  '||GEST_VOLTA.COD_CGERENC6||' AND CODIGO_EMPRESA = '||p_CODIGO_EMPRESA||' AND data_extincao IS NULL and TIPO_AGRUP = ''G'' AND ano_mes_referencia = trunc('||vDATA_SISTEMA||',''MM'');';
                    GRAVA_LOG('UPDATE', vcomando); 

              end if;
            /* FIM --- inserido em 25/02/2022 para fazer insert tambem na tabela RHORGA_AGRUPADOR_H */



            END LOOP;
           END IF;

           IF( vMOTIVO_DESVIO = '0001')THEN 
               FOR GEST_LOT IN (
               select COD_CGERENC1,COD_CGERENC2,COD_CGERENC3,COD_CGERENC4,COD_CGERENC5,COD_CGERENC6, COD_EMPRESA , COD_PESSOA_TITULAR, TIPO_CONTRATO_TITULAR, CONTRATO_TITULAR  from SMARH_DESIG_CUST_GEREN  
                WHERE COD_CGERENC1 = vCOD_UNIDADE1 AND COD_CGERENC2 = vCOD_UNIDADE2 AND COD_CGERENC3  = vCOD_UNIDADE3 
                AND COD_CGERENC4  = vCOD_UNIDADE4 AND COD_CGERENC5 =  vCOD_UNIDADE5 AND COD_CGERENC6 =  vCOD_UNIDADE6 
                and COD_EMPRESA = p_CODIGO_EMPRESA AND  ID = 
                ( select max (id) from 
                SMARH_DESIG_CUST_GEREN geren where 
                geren.COD_CGERENC1 = SMARH_DESIG_CUST_GEREN.COD_CGERENC1 
                AND geren.COD_CGERENC2 = SMARH_DESIG_CUST_GEREN.COD_CGERENC2 
                AND geren.COD_CGERENC3  = SMARH_DESIG_CUST_GEREN.COD_CGERENC3 
                AND geren.COD_CGERENC4  = SMARH_DESIG_CUST_GEREN.COD_CGERENC4 
                AND geren.COD_CGERENC5 =  SMARH_DESIG_CUST_GEREN.COD_CGERENC5 
                AND geren.COD_CGERENC6 = SMARH_DESIG_CUST_GEREN.COD_CGERENC6 
                and geren.COD_EMPRESA = SMARH_DESIG_CUST_GEREN.COD_EMPRESA )
               ) 
            LOOP 
             -- COLOCA O CONTRATO SUPERIOR DA LOTAÇÃO EM QUESTÃO!
          vLOTACAO := GEST_LOT.COD_CGERENC1||';'||GEST_LOT.COD_CGERENC2||';'||GEST_LOT.COD_CGERENC3||';'||GEST_LOT.COD_CGERENC4||';'||GEST_LOT.COD_CGERENC5||';'||GEST_LOT.COD_CGERENC6;
          VTIPOCONTRATOCERTO:= VTIPO_CONTRATO_TITULAR;
          VCONTRATOCERTO:= VCONTRATO_TITULAR;
          VCOD_EMPRESACERTO := p_CODIGO_EMPRESA;
          VPESSOACERTO := GEST_LOT.COD_PESSOA_TITULAR ;

          Vativo:= 'Z'; --  VARIAVEL RECEBE UM VALOR ALEATÓRIO PARA QUE POSSA ENTRAR SEMPRE NO WHILE

          WHILE (Vativo NOT in ('N','M','L')) LOOP
          BEGIN
                  VTIPOCONTRATOCERTO:= substr(BUSCA_GESTOR_SUPERIOR(VLOTACAO),38,4);
                  VCONTRATOCERTO:= substr(BUSCA_GESTOR_SUPERIOR(VLOTACAO),1,15);
                  VCOD_EMPRESACERTO := substr(BUSCA_GESTOR_SUPERIOR(VLOTACAO),33,4);
                  VPESSOACERTO :=substr(BUSCA_GESTOR_SUPERIOR(VLOTACAO),17,15);

                  SELECT RHPARM_SIT_FUNC.CONTROLE_FOLHA into Vativo
                  FROM RHPESS_CONTRATO 
                  INNER JOIN RHPARM_SIT_FUNC ON RHPESS_CONTRATO.SITUACAO_FUNCIONAL = RHPARM_SIT_FUNC.CODIGO WHERE
                  RHPESS_CONTRATO.ANO_MES_REFERENCIA =
                    (SELECT MAX(ANO_MES_REFERENCIA)
                    FROM RHPESS_CONTRATO AUX
                    WHERE AUX.CODIGO_EMPRESA = RHPESS_CONTRATO.CODIGO_EMPRESA
                    AND AUX.TIPO_CONTRATO    = RHPESS_CONTRATO.TIPO_CONTRATO
                    AND AUX.CODIGO           = RHPESS_CONTRATO.CODIGO
                    )and RHPESS_CONTRATO.codigo =  VCONTRATOCERTO 
                    AND RHPESS_CONTRATO.TIPO_CONTRATO =  VTIPOCONTRATOCERTO  
                    AND RHPESS_CONTRATO.CODIGO_EMPRESA = VCOD_EMPRESACERTO;

                    VLOTACAO := substr(BUSCA_GESTOR_SUPERIOR(VLOTACAO),43,41);

                    IF (VLOTACAO = '000061;000000;000000;000000;000000;000000' AND Vativo NOT in ('N','M','L') ) THEN
                        EXIT;
                    END IF;
          END;
          END LOOP;

              UPDATE RHORGA_CUSTO_GEREN SET CONTRATO_RESP = VCONTRATOCERTO , TIPO_CONT_RESP = VTIPOCONTRATOCERTO , COD_PESSOA_RESP = VPESSOACERTO , COD_EMPRESA_PESS = VCOD_EMPRESACERTO,
              LOGIN_USUARIO = p_login, DT_ULT_ALTER_USUA = SYSDATE
              WHERE COD_CGERENC1 = GEST_LOT.COD_CGERENC1 AND COD_CGERENC2 = GEST_LOT.COD_CGERENC2 AND COD_CGERENC3  = GEST_LOT.COD_CGERENC3 
              AND COD_CGERENC4  = GEST_LOT.COD_CGERENC4 AND COD_CGERENC5 =  GEST_LOT.COD_CGERENC5 AND COD_CGERENC6 =  GEST_LOT.COD_CGERENC6
              AND CODIGO_EMPRESA = GEST_LOT.COD_EMPRESA 
              AND data_extincao IS NULL;

            vcomando :='UPDATE RHORGA_CUSTO_GEREN SET CONTRATO_RESP = '||VCONTRATOCERTO||' , TIPO_CONT_RESP = '||VTIPOCONTRATOCERTO||', COD_PESSOA_RESP = '||VPESSOACERTO||', COD_EMPRESA_PESS = '||VCOD_EMPRESACERTO||', LOGIN_USUARIO = '||p_login||', DT_ULT_ALTER_USUA = SYSDATE WHERE COD_CGERENC1 = '||GEST_LOT.COD_CGERENC1||' AND COD_CGERENC2 = '||GEST_LOT.COD_CGERENC2||' AND COD_CGERENC3  = '||GEST_LOT.COD_CGERENC3||' AND COD_CGERENC4  = '||GEST_LOT.COD_CGERENC4||' AND COD_CGERENC5 =  '||GEST_LOT.COD_CGERENC5||' AND COD_CGERENC6 =  '||GEST_LOT.COD_CGERENC6||' AND CODIGO_EMPRESA = '||GEST_LOT.COD_EMPRESA||' AND data_extincao IS NULL;';
            GRAVA_LOG ('UPDATE',vcomando);

            UPDATE RHORGA_AGRUPADOR SET TIPO_AGRUP = 'G', CONTRATO_RESP = VCONTRATOCERTO , TIPO_CONT_RESP = VTIPOCONTRATOCERTO , COD_PESSOA_RESP = VPESSOACERTO , COD_EMPRESA_PESS = VCOD_EMPRESACERTO,
            LOGIN_USUARIO = p_login, DT_ULT_ALTER_USUA = SYSDATE
            WHERE COD_AGRUP1 = GEST_LOT.COD_CGERENC1 AND COD_AGRUP2 = GEST_LOT.COD_CGERENC2 AND COD_AGRUP3  = GEST_LOT.COD_CGERENC3 
            AND COD_AGRUP4  = GEST_LOT.COD_CGERENC4 AND COD_AGRUP5 =  GEST_LOT.COD_CGERENC5 AND COD_AGRUP6 =  GEST_LOT.COD_CGERENC6
            AND CODIGO_EMPRESA = GEST_LOT.COD_EMPRESA 
            AND data_extincao IS NULL and TIPO_AGRUP      = 'G';

            vcomando :='UPDATE RHORGA_AGRUPADOR SET TIPO_AGRUP = ''G'', CONTRATO_RESP = '||VCONTRATOCERTO||' , TIPO_CONT_RESP = '||VTIPOCONTRATOCERTO||', COD_PESSOA_RESP = '||VPESSOACERTO||', COD_EMPRESA_PESS = '||VCOD_EMPRESACERTO||', LOGIN_USUARIO = '||p_login||', DT_ULT_ALTER_USUA = SYSDATE WHERE COD_AGRUP1 = '||GEST_LOT.COD_CGERENC1||' AND COD_AGRUP2 = '||GEST_LOT.COD_CGERENC2||' AND COD_AGRUP3  = '||GEST_LOT.COD_CGERENC3||' AND COD_AGRUP4  = '||GEST_LOT.COD_CGERENC4||' AND COD_AGRUP5 =  '||GEST_LOT.COD_CGERENC5||' AND COD_AGRUP6 =  '||GEST_LOT.COD_CGERENC6||' AND CODIGO_EMPRESA = '||GEST_LOT.COD_EMPRESA||' AND data_extincao IS NULL;';
            GRAVA_LOG ('UPDATE',vcomando);


            /* INICIO ---  inserido em 25/02/2022 para fazer insert tambem na tabela RHORGA_AGRUPADOR_H */
            SELECT COUNT(1) into vcontagem 
            FROM RHORGA_AGRUPADOR_H WHERE 
            COD_AGRUP1  = GEST_LOT.COD_CGERENC1 AND COD_AGRUP2 = GEST_LOT.COD_CGERENC2 AND COD_AGRUP3  = GEST_LOT.COD_CGERENC3 
            AND COD_AGRUP4  = GEST_LOT.COD_CGERENC4 AND COD_AGRUP5 =  GEST_LOT.COD_CGERENC5 AND COD_AGRUP6 =  GEST_LOT.COD_CGERENC6  
            AND CODIGO_EMPRESA = p_CODIGO_EMPRESA AND data_extincao IS NULL and TIPO_AGRUP      = 'G'
            AND ano_mes_referencia = trunc(vDATA_SISTEMA,'MM');

                if( vcontagem <= 0 ) then
                     INSERT INTO RHORGA_AGRUPADOR_H 
                     select CODIGO_EMPRESA,TIPO_AGRUP,COD_AGRUP1,COD_AGRUP2,COD_AGRUP3,COD_AGRUP4,COD_AGRUP5,COD_AGRUP6,trunc(vDATA_SISTEMA,'MM'),DESCRICAO,ABREVIACAO,RAZAO_SOCIAL,CGC,CEI,CGC_CEI_ANT,CPF,COD_AGRUP_SUP1,COD_AGRUP_SUP2,COD_AGRUP_SUP3,COD_AGRUP_SUP4,COD_AGRUP_SUP5,COD_AGRUP_SUP6,COD_PESSOA_RESP,AREA_DE_RISCO,COD_ENDERECO,COMPLEMENTO,TELEFONE,FAX,TELEX,BANCO_CC,CONTA_CORRENTE,BANCO_FGTS,CONTA_FGTS,CODIGO_FGTS_CEF,CODIGO_ATIVIDADE,CODIGO_CNAE,NATUREZA_ESTAB,NATUREZA_JURIDICA,COD_CALENDARIO,COD_PARM_DEF_EMP,COD_PARM_GUIA_INSS,COD_PARM_CALCULO,COD_PARM_FERIAS,COD_PARM_RESCISAO,COD_SINDICATO,GRUPO_TAB_SAL,NRO_SOCIOS,NRO_AUTONOMOS,NRO_TERCEIROS,NRO_FAMILIARES,NRO_MAO_OBRA_CONTR,NRO_EMPREG_ATIVOS,NRO_EMPREG_INATIV,NRO_EMP_PREVISTOS,EXISTE_INICIO_MES,ADM_1_EMPREGO,ADM_REEMPREGO,TRANSF_ENTRADA,TRANSF_SAIDA,RESC_DISP_CJC,RESC_DISP_SJC,RESC_ESPONTANEOS,RESC_MORTE,APOSENTADOS,AFASTADOS,REINTEGRADOS,TERMINO_CONTRATO,C_LIVRE_SELEC01,C_LIVRE_SELEC02,C_LIVRE_SELEC03,C_LIVRE_VALOR04,C_LIVRE_VALOR05,C_LIVRE_VALOR06,C_LIVRE_DESCR07,C_LIVRE_DESCR08,COD_PARM_PROVISAO,DATA_IMPLANT,DATA_EXTINCAO,MOTIVO_EXTINCAO,TEXTO_ASSOCIADO,COD_TAB_MESES,COD_EMPRESA_PESS,COD_EMPR_PESS_INF,COD_PESS_INFORMAL,OPTANTE_SIMPLES,CGC_CONSOL,LOGO_QUADRADO,LOGO_RETANGULAR,PARTICIPA_PAT,MICROEMPRESA,EMPRESA_PEQ_PORTE,COD_CNAE_FISCAL,INSCR_MUNICIPAL,INSCR_ESTADUAL,CEI_VALIDO,ID_AGRUP,COD_TOMADOR,LOGIN_USUARIO,DT_ULT_ALTER_USUA,NIVEL_AGRUP_ESTRUT,COD_RECOLHIMENTO,COD_SIND_PATRONAL,PREFIXO_RAIS,CODIGO_TP_NEGOCIO,C_LIVRE_SELEC09,C_LIVRE_SELEC10,C_LIVRE_SELEC11,C_LIVRE_OPCAO12,C_LIVRE_OPCAO13,C_LIVRE_OPCAO14,C_LIVRE_DATA15,C_LIVRE_DATA16,C_LIVRE_DATA17,CAPITAL_SOCIAL,FATURAMENTO_BRUTO,TIPO_CONT_RESP,CONTRATO_RESP,TIPO_CONT_RESP_INF,CONTRATO_RESP_INF,PARM_EXAMES_MED,SINDICALIZADO,COD_CNAE_PREPOND,INSCR_SUFRAMA,MISSAO,VISAO,VALORES,POLITICA_QUALIDADE,DATA_ABERTURA_CNPJ,C_LIVRE_SELEC18,C_LIVRE_SELEC19,C_LIVRE_VALOR20,C_LIVRE_VALOR21,C_LIVRE_DESCR22,C_LIVRE_DESCR23,C_LIVRE_OPCAO24,C_LIVRE_OPCAO25,C_LIVRE_DATA26,C_LIVRE_DATA27,TP_LOTACAO_ESOCIAL,TP_INSC_CONTRA_ESOCIAL,NRO_INSC_CONTRA_ESOCIAL,TP_INSC_PROPR_ESOCIAL,NRO_INSC_PROPR_ESOCIAL,DT_PROC_ESOCIAL,IND_SUB_PATRONAL_OBRA_ESOCIAL,TIPO_CTRL_PONTO,CODIGO_USUARIO,IND_DESONERA_FOLHA,NRO_SIAFI,CODIGO_P_RPPS,IND_SIMPLES,IND_SIT_PJ,CODIGO_EMPRESA_ERP,NOME_AGRUPADOR,IND_OP_REG_ELETRON_ESOCIAL,IND_AC_ISEN_MULTA_ESOCIAL,IND_ETT_ESOCIAL,NR_REG_ETT_ESOCIAL,CONT_APR_ESOCIAL,CONT_ENT_ED_ESOCIAL,CONT_PCD_ESOCIAL,ENTE_FED_RESP_ESOCIAL,ID_ENTE_FEDERA,LOGO,COD_EMPRESA_GRP_EMP,COD_AGRUP_GRP_EMP1,COD_AGRUP_GRP_EMP2,COD_AGRUP_GRP_EMP3,COD_AGRUP_GRP_EMP4,COD_AGRUP_GRP_EMP5,COD_AGRUP_GRP_EMP6,ID_FONTE_RECURSO,LOCALIZADOR,ID_AGRUP_SUP,DT_TRANSF_EBAS_SCFL
                     from RHORGA_AGRUPADOR WHERE 
                      COD_AGRUP1  = GEST_LOT.COD_CGERENC1 AND COD_AGRUP2 = GEST_LOT.COD_CGERENC2 AND COD_AGRUP3  = GEST_LOT.COD_CGERENC3 
                      AND COD_AGRUP4  = GEST_LOT.COD_CGERENC4 AND COD_AGRUP5 =  GEST_LOT.COD_CGERENC5 AND COD_AGRUP6 =  GEST_LOT.COD_CGERENC6  
                      AND CODIGO_EMPRESA = p_CODIGO_EMPRESA AND data_extincao IS NULL and TIPO_AGRUP = 'G';

                      vcomando := 'INSERT INTO RHORGA_AGRUPADOR_H select CODIGO_EMPRESA,TIPO_AGRUP,COD_AGRUP1,COD_AGRUP2,COD_AGRUP3,COD_AGRUP4,COD_AGRUP5,COD_AGRUP6,trunc('||vDATA_SISTEMA||',''MM''),DESCRICAO,ABREVIACAO,RAZAO_SOCIAL,CGC,CEI,CGC_CEI_ANT,CPF,COD_AGRUP_SUP1,COD_AGRUP_SUP2,COD_AGRUP_SUP3,COD_AGRUP_SUP4,COD_AGRUP_SUP5,COD_AGRUP_SUP6,COD_PESSOA_RESP,AREA_DE_RISCO,COD_ENDERECO,COMPLEMENTO,TELEFONE,FAX,TELEX,BANCO_CC,CONTA_CORRENTE,BANCO_FGTS,CONTA_FGTS,CODIGO_FGTS_CEF,CODIGO_ATIVIDADE,CODIGO_CNAE,NATUREZA_ESTAB,NATUREZA_JURIDICA,COD_CALENDARIO,COD_PARM_DEF_EMP,COD_PARM_GUIA_INSS,COD_PARM_CALCULO,COD_PARM_FERIAS,COD_PARM_RESCISAO,COD_SINDICATO,GRUPO_TAB_SAL,NRO_SOCIOS,NRO_AUTONOMOS,NRO_TERCEIROS,NRO_FAMILIARES,NRO_MAO_OBRA_CONTR,NRO_EMPREG_ATIVOS,NRO_EMPREG_INATIV,NRO_EMP_PREVISTOS,EXISTE_INICIO_MES,ADM_1_EMPREGO,ADM_REEMPREGO,TRANSF_ENTRADA,TRANSF_SAIDA,RESC_DISP_CJC,RESC_DISP_SJC,RESC_ESPONTANEOS,RESC_MORTE,APOSENTADOS,AFASTADOS,REINTEGRADOS,TERMINO_CONTRATO,C_LIVRE_SELEC01,C_LIVRE_SELEC02,C_LIVRE_SELEC03,C_LIVRE_VALOR04,C_LIVRE_VALOR05,C_LIVRE_VALOR06,C_LIVRE_DESCR07,C_LIVRE_DESCR08,COD_PARM_PROVISAO,DATA_IMPLANT,DATA_EXTINCAO,MOTIVO_EXTINCAO,TEXTO_ASSOCIADO,COD_TAB_MESES,COD_EMPRESA_PESS,COD_EMPR_PESS_INF,COD_PESS_INFORMAL,OPTANTE_SIMPLES,CGC_CONSOL,LOGO_QUADRADO,LOGO_RETANGULAR,PARTICIPA_PAT,MICROEMPRESA,EMPRESA_PEQ_PORTE,COD_CNAE_FISCAL,INSCR_MUNICIPAL,INSCR_ESTADUAL,CEI_VALIDO,ID_AGRUP,COD_TOMADOR,LOGIN_USUARIO,DT_ULT_ALTER_USUA,NIVEL_AGRUP_ESTRUT,COD_RECOLHIMENTO,COD_SIND_PATRONAL,PREFIXO_RAIS,CODIGO_TP_NEGOCIO,C_LIVRE_SELEC09,C_LIVRE_SELEC10,C_LIVRE_SELEC11,C_LIVRE_OPCAO12,C_LIVRE_OPCAO13,C_LIVRE_OPCAO14,C_LIVRE_DATA15,C_LIVRE_DATA16,C_LIVRE_DATA17,CAPITAL_SOCIAL,FATURAMENTO_BRUTO,TIPO_CONT_RESP,CONTRATO_RESP,TIPO_CONT_RESP_INF,CONTRATO_RESP_INF,PARM_EXAMES_MED,SINDICALIZADO,COD_CNAE_PREPOND,INSCR_SUFRAMA,MISSAO,VISAO,VALORES,POLITICA_QUALIDADE,DATA_ABERTURA_CNPJ,C_LIVRE_SELEC18,C_LIVRE_SELEC19,C_LIVRE_VALOR20,C_LIVRE_VALOR21,C_LIVRE_DESCR22,C_LIVRE_DESCR23,C_LIVRE_OPCAO24,C_LIVRE_OPCAO25,C_LIVRE_DATA26,C_LIVRE_DATA27,TP_LOTACAO_ESOCIAL,TP_INSC_CONTRA_ESOCIAL,NRO_INSC_CONTRA_ESOCIAL,TP_INSC_PROPR_ESOCIAL,NRO_INSC_PROPR_ESOCIAL,DT_PROC_ESOCIAL,IND_SUB_PATRONAL_OBRA_ESOCIAL,TIPO_CTRL_PONTO,CODIGO_USUARIO,IND_DESONERA_FOLHA,NRO_SIAFI,CODIGO_P_RPPS,IND_SIMPLES,IND_SIT_PJ,CODIGO_EMPRESA_ERP,NOME_AGRUPADOR,IND_OP_REG_ELETRON_ESOCIAL,IND_AC_ISEN_MULTA_ESOCIAL,IND_ETT_ESOCIAL,NR_REG_ETT_ESOCIAL,CONT_APR_ESOCIAL,CONT_ENT_ED_ESOCIAL,CONT_PCD_ESOCIAL,ENTE_FED_RESP_ESOCIAL,ID_ENTE_FEDERA,LOGO,COD_EMPRESA_GRP_EMP,COD_AGRUP_GRP_EMP1,COD_AGRUP_GRP_EMP2,COD_AGRUP_GRP_EMP3,COD_AGRUP_GRP_EMP4,COD_AGRUP_GRP_EMP5,COD_AGRUP_GRP_EMP6,ID_FONTE_RECURSO,LOCALIZADOR,ID_AGRUP_SUP,DT_TRANSF_EBAS_SCFL from RHORGA_AGRUPADOR 
                      WHERE COD_AGRUP1  = '||GEST_LOT.COD_CGERENC1||' AND COD_AGRUP2 = '||GEST_LOT.COD_CGERENC2||' AND COD_AGRUP3  = '||GEST_LOT.COD_CGERENC3||' AND COD_AGRUP4  = '||GEST_LOT.COD_CGERENC4||' AND COD_AGRUP5 =  '||GEST_LOT.COD_CGERENC5||' AND COD_AGRUP6 =  '||GEST_LOT.COD_CGERENC6||'  
                      AND CODIGO_EMPRESA = '||p_CODIGO_EMPRESA||' AND data_extincao IS NULL and TIPO_AGRUP = ''G'';
                      ';
                      GRAVA_LOG('INSERT', vcomando);   

               else
                     UPDATE RHORGA_AGRUPADOR_H SET CONTRATO_RESP = p_CODIGO_CONTRATO , TIPO_CONT_RESP = p_TIPO_CONTRATO, COD_PESSOA_RESP = VCOD_PESSOA, COD_EMPRESA_PESS = p_CODIGO_EMPRESA, LOGIN_USUARIO = 	p_login , DT_ULT_ALTER_USUA = SYSDATE 
                      WHERE COD_AGRUP1  = GEST_LOT.COD_CGERENC1 AND COD_AGRUP2 = GEST_LOT.COD_CGERENC2 AND COD_AGRUP3  = GEST_LOT.COD_CGERENC3 
                      AND COD_AGRUP4  = GEST_LOT.COD_CGERENC4 AND COD_AGRUP5 =  GEST_LOT.COD_CGERENC5 AND COD_AGRUP6 =  GEST_LOT.COD_CGERENC6 
                      AND CODIGO_EMPRESA = p_CODIGO_EMPRESA AND data_extincao IS NULL and TIPO_AGRUP = 'G' AND ano_mes_referencia = trunc(vDATA_SISTEMA,'MM');

                     vcomando :=  'UPDATE RHORGA_AGRUPADOR_H SET SET CONTRATO_RESP = '||p_CODIGO_CONTRATO||' , TIPO_CONT_RESP = '||p_TIPO_CONTRATO||', COD_PESSOA_RESP = '||VCOD_PESSOA||', COD_EMPRESA_PESS = '||p_CODIGO_EMPRESA||', LOGIN_USUARIO = '||p_login||' , DT_ULT_ALTER_USUA = SYSDATE WHERE COD_AGRUP1  = '||GEST_LOT.COD_CGERENC1||' AND COD_AGRUP2 = '||GEST_LOT.COD_CGERENC2||' AND COD_AGRUP3  = '||GEST_LOT.COD_CGERENC3||' AND COD_AGRUP4  = '||GEST_LOT.COD_CGERENC4||' AND COD_AGRUP5 =  '||GEST_LOT.COD_CGERENC5||' AND COD_AGRUP6 =  '||GEST_LOT.COD_CGERENC6||' AND CODIGO_EMPRESA = '||p_CODIGO_EMPRESA||' AND data_extincao IS NULL and TIPO_AGRUP = ''G'' AND ano_mes_referencia = trunc('||vDATA_SISTEMA||',''MM'');';
                    GRAVA_LOG('UPDATE', vcomando); 

              end if;
            /* FIM --- inserido em 25/02/2022 para fazer insert tambem na tabela RHORGA_AGRUPADOR_H */


            END LOOP;
         END IF;
        END IF;
 END IF;

---------------------------------------------------------------------------------------------------CONTRATO---------------------------------------------------------------------------------------------------------------

FOR CT IN (

SELECT *
FROM
  (SELECT ANO_MES_REFERENCIA
  FROM rhpess_contrato CT
  WHERE  ( ( CT.ANO_MES_REFERENCIA BETWEEN TRUNC(p_DATA_INICIO_DESVIO,'MM' ) AND NVL(p_DATA_FIM_DESVIO,trunc(sysdate)) )
  OR (CT.ANO_MES_REFERENCIA =
    (SELECT MAX(AUX.ANO_MES_REFERENCIA)
    FROM RHPESS_CONTRATO AUX
    WHERE AUX.CODIGO_EMPRESA    = CT.CODIGO_EMPRESA
    AND AUX.TIPO_CONTRATO       = CT.TIPO_CONTRATO
    AND AUX.CODIGO              = CT.CODIGO
    AND AUX.ANO_MES_REFERENCIA <= NVL(p_DATA_FIM_DESVIO,trunc(sysdate))
    ) )
  OR ( CT.ANO_MES_REFERENCIA  >= trunc(p_DATA_INICIO_DESVIO,'MM') AND  NVL(p_DATA_FIM_DESVIO,trunc(sysdate)) IS NULL))
  AND CT.CODIGO_EMPRESA  = P_CODIGO_EMPRESA
  AND CT.TIPO_CONTRATO   = p_TIPO_CONTRATO
  AND CT.CODIGO  = p_CODIGO_CONTRATO
   ),
  (SELECT MIN(ANO_MES_REFERENCIA) AS min_ano_mes
  FROM rhpess_contrato CT
  WHERE ( ( CT.ANO_MES_REFERENCIA BETWEEN TRUNC(p_DATA_INICIO_DESVIO,'MM' ) AND NVL(p_DATA_FIM_DESVIO,trunc(sysdate)) )
  OR (CT.ANO_MES_REFERENCIA =
    (SELECT MAX(AUX.ANO_MES_REFERENCIA)
    FROM RHPESS_CONTRATO AUX
    WHERE AUX.CODIGO_EMPRESA    = CT.CODIGO_EMPRESA
    AND AUX.TIPO_CONTRATO       = CT.TIPO_CONTRATO
    AND AUX.CODIGO              = CT.CODIGO
    AND AUX.ANO_MES_REFERENCIA <= NVL(p_DATA_FIM_DESVIO,trunc(sysdate))
    ) )
  OR ( CT.ANO_MES_REFERENCIA >= trunc(p_DATA_INICIO_DESVIO,'MM') AND  NVL(p_DATA_FIM_DESVIO,trunc(sysdate)) IS NULL))
  AND CT.CODIGO_EMPRESA = P_CODIGO_EMPRESA
  AND CT.TIPO_CONTRATO  = p_TIPO_CONTRATO
  AND CT.CODIGO    = p_CODIGO_CONTRATO
   ),
  (SELECT B.ANO_MES_REFERENCIA MAX_CONTRATO
  FROM RHPESS_CONTRATO B
  WHERE B.ANO_MES_REFERENCIA =
    (SELECT MAX(ANO_MES_REFERENCIA)
    FROM RHPESS_CONTRATO AUX
    WHERE AUX.CODIGO_EMPRESA = B.CODIGO_EMPRESA
    AND AUX.TIPO_CONTRATO    = B.TIPO_CONTRATO
    AND AUX.CODIGO           = B.CODIGO
    )
  AND B.CODIGO_EMPRESA = P_CODIGO_EMPRESA
  AND B.TIPO_CONTRATO  = p_TIPO_CONTRATO
  AND B.CODIGO         = p_CODIGO_CONTRATO
  ),
  ( SELECT MAX(ANO_MES_REFERENCIA) AS MAXANO_MES_REFERENCIA
  FROM rhpess_contrato CT
  WHERE ( ( CT.ANO_MES_REFERENCIA BETWEEN TRUNC(p_DATA_INICIO_DESVIO,'MM' ) AND NVL(p_DATA_FIM_DESVIO,trunc(sysdate)) )
  OR (CT.ANO_MES_REFERENCIA =
    (SELECT MAX(AUX.ANO_MES_REFERENCIA)
    FROM RHPESS_CONTRATO AUX
    WHERE AUX.CODIGO_EMPRESA    = CT.CODIGO_EMPRESA
    AND AUX.TIPO_CONTRATO       = CT.TIPO_CONTRATO
    AND AUX.CODIGO              = CT.CODIGO
    AND AUX.ANO_MES_REFERENCIA <= NVL(p_DATA_FIM_DESVIO,trunc(sysdate))
    ) )
  OR ( CT.ANO_MES_REFERENCIA >= trunc(p_DATA_INICIO_DESVIO,'MM') AND  NVL(p_DATA_FIM_DESVIO,trunc(sysdate)) IS NULL))
  AND CT.CODIGO_EMPRESA = P_CODIGO_EMPRESA
  AND CT.TIPO_CONTRATO  = p_TIPO_CONTRATO
  AND CT.CODIGO    = p_CODIGO_CONTRATO
  )                              
)    
LOOP

IF( ( ( p_ACAO = 'INSERIR' OR p_ACAO = 'U-INSERIR') AND  p_DATA_INICIO_DESVIO <= trunc(sysdate)  AND ( p_DATA_FIM_DESVIO >= trunc(sysdate) OR p_DATA_FIM_DESVIO IS NULL) ) or ( p_ACAO = 'ENCERRAR' )  ) THEN 
    IF ( CT.ANO_MES_REFERENCIA >= trunc( p_DATA_INICIO_DESVIO,'MM')  and CT.ANO_MES_REFERENCIA >= trunc(vDATA_SISTEMA)  ) THEN

            --UPDATE NO CONTRATO COM AS ALTERAÇÕES DA DESIG
             if (p_DATA_FIM_DESVIO > trunc(sysdate) OR p_DATA_FIM_DESVIO IS NULL) then
                  IF( vMOTIVO_DESVIO = '0001' )THEN 
                    vVOID := ATUALIZA_CONTRATO_DESIG(VNOME_TABELA_DESIG,trunc(vDATA_SISTEMA,'MM') );  
                  END IF;
              elsif (p_DATA_FIM_DESVIO = trunc(sysdate)) then
                  IF( vMOTIVO_DESVIO = '0001' )THEN 
                    vVOID := ATUALIZA_CONTRATO_VOLTA( vNOME_TABELA, trunc(vDATA_SISTEMA,'MM') );  
                  END IF;
              end if; 
    END IF;
    -- MAX
    IF (  to_date(CT.ANO_MES_REFERENCIA,'dd/mm/yyyy')  = to_date(CT.MAXANO_MES_REFERENCIA,'dd/mm/yyyy')  and trunc(vDATA_SISTEMA,'MM') <> trunc(CT.MAX_CONTRATO) ) THEN

                  update RHPESS_CONTR_MEST set ULTIMA_DATA = trunc(vDATA_SISTEMA,'MM'), LOGIN_USUARIO = p_login, DT_ULT_ALTER_USUA = sysdate
                  WHERE CODIGO_EMPRESA = P_CODIGO_EMPRESA
                  AND TIPO_CONTRATO  = p_TIPO_CONTRATO  
                  AND CODIGO_CONTRATO =  p_CODIGO_CONTRATO;

                  vcomando := 'UPDATE RHPESS_CONTR_MEST set ULTIMA_DATA = trunc('||vDATA_SISTEMA||',''MM''), LOGIN_USUARIO = '||p_login||', DT_ULT_ALTER_USUA = '||sysdate||' WHERE CODIGO_EMPRESA = '||P_CODIGO_EMPRESA||' AND TIPO_CONTRATO  = '||p_TIPO_CONTRATO||' AND CODIGO_CONTRATO =  '||p_CODIGO_CONTRATO||';';
                  GRAVA_LOG('UPDATE', vcomando);

                  INSERT INTO RHPESS_CONTRATO C
                    SELECT CODIGO_EMPRESA,  TIPO_CONTRATO,  CODIGO,  CODIGO_PESSOA,  NOME,  REGISTRO,  NUMERO_ARQUIVO,  SITUACAO_FUNCIONAL,  SITUACAO_CONTRATO,  STATUS_CONTRATO,  DATA_ADMISSAO,  MOTIVO_ADMISSAO,  MOTIVO_DEMISSAO,  TIPO_PAGAMENTO,  TIPO_SALARIO,  VINCULO,  FORMA_PROVIMENTO,  COD_LOCAL1,  COD_LOCAL2,  COD_LOCAL3,  COD_LOCAL4,  COD_LOCAL5,  COD_LOCAL6,  DT_ULT_ALT_LOC,  COD_UNIDADE1,  COD_UNIDADE2,  COD_UNIDADE3,  COD_UNIDADE4,  COD_UNIDADE5,  COD_UNIDADE6,  DT_ULT_ALT_UNID,  COD_CUSTO_CONTAB1,  COD_CUSTO_CONTAB2,
                    COD_CUSTO_CONTAB3,  COD_CUSTO_CONTAB4,  COD_CUSTO_CONTAB5,  COD_CUSTO_CONTAB6,  DT_ULT_ALT_CONT,  COD_CUSTO_GERENC1,  COD_CUSTO_GERENC2,  COD_CUSTO_GERENC3,  COD_CUSTO_GERENC4,  COD_CUSTO_GERENC5,  COD_CUSTO_GERENC6,  DT_ULT_ALT_GER,  SALARIO_PAGTO,  COD_CARGO_PAGTO,  NIVEL_CARGO_PAGTO,  COD_CARGO_EFETIVO,  NIVEL_CARGO_EFETIV,  DT_ULT_CARGO_EFET,  COD_CARGO_COMISS,  NIVEL_CARGO_COMISS,  DT_ULT_CARGO_COM,  COD_CARGO_AMPAR,  NIVEL_CARGO_AMPAR,  DT_ULT_CARGO_AMPAR,  CODIGO_FUNCAO,  DT_ULT_FUNCAO,  COD_ESPECIALIDADE,  DT_ULT_ESPEC,
                    CODIGO_VAGA,  DT_ULT_VAGA,  AREA_ATUACAO,  CATEG_PROFISSIONAL,  CODIGO_ESCALA,  REGISTRO_PONTO,  DT_ULT_ESCALA,  CODIGO_BANCO_CC,  CONTA_CORRENTE,  CODIGO_BANCO_FGTS,  CONTA_FGTS,  DATA_OPCAO_FGTS,  DATA_RETROACAO,  DATA_RETRATACAO,  COD_SINDICATO,  NIVEL_SINDICATO,  DT_ULT_SINDICATO,  DESC_CONTRIB_SIND,  SINDICALIZADO,  INSCRICAO_INSS,  COD_MOVIMENTACAO,  DATA_TRANSF_ENTRAD,  DATA_PRI_ADMISSAO,  DATA_REINTEGRACAO,  DATA_EFETIVO_EXERC,  DATA_POSSE,  DATA_NOMEACAO,  DATA_INICIO_ESTAB,  DATA_FIM_ESTAB,  DT_FIM_CONTR_EXP,
                    DT_FIM_CONTR_DETER,  DATA_FIM_RENOV_EXP,  DATA_AV_PREVIO,  DATA_RESCISAO,  CAUSA_RESCISAO,  DATA_INIC_AFAST,  DATA_FIM_AFAST,  NRO_MESES_AFAST,  CTRL_VERBAS,  FORMA_PAGAMENTO,  DATA_BASE_FERIAS,  DATA_INIC_GOZO,  DATA_FIM_GOZO,  DEPENDENTES_SF,  DEPENDENTES_IRRF,  COD_PROCURADOR,  DATA_PAGTO_CALCULO,  DATA_PAGTO_ADIANT,  DATA_PAGTO_FERIAS,  DATA_PAGTO_13SAL,  DATA_PAGTO_RESCISA,  SAL_CONT_EFETIVO,  DT_ULT_SAL_C_EFET,  SAL_CONT_COMISSION,  DT_ULT_SAL_C_COM,  SAL_CONT_AMPAR,  DT_ULT_SAL_C_AMP,  SAL_AUX_EFETIVO,
                    DT_ULT_SAL_A_EFET,  SAL_AUX_COMISSION,  DT_ULT_SAL_A_COM,  SAL_AUX_AMPAR,  DT_ULT_SAL_A_AMP,  C_LIVRE_SELEC01,  C_LIVRE_SELEC02,  C_LIVRE_SELEC03,  C_LIVRE_SELEC04,  C_LIVRE_SELEC05,  C_LIVRE_SELEC06,  C_LIVRE_SELEC07,  C_LIVRE_SELEC08,  C_LIVRE_SELEC09,  C_LIVRE_SELEC10,  C_LIVRE_SELEC11,  C_LIVRE_SELEC12,  C_LIVRE_SELEC13,  C_LIVRE_SELEC14,  C_LIVRE_SELEC15,  C_LIVRE_SELEC36,  C_LIVRE_SELEC37,  C_LIVRE_SELEC38,  C_LIVRE_SELEC39,  C_LIVRE_SELEC40,  C_LIVRE_VALOR16,  C_LIVRE_VALOR17,  C_LIVRE_VALOR18,  C_LIVRE_VALOR19,
                    C_LIVRE_VALOR20,  C_LIVRE_VALOR21,  C_LIVRE_VALOR22,  C_LIVRE_VALOR23,  C_LIVRE_DESCR24,  C_LIVRE_DESCR25,  C_LIVRE_DESCR26,  C_LIVRE_DESCR27,  C_LIVRE_DATA28,  C_LIVRE_DATA29,  C_LIVRE_DATA30,  C_LIVRE_DATA31,  C_LIVRE_DATA32,  C_LIVRE_DATA33,  C_LIVRE_DATA34,  C_LIVRE_DATA35,  C_LIVRE_OPCAO41,  C_LIVRE_OPCAO42,  C_LIVRE_OPCAO43,  C_LIVRE_OPCAO44,  C_LIVRE_OPCAO45,  C_LIVRE_OPCAO46,  C_LIVRE_OPCAO47,  C_LIVRE_OPCAO48,  INDIC_ALTERAC1,  INDIC_ALTERAC2,  INDIC_ALTERAC3,  INDIC_ALTERAC4,  INDIC_ALTERAC5,  TEXTO_ASSOCIADO,
                    LOGIN_USUARIO,  DT_ULT_ALTER_USUA,  TELEFONE,   vDATA_SISTEMA , DATA_APOSENTA_FGTS,  REABILITADO,  C_LIVRE_VALOR49,  C_LIVRE_VALOR50,  C_LIVRE_VALOR51,  C_LIVRE_VALOR52,  C_LIVRE_VALOR53,  C_LIVRE_VALOR54,  C_LIVRE_VALOR55,  C_LIVRE_VALOR56,  C_LIVRE_DATA57,  C_LIVRE_DATA58,  C_LIVRE_DATA59,  C_LIVRE_DATA60,  C_LIVRE_DATA61,  C_LIVRE_DATA62,  C_LIVRE_DATA63,  C_LIVRE_DATA64,  C_LIVRE_OPCAO65,  C_LIVRE_OPCAO66,  C_LIVRE_OPCAO67,  C_LIVRE_OPCAO68,  INDIC_ALTERAC6,  CLASSE_CONT_INSS,
                    E_MAIL,  USA_ASSOC_CONT_ESC,  CLASSIFICACAO_CAND,  NUMERO_EDITAL,  TIPO_AGRUP_UNID,  TIPO_AGRUP_CONT,  TIPO_AGRUP_CGER,  TIPO_AGRUP_LOTA,  NOME_ACESSO,  CODIGO_SOLICITACAO,  ID_CONTR_FORN,  FUNC_COMP_EMPR_AV,  DT_MOLESTIA_GRAVE,  SAL_CONT_FUNCAO,  DT_ULT_SAL_C_FUN,  SAL_AUX_FUNCAO,  DT_ULT_SAL_A_FUN,  DATA_PROJ_AV_PREV,  DT_PROJ_AFAST_ESOCIAL,  TP_AVISO_PREVIO_ESOCIAL,  TP_CONTA_BANCARIA,  DT_PROC_ESOCIAL,  DT_ALTER_ESOCIAL,  DT_CANC_AVISO_PREVIO,  MOT_CANC_AV_PREV_ESOCIAL,  DESC_SAL_VARIAVEL,  MOTIVO_CONTRATACAO, 
                    CPF_TRAB_SUBSTITUIDO,  MATRIC_TRAB_SUBSTITUIDO,  IND_SEGURO_DESEMPREGO,  DT_GERACAO_CAGED,  OBS_RESCISAO,  DT_FIM_QUARENTENA,  CNPJ_EMPRESA_SUCESSORA,  JUST_CONTR_ESOCIAL,  TP_INCL_CONTR_ESOCIAL,  INFO_COTA_ESOCIAL,  CLAUSULA_ASSEC,  DT_ALTERACAO_CONTR,  DT_EFEITO_ALTER_CONTR,  DESC_ALTER_CONTR,  IND_CUMPR_PARC_AV,  CODIGO_CONTR_ANTERIOR,  CPF_ANTERIOR,  DATA_ALTER_CPF,  OBS_ALTER_CPF,  TEM_ALTER_CPF,  INFO_COTA_RACA,  MATRICULA_ESOCIAL,  CONSELHO_REGIONAL,  INSCRICAO_CONSELHO,  UF_CONSELHO ,
                  --/* --novo INICIO --a partir de 26/4/21 V.23.2.2
                  COD_CARREIRA,COD_EIXO,COD_NIVEL
                  --*/ --novo FIM a partir de 26/4/21 V.23.2.2
                  ,IND_REMUN /* novo a partir de 16/03/2023 V.25.2.1*/
                  ,IND_PDV /* novo a partir de 30/01/2024 V.26.1.1*/

                FROM RHPESS_CONTRATO CT2 WHERE CT2.CODIGO_EMPRESA = P_CODIGO_EMPRESA
                  AND CT2.TIPO_CONTRATO  = p_TIPO_CONTRATO  AND CT2.CODIGO =  p_CODIGO_CONTRATO AND CT2.ANO_MES_REFERENCIA = trunc(CT.ANO_MES_REFERENCIA);

                  vcomando := 'INSERT INTO RHPESS_CONTRATO C SELECT CODIGO_EMPRESA,  TIPO_CONTRATO,  CODIGO,  CODIGO_PESSOA,  NOME,  REGISTRO,  NUMERO_ARQUIVO,  SITUACAO_FUNCIONAL,  SITUACAO_CONTRATO,  STATUS_CONTRATO,  DATA_ADMISSAO,  MOTIVO_ADMISSAO,  MOTIVO_DEMISSAO,  TIPO_PAGAMENTO,  TIPO_SALARIO,  VINCULO,  FORMA_PROVIMENTO,  COD_LOCAL1,  COD_LOCAL2,  COD_LOCAL3,  COD_LOCAL4,  COD_LOCAL5,  COD_LOCAL6,  DT_ULT_ALT_LOC,  COD_UNIDADE1,  COD_UNIDADE2,  COD_UNIDADE3,  COD_UNIDADE4,  COD_UNIDADE5,  COD_UNIDADE6,  DT_ULT_ALT_UNID,  COD_CUSTO_CONTAB1,  COD_CUSTO_CONTAB2, COD_CUSTO_CONTAB3,  COD_CUSTO_CONTAB4,  COD_CUSTO_CONTAB5,  COD_CUSTO_CONTAB6,  DT_ULT_ALT_CONT,  COD_CUSTO_GERENC1,  COD_CUSTO_GERENC2,  COD_CUSTO_GERENC3,  COD_CUSTO_GERENC4,  COD_CUSTO_GERENC5,  COD_CUSTO_GERENC6,  DT_ULT_ALT_GER,  SALARIO_PAGTO,  COD_CARGO_PAGTO,  NIVEL_CARGO_PAGTO,  COD_CARGO_EFETIVO,  NIVEL_CARGO_EFETIV,  DT_ULT_CARGO_EFET,  COD_CARGO_COMISS,  NIVEL_CARGO_COMISS,  DT_ULT_CARGO_COM,  COD_CARGO_AMPAR,  NIVEL_CARGO_AMPAR,  DT_ULT_CARGO_AMPAR,  CODIGO_FUNCAO,  DT_ULT_FUNCAO,  COD_ESPECIALIDADE,  DT_ULT_ESPEC, CODIGO_VAGA,  DT_ULT_VAGA,  AREA_ATUACAO,  CATEG_PROFISSIONAL,  CODIGO_ESCALA,  REGISTRO_PONTO,  DT_ULT_ESCALA,  CODIGO_BANCO_CC,  CONTA_CORRENTE,  CODIGO_BANCO_FGTS,  CONTA_FGTS,  DATA_OPCAO_FGTS,  DATA_RETROACAO,  DATA_RETRATACAO,  COD_SINDICATO,  NIVEL_SINDICATO,  DT_ULT_SINDICATO,  DESC_CONTRIB_SIND,  SINDICALIZADO,  INSCRICAO_INSS,  COD_MOVIMENTACAO,  DATA_TRANSF_ENTRAD,  DATA_PRI_ADMISSAO,  DATA_REINTEGRACAO,  DATA_EFETIVO_EXERC,  DATA_POSSE,  DATA_NOMEACAO,  DATA_INICIO_ESTAB,  DATA_FIM_ESTAB,  DT_FIM_CONTR_EXP,DT_FIM_CONTR_DETER,  DATA_FIM_RENOV_EXP,  DATA_AV_PREVIO,  DATA_RESCISAO,  CAUSA_RESCISAO,  DATA_INIC_AFAST,  DATA_FIM_AFAST,  NRO_MESES_AFAST,  CTRL_VERBAS,  FORMA_PAGAMENTO,  DATA_BASE_FERIAS,  DATA_INIC_GOZO,  DATA_FIM_GOZO,  DEPENDENTES_SF,  DEPENDENTES_IRRF,  COD_PROCURADOR,  DATA_PAGTO_CALCULO,  DATA_PAGTO_ADIANT,  DATA_PAGTO_FERIAS,  DATA_PAGTO_13SAL,  DATA_PAGTO_RESCISA,  SAL_CONT_EFETIVO,  DT_ULT_SAL_C_EFET,  SAL_CONT_COMISSION,  DT_ULT_SAL_C_COM,  SAL_CONT_AMPAR,  DT_ULT_SAL_C_AMP,  SAL_AUX_EFETIVO, DT_ULT_SAL_A_EFET,  SAL_AUX_COMISSION,  DT_ULT_SAL_A_COM,  SAL_AUX_AMPAR,  DT_ULT_SAL_A_AMP,  C_LIVRE_SELEC01,  C_LIVRE_SELEC02,  C_LIVRE_SELEC03,  C_LIVRE_SELEC04,  C_LIVRE_SELEC05,  C_LIVRE_SELEC06,  C_LIVRE_SELEC07,  C_LIVRE_SELEC08,  C_LIVRE_SELEC09,  C_LIVRE_SELEC10,  C_LIVRE_SELEC11,  C_LIVRE_SELEC12,  C_LIVRE_SELEC13,  C_LIVRE_SELEC14,  C_LIVRE_SELEC15,  C_LIVRE_SELEC36,  C_LIVRE_SELEC37,  C_LIVRE_SELEC38,  C_LIVRE_SELEC39,  C_LIVRE_SELEC40,  C_LIVRE_VALOR16,  C_LIVRE_VALOR17,  C_LIVRE_VALOR18,  C_LIVRE_VALOR19,
                    C_LIVRE_VALOR20,  C_LIVRE_VALOR21,  C_LIVRE_VALOR22,  C_LIVRE_VALOR23,  C_LIVRE_DESCR24,  C_LIVRE_DESCR25,  C_LIVRE_DESCR26,  C_LIVRE_DESCR27,  C_LIVRE_DATA28,  C_LIVRE_DATA29,  C_LIVRE_DATA30,  C_LIVRE_DATA31,  C_LIVRE_DATA32,  C_LIVRE_DATA33,  C_LIVRE_DATA34,  C_LIVRE_DATA35,  C_LIVRE_OPCAO41,  C_LIVRE_OPCAO42,  C_LIVRE_OPCAO43,  C_LIVRE_OPCAO44,  C_LIVRE_OPCAO45,  C_LIVRE_OPCAO46,  C_LIVRE_OPCAO47,  C_LIVRE_OPCAO48,  INDIC_ALTERAC1,  INDIC_ALTERAC2,  INDIC_ALTERAC3,  INDIC_ALTERAC4,  INDIC_ALTERAC5,  TEXTO_ASSOCIADO,LOGIN_USUARIO,  DT_ULT_ALTER_USUA,  TELEFONE,  trunc('||vDATA_SISTEMA||',''MM'') , DATA_APOSENTA_FGTS,  REABILITADO,  C_LIVRE_VALOR49,  C_LIVRE_VALOR50,  C_LIVRE_VALOR51,  C_LIVRE_VALOR52,  C_LIVRE_VALOR53,  C_LIVRE_VALOR54,  C_LIVRE_VALOR55,  C_LIVRE_VALOR56,  C_LIVRE_DATA57,  C_LIVRE_DATA58,  C_LIVRE_DATA59,  C_LIVRE_DATA60,  C_LIVRE_DATA61,  C_LIVRE_DATA62,  C_LIVRE_DATA63,  C_LIVRE_DATA64,  C_LIVRE_OPCAO65,  C_LIVRE_OPCAO66,  C_LIVRE_OPCAO67,  C_LIVRE_OPCAO68,  INDIC_ALTERAC6,  CLASSE_CONT_INSS,E_MAIL,  USA_ASSOC_CONT_ESC,  CLASSIFICACAO_CAND,  NUMERO_EDITAL,  TIPO_AGRUP_UNID,  TIPO_AGRUP_CONT,  TIPO_AGRUP_CGER,  TIPO_AGRUP_LOTA,  NOME_ACESSO,  CODIGO_SOLICITACAO,  ID_CONTR_FORN,  FUNC_COMP_EMPR_AV,  DT_MOLESTIA_GRAVE,  SAL_CONT_FUNCAO,  DT_ULT_SAL_C_FUN,  SAL_AUX_FUNCAO,  DT_ULT_SAL_A_FUN,  DATA_PROJ_AV_PREV,  DT_PROJ_AFAST_ESOCIAL,  TP_AVISO_PREVIO_ESOCIAL,  TP_CONTA_BANCARIA,  DT_PROC_ESOCIAL,  DT_ALTER_ESOCIAL,  DT_CANC_AVISO_PREVIO,  MOT_CANC_AV_PREV_ESOCIAL,  DESC_SAL_VARIAVEL,  MOTIVO_CONTRATACAO, CPF_TRAB_SUBSTITUIDO,  MATRIC_TRAB_SUBSTITUIDO,  IND_SEGURO_DESEMPREGO,  DT_GERACAO_CAGED,  OBS_RESCISAO,  DT_FIM_QUARENTENA,  CNPJ_EMPRESA_SUCESSORA,  JUST_CONTR_ESOCIAL,  TP_INCL_CONTR_ESOCIAL,  INFO_COTA_ESOCIAL,  CLAUSULA_ASSEC,  DT_ALTERACAO_CONTR,  DT_EFEITO_ALTER_CONTR,  DESC_ALTER_CONTR,  IND_CUMPR_PARC_AV,  CODIGO_CONTR_ANTERIOR,  CPF_ANTERIOR,  DATA_ALTER_CPF,  OBS_ALTER_CPF,  TEM_ALTER_CPF,  INFO_COTA_RACA,  MATRICULA_ESOCIAL,  CONSELHO_REGIONAL,  INSCRICAO_CONSELHO,  UF_CONSELHO, COD_CARREIRA, COD_EIXO, COD_NIVEL, IND_REMUN,IND_PDV FROM RHPESS_CONTRATO CT2 WHERE CT2.CODIGO_EMPRESA = '||P_CODIGO_EMPRESA||' AND CT2.TIPO_CONTRATO  = '||p_TIPO_CONTRATO||'  AND CT2.CODIGO =  '||p_CODIGO_CONTRATO||' AND CT2.ANO_MES_REFERENCIA = trunc('||CT.ANO_MES_REFERENCIA||');';

          GRAVA_LOG('INSERT', vcomando);

                   if (p_DATA_FIM_DESVIO > trunc(sysdate) OR p_DATA_FIM_DESVIO IS NULL ) then
                    IF( vMOTIVO_DESVIO = '0001' )THEN 
                        vVOID := ATUALIZA_CONTRATO_DESIG(VNOME_TABELA_DESIG,trunc(vDATA_SISTEMA,'MM') );   
                    END IF;
                  elsif (p_DATA_FIM_DESVIO = trunc(sysdate)) then
                    IF( vMOTIVO_DESVIO = '0001' )THEN 
                      vVOID := ATUALIZA_CONTRATO_VOLTA( vNOME_TABELA, trunc(vDATA_SISTEMA,'MM') ); 
                    END IF;
                   end if;

                   -- inserido em 04/11/2020 para fazer insert tambem na tabela aux do contrato
                SELECT COUNT(1) into vcontagem FROM RHPESS_CONTRATO_AUX X WHERE X.codigo_empresa = P_CODIGO_EMPRESA AND X.tipo_contrato = p_TIPO_CONTRATO AND X.CODIGO = p_CODIGO_CONTRATO 
                AND X.ano_mes_referencia = trunc(vDATA_SISTEMA,'MM');

              if( vcontagem < 0 ) then
                  SELECT COUNT(1) into vcontagem FROM RHPESS_CONTRATO_AUX X WHERE X.codigo_empresa = P_CODIGO_EMPRESA AND X.tipo_contrato = p_TIPO_CONTRATO AND X.CODIGO = p_CODIGO_CONTRATO 
                  AND X.ano_mes_referencia =  (SELECT MAX(AUX.ANO_MES_REFERENCIA) FROM RHPESS_CONTRATO_aux AUX  WHERE X.codigo_empresa = AUX.CODIGO_EMPRESA  AND X.tipo_contrato    = AUX.TIPO_CONTRATO  AND X.CODIGO  = AUX.CODIGO  ); 
                  if ( vcontagem > 1 ) then
                        INSERT INTO RHPESS_CONTRATO_AUX X
                          SELECT CODIGO_EMPRESA,TIPO_CONTRATO,CODIGO, trunc(vDATA_SISTEMA,'MM') ANO_MES_REFERENCIA,LOGIN_USUARIO,DT_ULT_ALTER_USUA,C_LIVRE_AUX_SELEC01,C_LIVRE_AUX_SELEC02,C_LIVRE_AUX_SELEC03,
                          C_LIVRE_AUX_SELEC04,C_LIVRE_AUX_SELEC05,C_LIVRE_AUX_SELEC06,C_LIVRE_AUX_SELEC07,C_LIVRE_AUX_SELEC08,C_LIVRE_AUX_SELEC09,C_LIVRE_AUX_SELEC10,C_LIVRE_AUX_SELEC11,C_LIVRE_AUX_SELEC12,C_LIVRE_AUX_SELEC13,C_LIVRE_AUX_SELEC14,
                          C_LIVRE_AUX_SELEC15,C_LIVRE_AUX_SELEC16,C_LIVRE_AUX_SELEC17,C_LIVRE_AUX_SELEC18,C_LIVRE_AUX_SELEC19,C_LIVRE_AUX_SELEC20,C_LIVRE_AUX_VALOR01,C_LIVRE_AUX_VALOR02,C_LIVRE_AUX_VALOR03,C_LIVRE_AUX_VALOR04,C_LIVRE_AUX_VALOR05,C_LIVRE_AUX_VALOR06,
                          C_LIVRE_AUX_VALOR07,C_LIVRE_AUX_VALOR08,C_LIVRE_AUX_VALOR09,C_LIVRE_AUX_VALOR10,C_LIVRE_AUX_VALOR11,C_LIVRE_AUX_VALOR12,C_LIVRE_AUX_VALOR13,C_LIVRE_AUX_VALOR14,C_LIVRE_AUX_VALOR15,C_LIVRE_AUX_VALOR16,C_LIVRE_AUX_VALOR17,
                          C_LIVRE_AUX_VALOR18,C_LIVRE_AUX_VALOR19,C_LIVRE_AUX_VALOR20,C_LIVRE_AUX_DATA01,C_LIVRE_AUX_DATA02,C_LIVRE_AUX_DATA03,C_LIVRE_AUX_DATA04,C_LIVRE_AUX_DATA05,C_LIVRE_AUX_DATA06,C_LIVRE_AUX_DATA07,C_LIVRE_AUX_DATA08,
                          C_LIVRE_AUX_DATA09,C_LIVRE_AUX_DATA10,C_LIVRE_AUX_DATA11,C_LIVRE_AUX_DATA12,C_LIVRE_AUX_DATA13,C_LIVRE_AUX_DATA14,C_LIVRE_AUX_DATA15,C_LIVRE_AUX_DATA16,C_LIVRE_AUX_DATA17,C_LIVRE_AUX_DATA18,C_LIVRE_AUX_DATA19,C_LIVRE_AUX_DATA20,
                          C_LIVRE_AUX_OPCAO01,C_LIVRE_AUX_OPCAO02,C_LIVRE_AUX_OPCAO03,C_LIVRE_AUX_OPCAO04,C_LIVRE_AUX_OPCAO05,C_LIVRE_AUX_OPCAO06,C_LIVRE_AUX_OPCAO07,C_LIVRE_AUX_OPCAO08,C_LIVRE_AUX_OPCAO09,C_LIVRE_AUX_OPCAO10,C_LIVRE_AUX_OPCAO11,
                          C_LIVRE_AUX_OPCAO12,C_LIVRE_AUX_OPCAO13,C_LIVRE_AUX_OPCAO14,C_LIVRE_AUX_OPCAO15,C_LIVRE_AUX_OPCAO16,C_LIVRE_AUX_OPCAO17,C_LIVRE_AUX_OPCAO18,C_LIVRE_AUX_OPCAO19,C_LIVRE_AUX_OPCAO20,C_LIVRE_AUX_DESCR01,C_LIVRE_AUX_DESCR02,
                          C_LIVRE_AUX_DESCR03,C_LIVRE_AUX_DESCR04,C_LIVRE_AUX_DESCR05,C_LIVRE_AUX_DESCR06,C_LIVRE_AUX_DESCR07,C_LIVRE_AUX_DESCR08,C_LIVRE_AUX_DESCR09,C_LIVRE_AUX_DESCR10,C_LIVRE_AUX_DESCR11,C_LIVRE_AUX_DESCR12,C_LIVRE_AUX_DESCR13,
                          C_LIVRE_AUX_DESCR14,C_LIVRE_AUX_DESCR15,C_LIVRE_AUX_DESCR16,C_LIVRE_AUX_DESCR17,C_LIVRE_AUX_DESCR18,C_LIVRE_AUX_DESCR19,C_LIVRE_AUX_DESCR20,C_LIVRE_AUX_TEXTO01,C_LIVRE_AUX_TEXTO02,C_LIVRE_AUX_TEXTO03,C_LIVRE_AUX_TEXTO04,
                          C_LIVRE_AUX_TEXTO05,C_LIVRE_AUX_TEXTO06,C_LIVRE_AUX_TEXTO07,C_LIVRE_AUX_TEXTO08,C_LIVRE_AUX_TEXTO09,C_LIVRE_AUX_TEXTO10,C_LIVRE_AUX_TEXTO11,C_LIVRE_AUX_TEXTO12,C_LIVRE_AUX_TEXTO13,C_LIVRE_AUX_TEXTO14,C_LIVRE_AUX_TEXTO15,
                          C_LIVRE_AUX_TEXTO16,C_LIVRE_AUX_TEXTO17,C_LIVRE_AUX_TEXTO18,C_LIVRE_AUX_TEXTO19,C_LIVRE_AUX_TEXTO20
                          FROM RHPESS_CONTRATO_AUX X 
                          WHERE X.codigo_empresa = P_CODIGO_EMPRESA AND X.tipo_contrato = p_TIPO_CONTRATO AND X.CODIGO = p_CODIGO_CONTRATO 
                          AND X.ano_mes_referencia =  (SELECT MAX(AUX.ANO_MES_REFERENCIA)FROM RHPESS_CONTRATO_aux AUX  WHERE X.codigo_empresa = AUX.CODIGO_EMPRESA  AND X.tipo_contrato = AUX.TIPO_CONTRATO  AND X.CODIGO  = AUX.CODIGO  and X.ANO_MES_REFERENCIA <= trunc(vDATA_SISTEMA,'MM'));    

                          vcomando := 'INSERT INTO RHPESS_CONTRATO_AUX X SELECT CODIGO_EMPRESA,TIPO_CONTRATO,CODIGO, trunc('||vDATA_SISTEMA||',''MM'') ANO_MES_REFERENCIA,LOGIN_USUARIO,DT_ULT_ALTER_USUA,C_LIVRE_AUX_SELEC01,C_LIVRE_AUX_SELEC02,C_LIVRE_AUX_SELEC03, C_LIVRE_AUX_SELEC04,C_LIVRE_AUX_SELEC05,C_LIVRE_AUX_SELEC06,C_LIVRE_AUX_SELEC07,C_LIVRE_AUX_SELEC08,C_LIVRE_AUX_SELEC09,C_LIVRE_AUX_SELEC10,C_LIVRE_AUX_SELEC11,C_LIVRE_AUX_SELEC12,C_LIVRE_AUX_SELEC13,C_LIVRE_AUX_SELEC14, C_LIVRE_AUX_SELEC15,C_LIVRE_AUX_SELEC16,C_LIVRE_AUX_SELEC17,C_LIVRE_AUX_SELEC18,C_LIVRE_AUX_SELEC19,C_LIVRE_AUX_SELEC20,C_LIVRE_AUX_VALOR01,C_LIVRE_AUX_VALOR02,C_LIVRE_AUX_VALOR03,C_LIVRE_AUX_VALOR04,C_LIVRE_AUX_VALOR05,C_LIVRE_AUX_VALOR06,C_LIVRE_AUX_VALOR07,C_LIVRE_AUX_VALOR08,C_LIVRE_AUX_VALOR09,C_LIVRE_AUX_VALOR10,C_LIVRE_AUX_VALOR11,C_LIVRE_AUX_VALOR12,C_LIVRE_AUX_VALOR13,C_LIVRE_AUX_VALOR14,C_LIVRE_AUX_VALOR15,C_LIVRE_AUX_VALOR16,C_LIVRE_AUX_VALOR17,C_LIVRE_AUX_VALOR18,C_LIVRE_AUX_VALOR19,C_LIVRE_AUX_VALOR20,C_LIVRE_AUX_DATA01,C_LIVRE_AUX_DATA02,C_LIVRE_AUX_DATA03,C_LIVRE_AUX_DATA04,C_LIVRE_AUX_DATA05,C_LIVRE_AUX_DATA06,C_LIVRE_AUX_DATA07,C_LIVRE_AUX_DATA08,             C_LIVRE_AUX_DATA09,C_LIVRE_AUX_DATA10,C_LIVRE_AUX_DATA11,C_LIVRE_AUX_DATA12,C_LIVRE_AUX_DATA13,C_LIVRE_AUX_DATA14,C_LIVRE_AUX_DATA15,C_LIVRE_AUX_DATA16,C_LIVRE_AUX_DATA17,C_LIVRE_AUX_DATA18,C_LIVRE_AUX_DATA19,C_LIVRE_AUX_DATA20, C_LIVRE_AUX_OPCAO01,C_LIVRE_AUX_OPCAO02,C_LIVRE_AUX_OPCAO03,C_LIVRE_AUX_OPCAO04,C_LIVRE_AUX_OPCAO05,C_LIVRE_AUX_OPCAO06,C_LIVRE_AUX_OPCAO07,C_LIVRE_AUX_OPCAO08,C_LIVRE_AUX_OPCAO09,C_LIVRE_AUX_OPCAO10,C_LIVRE_AUX_OPCAO11,C_LIVRE_AUX_OPCAO12,C_LIVRE_AUX_OPCAO13,C_LIVRE_AUX_OPCAO14,C_LIVRE_AUX_OPCAO15,C_LIVRE_AUX_OPCAO16,C_LIVRE_AUX_OPCAO17,C_LIVRE_AUX_OPCAO18,C_LIVRE_AUX_OPCAO19,C_LIVRE_AUX_OPCAO20,C_LIVRE_AUX_DESCR01,C_LIVRE_AUX_DESCR02,      C_LIVRE_AUX_DESCR03,C_LIVRE_AUX_DESCR04,C_LIVRE_AUX_DESCR05,C_LIVRE_AUX_DESCR06,C_LIVRE_AUX_DESCR07,C_LIVRE_AUX_DESCR08,C_LIVRE_AUX_DESCR09,C_LIVRE_AUX_DESCR10,C_LIVRE_AUX_DESCR11,C_LIVRE_AUX_DESCR12,C_LIVRE_AUX_DESCR13, C_LIVRE_AUX_DESCR14,C_LIVRE_AUX_DESCR15,C_LIVRE_AUX_DESCR16,C_LIVRE_AUX_DESCR17,C_LIVRE_AUX_DESCR18,C_LIVRE_AUX_DESCR19,C_LIVRE_AUX_DESCR20,C_LIVRE_AUX_TEXTO01,C_LIVRE_AUX_TEXTO02,C_LIVRE_AUX_TEXTO03,C_LIVRE_AUX_TEXTO04, C_LIVRE_AUX_TEXTO05,C_LIVRE_AUX_TEXTO06,C_LIVRE_AUX_TEXTO07,C_LIVRE_AUX_TEXTO08,C_LIVRE_AUX_TEXTO09,C_LIVRE_AUX_TEXTO10,C_LIVRE_AUX_TEXTO11,C_LIVRE_AUX_TEXTO12,C_LIVRE_AUX_TEXTO13,C_LIVRE_AUX_TEXTO14,C_LIVRE_AUX_TEXTO15,
                          C_LIVRE_AUX_TEXTO16,C_LIVRE_AUX_TEXTO17,C_LIVRE_AUX_TEXTO18,C_LIVRE_AUX_TEXTO19,C_LIVRE_AUX_TEXTO20 FROM RHPESS_CONTRATO_AUX X WHERE X.codigo_empresa = '||P_CODIGO_EMPRESA||' AND X.tipo_contrato = '||p_TIPO_CONTRATO||' AND X.CODIGO = '||p_CODIGO_CONTRATO||' AND X.ano_mes_referencia =  (SELECT MAX(AUX.ANO_MES_REFERENCIA)FROM RHPESS_CONTRATO_aux AUX  WHERE X.codigo_empresa = AUX.CODIGO_EMPRESA  AND X.tipo_contrato = AUX.TIPO_CONTRATO  AND X.CODIGO  = AUX.CODIGO  and X.ANO_MES_REFERENCIA <= trunc('||vDATA_SISTEMA||',''MM''));    ';
                          GRAVA_LOG('INSERT', vcomando);   

                  else
                      INSERT INTO RHPESS_CONTRATO_AUX X  (CODIGO_EMPRESA,TIPO_CONTRATO,CODIGO, ANO_MES_REFERENCIA,LOGIN_USUARIO,DT_ULT_ALTER_USUA) values (P_CODIGO_EMPRESA,p_TIPO_CONTRATO , p_CODIGO_CONTRATO, trunc(vDATA_SISTEMA), 'ATUALIZA CONTR DESIGV', sysdate);

                   vcomando :=  'INSERT INTO RHPESS_CONTRATO_AUX X (CODIGO_EMPRESA,TIPO_CONTRATO,CODIGO, ANO_MES_REFERENCIA,LOGIN_USUARIO,DT_ULT_ALTER_USUA) values ('||P_CODIGO_EMPRESA||','||p_TIPO_CONTRATO||' , '||p_CODIGO_CONTRATO||', trunc('||vDATA_SISTEMA||'), ''ATUALIZA CONTR DESIGV'', sysdate);';
                   GRAVA_LOG('INSERT', vcomando); 

                  end if;
              end if;
                  -- fim 04/11/2020 aqui    
      END IF;
   END IF;

  IF( ( p_ACAO = 'EXCLUIR' OR p_ACAO = 'U-EXCLUIR')  ) THEN 
    IF( vMOTIVO_DESVIO = '0001' )THEN 
        vVOID := ATUALIZA_CONTRATO_VOLTA( vNOME_TABELA, trunc(vDATA_SISTEMA,'MM') ); 
    END IF;  
  END IF;

  END LOOP;
END; 
END PR_MIGRA_DADOS_DESIG;