
  CREATE OR REPLACE EDITIONABLE PROCEDURE "ARTERH"."PR_LOTE_FIC_MED_AJUSTE_ATENDEN" (DATA_INICIO IN VARCHAR2,DATA_FIM  IN VARCHAR2) AS  


BEGIN

declare  
vCONTADOR NUMBER ;
    vDATA_INICIO VARCHAR2(10);
    vDATA_FIM    VARCHAR2(10);
err_msg varchar2 (4000);


begin
dbms_output.enable(null);
vCONTADOR :=0;
vDATA_INICIO := DATA_INICIO;--to_char(sysdate-10,'dd/mm/yyyy');--'20210527';--DATA_INICIO;
vDATA_FIM    := DATA_FIM;--to_char(sysdate-1,'dd/mm/yyyy');--'20210527';--DATA_FIM;

err_msg := NULL;

FOR C1 IN (



select MAX(ID)ID,CODIGO_EMPRESA, CODIGO_PESSOA, TRUNC(DT_REG_OCORRENCIA) DT_REG_OCORRENCIA, OCORRENCIA, COUNT(1)QUANT
from SUGESP_FICHAS_MEDICAS X WHERE TRUNC(DT_ULT_ALTER_USUA) 
BETWEEN  vDATA_INICIO AND vDATA_FIM--to_char(sysdate-10,'dd/mm/yyyy') and to_char(sysdate,'dd/mm/yyyy')--vDATA_INICIO AND vDATA_FIM
AND TIPO_DML = 'U'  
AND TABELA = 'RHMEDI_FICHA_MED' 
AND ---inicio---nova parte a ajustar em 27/5/21
(
((X.NEW_EMPRESA_ATENDENTE IS NOT NULL AND X.OLD_EMPRESA_ATENDENTE IS NULL) OR (X.NEW_EMPRESA_ATENDENTE IS NULL AND X.OLD_EMPRESA_ATENDENTE IS NOT NULL)
OR (X.NEW_EMPRESA_ATENDENTE IS NOT NULL AND X.OLD_EMPRESA_ATENDENTE IS NOT NULL AND X.NEW_EMPRESA_ATENDENTE <> X.OLD_EMPRESA_ATENDENTE)
)
OR
((X.NEW_CODIGO_ATENDENTE IS NOT NULL AND X.OLD_CODIGO_ATENDENTE IS NULL) OR (X.NEW_CODIGO_ATENDENTE IS NULL AND X.OLD_CODIGO_ATENDENTE IS NOT NULL)
OR (X.NEW_CODIGO_ATENDENTE IS NOT NULL AND X.OLD_CODIGO_ATENDENTE IS NOT NULL AND X.NEW_CODIGO_ATENDENTE <> X.OLD_CODIGO_ATENDENTE)
)
OR
((X.NEW_NOME_ATENDENTE IS NOT NULL AND X.OLD_NOME_ATENDENTE IS NULL) OR (X.NEW_NOME_ATENDENTE IS NULL AND X.OLD_NOME_ATENDENTE IS NOT NULL)
OR (X.NEW_NOME_ATENDENTE IS NOT NULL AND X.OLD_NOME_ATENDENTE IS NOT NULL AND X.NEW_NOME_ATENDENTE <> X.OLD_NOME_ATENDENTE)
)
OR
((X.NEW_INSCRICAO_CONSELHO IS NOT NULL AND X.OLD_INSCRICAO_CONSELHO IS NULL) OR (X.NEW_INSCRICAO_CONSELHO IS NULL AND X.OLD_INSCRICAO_CONSELHO IS NOT NULL)
OR (X.NEW_INSCRICAO_CONSELHO IS NOT NULL AND X.OLD_INSCRICAO_CONSELHO IS NOT NULL AND X.NEW_INSCRICAO_CONSELHO <> X.OLD_INSCRICAO_CONSELHO)
)
OR
((X.NEW_UF_INSCRICAO IS NOT NULL AND X.OLD_UF_INSCRICAO IS NULL) OR (X.NEW_UF_INSCRICAO IS NULL AND X.OLD_UF_INSCRICAO IS NOT NULL)
OR (X.NEW_UF_INSCRICAO IS NOT NULL AND X.OLD_UF_INSCRICAO IS NOT NULL AND X.NEW_UF_INSCRICAO <> X.OLD_UF_INSCRICAO)
)
OR
((X.NEW_CONSELHO_REGIONAL IS NOT NULL AND X.OLD_CONSELHO_REGIONAL IS NULL) OR (X.NEW_CONSELHO_REGIONAL IS NULL AND X.OLD_CONSELHO_REGIONAL IS NOT NULL)
OR (X.NEW_CONSELHO_REGIONAL IS NOT NULL AND X.OLD_CONSELHO_REGIONAL IS NOT NULL AND X.NEW_CONSELHO_REGIONAL <> X.OLD_CONSELHO_REGIONAL)
)
OR
((X.NEW_INFO_MESMO_MOTIVO IS NOT NULL AND X.OLD_INFO_MESMO_MOTIVO IS NULL) OR (X.NEW_INFO_MESMO_MOTIVO IS NULL AND X.OLD_INFO_MESMO_MOTIVO IS NOT NULL)
OR (X.NEW_INFO_MESMO_MOTIVO IS NOT NULL AND X.OLD_INFO_MESMO_MOTIVO IS NOT NULL AND X.NEW_INFO_MESMO_MOTIVO <> X.OLD_INFO_MESMO_MOTIVO)
)
OR
((X.NEW_DT_EFEITO_MESMO_MOTIVO IS NOT NULL AND X.OLD_DT_EFEITO_MESMO_MOTIVO IS NULL) OR (X.NEW_DT_EFEITO_MESMO_MOTIVO IS NULL AND X.OLD_DT_EFEITO_MESMO_MOTIVO IS NOT NULL)
OR (X.NEW_DT_EFEITO_MESMO_MOTIVO IS NOT NULL AND X.OLD_DT_EFEITO_MESMO_MOTIVO IS NOT NULL AND X.NEW_DT_EFEITO_MESMO_MOTIVO <> X.OLD_DT_EFEITO_MESMO_MOTIVO)
)
)---fim---nova parte a ajustar em 27/5/21

and exists
(SELECT F.* FROM RHMEDI_FICHA_MED F WHERE 
    TRUNC(F.DT_ULT_ALTER_USUA) 
    BETWEEN vDATA_INICIO AND vDATA_FIM -- to_char(sysdate-10,'dd/mm/yyyy') and to_char(sysdate,'dd/mm/yyyy') --
    AND F.CODIGO_EMPRESA = X.CODIGO_EMPRESA AND F.CODIGO_PESSOA = X.CODIGO_PESSOA 
    AND TRUNC(F.DT_REG_OCORRENCIA) = TRUNC(X.DT_REG_OCORRENCIA) AND F.OCORRENCIA = X.OCORRENCIA)

GROUP BY CODIGO_EMPRESA, CODIGO_PESSOA, TRUNC(DT_REG_OCORRENCIA), OCORRENCIA
ORDER BY CODIGO_EMPRESA, CODIGO_PESSOA, TRUNC(DT_REG_OCORRENCIA), OCORRENCIA



)LOOP

BEGIN --EXCEPTION

vCONTADOR :=vCONTADOR+1;
dbms_output.put_line('--'||vCONTADOR);
dbms_output.put_line('EXECUTE PR_FICHA_MEDICA_AJUSTE_FICHAS('||C1.ID||');');
PR_FICHA_MEDICA_AJUSTE_FICHAS(C1.ID);

EXCEPTION WHEN OTHERS THEN
err_msg := SQLCODE||' '||SUBSTR(SQLERRM, 1, 4000);
dbms_output.put_line('err_msg:' ||err_msg);

INSERT INTO SUGESP_AJUSTE_LOTE_CAMPO_HIST(CAMPO_VALOR_2, CAMPO_VALOR_1,  DATA_DADOS, CONSIDERACOES)
VALUES(C1.ID,'LOG EXECUCAO PROCEDURE PR_LOTE_FIC_MED_AJUSTE_ATENDEN', SYSDATE, err_msg
);COMMIT;
END;--BEGIN EXCEPTION

err_msg := NULL;

END LOOP;

END;

END;