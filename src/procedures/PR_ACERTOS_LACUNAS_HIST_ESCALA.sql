
  CREATE OR REPLACE EDITIONABLE PROCEDURE "ARTERH"."PR_ACERTOS_LACUNAS_HIST_ESCALA" 
AS
--KELLYSSON EM 7/8/20 BASEADO acerto_lacunas_absenteismo.sql
--kellysson em 3/7/20
BEGIN 
--KELLYSSON EM 29/6/20

DECLARE            
vCONTADOR NUMBER (10);    
err_msg varchar2 (4000);

BEGIN  
dbms_output.enable(null); 
vCONTADOR :=0;
err_msg := NULL;

dbms_output.put_line('--RELATORIO LACUNAS NO HISTORICO ESCALA A PARTIR DE 01/01/20');

FOR C1 IN ( 


SELECT S.* FROM (
select  
CASE 
WHEN K.LACUNAS > 0 AND K.PROXIMA_DATA_INICIO IS NOT NULL THEN '1-AUMENTAR DATA FIM COM PROXIMA_DATA_INICIO -1 DIA'
WHEN K.LACUNAS > 0 AND K.PROXIMA_DATA_INICIO IS NULL THEN '2-LIMPAR DATA FIM'
WHEN K.LACUNAS < 0 AND K.PROXIMA_DATA_INICIO IS NULL THEN '3-ESPERAR VENCER ESCALA PARA LIMPAR DATA FIM SE FOR O CASO'
WHEN K.LACUNAS < 0 AND K.PROXIMA_DATA_INICIO IS NOT NULL THEN '4-DIMINUIR DATA FIM COM PROXIMA_DATA_INICIO -1 DIA'
ELSE 'NÃO MAPEADO-FAZER AJUSTES MANUALMENTE' end CENARIOS,
k.* from (
SELECT 
COD_CATEG.CONTEUDO_INICIAL TIPO_TRABALHADOR, C.SITUACAO_FUNCIONAL SIT_FUNC_ULT_CONTR, S.DESCRICAO SITUACAO_FUNCIONAL,
TRUNC(Q.DATA_INICIO_COMPARAR) - TRUNC(Q.DATA_FIM_COMPARAR) -1 AS LACUNAS 
,Q.* 
FROM(
SELECT 
T.* 
,CASE 
WHEN T.ORDEM_BM = 1 THEN to_date(to_char(SYSDATE,'dd/mm/yyyy'),'dd/mm/yyyy')+1 
ELSE to_date(to_char(T.PROXIMA_DATA_INICIO,'dd/mm/yyyy'),'dd/mm/yyyy') END DATA_INICIO_COMPARAR
,CASE 
WHEN T.DATA_FIM IS NULL AND T.ORDEM_BM = 1 THEN to_date(to_char(SYSDATE,'dd/mm/yyyy'),'dd/mm/yyyy')
WHEN T.DATA_FIM IS NULL AND T.ORDEM_BM <> 1 THEN to_date(to_char(T.DATA_INICIO,'dd/mm/yyyy'),'dd/mm/yyyy') 
ELSE to_date(to_char(T.DATA_FIM,'dd/mm/yyyy'),'dd/mm/yyyy') END DATA_FIM_COMPARAR
FROM (
--INICIO-----------------------------------------NUCLEO DO RHPONT_ALT_ESCALA
SELECT 
ROW_NUMBER() OVER (PARTITION BY A.CODIGO_EMPRESA, A.TIPO_CONTRATO, A.CODIGO_CONTRATO ORDER BY A.DT_INICIO_TROCA DESC) AS ORDEM_BM,
A.CODIGO_EMPRESA, A.TIPO_CONTRATO, A.CODIGO_CONTRATO, A.COD_ESCALA, A.alter_definitiva,
to_date(to_char(A.DT_INICIO_TROCA,'dd/mm/yyyy'),'dd/mm/yyyy') DATA_INICIO, to_date(to_char(A.DT_FIM_TROCA,'dd/mm/yyyy'),'dd/mm/yyyy') DATA_FIM--, A.PROXIMA_SITUACAO 
,a.login_usuario, a.dt_ult_alter_usua
,LEAD(A.COD_ESCALA, 1, NULL) OVER (PARTITION BY A.CODIGO_EMPRESA, A.TIPO_CONTRATO, A.CODIGO_CONTRATO ORDER BY A.DT_INICIO_TROCA ) AS PROXIMA_COD_ESCALA
,LEAD(A.alter_definitiva, 1, NULL) OVER (PARTITION BY A.CODIGO_EMPRESA, A.TIPO_CONTRATO, A.CODIGO_CONTRATO ORDER BY A.DT_INICIO_TROCA ) AS PROXIMA_alter_definitiva
,LEAD(to_date(to_char(A.DT_INICIO_TROCA,'dd/mm/yyyy'),'dd/mm/yyyy'), 1, NULL) OVER (PARTITION BY A.CODIGO_EMPRESA, A.TIPO_CONTRATO, A.CODIGO_CONTRATO ORDER BY A.DT_INICIO_TROCA) AS PROXIMA_DATA_INICIO
,LEAD(to_date(to_char(A.DT_FIM_TROCA,'dd/mm/yyyy'),'dd/mm/yyyy'), 1, NULL) OVER (PARTITION BY A.CODIGO_EMPRESA, A.TIPO_CONTRATO, A.CODIGO_CONTRATO ORDER BY A.DT_INICIO_TROCA) AS PROXIMA_DATA_FIM
,LEAD(a.login_usuario, 1, NULL) OVER (PARTITION BY A.CODIGO_EMPRESA, A.TIPO_CONTRATO, A.CODIGO_CONTRATO ORDER BY A.DT_INICIO_TROCA) AS PROXIMO_login_usuario
,LEAD( a.dt_ult_alter_usua, 1, NULL) OVER (PARTITION BY A.CODIGO_EMPRESA, A.TIPO_CONTRATO, A.CODIGO_CONTRATO ORDER BY A.DT_INICIO_TROCA) AS PROXIMa_dt_ult_alter_usua
FROM RHPONT_ALT_ESCALA A
WHERE  
A.CODIGO_EMPRESA IN ('0001','0098','0003','0013','0014')-- '1' 
and 
(trunc(A.DT_INICIO_TROCA) >= to_date('01/01/2020','dd/mm/yyyy')
OR (A.DT_FIM_TROCA IS NOT NULL AND trunc(A.DT_FIM_TROCA) >= to_date('01/01/2020','dd/mm/yyyy'))
)
AND A.alter_definitiva = 'S'
--FIM-----------------------------------------NUCLEO DO RHPONT_ALT_ESCALA
)T
)Q
LEFT OUTER JOIN rhpess_contrato c ON C.CODIGO_EMPRESA = q.CODIGO_EMPRESA AND C.TIPO_CONTRATO = q.TIPO_CONTRATO AND C.CODIGO = q.CODIGO_CONTRATO
left outer join RHTABS_VINCULO_EMP V ON V.CODIGO = c.VINCULO
LEFT OUTER JOIN (select * from rhtabs_itds_sist WHERE CODIGO_DOMINIO IN (select CODIGO_DOMINIO from RHTABS_COLS_SIST  where codigo_tabela = 'RHTABS_VINCULO_EMP' and codigo_coluna = 'TP_REGIME_TRAB_ESOCIAL'))RG_TRAB
ON RG_TRAB.CONTEUDO_INICIAL = V.TP_REGIME_TRAB_ESOCIAL
LEFT OUTER JOIN (select * from rhtabs_itds_sist WHERE CODIGO_DOMINIO IN (select CODIGO_DOMINIO from RHTABS_COLS_SIST  where codigo_tabela = 'RHTABS_VINCULO_EMP' and codigo_coluna = 'TP_REGIME_PREV_ESOCIAL'))RG_PREV
ON RG_PREV.CONTEUDO_INICIAL = V.TP_REGIME_PREV_ESOCIAL
LEFT OUTER JOIN (select * from rhtabs_itds_sist WHERE CODIGO_DOMINIO IN (select CODIGO_DOMINIO from RHTABS_COLS_SIST  where codigo_tabela = 'RHTABS_VINCULO_EMP' and codigo_coluna = 'COD_CATEG_ESOCIAL'))COD_CATEG
ON COD_CATEG.CONTEUDO_INICIAL = V.COD_CATEG_ESOCIAL
LEFT OUTER JOIN RHPARM_SIT_FUNC S ON S.CODIGO = C.SITUACAO_FUNCIONAL
WHERE  
C.ANO_MES_REFERENCIA = (SELECT MAX(AUX.ANO_MES_REFERENCIA)FROM RHPESS_CONTRATO AUX WHERE C.CODIGO_EMPRESA = AUX.CODIGO_EMPRESA AND C.TIPO_CONTRATO = AUX.TIPO_CONTRATO AND C.CODIGO = AUX.CODIGO)
and c.data_rescisao is null and c.CODIGO_EMPRESA IN ('0001','0098','0003','0013','0014')-----------------------para todos bm ativos em geral
)k
WHERE k.lacunas <> 0
order by  K.CODIGO_EMPRESA , K.TIPO_CONTRATO , K.CODIGO_CONTRATO , K.data_inicIO
)S
--where trunc(s.data_fim) < trunc(sysdate)
order by S.CENARIOS, S.CODIGO_EMPRESA , S.TIPO_CONTRATO , S.CODIGO_CONTRATO , S.data_inicIO


)LOOP      

vCONTADOR :=vCONTADOR+1; 
dbms_output.put_line('--'||vCONTADOR);

BEGIN --EXCEPTION

IF C1.CENARIOS = '1-AUMENTAR DATA FIM COM PROXIMA_DATA_INICIO -1 DIA' THEN
dbms_output.put_line('--1-AUMENTAR DATA FIM COM PROXIMA_DATA_INICIO -1 DIA');
--dbms_output.put_line('UPDATE RHPONT_ALT_ESCALA SET DT_ULT_ALTER_USUA = SYSDATE, LOGIN_USUARIO = ''script_acerto_lacuna_escala'', DT_FIM_TROCA = TO_DATE('''||C1.PROXIMA_DATA_INICIO ||''',''DD/MM/YYYY'')-1 WHERE CODIGO_EMPRESA = '''|| C1.CODIGO_EMPRESA ||''' AND TIPO_CONTRATO = '''|| C1.TIPO_CONTRATO ||''' AND CODIGO_CONTRATO = '''|| C1.CODIGO_CONTRATO ||''' AND TRUNC(DT_INICIO_TROCA) = TO_DATE('''|| C1.DATA_INICIO ||''',''DD/MM/YYYY''); COMMIT;'); 
UPDATE RHPONT_ALT_ESCALA SET DT_ULT_ALTER_USUA = SYSDATE, LOGIN_USUARIO = 'script_acerto_lacuna_escala', DT_FIM_TROCA = TO_DATE(C1.PROXIMA_DATA_INICIO,'DD/MM/YYYY')-1 WHERE CODIGO_EMPRESA = C1.CODIGO_EMPRESA AND TIPO_CONTRATO = C1.TIPO_CONTRATO AND CODIGO_CONTRATO = C1.CODIGO_CONTRATO AND TRUNC(DT_INICIO_TROCA) = TO_DATE(C1.DATA_INICIO ,'DD/MM/YYYY'); COMMIT;

ELSIF C1.CENARIOS = '2-LIMPAR DATA FIM' THEN
dbms_output.put_line('--2-LIMPAR DATA FIM');
--dbms_output.put_line('UPDATE RHPONT_ALT_ESCALA SET DT_ULT_ALTER_USUA = SYSDATE, LOGIN_USUARIO = ''script_acerto_lacuna_escala'', DT_FIM_TROCA = NULL WHERE CODIGO_EMPRESA = '''|| C1.CODIGO_EMPRESA ||''' AND TIPO_CONTRATO = '''|| C1.TIPO_CONTRATO ||''' AND CODIGO_CONTRATO = '''|| C1.CODIGO_CONTRATO ||''' AND TRUNC(DT_INICIO_TROCA) = TO_DATE('''|| C1.DATA_INICIO ||''',''DD/MM/YYYY''); COMMIT;'); 
UPDATE RHPONT_ALT_ESCALA SET DT_ULT_ALTER_USUA = SYSDATE, LOGIN_USUARIO = 'script_acerto_lacuna_escala', DT_FIM_TROCA = NULL WHERE CODIGO_EMPRESA = C1.CODIGO_EMPRESA AND TIPO_CONTRATO = C1.TIPO_CONTRATO AND CODIGO_CONTRATO = C1.CODIGO_CONTRATO AND TRUNC(DT_INICIO_TROCA) = TO_DATE(C1.DATA_INICIO,'DD/MM/YYYY'); COMMIT;

ELSIF C1.CENARIOS = '3-ESPERAR VENCER ESCALA PARA LIMPAR DATA FIM SE FOR O CASO' THEN
dbms_output.put_line('--3-ESPERAR VENCER ESCALA PARA LIMPAR DATA FIM SE FOR O CASO');
dbms_output.put_line('-- EMPRESA: '|| C1.CODIGO_EMPRESA ||' TIPO_CONTRATO: '|| C1.TIPO_CONTRATO ||' CODIGO_CONTRATO: '|| C1.CODIGO_CONTRATO ||' DT_INICIO_TROCA: '|| C1.DATA_INICIO ||' DT_FIM_TROCA: '|| C1.DATA_FIM); 

ELSIF C1.CENARIOS = '4-DIMINUIR DATA FIM COM PROXIMA_DATA_INICIO -1 DIA' THEN
dbms_output.put_line('--4-DIMINUIR DATA FIM COM PROXIMA_DATA_INICIO -1 DIA');
--dbms_output.put_line('UPDATE RHPONT_ALT_ESCALA SET DT_ULT_ALTER_USUA = SYSDATE, LOGIN_USUARIO = ''script_acerto_lacuna_escala'', DT_FIM_TROCA = TO_DATE('''||C1.PROXIMA_DATA_INICIO ||''',''DD/MM/YYYY'')-1 WHERE CODIGO_EMPRESA = '''|| C1.CODIGO_EMPRESA ||''' AND TIPO_CONTRATO = '''|| C1.TIPO_CONTRATO ||''' AND CODIGO_CONTRATO = '''|| C1.CODIGO_CONTRATO ||''' AND TRUNC(DT_INICIO_TROCA) = TO_DATE('''|| C1.DATA_INICIO ||''',''DD/MM/YYYY''); COMMIT;'); 
UPDATE RHPONT_ALT_ESCALA SET DT_ULT_ALTER_USUA = SYSDATE, LOGIN_USUARIO = 'script_acerto_lacuna_escala', DT_FIM_TROCA = TO_DATE(C1.PROXIMA_DATA_INICIO ,'DD/MM/YYYY')-1 WHERE CODIGO_EMPRESA = C1.CODIGO_EMPRESA AND TIPO_CONTRATO = C1.TIPO_CONTRATO AND CODIGO_CONTRATO = C1.CODIGO_CONTRATO AND TRUNC(DT_INICIO_TROCA) = TO_DATE(C1.DATA_INICIO,'DD/MM/YYYY'); COMMIT;

ELSE
dbms_output.put_line('--AVISAR GETED: NÃO MAPEADO-FAZER AJUSTES MANUALMENTE');
dbms_output.put_line('--CODIGO_EMPRESA: '||C1.CODIGO_EMPRESA	||' TIPO_CONTRATO: '||C1.TIPO_CONTRATO||' CODIGO: '||C1.CODIGO_CONTRATO|| ' COD_ESCALA: '||C1.COD_ESCALA|| ' DATA_INICIO: '||C1.DATA_INICIO||' DATA_FIM: '||C1.DATA_FIM);

END IF;

EXCEPTION WHEN OTHERS THEN
err_msg := SQLCODE||' '||SUBSTR(SQLERRM, 1, 4000);
dbms_output.put_line('err_msg:' ||err_msg);

INSERT INTO SUGESP_AJUSTE_LOTE_CAMPO_HIST(CODIGO_EMPRESA, TIPO_CONTRATO, CODIGO_CONTRATO, CAMPO_VALOR_2,CAMPO_VALOR_3,CAMPO_VALOR_4, CAMPO_VALOR_1,  DATA_DADOS, CONSIDERACOES)
VALUES(C1.CODIGO_EMPRESA,C1.TIPO_CONTRATO, C1.CODIGO_CONTRATO,C1.COD_ESCALA,C1.DATA_INICIO, C1.DATA_FIM, 'LOG EXECUCAO PROCEDURE PR_ACERTOS_LACUNAS_HIST_ESCALA', SYSDATE, err_msg
);COMMIT;
END;--BEGIN EXCEPTION

err_msg := NULL;

END LOOP;

END;
END;

