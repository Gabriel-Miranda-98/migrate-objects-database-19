
  CREATE OR REPLACE EDITIONABLE PROCEDURE "ARTERH"."SUGESP_VALIDA_ARQUIVO_PCMSO" (vEMPRESA_IMPORTA IN VARCHAR2) AS 

BEGIN
EXECUTE IMMEDIATE 'DELETE FROM SUGESP_IMPORTACAO_ADM_PER WHERE CODIGO_EMPRESA <> EMPRESA_IMPORT AND TRUNC(DATA_CARGA) = TRUNC(SYSDATE) AND STATUS_PROCESSAMENTO IS NULL AND DATA_PROCESSAMENTO IS NULL'; 
DECLARE
VERIFICA_ATENDENTE TP_IMPORT_ADM_PER;
VERIFICA_NAT_EXAME TP_IMPORT_ADM_PER;
PROCEDIMENTO_CONDUTA TP_IMPORT_ADM_PER;
PESSOA TP_IMPORT_ADM_PER;
DADOS_PROCE_CONDUTA TP_IMPORT_ADM_PER; 
REC_TP_CONTRATO VARCHAR(4);
REC_PESSOA_CONT NUMBER;
FICHA NUMBER;

/*A FUNCAO RECUPERAR_PESSOA VERIFICA SE EXISTE A PESSOA NO CADASTRO DE PESSOA DE ACORDO COM O CPF INFORMADO NA PLANILHA APENAS PARA OS ADMISSIONAIS*/
FUNCTION RECUPERAR_PESSOA_ADMISSIONAL (VCOD_EMPRESA IN VARCHAR, VCPF IN VARCHAR, vDT_REG_OCORRENCIA_P IN DATE, vDATA_CARGA_P IN DATE, vANALISE_DADOS IN VARCHAR )
RETURN TP_IMPORT_ADM_PER IS
DADOS_REC_PESS TP_IMPORT_ADM_PER;
BEGIN --BEGIN1
DADOS_REC_PESS := TP_IMPORT_ADM_PER (0,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);

FOR P1 IN (
SELECT X.CODIGO_EMPRESA,
  X.CPF,
  X.DT_REG_OCORRENCIA,
  X.DATA_CARGA ,
  X.QTD,
LISTAGG(X.CODIGO, ' + ') WITHIN GROUP (ORDER BY X.CODIGO_EMPRESA, X.CPF, X.CODIGO) AS CODIGO
FROM (
SELECT SUGESP_IMPORTACAO_ADM_PER.CODIGO_EMPRESA,
  SUGESP_IMPORTACAO_ADM_PER.CPF,
  SUGESP_IMPORTACAO_ADM_PER.DT_REG_OCORRENCIA,
  SUGESP_IMPORTACAO_ADM_PER.DATA_CARGA ,
  RHPESS_PESSOA.CODIGO,
  QTD_PESS.QTD
FROM SUGESP_IMPORTACAO_ADM_PER
LEFT JOIN RHPESS_PESSOA
ON LPAD(SUGESP_IMPORTACAO_ADM_PER.CPF,11,0)     = RHPESS_PESSOA.CPF
AND SUGESP_IMPORTACAO_ADM_PER.CODIGO_EMPRESA    = RHPESS_PESSOA.CODIGO_EMPRESA
AND RHPESS_PESSOA.DT_TERMINO                   IS NULL
LEFT JOIN (SELECT COUNT(1) AS QTD, CODIGO_EMPRESA, CPF FROM RHPESS_PESSOA  WHERE 
RHPESS_PESSOA.CPF = VCPF AND RHPESS_PESSOA.CODIGO_EMPRESA = VCOD_EMPRESA AND RHPESS_PESSOA.DT_TERMINO IS NULL group by CODIGO_EMPRESA, CPF
) QTD_PESS ON 
LPAD(SUGESP_IMPORTACAO_ADM_PER.CPF,11,0)     = QTD_PESS.CPF
AND SUGESP_IMPORTACAO_ADM_PER.CODIGO_EMPRESA    = QTD_PESS.CODIGO_EMPRESA
WHERE SUGESP_IMPORTACAO_ADM_PER.CODIGO_EMPRESA  = VCOD_EMPRESA
AND SUGESP_IMPORTACAO_ADM_PER.CPF               = VCPF
AND SUGESP_IMPORTACAO_ADM_PER.DT_REG_OCORRENCIA = TRUNC(vDT_REG_OCORRENCIA_P)
AND SUGESP_IMPORTACAO_ADM_PER.DATA_CARGA        = TRUNC(vDATA_CARGA_P)
GROUP BY SUGESP_IMPORTACAO_ADM_PER.CODIGO_EMPRESA,
  SUGESP_IMPORTACAO_ADM_PER.CPF,
  SUGESP_IMPORTACAO_ADM_PER.DT_REG_OCORRENCIA,
  SUGESP_IMPORTACAO_ADM_PER.DATA_CARGA ,
  RHPESS_PESSOA.CODIGO,
  QTD_PESS.QTD
  ) X
  GROUP BY X.CODIGO_EMPRESA,
  X.CPF,
  X.DT_REG_OCORRENCIA,
  X.DATA_CARGA ,
  X.QTD
) LOOP

IF REPLACE(P1.CODIGO,'+') IS NULL  THEN 

DADOS_REC_PESS.VERIFICA:= 0;
DADOS_REC_PESS.CODIGO_EMPRESA := NULL;
DADOS_REC_PESS.CODIGO_PESSOA := NULL;
DADOS_REC_PESS.APTIDAO := NULL;
DADOS_REC_PESS.OCORRENCIA:= NULL;
DADOS_REC_PESS.NOME_ATENDENTE_ATENDENTE := NULL;
DADOS_REC_PESS.INSCRICAO_CONSELHO_ATENDENTE := NULL;
DADOS_REC_PESS.UF_CONSELHO_ATENDENTE := NULL;
DADOS_REC_PESS.CODIGO_ATENDENTE := NULL;
DADOS_REC_PESS.NATUREZA_EXAME := NULL;
DADOS_REC_PESS.PROCEDIMENTO_CONDUTA := NULL;
DADOS_REC_PESS.CONSELHO_REGIONAL_ATENDENTE :=NULL;
DADOS_REC_PESS.ACAO :=NULL;

UPDATE SUGESP_IMPORTACAO_ADM_PER SET ANALISE_DADOS = vANALISE_DADOS||'NÃO ENCONTROU PESSOA COM ESTE CPF: '||VCPF, DATA_PROCESSAMENTO = SYSDATE , STATUS_PROCESSAMENTO = 'NÃO'
WHERE CODIGO_EMPRESA  = VCOD_EMPRESA AND CPF = VCPF AND DT_REG_OCORRENCIA = TRUNC(vDT_REG_OCORRENCIA_P) AND SUGESP_IMPORTACAO_ADM_PER.DATA_CARGA = TRUNC(vDATA_CARGA_P); COMMIT WORK;
END IF;


IF P1.CODIGO IS NOT NULL AND P1.QTD = '1' THEN 

DADOS_REC_PESS.VERIFICA:= 1;
DADOS_REC_PESS.CODIGO_EMPRESA := P1.CODIGO_EMPRESA;
DADOS_REC_PESS.CODIGO_PESSOA := P1.CODIGO;
DADOS_REC_PESS.APTIDAO := NULL;
DADOS_REC_PESS.OCORRENCIA:= NULL;
DADOS_REC_PESS.NOME_ATENDENTE_ATENDENTE := NULL;
DADOS_REC_PESS.INSCRICAO_CONSELHO_ATENDENTE := NULL;
DADOS_REC_PESS.UF_CONSELHO_ATENDENTE := NULL;
DADOS_REC_PESS.CODIGO_ATENDENTE := NULL;
DADOS_REC_PESS.NATUREZA_EXAME := NULL;
DADOS_REC_PESS.PROCEDIMENTO_CONDUTA := NULL;
DADOS_REC_PESS.CONSELHO_REGIONAL_ATENDENTE :=NULL;
DADOS_REC_PESS.ACAO :=NULL;

UPDATE SUGESP_IMPORTACAO_ADM_PER SET CODIGO_PESSOA_ENCONTRADO = TRIM(P1.CODIGO) 
WHERE CODIGO_EMPRESA  = VCOD_EMPRESA AND CPF = VCPF AND DT_REG_OCORRENCIA = TRUNC(vDT_REG_OCORRENCIA_P) AND SUGESP_IMPORTACAO_ADM_PER.DATA_CARGA = TRUNC(vDATA_CARGA_P);COMMIT WORK;

END IF;

IF P1.CODIGO IS NOT NULL AND P1.QTD > 1 THEN 

DADOS_REC_PESS.VERIFICA:= 0;
DADOS_REC_PESS.CODIGO_EMPRESA := NULL;
DADOS_REC_PESS.CODIGO_PESSOA := NULL;
DADOS_REC_PESS.APTIDAO := NULL;
DADOS_REC_PESS.OCORRENCIA:= NULL;
DADOS_REC_PESS.NOME_ATENDENTE_ATENDENTE := NULL;
DADOS_REC_PESS.INSCRICAO_CONSELHO_ATENDENTE := NULL;
DADOS_REC_PESS.UF_CONSELHO_ATENDENTE := NULL;
DADOS_REC_PESS.CODIGO_ATENDENTE := NULL;
DADOS_REC_PESS.NATUREZA_EXAME := NULL;
DADOS_REC_PESS.PROCEDIMENTO_CONDUTA := NULL;
DADOS_REC_PESS.CONSELHO_REGIONAL_ATENDENTE :=NULL;
DADOS_REC_PESS.ACAO :=NULL;

UPDATE SUGESP_IMPORTACAO_ADM_PER SET ANALISE_DADOS = vANALISE_DADOS||'EXISTE MAIS DE UM CADASTRO DE PESSOAS SEM DT_TERMINO: '|| P1.CODIGO,DATA_PROCESSAMENTO = SYSDATE , STATUS_PROCESSAMENTO = 'NÃO'
WHERE CODIGO_EMPRESA  = VCOD_EMPRESA AND CPF = VCPF AND DT_REG_OCORRENCIA = TRUNC(vDT_REG_OCORRENCIA_P) AND SUGESP_IMPORTACAO_ADM_PER.DATA_CARGA = TRUNC(vDATA_CARGA_P);COMMIT WORK;

END IF;

END LOOP;
RETURN DADOS_REC_PESS; 

END;

/*A FUNCAO RECUPERAR_PESSOA VERIFICA SE EXISTE A PESSOA NO CADASTRO DE PESSOA DE ACORDO COM O CPF INFORMADO NA PLANILHA APENAS PARA OS PERIODICOS, RETORNO AO TRABALHO E DEMISSIONAIS*/
FUNCTION RECUPERA_PESSOA_CONTRATO (VCOD_EMPRESA_CONT IN VARCHAR, VCPF_CONT IN VARCHAR, vDT_REG_OCORRENCIA_CONT IN DATE, vDATA_CARGA_CONT IN DATE ) RETURN NUMBER IS
COD_PESS_ARTE NUMBER;
BEGIN
COD_PESS_ARTE:= NULL;
FOR P1 IN (
SELECT
    SUGESP_IMPORTACAO_ADM_PER.CODIGO_EMPRESA,
    SUGESP_IMPORTACAO_ADM_PER.CPF,
    SUGESP_IMPORTACAO_ADM_PER.TIPO_CONTRATO,
    SUGESP_IMPORTACAO_ADM_PER.CODIGO_CONTRATO,
    SUGESP_IMPORTACAO_ADM_PER.CODIGO_PESSOA_ENCONTRADO,
    C.CODIGO AS BM_ARTE,
    C.CODIGO_PESSOA,
    P.CPF AS CPF_ARTE,
    SUGESP_IMPORTACAO_ADM_PER.ANALISE_DADOS,
    SUGESP_IMPORTACAO_ADM_PER.DATA_PROCESSAMENTO,
    SUGESP_IMPORTACAO_ADM_PER.STATUS_PROCESSAMENTO
  FROM
    ARTERH.SUGESP_IMPORTACAO_ADM_PER
      LEFT JOIN RHPESS_CONTRATO C ON SUGESP_IMPORTACAO_ADM_PER.CODIGO_CONTRATO = C.CODIGO
       AND SUGESP_IMPORTACAO_ADM_PER.CODIGO_EMPRESA = C.CODIGO_EMPRESA
       AND SUGESP_IMPORTACAO_ADM_PER.TIPO_CONTRATO = C.TIPO_CONTRATO
       AND C.ANO_MES_REFERENCIA = (
        SELECT MAX(A.ANO_MES_REFERENCIA)
          FROM RHPESS_CONTRATO A
         WHERE C.CODIGO_EMPRESA = A.CODIGO_EMPRESA
               AND C.TIPO_CONTRATO = A.TIPO_CONTRATO
               AND C.CODIGO        = A.CODIGO
               AND A.ANO_MES_REFERENCIA <= ( SELECT DATA_DO_SISTEMA FROM RHPARM_P_SIST )
    )
      LEFT JOIN RHPESS_PESSOA   P ON C.CODIGO_EMPRESA = P.CODIGO_EMPRESA
       AND C.CODIGO_PESSOA = P.CODIGO
 WHERE
        SUGESP_IMPORTACAO_ADM_PER.CODIGO_EMPRESA     = VCOD_EMPRESA_CONT AND
        SUGESP_IMPORTACAO_ADM_PER.CPF                = VCPF_CONT AND
        SUGESP_IMPORTACAO_ADM_PER.DT_REG_OCORRENCIA  = TRUNC(vDT_REG_OCORRENCIA_CONT) AND
        SUGESP_IMPORTACAO_ADM_PER.DATA_CARGA         = TRUNC(vDATA_CARGA_CONT)
 GROUP BY SUGESP_IMPORTACAO_ADM_PER.CODIGO_EMPRESA,
    SUGESP_IMPORTACAO_ADM_PER.CPF,
    SUGESP_IMPORTACAO_ADM_PER.TIPO_CONTRATO,
    SUGESP_IMPORTACAO_ADM_PER.CODIGO_CONTRATO,
    SUGESP_IMPORTACAO_ADM_PER.CODIGO_PESSOA_ENCONTRADO,
    C.CODIGO ,
    C.CODIGO_PESSOA,
    P.CPF,
    SUGESP_IMPORTACAO_ADM_PER.ANALISE_DADOS,
    SUGESP_IMPORTACAO_ADM_PER.DATA_PROCESSAMENTO,
    SUGESP_IMPORTACAO_ADM_PER.STATUS_PROCESSAMENTO

)LOOP
IF P1.CPF = P1.CPF_ARTE AND P1.CODIGO_PESSOA_ENCONTRADO IS NULL THEN
COD_PESS_ARTE := 1;
UPDATE SUGESP_IMPORTACAO_ADM_PER SET CODIGO_PESSOA_ENCONTRADO = P1.CODIGO_PESSOA
WHERE --DATA_PROCESSAMENTO IS NULL AND STATUS_PROCESSAMENTO IS NULL AND 
CODIGO_EMPRESA = VCOD_EMPRESA_CONT AND TIPO_CONTRATO = P1.TIPO_CONTRATO AND CODIGO_CONTRATO = P1.CODIGO_CONTRATO AND CPF  = VCPF_CONT AND DATA_CARGA = TRUNC(vDATA_CARGA_CONT) AND DT_REG_OCORRENCIA = TRUNC(vDT_REG_OCORRENCIA_CONT); COMMIT WORK;
--dbms_output.put_line('CODIGO_PESSOA_ENCONTRADO: '||p1.CODIGO_PESSOA_ENCONTRADO); 
END IF;

IF P1.CPF <> P1.CPF_ARTE AND P1.CODIGO_PESSOA_ENCONTRADO IS NULL THEN
COD_PESS_ARTE := 0;
UPDATE SUGESP_IMPORTACAO_ADM_PER SET ANALISE_DADOS = P1.ANALISE_DADOS||' - O CPF DA PLANILHA NÃO ESTA DE ACORDO COM O ARTERH'
WHERE DATA_PROCESSAMENTO IS NULL AND STATUS_PROCESSAMENTO IS NULL AND CODIGO_EMPRESA = VCOD_EMPRESA_CONT AND TIPO_CONTRATO = P1.TIPO_CONTRATO AND CODIGO_CONTRATO = P1.CODIGO_CONTRATO AND CPF  = VCPF_CONT AND DATA_CARGA = TRUNC(vDATA_CARGA_CONT) AND DT_REG_OCORRENCIA = TRUNC(vDT_REG_OCORRENCIA_CONT); COMMIT WORK;
END IF;

END LOOP;

RETURN COD_PESS_ARTE;
END; 


/*A FUNCAO ANALISA_ATENDENTE VERIFICA SE EXISTE O ATENDENTE NO CADASTRO DE PESSOA*/
FUNCTION ANALISA_ATENDENTE (VCOD_EMPRESA_ATENDENTE IN VARCHAR, VDT_OCORR IN DATE, VDT_CARGA IN DATE, VCPF1 IN VARCHAR, VNUMERO_LINHA NUMBER) 
RETURN TP_IMPORT_ADM_PER IS
DADOS_ATENDENTE TP_IMPORT_ADM_PER;
BEGIN --BEGIN1
DADOS_ATENDENTE := TP_IMPORT_ADM_PER (0,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);

FOR C3 IN (
SELECT I.CODIGO_EMPRESA, I.CODIGO_ATENDENTE, P.CODIGO, I.DATA_CARGA, P.CPF, I.CPF AS CPF_CAND, I.DT_REG_OCORRENCIA, I.NUMERO_LINHA,
P.NOME AS NOME_ATENDENTE, P.CONSELHO_REGIONAL, P.INSCRICAO_CONSELHO, P.UF_CONSELHO, I.CODIGO_CANDIDATO, I.NATUREZA_EXAME, I.CODIGO_EVENTO_SEL, I.COD_EXAME
FROM SUGESP_IMPORTACAO_ADM_PER I
LEFT JOIN RHPESS_PESSOA P
ON I.CODIGO_EMPRESA      = P.CODIGO_EMPRESA
/*25-05-2023, RAFAELLA O CPF ESTA CONSIDERANDO 15 POSICOES, POIS NA PRIMEIRA VERSAO DO ADMISSIONAL, O CODIGO DO ATENDENTE ERA IGUAL AO CODIGO DE PESSOA, 
POREM ENCONTRAMOS UM REGISTRO ONDE ESTAVA DIFERENTE E COMO EXITIA TODO UM HISTORICO DEIXAMOS DA FORMA QUE ESTA E APENAS ACRESCENTAMOS OS ZEROS A ESQUERDA DO CPF COMPLETANDO 15 POSIÇÕES*/
AND I.CODIGO_ATENDENTE   = LPAD(P.CPF,15,0) 
AND P.DT_TERMINO IS NULL
WHERE I.CODIGO_EMPRESA   = VCOD_EMPRESA_ATENDENTE
AND I.DT_REG_OCORRENCIA  = TRUNC(VDT_OCORR) --TO_DATE(VDT_OCORR,'DD/MM/YYYY')
AND I.DATA_CARGA         = TRUNC(VDT_CARGA)
AND I.CPF                = VCPF1
AND I.NUMERO_LINHA       = VNUMERO_LINHA
) LOOP

IF C3.CODIGO_ATENDENTE IS NULL AND C3.CODIGO IS NULL THEN 

UPDATE SUGESP_IMPORTACAO_ADM_PER SET VERIFICA_ATENDENTE = 'NÃO PREENCHIDO'
WHERE CODIGO_EMPRESA = C3.CODIGO_EMPRESA AND CPF  = C3.CPF_CAND AND DATA_PROCESSAMENTO IS NULL AND STATUS_PROCESSAMENTO IS NULL AND DATA_CARGA = TRUNC(C3.DATA_CARGA) AND DT_REG_OCORRENCIA = TRUNC(VDT_OCORR) ; COMMIT WORK;
END IF;

IF C3.CODIGO_ATENDENTE IS NOT NULL AND C3.CODIGO IS NULL THEN 

UPDATE SUGESP_IMPORTACAO_ADM_PER SET VERIFICA_ATENDENTE = 'NÃO ENCONTRADO'
WHERE CODIGO_EMPRESA = C3.CODIGO_EMPRESA AND CPF  = C3.CPF_CAND AND DATA_PROCESSAMENTO IS NULL AND STATUS_PROCESSAMENTO IS NULL AND DATA_CARGA = TRUNC(C3.DATA_CARGA) AND DT_REG_OCORRENCIA = TRUNC(VDT_OCORR) ; COMMIT WORK;
END IF;

IF C3.CODIGO_ATENDENTE IS NOT NULL AND C3.CODIGO IS NOT NULL THEN 

DADOS_ATENDENTE.VERIFICA:= 0;
DADOS_ATENDENTE.CODIGO_EMPRESA := NULL;
DADOS_ATENDENTE.CODIGO_PESSOA := NULL;
DADOS_ATENDENTE.APTIDAO := NULL;
DADOS_ATENDENTE.OCORRENCIA:= NULL;
DADOS_ATENDENTE.NOME_ATENDENTE_ATENDENTE := C3.NOME_ATENDENTE;
DADOS_ATENDENTE.INSCRICAO_CONSELHO_ATENDENTE := C3.INSCRICAO_CONSELHO;
DADOS_ATENDENTE.UF_CONSELHO_ATENDENTE := C3.UF_CONSELHO;
DADOS_ATENDENTE.CODIGO_ATENDENTE := C3.CODIGO;
DADOS_ATENDENTE.NATUREZA_EXAME := NULL;
DADOS_ATENDENTE.PROCEDIMENTO_CONDUTA := NULL;
DADOS_ATENDENTE.CONSELHO_REGIONAL_ATENDENTE := C3.CONSELHO_REGIONAL;
DADOS_ATENDENTE.ACAO :=NULL;

UPDATE SUGESP_IMPORTACAO_ADM_PER SET VERIFICA_ATENDENTE = 'ENCONTRADO'
WHERE CODIGO_EMPRESA = C3.CODIGO_EMPRESA AND CPF  = C3.CPF_CAND AND DATA_PROCESSAMENTO IS NULL AND STATUS_PROCESSAMENTO IS NULL AND DATA_CARGA = TRUNC(C3.DATA_CARGA) AND DT_REG_OCORRENCIA = TRUNC(VDT_OCORR); COMMIT WORK;

END IF;

END LOOP;
RETURN DADOS_ATENDENTE; 

END;

/*VERIFICA SE A NATUREZA_EXAME ESTA DE ACORDO COM A TABELA DE CONVERSAO TEG9*/
FUNCTION VERIFICA_NATUREZA_EXAME ( vCOD_EMP IN VARCHAR, vCPF_NAT IN VARCHAR, vDATA_CARGA_NAT DATE, vDT_REG_OCOR_NAT DATE) 
RETURN TP_IMPORT_ADM_PER IS
DADOS_NATU TP_IMPORT_ADM_PER;

BEGIN 
DADOS_NATU := TP_IMPORT_ADM_PER (0,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);

FOR N1 IN (
SELECT 
regexp_substr(RHINTE_ED_IT_CONV.DADO_ORIGEM, '[^;]+',1, 1) AS  EMPRESA, 
regexp_substr(RHINTE_ED_IT_CONV.DADO_ORIGEM, '[^;]+',1, 2) AS  NAT_EXAME,
RHINTE_ED_IT_CONV.DADO_DESTINO,
RHMEDI_NATUREZA_EX.CODIGO  AS NAT_EXAME_ARTE,
RHMEDI_NATUREZA_EX.DESCRICAO, SUGESP_IMPORTACAO_ADM_PER.NATUREZA_EXAME NAT_EXAME_IMP,
SUGESP_IMPORTACAO_ADM_PER.DATA_CARGA, SUGESP_IMPORTACAO_ADM_PER.DT_REG_OCORRENCIA, SUGESP_IMPORTACAO_ADM_PER.ANALISE_DADOS
FROM SUGESP_IMPORTACAO_ADM_PER
LEFT JOIN RHINTE_ED_IT_CONV ON
RHINTE_ED_IT_CONV.CODIGO_CONVERSAO = 'TEG9' AND 
regexp_substr(RHINTE_ED_IT_CONV.DADO_ORIGEM, '[^;]+',1, 1) = SUGESP_IMPORTACAO_ADM_PER.CODIGO_EMPRESA AND 
regexp_substr(RHINTE_ED_IT_CONV.DADO_ORIGEM, '[^;]+',1, 2) = SUGESP_IMPORTACAO_ADM_PER.NATUREZA_EXAME  
LEFT JOIN RHMEDI_NATUREZA_EX ON 
regexp_substr(RHINTE_ED_IT_CONV.DADO_ORIGEM, '[^;]+',1, 1) = RHMEDI_NATUREZA_EX.CODIGO_EMPRESA  AND
regexp_substr(RHINTE_ED_IT_CONV.DADO_ORIGEM, '[^;]+',1, 2) = RHMEDI_NATUREZA_EX.CODIGO  
WHERE 
SUGESP_IMPORTACAO_ADM_PER.CODIGO_EMPRESA    = vCOD_EMP AND 
SUGESP_IMPORTACAO_ADM_PER.CPF               = vCPF_NAT AND 
SUGESP_IMPORTACAO_ADM_PER.DATA_CARGA        = TRUNC(vDATA_CARGA_NAT) AND
SUGESP_IMPORTACAO_ADM_PER.DT_REG_OCORRENCIA = TRUNC(vDT_REG_OCOR_NAT)

) LOOP

IF N1.NAT_EXAME IS NULL AND N1.NAT_EXAME_ARTE IS NOT NULL AND N1.NAT_EXAME_IMP IS NOT NULL THEN 

DADOS_NATU.VERIFICA:= 0;
DADOS_NATU.CODIGO_EMPRESA := NULL;
DADOS_NATU.CODIGO_PESSOA := NULL;
DADOS_NATU.APTIDAO := NULL;
DADOS_NATU.OCORRENCIA:= NULL;
DADOS_NATU.NOME_ATENDENTE_ATENDENTE := NULL;
DADOS_NATU.INSCRICAO_CONSELHO_ATENDENTE := NULL;
DADOS_NATU.UF_CONSELHO_ATENDENTE := NULL;
DADOS_NATU.CODIGO_ATENDENTE := NULL;
DADOS_NATU.NATUREZA_EXAME := NULL;
DADOS_NATU.PROCEDIMENTO_CONDUTA := NULL;
DADOS_NATU.CONSELHO_REGIONAL_ATENDENTE := NULL;
DADOS_NATU.ACAO :=NULL;

UPDATE SUGESP_IMPORTACAO_ADM_PER SET ANALISE_DADOS = N1.ANALISE_DADOS||' - TIPO DE PROCEDIMENTO NÃO ESTA NA TABELA DE CONVERSÃO TEG9'
WHERE DATA_PROCESSAMENTO IS NULL AND STATUS_PROCESSAMENTO IS NULL AND CODIGO_EMPRESA = vCOD_EMP AND CPF  = vCPF_NAT AND DATA_CARGA = TRUNC(vDATA_CARGA_NAT) AND DT_REG_OCORRENCIA = TRUNC(vDT_REG_OCOR_NAT) ; COMMIT WORK;

END IF ;

IF N1.NAT_EXAME IS NULL AND N1.NAT_EXAME_ARTE IS NULL AND N1.EMPRESA IS NULL THEN 

DADOS_NATU.VERIFICA:= 0;
DADOS_NATU.CODIGO_EMPRESA := NULL;
DADOS_NATU.CODIGO_PESSOA := NULL;
DADOS_NATU.APTIDAO := NULL;
DADOS_NATU.OCORRENCIA:= NULL;
DADOS_NATU.NOME_ATENDENTE_ATENDENTE := NULL;
DADOS_NATU.INSCRICAO_CONSELHO_ATENDENTE := NULL;
DADOS_NATU.UF_CONSELHO_ATENDENTE := NULL;
DADOS_NATU.CODIGO_ATENDENTE := NULL;
DADOS_NATU.NATUREZA_EXAME := NULL;
DADOS_NATU.PROCEDIMENTO_CONDUTA := NULL;
DADOS_NATU.CONSELHO_REGIONAL_ATENDENTE := NULL;
DADOS_NATU.ACAO :=NULL;

UPDATE SUGESP_IMPORTACAO_ADM_PER SET ANALISE_DADOS = N1.ANALISE_DADOS||' - TIPO DE PROCEDIMENTO NÃO ESTA NA TABELA DE CONVERSÃO TEG9 PARA ESTA EMPRESA'
WHERE DATA_PROCESSAMENTO IS NULL AND STATUS_PROCESSAMENTO IS NULL AND CODIGO_EMPRESA = vCOD_EMP AND CPF  = vCPF_NAT AND DATA_CARGA = TRUNC(vDATA_CARGA_NAT) AND DT_REG_OCORRENCIA = TRUNC(vDT_REG_OCOR_NAT) ; COMMIT WORK;

END IF ;

IF N1.NAT_EXAME IS NOT NULL AND N1.NAT_EXAME_ARTE IS NULL AND N1.NAT_EXAME_IMP IS NOT NULL THEN 

DADOS_NATU.VERIFICA:= 0;
DADOS_NATU.CODIGO_EMPRESA := NULL;
DADOS_NATU.CODIGO_PESSOA := NULL;
DADOS_NATU.APTIDAO := NULL;
DADOS_NATU.OCORRENCIA:= NULL;
DADOS_NATU.NOME_ATENDENTE_ATENDENTE := NULL;
DADOS_NATU.INSCRICAO_CONSELHO_ATENDENTE := NULL;
DADOS_NATU.UF_CONSELHO_ATENDENTE := NULL;
DADOS_NATU.CODIGO_ATENDENTE := NULL;
DADOS_NATU.NATUREZA_EXAME := NULL;
DADOS_NATU.PROCEDIMENTO_CONDUTA := NULL;
DADOS_NATU.CONSELHO_REGIONAL_ATENDENTE := NULL;
DADOS_NATU.ACAO :=NULL;

UPDATE SUGESP_IMPORTACAO_ADM_PER SET ANALISE_DADOS = N1.ANALISE_DADOS||' - TIPO DE PROCEDIMENTO EXAME NÃO EXISTE'
WHERE DATA_PROCESSAMENTO IS NULL AND STATUS_PROCESSAMENTO IS NULL AND CODIGO_EMPRESA = vCOD_EMP AND CPF  = vCPF_NAT AND DATA_CARGA = TRUNC(vDATA_CARGA_NAT) AND DT_REG_OCORRENCIA = TRUNC(vDT_REG_OCOR_NAT) ; COMMIT WORK;

END IF ;

IF N1.NAT_EXAME IS NOT NULL AND N1.NAT_EXAME_ARTE IS NOT NULL AND N1.NAT_EXAME_IMP IS NOT NULL THEN 

DADOS_NATU.VERIFICA:= 1;
DADOS_NATU.CODIGO_EMPRESA := NULL;
DADOS_NATU.CODIGO_PESSOA := NULL;
DADOS_NATU.APTIDAO := NULL;
DADOS_NATU.OCORRENCIA:= NULL;
DADOS_NATU.NOME_ATENDENTE_ATENDENTE := NULL;
DADOS_NATU.INSCRICAO_CONSELHO_ATENDENTE := NULL;
DADOS_NATU.UF_CONSELHO_ATENDENTE := NULL;
DADOS_NATU.CODIGO_ATENDENTE := NULL;
DADOS_NATU.NATUREZA_EXAME := N1.DADO_DESTINO;
DADOS_NATU.PROCEDIMENTO_CONDUTA := NULL;
DADOS_NATU.CONSELHO_REGIONAL_ATENDENTE := NULL;
DADOS_NATU.ACAO :=NULL;

END IF ;


END LOOP;
RETURN DADOS_NATU; 

END;

/*FUNÇÃO QUE IRA VERIFICAR SE AS COMBINACOES ESTÃO OK DE ACORDO COM A TABELA DE CONVERSAO TEG8 */
FUNCTION VALIDA_PROCE_CONDUTA ( vCOD_EMP IN VARCHAR, vCPF_NAT IN VARCHAR, vDATA_CARGA_NAT DATE, vDT_REG_OCOR_NAT DATE, vCOD_PESS IN VARCHAR, vANALISE_D IN VARCHAR ) 
RETURN TP_IMPORT_ADM_PER IS
DADOS_PROCE_CONDUTA TP_IMPORT_ADM_PER;

BEGIN 
DADOS_PROCE_CONDUTA := TP_IMPORT_ADM_PER (0,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);

FOR N1 IN (
SELECT 
regexp_substr(RHINTE_ED_IT_CONV.DADO_ORIGEM, '[^;]+',1, 1) AS  ID, 
regexp_substr(RHINTE_ED_IT_CONV.DADO_ORIGEM, '[^;]+',1, 2) AS  NAT_EXAME,
regexp_substr(RHINTE_ED_IT_CONV.DADO_ORIGEM, '[^;]+',1, 3) AS  CONDUTA,
regexp_substr(RHINTE_ED_IT_CONV.DADO_ORIGEM, '[^;]+',1, 4) AS  EMPRESA,
RHINTE_ED_IT_CONV.DADO_DESTINO AS CONDUTA_COMBINACAO,
SUGESP_IMPORTACAO_ADM_PER.CPF,
SUGESP_IMPORTACAO_ADM_PER.DT_REG_OCORRENCIA,
SUGESP_IMPORTACAO_ADM_PER.NATUREZA_EXAME,
SUGESP_IMPORTACAO_ADM_PER.CODIGO_PROC_MED AS CONDUTA_IMPORT,
RHMEDI_FICHA_MED.OCORRENCIA, 
RHMEDI_RL_FICH_PRO.CODIGO_PROC_MED AS CONDUTA_ARTE,
/*SE NÃO EXISTIR O REGISTRO NA TABELA RHMEDI_RL_FICH_PRO E A NATUREZA DE EXAME DA IMPORTAÇÃO FOR IGUAL A NATUREZA DE EXAME DA TABELA DE CONVERSAO*/
CASE WHEN RHMEDI_FICHA_MED.OCORRENCIA IS NULL AND regexp_substr(RHINTE_ED_IT_CONV.DADO_ORIGEM, '[^;]+',1, 2) = SUGESP_IMPORTACAO_ADM_PER.NATUREZA_EXAME AND 
         regexp_substr(RHINTE_ED_IT_CONV.DADO_ORIGEM, '[^;]+',1, 3) = SUGESP_IMPORTACAO_ADM_PER.CODIGO_PROC_MED /*SE O CODIGO DE CONDUTA DA CONVERSAO FOR IGUAL A CONDUTA QUE SERA IMPROTADA*/
     THEN 'INSERE A CONDUTA'
    /*SE EXISTIR O REGISTRO NA TABELA RHMEDI_RL_FICH_PRO E A NATUREZA DE EXAME DA IMPORTAÇÃO FOR IGUAL A NATUREZA DE EXAME DA TABELA DE CONVERSAO*/
     WHEN RHMEDI_FICHA_MED.OCORRENCIA IS NOT NULL AND regexp_substr(RHINTE_ED_IT_CONV.DADO_ORIGEM, '[^;]+',1, 2) = SUGESP_IMPORTACAO_ADM_PER.NATUREZA_EXAME AND 
          regexp_substr(RHINTE_ED_IT_CONV.DADO_ORIGEM, '[^;]+',1, 3) = RHMEDI_RL_FICH_PRO.CODIGO_PROC_MED AND /* E SE A CONDUTA FOR IGUAL A CONDUTA OBRIGATORIA*/
          SUGESP_IMPORTACAO_ADM_PER.CODIGO_PROC_MED <> RHMEDI_RL_FICH_PRO.CODIGO_PROC_MED AND 
          SUGESP_IMPORTACAO_ADM_PER.CODIGO_PROC_MED = RHINTE_ED_IT_CONV.DADO_DESTINO
     THEN 'INSERE A CONDUTA'
     ELSE 'NOVO CENÁRIO'
     END AS IMPORTACAO
FROM SUGESP_IMPORTACAO_ADM_PER  
LEFT JOIN RHINTE_ED_IT_CONV ON 
RHINTE_ED_IT_CONV.CODIGO_CONVERSAO = 'TEG8' AND
SUGESP_IMPORTACAO_ADM_PER.CODIGO_EMPRESA = regexp_substr(RHINTE_ED_IT_CONV.DADO_ORIGEM, '[^;]+',1, 4) AND
SUGESP_IMPORTACAO_ADM_PER.CODIGO_PROC_MED = regexp_substr(RHINTE_ED_IT_CONV.DADO_ORIGEM, '[^;]+',1, 3) AND 
SUGESP_IMPORTACAO_ADM_PER.NATUREZA_EXAME = regexp_substr(RHINTE_ED_IT_CONV.DADO_ORIGEM, '[^;]+',1, 2)
LEFT JOIN RHMEDI_FICHA_MED ON
RHMEDI_FICHA_MED.CODIGO_PESSOA = vCOD_PESS AND
TRUNC(SUGESP_IMPORTACAO_ADM_PER.DT_REG_OCORRENCIA) = TRUNC(RHMEDI_FICHA_MED.DT_REG_OCORRENCIA) AND
RHMEDI_FICHA_MED.CODIGO_EMPRESA = SUGESP_IMPORTACAO_ADM_PER.CODIGO_EMPRESA
LEFT JOIN RHMEDI_RL_FICH_PRO
ON SUGESP_IMPORTACAO_ADM_PER.CODIGO_EMPRESA            = RHMEDI_RL_FICH_PRO.CODIGO_EMPRESA
AND SUGESP_IMPORTACAO_ADM_PER.DT_REG_OCORRENCIA        = TRUNC(RHMEDI_RL_FICH_PRO.DT_REG_OCORRENCIA)
AND SUGESP_IMPORTACAO_ADM_PER.CODIGO_PROC_MED          = RHMEDI_RL_FICH_PRO.CODIGO_PROC_MED
AND RHMEDI_RL_FICH_PRO.CODIGO_PESSOA                   = vCOD_PESS
AND RHMEDI_RL_FICH_PRO.OCORRENCIA                      = RHMEDI_FICHA_MED.OCORRENCIA
WHERE SUGESP_IMPORTACAO_ADM_PER.CODIGO_EMPRESA = vCOD_EMP AND
SUGESP_IMPORTACAO_ADM_PER.CPF = vCPF_NAT AND
SUGESP_IMPORTACAO_ADM_PER.DT_REG_OCORRENCIA = TRUNC(vDT_REG_OCOR_NAT) AND
SUGESP_IMPORTACAO_ADM_PER.DATA_CARGA = TRUNC(vDATA_CARGA_NAT) 
ORDER BY 2,3

) LOOP

IF N1.NAT_EXAME IS NULL THEN 

DADOS_PROCE_CONDUTA.VERIFICA:= 0;
DADOS_PROCE_CONDUTA.CODIGO_EMPRESA := NULL;
DADOS_PROCE_CONDUTA.CODIGO_PESSOA := NULL;
DADOS_PROCE_CONDUTA.APTIDAO := NULL;
DADOS_PROCE_CONDUTA.OCORRENCIA:= NULL;
DADOS_PROCE_CONDUTA.NOME_ATENDENTE_ATENDENTE := NULL;
DADOS_PROCE_CONDUTA.INSCRICAO_CONSELHO_ATENDENTE := NULL;
DADOS_PROCE_CONDUTA.UF_CONSELHO_ATENDENTE := NULL;
DADOS_PROCE_CONDUTA.CODIGO_ATENDENTE := NULL;
DADOS_PROCE_CONDUTA.NATUREZA_EXAME := NULL;
DADOS_PROCE_CONDUTA.PROCEDIMENTO_CONDUTA := NULL;
DADOS_PROCE_CONDUTA.CONSELHO_REGIONAL_ATENDENTE := NULL;
DADOS_PROCE_CONDUTA.ACAO :=NULL;

UPDATE SUGESP_IMPORTACAO_ADM_PER SET ANALISE_DADOS = vANALISE_D||' - TIPO DE PROCEDIMENTO NÃO ESTA NA TABELA DE CONVERSÃO TEG8', DATA_PROCESSAMENTO = SYSDATE, STATUS_PROCESSAMENTO = 'NÃO'
WHERE DATA_PROCESSAMENTO IS NULL AND STATUS_PROCESSAMENTO IS NULL AND CODIGO_EMPRESA = vCOD_EMP AND CPF  = vCPF_NAT AND DATA_CARGA = TRUNC(vDATA_CARGA_NAT) AND DT_REG_OCORRENCIA = TRUNC(vDT_REG_OCOR_NAT) ; COMMIT WORK;

END IF ;

IF N1.IMPORTACAO = 'INSERE A CONDUTA' THEN 

DADOS_PROCE_CONDUTA.VERIFICA:= 1;
DADOS_PROCE_CONDUTA.CODIGO_EMPRESA := NULL;
DADOS_PROCE_CONDUTA.CODIGO_PESSOA := NULL;
DADOS_PROCE_CONDUTA.APTIDAO := NULL;
DADOS_PROCE_CONDUTA.OCORRENCIA:= NULL;
DADOS_PROCE_CONDUTA.NOME_ATENDENTE_ATENDENTE := NULL;
DADOS_PROCE_CONDUTA.INSCRICAO_CONSELHO_ATENDENTE := NULL;
DADOS_PROCE_CONDUTA.UF_CONSELHO_ATENDENTE := NULL;
DADOS_PROCE_CONDUTA.CODIGO_ATENDENTE := NULL;
DADOS_PROCE_CONDUTA.NATUREZA_EXAME := NULL;
DADOS_PROCE_CONDUTA.PROCEDIMENTO_CONDUTA := NULL;
DADOS_PROCE_CONDUTA.CONSELHO_REGIONAL_ATENDENTE := NULL;
DADOS_PROCE_CONDUTA.ACAO :=NULL;

END IF;

END LOOP;
RETURN DADOS_PROCE_CONDUTA; 

END;

/*VERIFICA SE O CONTRATO ESTA DE ACORDO COM O VINCULO*/
/*EM 04-09-2023 A PEDIDO DA JULIANA NO EMAIL eSocial | Testes S-2220 | PRAZO: 31/05/2023, FOI RETIRADO A REGRA DO VINCULO*/
PROCEDURE PR_ANALISA_CONTRATO (vCOD_EMPRESA_CONTR CHAR, vTP_CONTRATO CHAR, vCONTRATO CHAR, vDATA_CARGA_CONTR DATE,  vDT_REG_CONTR DATE, vNATUREZA_EXAME_CONTR CHAR, vCPF_CONTR CHAR) AS
CONT NUMBER;
BEGIN
FOR A5 IN (
SELECT SUGESP_IMPORTACAO_ADM_PER.CODIGO_EMPRESA,
  SUGESP_IMPORTACAO_ADM_PER.TIPO_CONTRATO,
  SUGESP_IMPORTACAO_ADM_PER.CODIGO_CONTRATO,
  SUGESP_IMPORTACAO_ADM_PER.DT_REG_OCORRENCIA,
  SUGESP_IMPORTACAO_ADM_PER.NATUREZA_EXAME,
  CONTRATO.CODIGO AS BM,
  CONTRATO.SITUACAO_FUNCIONAL,
  /*CONTRATO.VINCULO,
  CASE WHEN CONTRATO.VINCULO IN ('0001','0010','0012','0013') THEN 'VINCULO CONTEMPLADO'
       WHEN CONTRATO.VINCULO NOT IN ('0001','0010','0012','0013') THEN 'VINCULO NÃO CONTEMPLADO'
       ELSE 'VINCULO NÃO ENCONTRADO' END AS ANALISE_VINCULO,*/
   CONTRATO.DATA_RESCISAO,
   CASE WHEN CONTRATO.DATA_RESCISAO IS NULL THEN 'IMPORTA'
        WHEN CONTRATO.DATA_RESCISAO IS NOT NULL AND CONTRATO.DATA_RESCISAO > SUGESP_IMPORTACAO_ADM_PER.DT_REG_OCORRENCIA THEN 'IMPORTA'
        WHEN CONTRATO.DATA_RESCISAO IS NOT NULL AND CONTRATO.DATA_RESCISAO < SUGESP_IMPORTACAO_ADM_PER.DT_REG_OCORRENCIA THEN 'NÃO IMPORTA' END AS ANALISE
FROM SUGESP_IMPORTACAO_ADM_PER
LEFT JOIN
  (SELECT *
  FROM RHPESS_CONTRATO A
  WHERE A.ANO_MES_REFERENCIA =
    (SELECT MAX(B.ANO_MES_REFERENCIA)
    FROM RHPESS_CONTRATO B
    WHERE A.CODIGO            = B.CODIGO
    AND A.TIPO_CONTRATO       = B.TIPO_CONTRATO
    AND A.CODIGO_EMPRESA      = B.CODIGO_EMPRESA
    AND B.ANO_MES_REFERENCIA <=
      (SELECT DATA_DO_SISTEMA FROM RHPARM_P_SIST
      )
    )
  ) CONTRATO
ON CONTRATO.CODIGO                              = SUGESP_IMPORTACAO_ADM_PER.CODIGO_CONTRATO
AND CONTRATO.TIPO_CONTRATO                      = SUGESP_IMPORTACAO_ADM_PER.TIPO_CONTRATO
AND CONTRATO.CODIGO_EMPRESA                     = SUGESP_IMPORTACAO_ADM_PER.CODIGO_EMPRESA
WHERE SUGESP_IMPORTACAO_ADM_PER.CODIGO_CONTRATO = vCONTRATO 
AND SUGESP_IMPORTACAO_ADM_PER.TIPO_CONTRATO     = vTP_CONTRATO 
AND SUGESP_IMPORTACAO_ADM_PER.CODIGO_EMPRESA    = vCOD_EMPRESA_CONTR 
AND SUGESP_IMPORTACAO_ADM_PER.DT_REG_OCORRENCIA = TRUNC(vDT_REG_CONTR) 
AND SUGESP_IMPORTACAO_ADM_PER.NATUREZA_EXAME    = vNATUREZA_EXAME_CONTR
AND TRUNC(SUGESP_IMPORTACAO_ADM_PER.DATA_CARGA) = TRUNC(vDATA_CARGA_CONTR)
AND SUGESP_IMPORTACAO_ADM_PER.CPF               = vCPF_CONTR
ORDER BY SUGESP_IMPORTACAO_ADM_PER.CODIGO_EMPRESA,
  SUGESP_IMPORTACAO_ADM_PER.TIPO_CONTRATO,
  SUGESP_IMPORTACAO_ADM_PER.CODIGO_CONTRATO
)LOOP


IF  A5.BM IS NULL AND A5.CODIGO_CONTRATO IS NOT NULL THEN

UPDATE SUGESP_IMPORTACAO_ADM_PER SET DATA_PROCESSAMENTO = SYSDATE, STATUS_PROCESSAMENTO = 'NÃO', VERIFICA_CONTRATO = 'NÃO ENCONTRADO'
WHERE DATA_PROCESSAMENTO IS NULL AND STATUS_PROCESSAMENTO IS NULL AND CODIGO_EMPRESA = vCOD_EMPRESA_CONTR AND TIPO_CONTRATO = vTP_CONTRATO AND CODIGO_CONTRATO = vCONTRATO AND CPF  = vCPF_CONTR AND DATA_CARGA = TRUNC(vDATA_CARGA_CONTR) AND DT_REG_OCORRENCIA = TRUNC(vDT_REG_CONTR) AND DATA_CARGA = TRUNC(vDATA_CARGA_CONTR); COMMIT WORK;
END IF;

/*
IF  A5.BM IS NOT NULL AND A5.CODIGO_CONTRATO IS NOT NULL AND A5.ANALISE_VINCULO IS NULL  THEN

UPDATE SUGESP_IMPORTACAO_ADM_PER SET DATA_PROCESSAMENTO = SYSDATE, STATUS_PROCESSAMENTO = 'NÃO', VERIFICA_CONTRATO = 'VINCULO EM BRANCO'
WHERE DATA_PROCESSAMENTO IS NULL AND STATUS_PROCESSAMENTO IS NULL AND CODIGO_EMPRESA = vCOD_EMPRESA_CONTR AND TIPO_CONTRATO = vTP_CONTRATO AND CODIGO_CONTRATO = vCONTRATO AND CPF  = vCPF_CONTR AND DATA_CARGA = TRUNC(vDATA_CARGA_CONTR) AND DT_REG_OCORRENCIA = TRUNC(vDT_REG_CONTR) AND DATA_CARGA = TRUNC(vDATA_CARGA_CONTR); COMMIT WORK;
END IF;

IF  A5.BM IS NOT NULL AND A5.CODIGO_CONTRATO IS NOT NULL AND A5.ANALISE_VINCULO = 'VINCULO NÃO CONTEMPLADO'  THEN

UPDATE SUGESP_IMPORTACAO_ADM_PER SET DATA_PROCESSAMENTO = SYSDATE, STATUS_PROCESSAMENTO = 'NÃO', VERIFICA_CONTRATO = 'VERIFIQUE O VINCULO'
WHERE DATA_PROCESSAMENTO IS NULL AND STATUS_PROCESSAMENTO IS NULL AND CODIGO_EMPRESA = vCOD_EMPRESA_CONTR AND TIPO_CONTRATO = vTP_CONTRATO AND CODIGO_CONTRATO = vCONTRATO AND CPF  = vCPF_CONTR AND DATA_CARGA = TRUNC(vDATA_CARGA_CONTR) AND DT_REG_OCORRENCIA = TRUNC(vDT_REG_CONTR) AND DATA_CARGA = TRUNC(vDATA_CARGA_CONTR); COMMIT WORK;
END IF;

IF  A5.BM IS NOT NULL AND A5.CODIGO_CONTRATO IS NOT NULL AND A5.ANALISE_VINCULO = 'VINCULO CONTEMPLADO' AND A5.ANALISE = 'IMPORTA'  THEN

UPDATE SUGESP_IMPORTACAO_ADM_PER SET VERIFICA_CONTRATO = 'CONTRATO OK'
WHERE DATA_PROCESSAMENTO IS NULL AND STATUS_PROCESSAMENTO IS NULL AND CODIGO_EMPRESA = vCOD_EMPRESA_CONTR AND TIPO_CONTRATO = vTP_CONTRATO AND CODIGO_CONTRATO = vCONTRATO AND CPF  = vCPF_CONTR AND DATA_CARGA = TRUNC(vDATA_CARGA_CONTR) AND DT_REG_OCORRENCIA = TRUNC(vDT_REG_CONTR) AND DATA_CARGA = TRUNC(vDATA_CARGA_CONTR); COMMIT WORK;

END IF;
*/
IF  A5.BM IS NOT NULL AND A5.CODIGO_CONTRATO IS NOT NULL /*AND A5.ANALISE_VINCULO = 'VINCULO CONTEMPLADO'*/ AND A5.ANALISE = 'NÃO IMPORTA'  THEN

UPDATE SUGESP_IMPORTACAO_ADM_PER SET DATA_PROCESSAMENTO = SYSDATE, STATUS_PROCESSAMENTO = 'NÃO',VERIFICA_CONTRATO = 'CONTRATO DESLIGADO'
WHERE DATA_PROCESSAMENTO IS NULL AND STATUS_PROCESSAMENTO IS NULL AND CODIGO_EMPRESA = vCOD_EMPRESA_CONTR AND TIPO_CONTRATO = vTP_CONTRATO AND CODIGO_CONTRATO = vCONTRATO AND CPF  = vCPF_CONTR AND DATA_CARGA = TRUNC(vDATA_CARGA_CONTR) AND DT_REG_OCORRENCIA = TRUNC(vDT_REG_CONTR) AND DATA_CARGA = TRUNC(vDATA_CARGA_CONTR); COMMIT WORK;

END IF;

END LOOP;
END;

/*VERIFICA SE EXISTE DUAS FICHAS IGUAIS E IMPORTADAS NO MESMO DIA */
PROCEDURE ANALISA_IMPORTACAO (vCOD_EMPRESA_IMPORT CHAR, vDATA_CARGA_IMPORT DATE,  vDT_REG_IMPORT DATE, vNATUREZA_EXAME_CONTR CHAR, vCPF_IMPORT CHAR) AS
CONT NUMBER;
BEGIN
FOR A6 IN (
select COUNT(1) AS QTD_FICHA, CODIGO_EMPRESA, CPF, NATUREZA_EXAME,DT_REG_OCORRENCIA, COD_EXAME,CODIGO_PROC_MED, COD_DOENCA, COD_DEFICIENCIA_1, CTRL_APTIDAO, DATA_CARGA
from SUGESP_IMPORTACAO_ADM_PER 
WHERE 
CPF = vCPF_IMPORT AND 
CODIGO_EMPRESA = vCOD_EMPRESA_IMPORT AND 
DATA_PROCESSAMENTO IS NULL AND 
STATUS_PROCESSAMENTO IS NULL AND 
DATA_CARGA = TRUNC(vDATA_CARGA_IMPORT)
AND DT_REG_OCORRENCIA = TRUNC(vDT_REG_IMPORT)
AND DATA_PROCESSAMENTO IS NULL
AND STATUS_PROCESSAMENTO IS NULL
group by CODIGO_EMPRESA, CPF, NATUREZA_EXAME,DT_REG_OCORRENCIA, COD_EXAME,CODIGO_PROC_MED, COD_DOENCA, COD_DEFICIENCIA_1, CTRL_APTIDAO, DATA_CARGA

)LOOP
IF A6.QTD_FICHA > 1 THEN

UPDATE SUGESP_IMPORTACAO_ADM_PER SET DATA_PROCESSAMENTO = SYSDATE, STATUS_PROCESSAMENTO = 'NÃO', ANALISE_DADOS = 'POSSUI MAIS DE UMA IMPORTAÇÃO DO MESMO ARQUIVO'
WHERE DATA_PROCESSAMENTO IS NULL AND STATUS_PROCESSAMENTO IS NULL AND CODIGO_EMPRESA = vCOD_EMPRESA_IMPORT AND CPF  = vCPF_IMPORT AND DATA_CARGA = TRUNC(vDATA_CARGA_IMPORT) AND DT_REG_OCORRENCIA = TRUNC(vDT_REG_IMPORT); COMMIT WORK;

END IF;

END LOOP;
END;

/*SE O TIPO DE CONTRATO ESTIVER EM BRANCO NO ARQUIVO IRA PREENCHER */
FUNCTION PREENCHE_TIPO_CONTRATO (vCOD_EMP_IMPORT CHAR, vDT_CARGA_IMPORT DATE,  vDT_REG_OCORR_IMPORT DATE, vCPF_IMPORTA CHAR) RETURN NUMBER IS
TP_CONTRATO VARCHAR(4);
BEGIN
TP_CONTRATO:= NULL;
FOR A7 IN (
SELECT
    IMP.CODIGO_EMPRESA,
    IMP.TIPO_CONTRATO,
    IMP.CODIGO_CONTRATO,
    C.CODIGO_CONTRATO AS BM_CONTRATO,
    C.TIPO_CONTRATO   AS TP_CONTRATO,
    C.CODIGO_EMPRESA  AS EMPRESA_CONTRATO
  FROM
    SUGESP_IMPORTACAO_ADM_PER IMP
      LEFT JOIN RHPESS_CONTR_MEST         C ON IMP.CODIGO_EMPRESA = C.CODIGO_EMPRESA
       AND IMP.CODIGO_CONTRATO = C.CODIGO_CONTRATO
 WHERE
        IMP.CPF = VCPF_IMPORTA
       AND IMP.CODIGO_EMPRESA    = VCOD_EMP_IMPORT
       AND IMP.DT_REG_OCORRENCIA = TRUNC( VDT_REG_OCORR_IMPORT )
       AND IMP.DATA_CARGA        = TRUNC( VDT_CARGA_IMPORT )
       AND IMP.STATUS_PROCESSAMENTO IS NULL
       AND IMP.DATA_PROCESSAMENTO IS NULL 
 GROUP BY
    IMP.CODIGO_EMPRESA,
    IMP.TIPO_CONTRATO,
    IMP.CODIGO_CONTRATO,
    C.CODIGO_CONTRATO,
    C.TIPO_CONTRATO,
    C.CODIGO_EMPRESA

)LOOP
IF A7.CODIGO_EMPRESA IS NOT NULL AND A7.TIPO_CONTRATO IS NULL AND A7.CODIGO_CONTRATO IS NOT NULL AND A7.TP_CONTRATO IS NOT NULL  THEN

TP_CONTRATO := A7.TP_CONTRATO;
UPDATE SUGESP_IMPORTACAO_ADM_PER SET TIPO_CONTRATO = A7.TP_CONTRATO
WHERE DATA_PROCESSAMENTO IS NULL AND STATUS_PROCESSAMENTO IS NULL AND CODIGO_EMPRESA = VCOD_EMP_IMPORT AND CPF  = VCPF_IMPORTA AND DATA_CARGA = TRUNC(VDT_CARGA_IMPORT) AND DT_REG_OCORRENCIA = TRUNC(VDT_REG_OCORR_IMPORT); COMMIT WORK;

END IF;

IF A7.CODIGO_EMPRESA IS NOT NULL AND A7.TIPO_CONTRATO IS NOT NULL AND A7.CODIGO_CONTRATO IS NOT NULL AND A7.TP_CONTRATO IS NOT NULL  THEN

TP_CONTRATO := A7.TIPO_CONTRATO;

END IF;

IF (A7.TIPO_CONTRATO IS NULL AND A7.TP_CONTRATO IS NULL) OR A7.CODIGO_EMPRESA IS NULL OR A7.CODIGO_CONTRATO IS NULL  THEN

TP_CONTRATO := NULL;
UPDATE SUGESP_IMPORTACAO_ADM_PER SET DATA_PROCESSAMENTO = SYSDATE, STATUS_PROCESSAMENTO = 'NÃO', VERIFICA_CONTRATO = 'NÃO PREENCHIDO'
WHERE DATA_PROCESSAMENTO IS NULL AND STATUS_PROCESSAMENTO IS NULL AND CODIGO_EMPRESA = VCOD_EMP_IMPORT AND CPF  = VCPF_IMPORTA AND DATA_CARGA = TRUNC(VDT_CARGA_IMPORT) AND DT_REG_OCORRENCIA = TRUNC(VDT_REG_OCORR_IMPORT); COMMIT WORK;

END IF;

END LOOP;

RETURN TP_CONTRATO;
END; 

FUNCTION EXISTE_FICHA (v_NAT_EXAME CHAR, v_CONTRATO CHAR, v_EMPRESA CHAR, v_TP_CONTRATO CHAR, v_CPF CHAR, v_DT_OCORR DATE, v_DT_CARGA DATE) RETURN NUMBER IS
ACAO NUMBER;
BEGIN
ACAO:= NULL;
FOR E1 IN (
SELECT SUGESP_IMPORTACAO_ADM_PER.CODIGO_EMPRESA,SUGESP_IMPORTACAO_ADM_PER.TIPO_CONTRATO,SUGESP_IMPORTACAO_ADM_PER.CODIGO_CONTRATO,
SUGESP_IMPORTACAO_ADM_PER.CPF,SUGESP_IMPORTACAO_ADM_PER.DT_REG_OCORRENCIA,SUGESP_IMPORTACAO_ADM_PER.NATUREZA_EXAME,SUGESP_IMPORTACAO_ADM_PER.DATA_CARGA,
RHMEDI_FICHA_MED.CODIGO_PESSOA PESSOA_FICHA, RHMEDI_FICHA_MED.DT_REG_OCORRENCIA DT_OCORRECIA_FICHA, RHMEDI_FICHA_MED.OCORRENCIA, 
RHMEDI_FICHA_MED.CODIGO_EMPRESA EMPRESA_FICHA, SUGESP_IMPORTACAO_ADM_PER.ANALISA_FICHA, SUGESP_IMPORTACAO_ADM_PER.CODIGO_PESSOA_ENCONTRADO,
RHPESS_PESSOA.CODIGO COD_PESS, RHPESS_PESSOA.CPF AS CPF_PESS,
CASE WHEN RHMEDI_FICHA_MED.NATUREZA_EXAME = SUGESP_IMPORTACAO_ADM_PER.NATUREZA_EXAME THEN 'FICHA EXISTENTE' ELSE 'IMPORTAR' END AS ANALISE 
FROM SUGESP_IMPORTACAO_ADM_PER
LEFT JOIN RHPESS_PESSOA
ON RHPESS_PESSOA.CPF                            = LPAD(SUGESP_IMPORTACAO_ADM_PER.CPF,11,0)
AND RHPESS_PESSOA.CODIGO_EMPRESA                = SUGESP_IMPORTACAO_ADM_PER.CODIGO_EMPRESA
LEFT JOIN RHMEDI_FICHA_MED
ON SUGESP_IMPORTACAO_ADM_PER.CODIGO_CONTRATO    = RHMEDI_FICHA_MED.CODIGO_CONTRATO AND
SUGESP_IMPORTACAO_ADM_PER.TIPO_CONTRATO         = RHMEDI_FICHA_MED.TIPO_CONTRATO AND
SUGESP_IMPORTACAO_ADM_PER.CODIGO_EMPRESA        = RHMEDI_FICHA_MED.CODIGO_EMPRESA
AND SUGESP_IMPORTACAO_ADM_PER.DT_REG_OCORRENCIA = TRUNC(RHMEDI_FICHA_MED.DT_REG_OCORRENCIA)
AND SUGESP_IMPORTACAO_ADM_PER.NATUREZA_EXAME    = RHMEDI_FICHA_MED.NATUREZA_EXAME
WHERE SUGESP_IMPORTACAO_ADM_PER.NATUREZA_EXAME  = v_NAT_EXAME
AND SUGESP_IMPORTACAO_ADM_PER.CODIGO_CONTRATO   = v_CONTRATO 
AND SUGESP_IMPORTACAO_ADM_PER.CODIGO_EMPRESA    = v_EMPRESA
AND SUGESP_IMPORTACAO_ADM_PER.TIPO_CONTRATO     = v_TP_CONTRATO
AND SUGESP_IMPORTACAO_ADM_PER.CPF               = LPAD(v_CPF,11,0) 
AND SUGESP_IMPORTACAO_ADM_PER.DT_REG_OCORRENCIA = TRUNC(v_DT_OCORR) 
AND SUGESP_IMPORTACAO_ADM_PER.DATA_CARGA        = TRUNC(v_DT_CARGA)


)LOOP

IF E1.ANALISE = 'FICHA EXISTENTE' THEN 
ACAO := 0;
UPDATE SUGESP_IMPORTACAO_ADM_PER SET DATA_PROCESSAMENTO = SYSDATE, STATUS_PROCESSAMENTO = 'NÃO', ANALISA_FICHA = 'FICHA EXISTENTE'
WHERE DATA_PROCESSAMENTO IS NULL AND STATUS_PROCESSAMENTO IS NULL AND CODIGO_EMPRESA = v_EMPRESA AND CPF  = LPAD(v_CPF,11,0) AND DATA_CARGA = TRUNC(v_DT_CARGA) AND DT_REG_OCORRENCIA = TRUNC(v_DT_OCORR); COMMIT WORK;

END IF;

IF E1.ANALISE = 'IMPORTAR' THEN 
ACAO := 1;
END IF;

END LOOP;

RETURN ACAO;
END; 

/*VERIFICA A QUANTIDADE DE CONTRATOS QUE AQUELA PESSOA TEM NA EMPRESA*/
PROCEDURE PR_QUANTIDADE_CONTR (vEMPRESA_QUANT CHAR, vTP_CONT_QUANT CHAR, vCONTRATO_QUANT CHAR, vDT_CARGA_QUANT DATE,  vDT_REG_QUANT DATE, vNAT_EXAME_QUANT CHAR, vCPF_QUANT CHAR) AS
BEGIN
FOR C1 IN (
SELECT X.*, NVL(QUANT.CONT,0) AS CONT FROM (
SELECT
    SUGESP_IMPORTACAO_ADM_PER.CODIGO_EMPRESA,
    SUGESP_IMPORTACAO_ADM_PER.TIPO_CONTRATO,
    SUGESP_IMPORTACAO_ADM_PER.CODIGO_CONTRATO,
    SUGESP_IMPORTACAO_ADM_PER.CPF,
    SUGESP_IMPORTACAO_ADM_PER.CODIGO_PESSOA_ENCONTRADO,
    SUGESP_IMPORTACAO_ADM_PER.DT_REG_OCORRENCIA,
    SUGESP_IMPORTACAO_ADM_PER.NATUREZA_EXAME,
    SUGESP_IMPORTACAO_ADM_PER.ANALISE_DADOS
  FROM
    ARTERH.SUGESP_IMPORTACAO_ADM_PER
      LEFT JOIN RHPESS_PESSOA P ON SUGESP_IMPORTACAO_ADM_PER.CODIGO_PESSOA_ENCONTRADO = P.CODIGO
       AND SUGESP_IMPORTACAO_ADM_PER.CODIGO_EMPRESA = P.CODIGO_EMPRESA  
 WHERE SUGESP_IMPORTACAO_ADM_PER.CODIGO_CONTRATO = vCONTRATO_QUANT 
AND SUGESP_IMPORTACAO_ADM_PER.TIPO_CONTRATO     = vTP_CONT_QUANT 
AND SUGESP_IMPORTACAO_ADM_PER.CODIGO_EMPRESA    = vEMPRESA_QUANT 
AND SUGESP_IMPORTACAO_ADM_PER.DT_REG_OCORRENCIA = TRUNC(vDT_REG_QUANT) 
AND SUGESP_IMPORTACAO_ADM_PER.NATUREZA_EXAME    = vNAT_EXAME_QUANT
AND TRUNC(SUGESP_IMPORTACAO_ADM_PER.DATA_CARGA) = TRUNC(vDT_CARGA_QUANT)
AND SUGESP_IMPORTACAO_ADM_PER.CPF               = vCPF_QUANT
    ) X
LEFT JOIN 
(SELECT COUNT(1) CONT, C.CODIGO_EMPRESA, C.CODIGO_PESSOA FROM RHPESS_CONTRATO C
 WHERE C.ANO_MES_REFERENCIA = ( SELECT MAX(A.ANO_MES_REFERENCIA) FROM RHPESS_CONTRATO A
 WHERE C.CODIGO_EMPRESA = A.CODIGO_EMPRESA AND C.TIPO_CONTRATO = A.TIPO_CONTRATO AND C.CODIGO = A.CODIGO
       AND A.ANO_MES_REFERENCIA <= ( SELECT DATA_DO_SISTEMA FROM RHPARM_P_SIST ) )
       /*AND C.CODIGO_PESSOA = X.CODIGO_PESSOA_ENCONTRADO*/ AND C.CODIGO_EMPRESA = vEMPRESA_QUANT AND C.DATA_RESCISAO IS NULL AND C.TIPO_CONTRATO||C.CODIGO <> vTP_CONT_QUANT||vCONTRATO_QUANT GROUP BY C.CODIGO_EMPRESA, C.CODIGO_PESSOA) QUANT
ON X.CODIGO_PESSOA_ENCONTRADO = QUANT.CODIGO_PESSOA AND
X.CODIGO_EMPRESA = QUANT.CODIGO_EMPRESA 
)LOOP
dbms_output.put_line('ANTES DO IF CPF: '||C1.CPF||' CODIGO_PESSOA_ENCONTRADO: '||C1.CODIGO_PESSOA_ENCONTRADO||' QUANTIDADE: '||C1.CONT);
IF C1.CONT >= 1 THEN 
dbms_output.put_line('DEPOIS DO IF CPF: '||C1.CPF||' CODIGO_PESSOA_ENCONTRADO: '||C1.CODIGO_PESSOA_ENCONTRADO||' QUANTIDADE: '||C1.CONT);
UPDATE SUGESP_IMPORTACAO_ADM_PER SET ANALISE_DADOS = C1.ANALISE_DADOS||'- POSSUI OUTRO CONTRATO ATIVO'
WHERE /*DATA_PROCESSAMENTO IS NULL AND STATUS_PROCESSAMENTO IS NULL AND*/ CODIGO_EMPRESA = vEMPRESA_QUANT AND TIPO_CONTRATO = vTP_CONT_QUANT AND CODIGO_CONTRATO = vCONTRATO_QUANT AND CPF  = vCPF_QUANT AND DATA_CARGA = TRUNC(vDT_CARGA_QUANT) AND DT_REG_OCORRENCIA = TRUNC(vDT_REG_QUANT) ; COMMIT WORK;
END IF;

IF C1.CONT = 0 THEN 
dbms_output.put_line('DEPOIS DO IF DO ZERO CPF: '||C1.CPF||' CODIGO_PESSOA_ENCONTRADO: '||C1.CODIGO_PESSOA_ENCONTRADO||' QUANTIDADE: '||C1.CONT);
UPDATE SUGESP_IMPORTACAO_ADM_PER SET ANALISE_DADOS = C1.ANALISE_DADOS||'- NÃO POSSUI OUTRO CONTRATO ATIVO'
WHERE /*DATA_PROCESSAMENTO IS NULL AND STATUS_PROCESSAMENTO IS NULL AND*/ CODIGO_EMPRESA = vEMPRESA_QUANT AND TIPO_CONTRATO = vTP_CONT_QUANT AND CODIGO_CONTRATO = vCONTRATO_QUANT AND CPF  = vCPF_QUANT AND DATA_CARGA = TRUNC(vDT_CARGA_QUANT) AND DT_REG_OCORRENCIA = TRUNC(vDT_REG_QUANT) ; COMMIT WORK;
END IF;

END LOOP;
END;

BEGIN
DBMS_OUTPUT.ENABLE (buffer_size => NULL);

FOR C1 IN (
SELECT 
C_LIVRE_VALOR01,
CODIGO_EMPRESA,
TIPO_CONTRATO,
CODIGO_CONTRATO,
CPF,
DT_REG_OCORRENCIA,
NATUREZA_EXAME,
CODIGO_ATENDENTE,
PESO,
ALTURA,
TEMPERATURA,
PULSO,
PRESSAO,
INDICE_MASSA_CORP,
TEXTO02,
TEXTO03,
TEXTO05,
COD_DOENCA,
DOENCA_TRABALHO,
CODIGO_PROC_MED,
COD_EXAME,
DATA_REALIZACAO,
RESULT_REFERENCIA,
CTRL_APTIDAO,
COD_DEFICIENCIA_1,
COD_DEFICIENCIA_PRINCIPAL,
DATA_ASO,
TEXTO_ASSOCIADO,
CODIGO_CANDIDATO,
CODIGO_EVENTO_SEL,
CODIGO_SEQUENCIAL,
STATUS_PROCESSAMENTO,
DATA_PROCESSAMENTO,
DATA_CARGA,
LOGIN_CARGA,
ANALISE_DADOS,
VERIFICA_PESSOA,
VERIFICA_CONTRATO,
CODIGO_PESSOA_ENCONTRADO,
NUMERO_LINHA
FROM SUGESP_IMPORTACAO_ADM_PER
WHERE STATUS_PROCESSAMENTO IS NULL AND DATA_PROCESSAMENTO IS NULL
                                   AND DATA_CARGA = (SELECT MAX (A.DATA_CARGA)
                                                     FROM SUGESP_IMPORTACAO_ADM_PER A
                                                     WHERE A.CPF = SUGESP_IMPORTACAO_ADM_PER.CPF AND
                                                           A.CODIGO_EMPRESA = SUGESP_IMPORTACAO_ADM_PER.CODIGO_EMPRESA AND
                                                           A.DT_REG_OCORRENCIA = SUGESP_IMPORTACAO_ADM_PER.DT_REG_OCORRENCIA )
AND CODIGO_EMPRESA = vEMPRESA_IMPORTA                                                       
ORDER BY CPF, NATUREZA_EXAME, DATA_CARGA, NUMERO_LINHA

)

LOOP

ANALISA_IMPORTACAO (C1.CODIGO_EMPRESA, C1.DATA_CARGA,  C1.DT_REG_OCORRENCIA, C1.NATUREZA_EXAME, C1.CPF);

VERIFICA_ATENDENTE := ANALISA_ATENDENTE (C1.CODIGO_EMPRESA, C1.DT_REG_OCORRENCIA, C1.DATA_CARGA, C1.CPF, C1.NUMERO_LINHA);
VERIFICA_NAT_EXAME := VERIFICA_NATUREZA_EXAME (C1.CODIGO_EMPRESA, C1.CPF, C1.DATA_CARGA, C1.DT_REG_OCORRENCIA);
DADOS_PROCE_CONDUTA := VALIDA_PROCE_CONDUTA (C1.CODIGO_EMPRESA, C1.CPF, C1.DATA_CARGA, C1.DT_REG_OCORRENCIA, C1.CODIGO_PESSOA_ENCONTRADO, C1.ANALISE_DADOS);

IF VERIFICA_NAT_EXAME.NATUREZA_EXAME = 'ADMISSIONAL' THEN 
PESSOA := RECUPERAR_PESSOA_ADMISSIONAL (C1.CODIGO_EMPRESA, C1.CPF, C1.DT_REG_OCORRENCIA, C1.DATA_CARGA, C1.ANALISE_DADOS);
END IF;

IF C1.DATA_PROCESSAMENTO IS NULL AND C1.STATUS_PROCESSAMENTO IS NULL AND (VERIFICA_ATENDENTE.CODIGO_ATENDENTE IS NULL OR VERIFICA_NAT_EXAME.VERIFICA = 0) THEN

UPDATE SUGESP_IMPORTACAO_ADM_PER SET DATA_PROCESSAMENTO = SYSDATE, STATUS_PROCESSAMENTO = 'NÃO' 
WHERE DATA_PROCESSAMENTO IS NULL AND STATUS_PROCESSAMENTO IS NULL AND CPF  = C1.CPF AND DATA_CARGA = TRUNC(C1.DATA_CARGA) AND DT_REG_OCORRENCIA = TRUNC(C1.DT_REG_OCORRENCIA) ; COMMIT WORK;

END IF;


IF VERIFICA_NAT_EXAME.NATUREZA_EXAME = 'ADMISSIONAL' AND C1.DATA_PROCESSAMENTO IS NULL AND C1.STATUS_PROCESSAMENTO IS NULL AND VERIFICA_ATENDENTE.CODIGO_ATENDENTE IS NOT NULL AND VERIFICA_NAT_EXAME.VERIFICA = 1 AND PESSOA.VERIFICA = 1 THEN

IMPORTACAO_ADM_PER(C1.CODIGO_EMPRESA, C1.CPF, C1.DT_REG_OCORRENCIA, C1.DATA_CARGA, C1.NATUREZA_EXAME, VERIFICA_ATENDENTE.CODIGO_ATENDENTE, VERIFICA_ATENDENTE.NOME_ATENDENTE_ATENDENTE, VERIFICA_ATENDENTE.INSCRICAO_CONSELHO_ATENDENTE, VERIFICA_ATENDENTE.UF_CONSELHO_ATENDENTE, VERIFICA_ATENDENTE.CONSELHO_REGIONAL_ATENDENTE);

END IF; 


IF VERIFICA_NAT_EXAME.NATUREZA_EXAME IN ('DEMISSIONAL','RETORNO AO TRABALHO','PERIODICO') AND C1.DATA_PROCESSAMENTO IS NULL AND C1.STATUS_PROCESSAMENTO IS NULL  THEN
--dbms_output.put_line('REC_TP_CONTRATO');
REC_TP_CONTRATO := PREENCHE_TIPO_CONTRATO (C1.CODIGO_EMPRESA, C1.DATA_CARGA,  C1.DT_REG_OCORRENCIA,C1.CPF);

IF REC_TP_CONTRATO IS NOT NULL THEN

PR_ANALISA_CONTRATO (C1.CODIGO_EMPRESA, LPAD(REC_TP_CONTRATO,4,0), C1.CODIGO_CONTRATO, C1.DATA_CARGA,  C1.DT_REG_OCORRENCIA, C1.NATUREZA_EXAME, C1.CPF);
REC_PESSOA_CONT := RECUPERA_PESSOA_CONTRATO (C1.CODIGO_EMPRESA, C1.CPF, C1.DT_REG_OCORRENCIA, C1.DATA_CARGA );

IF REC_PESSOA_CONT = 1   THEN
PR_QUANTIDADE_CONTR (C1.CODIGO_EMPRESA, LPAD(REC_TP_CONTRATO,4,0), C1.CODIGO_CONTRATO, C1.DATA_CARGA, C1.DT_REG_OCORRENCIA,  C1.NATUREZA_EXAME, C1.CPF);
END IF;
END IF;
END IF;

FICHA := EXISTE_FICHA (C1.NATUREZA_EXAME, C1.CODIGO_CONTRATO, C1.CODIGO_EMPRESA, LPAD(REC_TP_CONTRATO,4,0), C1.CPF, C1.DT_REG_OCORRENCIA, C1.DATA_CARGA);
dbms_output.put_line('FICHA: '||FICHA||' EMPRESA: '||C1.CODIGO_EMPRESA||' TIPO_CONTRATO:'||LPAD(REC_TP_CONTRATO,4,0)||' CONTRATO:'|| C1.CODIGO_CONTRATO ||' REC_PESSOA_CONT '|| REC_PESSOA_CONT );
IF (C1.CODIGO_EMPRESA IS NOT NULL AND LPAD(REC_TP_CONTRATO,4,0) IS NOT NULL AND C1.CODIGO_CONTRATO IS NOT NULL AND FICHA = 1 AND REC_PESSOA_CONT = 1 ) THEN 

IF C1.DATA_PROCESSAMENTO IS NULL AND C1.STATUS_PROCESSAMENTO IS NULL AND C1.CODIGO_EMPRESA IS NOT NULL AND LPAD(REC_TP_CONTRATO,4,0) IS NOT NULL AND C1.CODIGO_CONTRATO IS NOT NULL AND REC_PESSOA_CONT = 1 THEN
dbms_output.put_line('C1.DATA_PROCESSAMENTO: '||C1.DATA_PROCESSAMENTO||' C1.STATUS_PROCESSAMENTO: '||C1.STATUS_PROCESSAMENTO||' CODIGO_EMPRESA:'||C1.CODIGO_EMPRESA||' LPAD(REC_TP_CONTRATO,4,0):'|| LPAD(REC_TP_CONTRATO,4,0) ||' REC_PESSOA_CONT '|| REC_PESSOA_CONT||' C1.CODIGO_CONTRATO: '||C1.CODIGO_CONTRATO );
IF VERIFICA_NAT_EXAME.NATUREZA_EXAME = 'DEMISSIONAL' AND C1.VERIFICA_CONTRATO IS NULL AND C1.DATA_PROCESSAMENTO IS NULL AND C1.STATUS_PROCESSAMENTO IS NULL THEN

IMPORTACAO_ADM_DEMISSIONAL(C1.CODIGO_EMPRESA, C1.CPF, C1.DT_REG_OCORRENCIA, C1.DATA_CARGA, C1.NATUREZA_EXAME,VERIFICA_ATENDENTE.CODIGO_ATENDENTE, VERIFICA_ATENDENTE.NOME_ATENDENTE_ATENDENTE, VERIFICA_ATENDENTE.INSCRICAO_CONSELHO_ATENDENTE, VERIFICA_ATENDENTE.UF_CONSELHO_ATENDENTE, VERIFICA_ATENDENTE.CONSELHO_REGIONAL_ATENDENTE);

END IF;
dbms_output.put_line('VERIFICA_NAT_EXAME.NATUREZA_EXAME: '||TRIM(VERIFICA_NAT_EXAME.NATUREZA_EXAME)||' C1.VERIFICA_CONTRATO: '||C1.VERIFICA_CONTRATO||' C1.DATA_PROCESSAMENTO: '||C1.DATA_PROCESSAMENTO||' C1.STATUS_PROCESSAMENTO: '||C1.STATUS_PROCESSAMENTO);
IF TRIM(VERIFICA_NAT_EXAME.NATUREZA_EXAME) = 'PERIODICO' AND C1.VERIFICA_CONTRATO IS NULL AND C1.DATA_PROCESSAMENTO IS NULL AND C1.STATUS_PROCESSAMENTO IS NULL THEN
dbms_output.put_line('ENTROU NO IF PERIODICO');
IMPORTACAO_ADM_PERIODICO(C1.CODIGO_EMPRESA, C1.CPF, C1.DT_REG_OCORRENCIA, C1.DATA_CARGA, C1.NATUREZA_EXAME,VERIFICA_ATENDENTE.CODIGO_ATENDENTE, VERIFICA_ATENDENTE.NOME_ATENDENTE_ATENDENTE, VERIFICA_ATENDENTE.INSCRICAO_CONSELHO_ATENDENTE, VERIFICA_ATENDENTE.UF_CONSELHO_ATENDENTE, VERIFICA_ATENDENTE.CONSELHO_REGIONAL_ATENDENTE);

END IF;

IF VERIFICA_NAT_EXAME.NATUREZA_EXAME = 'RETORNO AO TRABALHO' AND C1.VERIFICA_CONTRATO IS NULL AND C1.DATA_PROCESSAMENTO IS NULL AND C1.STATUS_PROCESSAMENTO IS NULL THEN

IMPORTACAO_ADM_RET_TRABALHO (C1.CODIGO_EMPRESA, C1.CPF, C1.DT_REG_OCORRENCIA, C1.DATA_CARGA, C1.NATUREZA_EXAME,VERIFICA_ATENDENTE.CODIGO_ATENDENTE, VERIFICA_ATENDENTE.NOME_ATENDENTE_ATENDENTE, VERIFICA_ATENDENTE.INSCRICAO_CONSELHO_ATENDENTE, VERIFICA_ATENDENTE.UF_CONSELHO_ATENDENTE, VERIFICA_ATENDENTE.CONSELHO_REGIONAL_ATENDENTE);

END IF; 

END IF;

END IF;

IF C1.DATA_PROCESSAMENTO IS NULL AND C1.STATUS_PROCESSAMENTO IS NULL THEN 

UPDATE SUGESP_IMPORTACAO_ADM_PER SET DATA_PROCESSAMENTO = SYSDATE, STATUS_PROCESSAMENTO = 'NÃO'
WHERE DATA_PROCESSAMENTO IS NULL AND STATUS_PROCESSAMENTO IS NULL AND CPF  = C1.CPF AND DATA_CARGA = TRUNC(C1.DATA_CARGA) AND DT_REG_OCORRENCIA = TRUNC(C1.DT_REG_OCORRENCIA) ; COMMIT WORK;

END IF;
END LOOP;

END;
/*BEGIN 
   EXECUTE IMMEDIATE 'ALTER SESSION SET NLS_DATE_FORMAT = ''YYYY/MM/DD'''; 
END;*/
END SUGESP_VALIDA_ARQUIVO_PCMSO;